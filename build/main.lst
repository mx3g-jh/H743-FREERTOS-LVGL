ARM GAS  /tmp/ccX7dMHY.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_TIM_PeriodElapsedCallback
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	HAL_TIM_PeriodElapsedCallback:
  25              	.LFB352:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "spi.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** #include "lv_demo_stress.h"
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccX7dMHY.s 			page 2


  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
ARM GAS  /tmp/ccX7dMHY.s 			page 3


  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_SPI1_Init();
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END 2 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Init scheduler */
  99:Core/Src/main.c ****   osKernelInitialize();  /* Call init function for freertos objects (in freertos.c) */
 100:Core/Src/main.c ****   MX_FREERTOS_Init();
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Start scheduler */
 103:Core/Src/main.c ****   osKernelStart();
 104:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 105:Core/Src/main.c ****   /* Infinite loop */
 106:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   while (1)
 109:Core/Src/main.c ****   {
 110:Core/Src/main.c ****     /* USER CODE END WHILE */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 113:Core/Src/main.c ****   }
 114:Core/Src/main.c ****   /* USER CODE END 3 */
 115:Core/Src/main.c **** }
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** /**
 118:Core/Src/main.c ****   * @brief System Clock Configuration
 119:Core/Src/main.c ****   * @retval None
 120:Core/Src/main.c ****   */
 121:Core/Src/main.c **** void SystemClock_Config(void)
 122:Core/Src/main.c **** {
 123:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 124:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /** Supply configuration update enable
 127:Core/Src/main.c ****   */
 128:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 131:Core/Src/main.c ****   */
 132:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 137:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 36;
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
ARM GAS  /tmp/ccX7dMHY.s 			page 4


 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 151:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 152:Core/Src/main.c ****   {
 153:Core/Src/main.c ****     Error_Handler();
 154:Core/Src/main.c ****   }
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 157:Core/Src/main.c ****   */
 158:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 159:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 160:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 161:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 162:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV2;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV1;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 170:Core/Src/main.c ****   {
 171:Core/Src/main.c ****     Error_Handler();
 172:Core/Src/main.c ****   }
 173:Core/Src/main.c **** }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /* USER CODE END 4 */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /**
 180:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 181:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 182:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 183:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 184:Core/Src/main.c ****   * @param  htim : TIM handle
 185:Core/Src/main.c ****   * @retval None
 186:Core/Src/main.c ****   */
 187:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 188:Core/Src/main.c **** {
  27              		.loc 1 188 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
 189:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 192:Core/Src/main.c ****   if (htim->Instance == TIM1) {
  37              		.loc 1 192 0
ARM GAS  /tmp/ccX7dMHY.s 			page 5


  38 0002 0268     		ldr	r2, [r0]
  39 0004 034B     		ldr	r3, .L5
  40 0006 9A42     		cmp	r2, r3
  41 0008 00D0     		beq	.L4
  42              	.LVL1:
  43              	.L1:
 193:Core/Src/main.c ****     HAL_IncTick();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 198:Core/Src/main.c **** }
  44              		.loc 1 198 0
  45 000a 08BD     		pop	{r3, pc}
  46              	.LVL2:
  47              	.L4:
 193:Core/Src/main.c ****     HAL_IncTick();
  48              		.loc 1 193 0
  49 000c FFF7FEFF 		bl	HAL_IncTick
  50              	.LVL3:
  51              		.loc 1 198 0
  52 0010 FBE7     		b	.L1
  53              	.L6:
  54 0012 00BF     		.align	2
  55              	.L5:
  56 0014 00000140 		.word	1073807360
  57              		.cfi_endproc
  58              	.LFE352:
  60              		.section	.text.Error_Handler,"ax",%progbits
  61              		.align	1
  62              		.global	Error_Handler
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv5-d16
  68              	Error_Handler:
  69              	.LFB353:
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** /**
 201:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 202:Core/Src/main.c ****   * @retval None
 203:Core/Src/main.c ****   */
 204:Core/Src/main.c **** void Error_Handler(void)
 205:Core/Src/main.c **** {
  70              		.loc 1 205 0
  71              		.cfi_startproc
  72              		@ Volatile: function does not return.
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  76              	.LBB4:
  77              	.LBB5:
  78              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
ARM GAS  /tmp/ccX7dMHY.s 			page 6


   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
ARM GAS  /tmp/ccX7dMHY.s 			page 7


  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccX7dMHY.s 			page 8


 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccX7dMHY.s 			page 9


 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  79              		.loc 2 209 0
  80              		.syntax unified
  81              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  82 0000 72B6     		cpsid i
  83              	@ 0 "" 2
  84              		.thumb
  85              		.syntax unified
  86              	.L8:
  87 0002 FEE7     		b	.L8
  88              	.LBE5:
  89              	.LBE4:
  90              		.cfi_endproc
  91              	.LFE353:
  93              		.section	.text.SystemClock_Config,"ax",%progbits
  94              		.align	1
  95              		.global	SystemClock_Config
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu fpv5-d16
 101              	SystemClock_Config:
 102              	.LFB351:
 122:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  /tmp/ccX7dMHY.s 			page 10


 103              		.loc 1 122 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 112
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107 0000 00B5     		push	{lr}
 108              	.LCFI1:
 109              		.cfi_def_cfa_offset 4
 110              		.cfi_offset 14, -4
 111 0002 9DB0     		sub	sp, sp, #116
 112              	.LCFI2:
 113              		.cfi_def_cfa_offset 120
 123:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 114              		.loc 1 123 0
 115 0004 4C22     		movs	r2, #76
 116 0006 0021     		movs	r1, #0
 117 0008 09A8     		add	r0, sp, #36
 118 000a FFF7FEFF 		bl	memset
 119              	.LVL4:
 124:Core/Src/main.c **** 
 120              		.loc 1 124 0
 121 000e 2022     		movs	r2, #32
 122 0010 0021     		movs	r1, #0
 123 0012 01A8     		add	r0, sp, #4
 124 0014 FFF7FEFF 		bl	memset
 125              	.LVL5:
 128:Core/Src/main.c **** 
 126              		.loc 1 128 0
 127 0018 0220     		movs	r0, #2
 128 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 129              	.LVL6:
 130              	.LBB6:
 132:Core/Src/main.c **** 
 131              		.loc 1 132 0
 132 001e 0023     		movs	r3, #0
 133 0020 0093     		str	r3, [sp]
 134 0022 254B     		ldr	r3, .L16
 135 0024 DA6A     		ldr	r2, [r3, #44]
 136 0026 22F00102 		bic	r2, r2, #1
 137 002a DA62     		str	r2, [r3, #44]
 138 002c DB6A     		ldr	r3, [r3, #44]
 139 002e 03F00103 		and	r3, r3, #1
 140 0032 0093     		str	r3, [sp]
 141 0034 214A     		ldr	r2, .L16+4
 142 0036 9369     		ldr	r3, [r2, #24]
 143 0038 23F44043 		bic	r3, r3, #49152
 144 003c 43F48043 		orr	r3, r3, #16384
 145 0040 9361     		str	r3, [r2, #24]
 146 0042 9369     		ldr	r3, [r2, #24]
 147 0044 03F44043 		and	r3, r3, #49152
 148 0048 0093     		str	r3, [sp]
 149 004a 009B     		ldr	r3, [sp]
 150              	.L10:
 151              	.LBE6:
 134:Core/Src/main.c **** 
 152              		.loc 1 134 0 discriminator 1
 153 004c 1B4B     		ldr	r3, .L16+4
 154 004e 9B69     		ldr	r3, [r3, #24]
ARM GAS  /tmp/ccX7dMHY.s 			page 11


 155 0050 13F4005F 		tst	r3, #8192
 156 0054 FAD0     		beq	.L10
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 157              		.loc 1 139 0
 158 0056 0122     		movs	r2, #1
 159 0058 0992     		str	r2, [sp, #36]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 160              		.loc 1 140 0
 161 005a 4FF48033 		mov	r3, #65536
 162 005e 0A93     		str	r3, [sp, #40]
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 163              		.loc 1 141 0
 164 0060 0223     		movs	r3, #2
 165 0062 1293     		str	r3, [sp, #72]
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 166              		.loc 1 142 0
 167 0064 1393     		str	r3, [sp, #76]
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 36;
 168              		.loc 1 143 0
 169 0066 1492     		str	r2, [sp, #80]
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 170              		.loc 1 144 0
 171 0068 2422     		movs	r2, #36
 172 006a 1592     		str	r2, [sp, #84]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 173              		.loc 1 145 0
 174 006c 1693     		str	r3, [sp, #88]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 175              		.loc 1 146 0
 176 006e 1793     		str	r3, [sp, #92]
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 177              		.loc 1 147 0
 178 0070 1893     		str	r3, [sp, #96]
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 179              		.loc 1 148 0
 180 0072 0C23     		movs	r3, #12
 181 0074 1993     		str	r3, [sp, #100]
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 182              		.loc 1 149 0
 183 0076 0023     		movs	r3, #0
 184 0078 1A93     		str	r3, [sp, #104]
 150:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 185              		.loc 1 150 0
 186 007a 1B93     		str	r3, [sp, #108]
 151:Core/Src/main.c ****   {
 187              		.loc 1 151 0
 188 007c 0DEB0200 		add	r0, sp, r2
 189 0080 FFF7FEFF 		bl	HAL_RCC_OscConfig
 190              	.LVL7:
 191 0084 A0B9     		cbnz	r0, .L14
 158:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 192              		.loc 1 158 0
 193 0086 3F23     		movs	r3, #63
 194 0088 0193     		str	r3, [sp, #4]
 161:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV2;
 195              		.loc 1 161 0
 196 008a 0323     		movs	r3, #3
ARM GAS  /tmp/ccX7dMHY.s 			page 12


 197 008c 0293     		str	r3, [sp, #8]
 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 198              		.loc 1 162 0
 199 008e 4FF40063 		mov	r3, #2048
 200 0092 0393     		str	r3, [sp, #12]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 201              		.loc 1 163 0
 202 0094 0823     		movs	r3, #8
 203 0096 0493     		str	r3, [sp, #16]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 204              		.loc 1 164 0
 205 0098 0021     		movs	r1, #0
 206 009a 0591     		str	r1, [sp, #20]
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV1;
 207              		.loc 1 165 0
 208 009c 0691     		str	r1, [sp, #24]
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 209              		.loc 1 166 0
 210 009e 0791     		str	r1, [sp, #28]
 167:Core/Src/main.c **** 
 211              		.loc 1 167 0
 212 00a0 0891     		str	r1, [sp, #32]
 169:Core/Src/main.c ****   {
 213              		.loc 1 169 0
 214 00a2 01A8     		add	r0, sp, #4
 215 00a4 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 216              	.LVL8:
 217 00a8 20B9     		cbnz	r0, .L15
 173:Core/Src/main.c **** 
 218              		.loc 1 173 0
 219 00aa 1DB0     		add	sp, sp, #116
 220              	.LCFI3:
 221              		.cfi_remember_state
 222              		.cfi_def_cfa_offset 4
 223              		@ sp needed
 224 00ac 5DF804FB 		ldr	pc, [sp], #4
 225              	.L14:
 226              	.LCFI4:
 227              		.cfi_restore_state
 153:Core/Src/main.c ****   }
 228              		.loc 1 153 0
 229 00b0 FFF7FEFF 		bl	Error_Handler
 230              	.LVL9:
 231              	.L15:
 171:Core/Src/main.c ****   }
 232              		.loc 1 171 0
 233 00b4 FFF7FEFF 		bl	Error_Handler
 234              	.LVL10:
 235              	.L17:
 236              		.align	2
 237              	.L16:
 238 00b8 00040058 		.word	1476396032
 239 00bc 00480258 		.word	1476544512
 240              		.cfi_endproc
 241              	.LFE351:
 243              		.section	.text.main,"ax",%progbits
 244              		.align	1
ARM GAS  /tmp/ccX7dMHY.s 			page 13


 245              		.global	main
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu fpv5-d16
 251              	main:
 252              	.LFB350:
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 253              		.loc 1 70 0
 254              		.cfi_startproc
 255              		@ Volatile: function does not return.
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258 0000 08B5     		push	{r3, lr}
 259              	.LCFI5:
 260              		.cfi_def_cfa_offset 8
 261              		.cfi_offset 3, -8
 262              		.cfi_offset 14, -4
  78:Core/Src/main.c **** 
 263              		.loc 1 78 0
 264 0002 FFF7FEFF 		bl	HAL_Init
 265              	.LVL11:
  85:Core/Src/main.c **** 
 266              		.loc 1 85 0
 267 0006 FFF7FEFF 		bl	SystemClock_Config
 268              	.LVL12:
  92:Core/Src/main.c ****   MX_SPI1_Init();
 269              		.loc 1 92 0
 270 000a FFF7FEFF 		bl	MX_GPIO_Init
 271              	.LVL13:
  93:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 272              		.loc 1 93 0
 273 000e FFF7FEFF 		bl	MX_SPI1_Init
 274              	.LVL14:
  99:Core/Src/main.c ****   MX_FREERTOS_Init();
 275              		.loc 1 99 0
 276 0012 FFF7FEFF 		bl	osKernelInitialize
 277              	.LVL15:
 100:Core/Src/main.c **** 
 278              		.loc 1 100 0
 279 0016 FFF7FEFF 		bl	MX_FREERTOS_Init
 280              	.LVL16:
 103:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 281              		.loc 1 103 0
 282 001a FFF7FEFF 		bl	osKernelStart
 283              	.LVL17:
 284              	.L19:
 285 001e FEE7     		b	.L19
 286              		.cfi_endproc
 287              	.LFE350:
 289              		.text
 290              	.Letext0:
 291              		.file 3 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 292              		.file 4 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 293              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 294              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 295              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
ARM GAS  /tmp/ccX7dMHY.s 			page 14


 296              		.file 8 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 297              		.file 9 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 298              		.file 10 "/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
 299              		.file 11 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 300              		.file 12 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/math.h"
 301              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 302              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 303              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 304              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 305              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_spi.h"
 306              		.file 18 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 307              		.file 19 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 308              		.file 20 "Drivers/lvgl/lvgl/src/hal/../draw/../misc/../font/../misc/lv_area.h"
 309              		.file 21 "Drivers/lvgl/lvgl/src/hal/../draw/../misc/../font/lv_font.h"
 310              		.file 22 "Drivers/lvgl/lvgl/src/hal/../draw/../misc/lv_color.h"
 311              		.file 23 "Drivers/lvgl/lvgl/src/hal/../draw/../misc/lv_txt.h"
 312              		.file 24 "Drivers/lvgl/lvgl/src/hal/../draw/../misc/lv_style.h"
 313              		.file 25 "Drivers/lvgl/lvgl/src/core/lv_obj.h"
 314              		.file 26 "Drivers/lvgl/lvgl/src/hal/../misc/lv_ll.h"
 315              		.file 27 "Drivers/lvgl/lvgl/src/core/lv_group.h"
 316              		.file 28 "Drivers/lvgl/lvgl/src/core/lv_obj_scroll.h"
 317              		.file 29 "Drivers/lvgl/lvgl/src/core/lv_obj_style.h"
 318              		.file 30 "Drivers/lvgl/lvgl/src/core/lv_obj_class.h"
 319              		.file 31 "Drivers/lvgl/lvgl/src/core/lv_event.h"
 320              		.file 32 "Drivers/lvgl/lvgl/src/widgets/lv_arc.h"
 321              		.file 33 "Drivers/lvgl/lvgl/src/widgets/lv_btn.h"
 322              		.file 34 "Drivers/lvgl/lvgl/src/widgets/lv_img.h"
 323              		.file 35 "Drivers/lvgl/lvgl/src/widgets/lv_label.h"
 324              		.file 36 "Drivers/lvgl/lvgl/src/widgets/lv_line.h"
 325              		.file 37 "Drivers/lvgl/lvgl/src/widgets/lv_table.h"
 326              		.file 38 "Drivers/lvgl/lvgl/src/widgets/lv_checkbox.h"
 327              		.file 39 "Drivers/lvgl/lvgl/src/widgets/lv_bar.h"
 328              		.file 40 "Drivers/lvgl/lvgl/src/widgets/lv_slider.h"
 329              		.file 41 "Drivers/lvgl/lvgl/src/widgets/lv_btnmatrix.h"
 330              		.file 42 "Drivers/lvgl/lvgl/src/widgets/lv_dropdown.h"
 331              		.file 43 "Drivers/lvgl/lvgl/src/widgets/lv_roller.h"
 332              		.file 44 "Drivers/lvgl/lvgl/src/widgets/lv_textarea.h"
 333              		.file 45 "Drivers/lvgl/lvgl/src/widgets/lv_canvas.h"
 334              		.file 46 "Drivers/lvgl/lvgl/src/widgets/lv_switch.h"
 335              		.file 47 "Drivers/lvgl/lvgl/src/extra/layouts/flex/lv_flex.h"
 336              		.file 48 "Drivers/lvgl/lvgl/src/extra/layouts/grid/lv_grid.h"
 337              		.file 49 "Drivers/lvgl/lvgl/src/extra/widgets/animimg/lv_animimg.h"
 338              		.file 50 "Drivers/lvgl/lvgl/src/extra/widgets/calendar/lv_calendar.h"
 339              		.file 51 "Drivers/lvgl/lvgl/src/extra/widgets/calendar/lv_calendar_header_arrow.h"
 340              		.file 52 "Drivers/lvgl/lvgl/src/extra/widgets/calendar/lv_calendar_header_dropdown.h"
 341              		.file 53 "Drivers/lvgl/lvgl/src/extra/widgets/chart/lv_chart.h"
 342              		.file 54 "Drivers/lvgl/lvgl/src/extra/widgets/keyboard/lv_keyboard.h"
 343              		.file 55 "Drivers/lvgl/lvgl/src/extra/widgets/list/lv_list.h"
 344              		.file 56 "Drivers/lvgl/lvgl/src/extra/widgets/menu/lv_menu.h"
 345              		.file 57 "Drivers/lvgl/lvgl/src/extra/widgets/msgbox/lv_msgbox.h"
 346              		.file 58 "Drivers/lvgl/lvgl/src/extra/widgets/meter/lv_meter.h"
 347              		.file 59 "Drivers/lvgl/lvgl/src/extra/widgets/spinbox/lv_spinbox.h"
 348              		.file 60 "Drivers/lvgl/lvgl/src/extra/widgets/spinner/lv_spinner.h"
 349              		.file 61 "Drivers/lvgl/lvgl/src/extra/widgets/tabview/lv_tabview.h"
 350              		.file 62 "Drivers/lvgl/lvgl/src/extra/widgets/tileview/lv_tileview.h"
 351              		.file 63 "Drivers/lvgl/lvgl/src/extra/widgets/win/lv_win.h"
 352              		.file 64 "Drivers/lvgl/lvgl/src/extra/widgets/colorwheel/lv_colorwheel.h"
ARM GAS  /tmp/ccX7dMHY.s 			page 15


 353              		.file 65 "Drivers/lvgl/lvgl/src/extra/widgets/led/lv_led.h"
 354              		.file 66 "Drivers/lvgl/lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h"
 355              		.file 67 "Drivers/lvgl/lvgl/src/extra/widgets/span/lv_span.h"
 356              		.file 68 "Drivers/ST7789/fonts.h"
 357              		.file 69 "Drivers/ST7789/st7789.h"
 358              		.file 70 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 359              		.file 71 "Core/Inc/gpio.h"
 360              		.file 72 "Core/Inc/spi.h"
 361              		.file 73 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 362              		.file 74 "<built-in>"
ARM GAS  /tmp/ccX7dMHY.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccX7dMHY.s:17     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccX7dMHY.s:24     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccX7dMHY.s:56     .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccX7dMHY.s:61     .text.Error_Handler:0000000000000000 $t
     /tmp/ccX7dMHY.s:68     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccX7dMHY.s:94     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccX7dMHY.s:101    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccX7dMHY.s:238    .text.SystemClock_Config:00000000000000b8 $d
     /tmp/ccX7dMHY.s:244    .text.main:0000000000000000 $t
     /tmp/ccX7dMHY.s:251    .text.main:0000000000000000 main

UNDEFINED SYMBOLS
HAL_IncTick
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_SPI1_Init
osKernelInitialize
MX_FREERTOS_Init
osKernelStart
