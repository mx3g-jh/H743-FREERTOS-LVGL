ARM GAS  /tmp/ccJX0uiU.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_spi.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	SPI_RxISR_8BIT:
  24              	.LFB184:
  25              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @file    stm32h7xx_hal_spi.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ******************************************************************************
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @attention
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * Copyright (c) 2017 STMicroelectronics.
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * All rights reserved.
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * in the root directory of this software component.
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ******************************************************************************
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   @verbatim
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ==============================================================================
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                         ##### How to use this driver #####
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ==============================================================================
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     [..]
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 2


  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (##) SPI pins configuration
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process or DMA process
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Enable the DMAx clock
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx handle to the hspi DMA Tx or Rx handle
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                     or Rx Stream/Channel
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****      [..]
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        Callback registration:
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#) The compilation flag USE_HAL_SPI_REGISTER_CALLBACKS when set to 1UL
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           allows the user to configure dynamically the driver callbacks.
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           Use Functions HAL_SPI_RegisterCallback() to register an interrupt callback.
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           Function HAL_SPI_RegisterCallback() allows to register following callbacks:
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) SuspendCallback       : SPI Suspend callback
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           and a pointer to the user callback function.
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (#) Use function HAL_SPI_UnRegisterCallback to reset a callback to the default
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           weak function.
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           HAL_SPI_UnRegisterCallback takes as parameters the HAL peripheral handle,
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           and the Callback ID.
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           This function allows to reset following callbacks:
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
ARM GAS  /tmp/ccJX0uiU.s 			page 3


  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) SuspendCallback       : SPI Suspend callback
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        By default, after the HAL_SPI_Init() and when the state is HAL_SPI_STATE_RESET
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        all callbacks are set to the corresponding weak functions:
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        examples HAL_SPI_MasterTxCpltCallback(), HAL_SPI_MasterRxCpltCallback().
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        Exception done for MspInit and MspDeInit functions that are
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        reset to the legacy weak functions in the HAL_SPI_Init()/ HAL_SPI_DeInit() only when
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        these callbacks are null (not registered beforehand).
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        If MspInit or MspDeInit are not null, the HAL_SPI_Init()/ HAL_SPI_DeInit()
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        Callbacks can be registered/unregistered in HAL_SPI_STATE_READY state only.
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        Exception done MspInit/MspDeInit functions that can be registered/unregistered
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        in HAL_SPI_STATE_READY or HAL_SPI_STATE_RESET state,
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        Then, the user first registers the MspInit/MspDeInit user callbacks
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        using HAL_SPI_RegisterCallback() before calling HAL_SPI_DeInit()
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        or HAL_SPI_Init() function.
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        When The compilation define USE_HAL_PPP_REGISTER_CALLBACKS is set to 0 or
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        not defined, the callback registering feature is not available
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        and weak (surcharged) callbacks are used.
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        SuspendCallback restriction:
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****            SuspendCallback is called only when MasterReceiverAutoSusp is enabled and
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        EOT interrupt is activated. SuspendCallback is used in relation with functions
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        HAL_SPI_Transmit_IT, HAL_SPI_Receive_IT and HAL_SPI_TransmitReceive_IT.
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     [..]
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       Circular mode restriction:
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) The DMA circular mode cannot be used when the SPI is configured in these modes:
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (++) Master 2Lines RxOnly
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           (++) Master 1Line Rx
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) The CRC feature is not managed when the DMA circular mode is enabled
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) The functions HAL_SPI_DMAPause()/ HAL_SPI_DMAResume() are not supported. Return always
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           HAL_ERROR with ErrorCode set to HAL_SPI_ERROR_NOT_SUPPORTED.
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           Those functions are maintained for backward compatibility reasons.
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   @endverbatim
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #include "stm32h7xx_hal.h"
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @addtogroup STM32H7xx_HAL_Driver
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI SPI
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief SPI HAL module driver
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
ARM GAS  /tmp/ccJX0uiU.s 			page 4


 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100UL
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #define MAX_FIFO_LENGTH     16UL
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagSta
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                     uint32_t Timeout, uint32_t Tickstart);
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_8BIT(SPI_HandleTypeDef *hspi);
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_16BIT(SPI_HandleTypeDef *hspi);
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_32BIT(SPI_HandleTypeDef *hspi);
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_8BIT(SPI_HandleTypeDef *hspi);
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_16BIT(SPI_HandleTypeDef *hspi);
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_32BIT(SPI_HandleTypeDef *hspi);
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_AbortTransfer(SPI_HandleTypeDef *hspi);
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_CloseTransfer(SPI_HandleTypeDef *hspi);
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static uint32_t SPI_GetPacketSize(SPI_HandleTypeDef *hspi);
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *  @brief    Initialization and Configuration functions
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @verbatim
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  ===============================================================================
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  ===============================================================================
ARM GAS  /tmp/ccJX0uiU.s 			page 5


 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           the selected configuration:
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) Mode
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) Direction
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) Data Size
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) Clock Polarity and Phase
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) NSS Management
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) BaudRate Prescaler
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) FirstBit
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) TIMode
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) CRC Calculation
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) CRC Length, used only with Data8 and Data16
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) FIFO reception threshold
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         (++) FIFO transmission threshold
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           of the selected SPIx peripheral.
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @endverbatim
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t crc_length;
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t packet_length;
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi == NULL)
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check the parameters */
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_FIFOTHRESHOLD(hspi->Init.FifoThreshold));
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
ARM GAS  /tmp/ccJX0uiU.s 			page 6


 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.TxCRCInitializationPattern));
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.RxCRCInitializationPattern));
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Verify that the SPI instance supports Data Size higher than 16bits */
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Verify that the SPI instance supports requested data packing */
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   packet_length = SPI_GetPacketSize(hspi);
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Verify that the SPI instance supports CRC Length higher than 16bits */
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.CRCLength > SPI_CRC_LENGTH_16BIT)
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return HAL_ERROR;
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Align the CRC Length on the data size */
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Init.CRCLength == SPI_CRC_LENGTH_DATASIZE)
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       crc_length = (hspi->Init.DataSize >> SPI_CFG1_DSIZE_Pos) << SPI_CFG1_CRCSIZE_Pos;
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       crc_length = hspi->Init.CRCLength;
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Verify that the CRC Length is higher than DataSize */
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((hspi->Init.DataSize >> SPI_CFG1_DSIZE_Pos) > (crc_length >> SPI_CFG1_CRCSIZE_Pos))
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return HAL_ERROR;
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
ARM GAS  /tmp/ccJX0uiU.s 			page 7


 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     crc_length = hspi->Init.DataSize << SPI_CFG1_CRCSIZE_Pos;
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Init the SPI Callback settings */
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback 
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->SuspendCallback      = HAL_SPI_SuspendCallback;      /* Legacy weak SuspendCallback      
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->MspInitCallback == NULL)
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->MspInitCallback(hspi);
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC == 0)
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Keep the default value of CRCSIZE in case of CRC is not used */
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   crc_length = hspi->Instance->CFG1 & SPI_CFG1_CRCSIZE;
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   Communication speed, First bit, CRC calculation state, CRC Length */
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPIx NSS Software Management Configuration */
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                             (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                            ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                             (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_HIGH))))
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccJX0uiU.s 			page 8


 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_SSI);
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPIx Master Rx Auto Suspend Configuration */
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER) && (hspi->Init.DataSize >= SPI_DATAS
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR1, SPI_CR1_MASRX, hspi->Init.MasterReceiverAutoSusp);
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_MASRX);
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPIx CFG1 Configuration */
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CFG1, (hspi->Init.BaudRatePrescaler | hspi->Init.CRCCalculation | crc_l
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.FifoThreshold     | hspi->Init.DataSize));
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPIx CFG2 Configuration */
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CFG2, (hspi->Init.NSSPMode                | hspi->Init.TIMode    |
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.NSSPolarity             | hspi->Init.NSS       |
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.CLKPolarity             | hspi->Init.CLKPhase  |
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.FirstBit                | hspi->Init.Mode      |
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.MasterInterDataIdleness | hspi->Init.Direction |
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.MasterSSIdleness        | hspi->Init.IOSwap));
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Initialize TXCRC Pattern Initial Value */
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Init.TxCRCInitializationPattern == SPI_CRC_INITIALIZATION_ALL_ONE_PATTERN)
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_TCRCINI);
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_TCRCINI);
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Initialize RXCRC Pattern Initial Value */
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Init.RxCRCInitializationPattern == SPI_CRC_INITIALIZATION_ALL_ONE_PATTERN)
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_RCRCINI);
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_RCRCINI);
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Enable 33/17 bits CRC computation */
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (crc_length == SPI_CRC_LENGTH_16BIT)) ||
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance))  && (crc_length == SPI_CRC_LENGTH_32BIT)))
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRC33_17);
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
ARM GAS  /tmp/ccJX0uiU.s 			page 9


 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_CRC33_17);
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Write CRC polynomial in SPI Register */
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPOLY, hspi->Init.CRCPolynomial);
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Insure that Underrun configuration is managed only by Salve */
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_SLAVE)
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Set Default Underrun configuration */
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_DISABLE)
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRDET, SPI_CFG1_UDRDET_0);
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRCFG, SPI_CFG1_UDRCFG_1);
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Insure that AFCNTR is managed only by Master */
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER)
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Alternate function GPIOs control */
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CFG2, SPI_CFG2_AFCNTR, (hspi->Init.MasterKeepIOState));
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_OK;
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi == NULL)
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check SPI Instance parameter */
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 10


 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->MspDeInitCallback == NULL)
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->MspDeInitCallback = HAL_SPI_MspDeInit; /* Legacy weak MspDeInit  */
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->MspDeInitCallback(hspi);
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Release Lock */
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_OK;
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
ARM GAS  /tmp/ccJX0uiU.s 			page 11


 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Register a User SPI Callback
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         To be used instead of the weak predefined callback
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be registered
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pCallback pointer to the Callback function
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_RegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Callb
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                            pSPI_CallbackTypeDef pCallback)
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (pCallback == NULL)
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update the error code */
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_INVALID_CALLBACK;
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     switch (CallbackID)
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxCpltCallback = pCallback;
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxCpltCallback = pCallback;
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxRxCpltCallback = pCallback;
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxHalfCpltCallback = pCallback;
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxHalfCpltCallback = pCallback;
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = pCallback;
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->ErrorCallback = pCallback;
ARM GAS  /tmp/ccJX0uiU.s 			page 12


 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->AbortCpltCallback = pCallback;
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_SUSPEND_CB_ID :
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->SuspendCallback = pCallback;
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       default :
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Update the error code */
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Return error status */
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         status =  HAL_ERROR;
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     switch (CallbackID)
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       default :
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Update the error code */
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Return error status */
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         status =  HAL_ERROR;
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update the error code */
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Return error status */
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     status =  HAL_ERROR;
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 13


 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Release Lock */
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return status;
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Unregister an SPI Callback
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         SPI callback is redirected to the weak predefined callback
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be unregistered
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_UnRegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Cal
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     switch (CallbackID)
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxCpltCallback = HAL_SPI_TxCpltCallback;             /* Legacy weak TxCpltCallback   
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxCpltCallback = HAL_SPI_RxCpltCallback;             /* Legacy weak RxCpltCallback   
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxRxCpltCallback = HAL_SPI_TxRxCpltCallback;         /* Legacy weak TxRxCpltCallback 
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxHalfCpltCallback = HAL_SPI_TxHalfCpltCallback;     /* Legacy weak TxHalfCpltCallbac
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxHalfCpltCallback = HAL_SPI_RxHalfCpltCallback;     /* Legacy weak RxHalfCpltCallbac
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallb
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->ErrorCallback = HAL_SPI_ErrorCallback;               /* Legacy weak ErrorCallback    
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->AbortCpltCallback = HAL_SPI_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_SUSPEND_CB_ID :
ARM GAS  /tmp/ccJX0uiU.s 			page 14


 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->SuspendCallback = HAL_SPI_SuspendCallback;           /* Legacy weak SuspendCallback  
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       default :
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Update the error code */
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Return error status */
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         status =  HAL_ERROR;
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     switch (CallbackID)
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       default :
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Update the error code */
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Return error status */
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         status =  HAL_ERROR;
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update the error code */
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Return error status */
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     status =  HAL_ERROR;
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Release Lock */
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return status;
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
ARM GAS  /tmp/ccJX0uiU.s 			page 15


 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *  @brief   Data transfers functions
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @verbatim
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   ==============================================================================
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                       ##### IO operation functions #####
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  ===============================================================================
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  [..]
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     data transfers.
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     (#) There are two modes of transfer:
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        (##) Blocking mode: The communication is performed in polling mode.
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             after finishing transfer.
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****        (##) No-Blocking mode: The communication is performed using Interrupts
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             The end of the data processing will be indicated through the
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             using DMA mode.
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @endverbatim
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData  : pointer to data buffer
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be sent
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Timeout: Timeout duration
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, ui
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t tickstart;
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
ARM GAS  /tmp/ccJX0uiU.s 			page 16


 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pData;
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*Init field not used in handle to zero */
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = NULL;
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = (uint16_t) 0UL;
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t) 0UL;
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_2LINES_TX(hspi);
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 32 Bit mode */
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
ARM GAS  /tmp/ccJX0uiU.s 			page 17


 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transmit data in 32 Bit mode */
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->TxXferCount > 0UL)
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Wait until TXP flag is set to send data */
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint32_t);
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxXferCount--;
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Unlock the process */
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_TIMEOUT;
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->TxXferCount > 0UL)
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Wait until TXP flag is set to send data */
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
ARM GAS  /tmp/ccJX0uiU.s 			page 18


 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Unlock the process */
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_TIMEOUT;
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->TxXferCount > 0UL)
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Wait until TXP flag is set to send data */
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((hspi->TxXferCount > 3UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_03DATA))
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)4UL;
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((__IO uint8_t *)&hspi->Instance->TXDR) = *((const uint8_t *)hspi->pTxBuffPtr);
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint8_t);
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Unlock the process */
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
ARM GAS  /tmp/ccJX0uiU.s 			page 19


1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_TIMEOUT;
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Wait for Tx (and CRC) data to be sent */
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_EOT, RESET, Timeout, tickstart) != HAL_OK)
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call standard close procedure with error check */
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_CloseTransfer(hspi);
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Unlock the process */
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData  : pointer to data buffer
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be received
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Timeout: Timeout duration
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t tickstart;
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_RXONLY(hspi->Init.Direction));
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tickstart = HAL_GetTick();
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
ARM GAS  /tmp/ccJX0uiU.s 			page 20


1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*Init field not used in handle to zero */
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = NULL;
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = (uint16_t) 0UL;
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction: 1Line */
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_2LINES_RX(hspi);
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 32 Bit mode */
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transfer loop */
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->RxXferCount > 0UL)
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check the RXWNE/EOT flag */
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((hspi->Instance->SR & (SPI_FLAG_RXWNE | SPI_FLAG_EOT)) != 0UL)
ARM GAS  /tmp/ccJX0uiU.s 			page 21


1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint32_t);
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount--;
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Unlock the process */
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_TIMEOUT;
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transfer loop */
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->RxXferCount > 0UL)
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check the RXP flag */
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXP))
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount--;
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Unlock the process */
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_TIMEOUT;
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
ARM GAS  /tmp/ccJX0uiU.s 			page 22


1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transfer loop */
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (hspi->RxXferCount > 0UL)
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check the RXP flag */
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXP))
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount--;
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Timeout management */
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Call standard close procedure with error check */
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SPI_CloseTransfer(hspi);
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Unlock the process */
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_TIMEOUT;
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Wait for crc data to be received */
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_EOT, RESET, Timeout, tickstart) != HAL_OK)
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call standard close procedure with error check */
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_CloseTransfer(hspi);
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Unlock the process */
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
ARM GAS  /tmp/ccJX0uiU.s 			page 23


1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be sent and received
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Timeout: Timeout duration
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, const uint8_t *pTxData, uint8_t 
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                           uint16_t Size, uint32_t Timeout)
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t   tickstart;
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint16_t   initial_TxXferCount;
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint16_t   initial_RxXferCount;
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tickstart = HAL_GetTick();
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   initial_TxXferCount = Size;
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   initial_RxXferCount = Size;
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0UL))
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX_RX;
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
ARM GAS  /tmp/ccJX0uiU.s 			page 24


1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*Init field not used in handle to zero */
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set Full-Duplex mode */
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_2LINES(hspi);
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit and Receive data in 32 Bit mode */
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while ((initial_TxXferCount > 0UL) || (initial_RxXferCount > 0UL))
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check TXP flag */
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP)) && (initial_TxXferCount > 0UL))
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint32_t);
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxXferCount --;
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_TxXferCount = hspi->TxXferCount;
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check RXWNE/EOT flag */
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (((hspi->Instance->SR & (SPI_FLAG_RXWNE | SPI_FLAG_EOT)) != 0UL) && (initial_RxXferCount >
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint32_t);
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount --;
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_RxXferCount = hspi->RxXferCount;
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Timeout management */
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Call standard close procedure with error check */
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SPI_CloseTransfer(hspi);
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Unlock the process */
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         return HAL_TIMEOUT;
ARM GAS  /tmp/ccJX0uiU.s 			page 25


1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while ((initial_TxXferCount > 0UL) || (initial_RxXferCount > 0UL))
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check the TXP flag */
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP) && (initial_TxXferCount > 0UL))
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxXferCount--;
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_TxXferCount = hspi->TxXferCount;
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check the RXP flag */
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXP)) && (initial_RxXferCount > 0UL))
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount--;
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_RxXferCount = hspi->RxXferCount;
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Timeout management */
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Call standard close procedure with error check */
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SPI_CloseTransfer(hspi);
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Unlock the process */
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         return HAL_TIMEOUT;
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while ((initial_TxXferCount > 0UL) || (initial_RxXferCount > 0UL))
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check the TXP flag */
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP)) && (initial_TxXferCount > 0UL))
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
ARM GAS  /tmp/ccJX0uiU.s 			page 26


1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((__IO uint8_t *)&hspi->Instance->TXDR) = *((const uint8_t *)hspi->pTxBuffPtr);
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint8_t);
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxXferCount--;
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_TxXferCount = hspi->TxXferCount;
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Check the RXP flag */
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXP)) && (initial_RxXferCount > 0UL))
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount--;
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_RxXferCount = hspi->RxXferCount;
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Timeout management */
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Call standard close procedure with error check */
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SPI_CloseTransfer(hspi);
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Unlock the process */
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         return HAL_TIMEOUT;
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Wait for Tx/Rx (and CRC) data to be sent/received */
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_EOT, RESET, Timeout, tickstart) != HAL_OK)
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call standard close procedure with error check */
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_CloseTransfer(hspi);
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Unlock the process */
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return HAL_ERROR;
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
ARM GAS  /tmp/ccJX0uiU.s 			page 27


1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size)
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pData;
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = NULL;
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = (uint16_t) 0UL;
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t) 0UL;
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the function for IT treatment */
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_32BIT;
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccJX0uiU.s 			page 28


1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_2LINES_TX(hspi);
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable EOT, TXP, FRE, MODF, UDR and TSERF interrupts */
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_UDR | SPI_IT_FRE | SPI_IT_MODF | SPI_
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_RXONLY(hspi->Init.Direction));
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccJX0uiU.s 			page 29


1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = NULL;
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = (uint16_t) 0UL;
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the function for IT treatment */
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_32BIT;
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_2LINES_RX(hspi);
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             process unlock */
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable EOT, RXP, OVR, FRE, MODF and TSERF interrupts */
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_RXP | SPI_IT_OVR | SPI_IT_FRE | SPI_IT_MODF | SPI_
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 30


1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Unlock the process */
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be sent and received
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, const uint8_t *pTxData, uint8
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                              uint16_t Size)
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t tmp_TxXferCount;
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0UL))
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX_RX;
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_TxXferCount   = hspi->TxXferCount;
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the function for IT treatment */
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
ARM GAS  /tmp/ccJX0uiU.s 			page 31


1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR     = SPI_TxISR_32BIT;
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR     = SPI_RxISR_32BIT;
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR     = SPI_RxISR_16BIT;
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR     = SPI_TxISR_16BIT;
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR     = SPI_RxISR_8BIT;
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR     = SPI_TxISR_8BIT;
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set Full-Duplex mode */
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_2LINES(hspi);
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Fill in the TxFIFO */
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP)) && (tmp_TxXferCount != 0UL))
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transmit data in 32 Bit mode */
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint32_t);
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount--;
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       tmp_TxXferCount = hspi->TxXferCount;
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount--;
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       tmp_TxXferCount = hspi->TxXferCount;
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Transmit data in 8 Bit mode */
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->TXDR) = *((const uint8_t *)hspi->pTxBuffPtr);
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount--;
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       tmp_TxXferCount = hspi->TxXferCount;
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 32


1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable EOT, DXP, UDR, OVR, FRE, MODF and TSERF interrupts */
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_DXP | SPI_IT_UDR | SPI_IT_OVR |
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                              SPI_IT_FRE | SPI_IT_MODF | SPI_IT_TSERF));
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Start Master transfer */
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Unlock the process */
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit an additional amount of data in blocking mode.
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Reload_Transmit_IT(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef  tmp_state;
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_TX)
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* check if there is already a request to reload */
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Insert the new number of data to be sent just after the current one */
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, (Size & 0xFFFFFFFFUL) << 16UL);
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Set the transaction information */
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.Requested   = 1UL;
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.pTxBuffPtr  = (const uint8_t *)pData;
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.TxXferSize  = Size;
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 33


1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     tmp_state = hspi->State;
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if the current transmit is already completed */
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (((hspi->Instance->CR2 & SPI_CR2_TSER) != 0UL) && (tmp_state == HAL_SPI_STATE_READY))
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TSERF);
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, 0UL);
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->Reload.Requested = 0UL;
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_RELOAD_TRANSFER */
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Receive an additional amount of data in blocking mode.
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Reload_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef  tmp_state;
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* check if there is already a request to reload */
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
ARM GAS  /tmp/ccJX0uiU.s 			page 34


1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Insert the new number of data that will be received just after the current one */
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, (Size & 0xFFFFFFFFUL) << 16UL);
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Set the transaction information */
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.Requested   = 1UL;
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.pRxBuffPtr  = (uint8_t *)pData;
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.RxXferSize  = Size;
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     tmp_state = hspi->State;
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if the current reception is already completed */
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (((hspi->Instance->CR2 & SPI_CR2_TSER) != 0UL) && (tmp_state == HAL_SPI_STATE_READY))
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TSERF);
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, 0UL);
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->Reload.Requested = 0UL;
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_RELOAD_TRANSFER */
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit and receive an additional amount of data in blocking mode.
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be sent and received
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Reload_TransmitReceive_IT(SPI_HandleTypeDef *hspi, const uint8_t *pTxData
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                     uint8_t *pRxData, uint16_t Size)
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef  tmp_state;
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0UL))
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
ARM GAS  /tmp/ccJX0uiU.s 			page 35


1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_TX_RX)
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* check if there is already a request to reload */
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Insert the new number of data that will be sent and received just after the current one */
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, (Size & 0xFFFFFFFFUL) << 16UL);
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Set the transaction information */
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.Requested   = 1UL;
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.pTxBuffPtr  = (const uint8_t *)pTxData;
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.TxXferSize  = Size;
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.pRxBuffPtr  = (uint8_t *)pRxData;
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.RxXferSize  = Size;
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     tmp_state = hspi->State;
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if the current transmit is already completed */
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (((hspi->Instance->CR2 & SPI_CR2_TSER) != 0UL) && (tmp_state == HAL_SPI_STATE_READY))
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TSERF);
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSER, 0UL);
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->Reload.Requested = 0UL;
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return errorcode;
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_RELOAD_TRANSFER */
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
ARM GAS  /tmp/ccJX0uiU.s 			page 36


1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pData;
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init field not used in handle to zero */
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = NULL;
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = (uint16_t)0UL;
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t)0UL;
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_2LINES_TX(hspi);
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Packing mode management is enabled by the DMA settings */
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmatx->Init.MemDataAlignment != DMA_MD
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MD
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                      (hspi->hdmatx->Init.MemDataAlignment != DMA_MD
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Restriction the DMA data received is not allowed in this mode */
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Adjust XferCount according to DMA alignment / Data size */
ARM GAS  /tmp/ccJX0uiU.s 			page 37


2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 3UL) >> 2UL;
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Adjustment done */
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA error callback */
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Clear TXDMAEN bit*/
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                  hspi->TxXferCount))
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update SPI error code */
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Unlock the process */
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, 0UL);
ARM GAS  /tmp/ccJX0uiU.s 			page 38


2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable Tx DMA Request */
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_UDR | SPI_IT_FRE | SPI_IT_MODF));
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Unlock the process */
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi : pointer to a SPI_HandleTypeDef structure that contains
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                the configuration information for SPI module.
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pData: pointer to data buffer
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size : amount of data to be sent
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_RXONLY(hspi->Init.Direction));
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0UL))
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
ARM GAS  /tmp/ccJX0uiU.s 			page 39


2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /*Init field not used in handle to zero */
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = (uint16_t) 0UL;
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_2LINES_RX(hspi);
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Packing mode management is enabled by the DMA settings */
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmarx->Init.MemDataAlignment != DMA_MD
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                      (hspi->hdmarx->Init.MemDataAlignment != DMA_MD
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Restriction the DMA data received is not allowed in this mode */
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Clear RXDMAEN bit */
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_RXDMAEN);
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Adjust XferCount according to DMA alignment / Data size */
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 1UL) >> 1UL;
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 3UL) >> 2UL;
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 1UL) >> 1UL;
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
ARM GAS  /tmp/ccJX0uiU.s 			page 40


2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Adjustment done */
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA error callback */
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->RXDR, (uint32_t)hspi->pRx
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                  hspi->RxXferCount))
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update SPI error code */
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Unlock the process */
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the number of data at current transfer */
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->hdmarx->Init.Mode == DMA_CIRCULAR)
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, 0UL);
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable Rx DMA Request */
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CFG1, SPI_CFG1_RXDMAEN);
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_OVR | SPI_IT_FRE | SPI_IT_MODF));
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccJX0uiU.s 			page 41


2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Unlock the process */
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi   : pointer to a SPI_HandleTypeDef structure that contains
2266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *                  the configuration information for SPI module.
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  Size   : amount of data to be sent
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pTxData, uint
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                               uint16_t Size)
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check Direction parameter */
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_BUSY;
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0UL))
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the transaction information */
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX_RX;
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Init field not used in handle to zero */
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set Full-Duplex mode */
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_2LINES(hspi);
ARM GAS  /tmp/ccJX0uiU.s 			page 42


2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Reset the Tx/Rx DMA bits */
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Packing mode management is enabled by the DMA settings */
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmarx->Init.MemDataAlignment != DMA_MD
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                      (hspi->hdmarx->Init.MemDataAlignment != DMA_MD
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Restriction the DMA data received is not allowed in this mode */
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Unlock the process */
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Adjust XferCount according to DMA alignment / Data size */
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 3UL) >> 2UL;
2340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 1UL) >> 1UL;
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 3UL) >> 2UL;
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = (hspi->RxXferCount + (uint16_t) 1UL) >> 1UL;
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Adjustment done */
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the SPI Tx/Rx DMA Half transfer complete callback */
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA error callback */
ARM GAS  /tmp/ccJX0uiU.s 			page 43


2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA AbortCallback */
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->RXDR, (uint32_t)hspi->pRx
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                  hspi->RxXferCount))
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update SPI error code */
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Unlock the process */
2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable Rx DMA Request */
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CFG1, SPI_CFG1_RXDMAEN);
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   is performed in DMA reception complete callback  */
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set the DMA error callback */
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = SPI_DMAError;
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                  hspi->TxXferCount))
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Update SPI error code */
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Unlock the process */
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, 0UL);
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable Tx DMA Request */
ARM GAS  /tmp/ccJX0uiU.s 			page 44


2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_OVR | SPI_IT_UDR | SPI_IT_FRE | SPI_IT_MODF));
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Enable SPI peripheral */
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_ENABLE(hspi);
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Master transfer start */
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Unlock the process */
2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi SPI handle.
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure performs following operations :
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Disable SPI Interrupts (depending of transfer direction)
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Disable the DMA transfer in the peripheral register (if enabled)
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Set handle State to READY.
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint32_t count;
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Lock the process */
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_LOCK(hspi);
2468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set hspi->state to aborting to avoid any interaction */
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Initialized local variable  */
2473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   errorcode = HAL_OK;
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24UL / 1000UL);
2475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* If master communication on going, make sure current frame is done before closing the connectio
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR1, SPI_CR1_CSTART))
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable EOT interrupt */
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_EOT);
2481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       count--;
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
ARM GAS  /tmp/ccJX0uiU.s 			page 45


2485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (HAL_IS_BIT_SET(hspi->Instance->IER, SPI_IT_EOT));
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Request a Suspend transfer */
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSUSP);
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       count--;
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (HAL_IS_BIT_SET(hspi->Instance->CR1, SPI_CR1_CSTART));
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Clear SUSP flag */
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_SUSPFLAG(hspi);
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       count--;
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_SUSP));
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN))
2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
2529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (HAL_DMA_GetError(hspi->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
2531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CFG1, SPI_CFG1_RXDMAEN))
2540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
ARM GAS  /tmp/ccJX0uiU.s 			page 46


2542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
2544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (HAL_DMA_GetError(hspi->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Proceed with abort procedure */
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_AbortTransfer(hspi);
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check error during Abort procedure */
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->ErrorCode, HAL_SPI_ERROR_ABORT))
2562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   else
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Reset errorCode */
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Unlock the process */
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Restore hspi->state to ready */
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi SPI handle.
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure performs following operations :
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Disable SPI Interrupts (depending of transfer direction)
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Disable the DMA transfer in the peripheral register (if enabled)
2589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + Set handle State to READY
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *          + At abort completion, call user abort complete callback.
2592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
ARM GAS  /tmp/ccJX0uiU.s 			page 47


2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint32_t count;
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t dma_tx_abort_done = 1UL;
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t dma_rx_abort_done = 1UL;
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set hspi->state to aborting to avoid any interaction */
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
2605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Initialized local variable  */
2607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   errorcode = HAL_OK;
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24UL / 1000UL);
2609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* If master communication on going, make sure current frame is done before closing the connectio
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR1, SPI_CR1_CSTART))
2612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable EOT interrupt */
2614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_EOT);
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
2616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       count--;
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (HAL_IS_BIT_SET(hspi->Instance->IER, SPI_IT_EOT));
2625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Request a Suspend transfer */
2627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CSUSP);
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
2629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       count--;
2631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
2632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
2635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (HAL_IS_BIT_SET(hspi->Instance->CR1, SPI_CR1_CSTART));
2638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Clear SUSP flag */
2640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_SUSPFLAG(hspi);
2641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
2642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       count--;
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
2648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_SUSP));
2651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****      before any call to DMA Abort functions */
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 48


2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN))
2659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Set DMA Abort Complete callback if SPI DMA Tx request if enabled */
2661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
2662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       dma_tx_abort_done = 0UL;
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
2667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (HAL_DMA_GetError(hspi->hdmatx) == HAL_DMA_ERROR_NO_XFER)
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           dma_tx_abort_done = 1UL;
2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = NULL;
2672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CFG1, SPI_CFG1_RXDMAEN))
2684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Set DMA Abort Complete callback if SPI DMA Rx request if enabled */
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
2687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       dma_rx_abort_done = 0UL;
2689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) != HAL_OK)
2692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (HAL_DMA_GetError(hspi->hdmarx) == HAL_DMA_ERROR_NO_XFER)
2694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           dma_rx_abort_done = 1UL;
2696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = NULL;
2697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
2701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* If no running DMA transfer, finish cleanup and call callbacks */
2707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((dma_tx_abort_done == 1UL) && (dma_rx_abort_done == 1UL))
2708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Proceed with abort procedure */
2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_AbortTransfer(hspi);
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check error during Abort procedure */
ARM GAS  /tmp/ccJX0uiU.s 			page 49


2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->ErrorCode, HAL_SPI_ERROR_ABORT))
2714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       errorcode = HAL_ERROR;
2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Reset errorCode */
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Restore hspi->state to ready */
2725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call user Abort complete callback */
2728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->AbortCpltCallback(hspi);
2730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
2731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
2732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
2736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         This API is not supported, it is maintained for backward compatibility.
2741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL_ERROR
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
2747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set error code to not supported */
2748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_NOT_SUPPORTED);
2749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_ERROR;
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         This API is not supported, it is maintained for backward compatibility.
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL_ERROR
2759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
2762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set error code to not supported */
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_NOT_SUPPORTED);
2764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_ERROR;
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Stop the DMA Transfer.
ARM GAS  /tmp/ccJX0uiU.s 			page 50


2770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         This API is not supported, it is maintained for backward compatibility.
2771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL_ERROR
2774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
2777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set error code to not supported */
2778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_NOT_SUPPORTED);
2779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_ERROR;
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
2782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
2784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
2788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
2789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
2791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->IER;
2792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
2793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t trigger  = itsource & itflag;
2794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t cfg1     = hspi->Instance->CFG1;
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t handled  = 0UL;
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_StateTypeDef State = hspi->State;
2798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
2799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
2800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
2801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI in SUSPEND mode  ----------------------------------------------------*/
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(itflag, SPI_FLAG_SUSP) && HAL_IS_BIT_SET(itsource, SPI_FLAG_EOT))
2804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Clear the Suspend flag */
2806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_SUSPFLAG(hspi);
2807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Suspend on going, Call the Suspend callback */
2809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
2810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->SuspendCallback(hspi);
2811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
2812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     HAL_SPI_SuspendCallback(hspi);
2813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return;
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI in mode Transmitter and Receiver ------------------------------------*/
2818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && \
2819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_IS_BIT_SET(trigger, SPI_FLAG_DXP))
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR(hspi);
2822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR(hspi);
2823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     handled = 1UL;
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
ARM GAS  /tmp/ccJX0uiU.s 			page 51


2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_RXP) && \
2828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
2829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR(hspi);
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     handled = 1UL;
2832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_TXP) && \
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
2837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR(hspi);
2839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     handled = 1UL;
2840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
2843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI Reload  -------------------------------------------------*/
2844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(trigger, SPI_FLAG_TSERF))
2845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->Reload.Requested = 0UL;
2847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_TSERFFLAG(hspi);
2848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_RELOAD_TRANSFER */
2850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (handled != 0UL)
2852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return;
2854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI End Of Transfer: DMA or IT based transfer */
2857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(trigger, SPI_FLAG_EOT))
2858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Clear EOT/TXTF/SUSP flag */
2860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_EOTFLAG(hspi);
2861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_TXTFFLAG(hspi);
2862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_SUSPFLAG(hspi);
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable EOT interrupt */
2865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_EOT);
2866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* For the IT based receive extra polling maybe required for last packet */
2868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (HAL_IS_BIT_CLR(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
2869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Pooling remaining data */
2871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       while (hspi->RxXferCount != 0UL)
2872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Receive data in 32 Bit mode */
2874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
2875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint32_t);
2878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Receive data in 16 Bit mode */
2880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
2881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
2883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
ARM GAS  /tmp/ccJX0uiU.s 			page 52


2884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
2886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
2888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Receive data in 8 Bit mode */
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         else
2891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
2892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
2893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint8_t);
2894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount--;
2897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
2898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call SPI Standard close procedure */
2901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_CloseTransfer(hspi);
2902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
2907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
2909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return;
2912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
2915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call appropriate user callback */
2916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (State == HAL_SPI_STATE_BUSY_TX_RX)
2917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxRxCpltCallback(hspi);
2919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else if (State == HAL_SPI_STATE_BUSY_RX)
2921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
2923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else if (State == HAL_SPI_STATE_BUSY_TX)
2925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxCpltCallback(hspi);
2927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
2929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call appropriate user callback */
2930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (State == HAL_SPI_STATE_BUSY_TX_RX)
2931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_TxRxCpltCallback(hspi);
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else if (State == HAL_SPI_STATE_BUSY_RX)
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
2937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else if (State == HAL_SPI_STATE_BUSY_TX)
2939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_TxCpltCallback(hspi);
ARM GAS  /tmp/ccJX0uiU.s 			page 53


2941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
2944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* End of the appropriate call */
2946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return;
2949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
2950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((trigger & (SPI_FLAG_MODF | SPI_FLAG_OVR | SPI_FLAG_FRE | SPI_FLAG_UDR)) != 0UL)
2953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
2954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((trigger & SPI_FLAG_OVR) != 0UL)
2956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
2959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((trigger & SPI_FLAG_MODF) != 0UL)
2963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
2965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
2966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((trigger & SPI_FLAG_FRE) != 0UL)
2970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
2972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
2973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* SPI Underrun error interrupt occurred ------------------------------------*/
2976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((trigger & SPI_FLAG_UDR) != 0UL)
2977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
2979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_UDRFLAG(hspi);
2980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
2981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
2984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable SPI peripheral */
2985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable all interrupts */
2988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_RXP | SPI_IT_TXP | SPI_IT_MODF |
2989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                   SPI_IT_OVR | SPI_IT_FRE | SPI_IT_UDR));
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (HAL_IS_BIT_SET(cfg1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
2993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
2994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Disable the SPI DMA requests */
2995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
2996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
2997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
ARM GAS  /tmp/ccJX0uiU.s 			page 54


2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
2999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
3000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
3001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
3003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
3004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
3005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
3006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
3007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
3008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
3009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
3010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
3011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
3012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
3013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
3014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
3015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
3016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
3017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
3018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
3019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
3020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       else
3021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
3022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Restore hspi->State to Ready */
3023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         /* Call user error callback */
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
3028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
3030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
3032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return;
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Tx Transfer completed callback.
3039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
3044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
3050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Rx Transfer completed callback.
ARM GAS  /tmp/ccJX0uiU.s 			page 55


3055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
3060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
3066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Tx and Rx Transfer completed callback.
3071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
3076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
3082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Tx Half Transfer completed callback.
3087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
3092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
3098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Rx Half Transfer completed callback.
3103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
3108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 56


3112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
3114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Tx and Rx Half Transfer callback.
3119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
3124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
3130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief SPI error callback.
3135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
3140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
3146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
3148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
3149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
3154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi SPI handle.
3155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
3158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
3164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  SPI Suspend callback.
ARM GAS  /tmp/ccJX0uiU.s 			page 57


3169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi SPI handle.
3170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** __weak void HAL_SPI_SuspendCallback(SPI_HandleTypeDef *hspi)
3173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
3175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   UNUSED(hspi);
3176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****             the HAL_SPI_SuspendCallback can be implemented in the user file.
3179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****    */
3180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
3184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
3187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief   SPI control functions
3188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *
3189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @verbatim
3190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  ===============================================================================
3191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
3192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****  ===============================================================================
3193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     [..]
3194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
3195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
3196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
3197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** @endverbatim
3198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
3199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Return the SPI handle state.
3203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval SPI state
3206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(const SPI_HandleTypeDef *hspi)
3208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Return SPI handle state */
3210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return hspi->State;
3211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Return the SPI error code.
3215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval SPI error code in bitmap format
3218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** uint32_t HAL_SPI_GetError(const SPI_HandleTypeDef *hspi)
3220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Return SPI ErrorCode */
3222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return hspi->ErrorCode;
3223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
ARM GAS  /tmp/ccJX0uiU.s 			page 58


3226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
3227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @}
3231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
3234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief   Private functions
3235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @{
3236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief DMA SPI transmit process complete callback.
3240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_ABORT)
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
3251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxCpltCallback(hspi);
3254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_TxCpltCallback(hspi);
3256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Enable EOT interrupt */
3261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
3262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief DMA SPI receive process complete callback.
3268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_ABORT)
3277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->Init.Mode == DMA_CIRCULAR)
3279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
3282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
ARM GAS  /tmp/ccJX0uiU.s 			page 59


3283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
3284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Enable EOT interrupt */
3289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
3290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
3296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_ABORT)
3305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
3307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxRxCpltCallback(hspi);
3310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_SPI_TxRxCpltCallback(hspi);
3312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Enable EOT interrupt */
3317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
3318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
3324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
3329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxHalfCpltCallback(hspi);
3334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
3336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
ARM GAS  /tmp/ccJX0uiU.s 			page 60


3340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
3341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
3346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxHalfCpltCallback(hspi);
3351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
3353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
3358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxRxHalfCpltCallback(hspi);
3368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
3370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
3375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
3376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
3380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* if DMA error is FIFO error ignore it */
3384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_FE)
3385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Call SPI standard close procedure */
3387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SPI_CloseTransfer(hspi);
3388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
3390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccJX0uiU.s 			page 61


3397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
3401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma DMA handle.
3403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t) 0UL;
3409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
3410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
3418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
3423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
3426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma DMA handle.
3427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
3434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
3437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
3439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return;
3441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call the Abort procedure */
3445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_AbortTransfer(hspi);
3446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call user Abort complete callback */
3451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
ARM GAS  /tmp/ccJX0uiU.s 			page 62


3454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
3460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
3463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hdma DMA handle.
3464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
3471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
3474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
3476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return;
3478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call the Abort procedure */
3482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_AbortTransfer(hspi);
3483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Call user Abort complete callback */
3488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
3489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_8BIT(SPI_HandleTypeDef *hspi)
3502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
  26              		.loc 1 3502 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
3503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
3504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((uint8_t *)hspi->pRxBuffPtr) = (*(__IO uint8_t *)&hspi->Instance->RXDR);
ARM GAS  /tmp/ccJX0uiU.s 			page 63


  32              		.loc 1 3504 0
  33 0000 0268     		ldr	r2, [r0]
  34 0002 436E     		ldr	r3, [r0, #100]
  35 0004 92F83020 		ldrb	r2, [r2, #48]	@ zero_extendqisi2
  36 0008 1A70     		strb	r2, [r3]
3505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint8_t);
  37              		.loc 1 3505 0
  38 000a 436E     		ldr	r3, [r0, #100]
  39 000c 0133     		adds	r3, r3, #1
  40 000e 4366     		str	r3, [r0, #100]
3506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount--;
  41              		.loc 1 3506 0
  42 0010 B0F86A30 		ldrh	r3, [r0, #106]
  43 0014 013B     		subs	r3, r3, #1
  44 0016 9BB2     		uxth	r3, r3
  45 0018 A0F86A30 		strh	r3, [r0, #106]	@ movhi
3507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->RxXferCount == 0UL)
  46              		.loc 1 3509 0
  47 001c B0F86A30 		ldrh	r3, [r0, #106]
  48 0020 9BB2     		uxth	r3, r3
  49 0022 23B9     		cbnz	r3, .L1
3510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
3512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferSize  = hspi->Reload.RxXferSize;
3516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = hspi->Reload.RxXferSize;
3517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pRxBuffPtr  = hspi->Reload.pRxBuffPtr;
3518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable RXP interrupts */
3522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
3523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable RXP interrupts */
3526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
  50              		.loc 1 3526 0
  51 0024 0268     		ldr	r2, [r0]
  52 0026 1369     		ldr	r3, [r2, #16]
  53 0028 23F00103 		bic	r3, r3, #1
  54 002c 1361     		str	r3, [r2, #16]
  55              	.L1:
3527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_RELOAD_TRANSFER */
3528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
  56              		.loc 1 3529 0
  57 002e 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE184:
  61              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
  62              		.align	1
  63              		.syntax unified
  64              		.thumb
ARM GAS  /tmp/ccJX0uiU.s 			page 64


  65              		.thumb_func
  66              		.fpu fpv5-d16
  68              	SPI_RxISR_16BIT:
  69              	.LFB185:
3530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_16BIT(SPI_HandleTypeDef *hspi)
3539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
  70              		.loc 1 3539 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.LVL1:
3540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
3542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
  76              		.loc 1 3542 0
  77 0000 0268     		ldr	r2, [r0]
  78              	.LVL2:
3543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
  79              		.loc 1 3544 0
  80 0002 436E     		ldr	r3, [r0, #100]
  81 0004 128E     		ldrh	r2, [r2, #48]
  82              	.LVL3:
  83 0006 1A80     		strh	r2, [r3]	@ movhi
  84              	.LVL4:
3545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (*(__IO uint16_t *)&hspi->Instance->RXDR);
3547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
3548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
  85              		.loc 1 3548 0
  86 0008 436E     		ldr	r3, [r0, #100]
  87 000a 0233     		adds	r3, r3, #2
  88 000c 4366     		str	r3, [r0, #100]
3549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount--;
  89              		.loc 1 3549 0
  90 000e B0F86A30 		ldrh	r3, [r0, #106]
  91 0012 013B     		subs	r3, r3, #1
  92 0014 9BB2     		uxth	r3, r3
  93 0016 A0F86A30 		strh	r3, [r0, #106]	@ movhi
3550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->RxXferCount == 0UL)
  94              		.loc 1 3552 0
  95 001a B0F86A30 		ldrh	r3, [r0, #106]
  96 001e 9BB2     		uxth	r3, r3
  97 0020 23B9     		cbnz	r3, .L3
3553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
ARM GAS  /tmp/ccJX0uiU.s 			page 65


3555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferSize  = hspi->Reload.RxXferSize;
3559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = hspi->Reload.RxXferSize;
3560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pRxBuffPtr  = hspi->Reload.pRxBuffPtr;
3561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable RXP interrupts */
3565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
3566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable RXP interrupts */
3569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
  98              		.loc 1 3569 0
  99 0022 0268     		ldr	r2, [r0]
 100 0024 1369     		ldr	r3, [r2, #16]
 101 0026 23F00103 		bic	r3, r3, #1
 102 002a 1361     		str	r3, [r2, #16]
 103              	.L3:
3570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_RELOAD_TRANSFER */
3571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 104              		.loc 1 3572 0
 105 002c 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE185:
 109              		.section	.text.SPI_RxISR_32BIT,"ax",%progbits
 110              		.align	1
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv5-d16
 116              	SPI_RxISR_32BIT:
 117              	.LFB186:
3573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Manage the 32-bit receive in Interrupt context.
3577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_RxISR_32BIT(SPI_HandleTypeDef *hspi)
3582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 118              		.loc 1 3582 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.LVL5:
3583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Receive data in 32 Bit mode */
3584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((uint32_t *)hspi->pRxBuffPtr) = (*(__IO uint32_t *)&hspi->Instance->RXDR);
 124              		.loc 1 3584 0
 125 0000 0268     		ldr	r2, [r0]
 126 0002 436E     		ldr	r3, [r0, #100]
ARM GAS  /tmp/ccJX0uiU.s 			page 66


 127 0004 126B     		ldr	r2, [r2, #48]
 128 0006 1A60     		str	r2, [r3]
3585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint32_t);
 129              		.loc 1 3585 0
 130 0008 436E     		ldr	r3, [r0, #100]
 131 000a 0433     		adds	r3, r3, #4
 132 000c 4366     		str	r3, [r0, #100]
3586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount--;
 133              		.loc 1 3586 0
 134 000e B0F86A30 		ldrh	r3, [r0, #106]
 135 0012 013B     		subs	r3, r3, #1
 136 0014 9BB2     		uxth	r3, r3
 137 0016 A0F86A30 		strh	r3, [r0, #106]	@ movhi
3587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->RxXferCount == 0UL)
 138              		.loc 1 3589 0
 139 001a B0F86A30 		ldrh	r3, [r0, #106]
 140 001e 9BB2     		uxth	r3, r3
 141 0020 23B9     		cbnz	r3, .L5
3590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
3592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferSize  = hspi->Reload.RxXferSize;
3596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->RxXferCount = hspi->Reload.RxXferSize;
3597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pRxBuffPtr  = hspi->Reload.pRxBuffPtr;
3598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable RXP interrupts */
3602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
3603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable RXP interrupts */
3606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXP);
 142              		.loc 1 3606 0
 143 0022 0268     		ldr	r2, [r0]
 144 0024 1369     		ldr	r3, [r2, #16]
 145 0026 23F00103 		bic	r3, r3, #1
 146 002a 1361     		str	r3, [r2, #16]
 147              	.L5:
3607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_RELOAD_TRANSFER */
3608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 148              		.loc 1 3609 0
 149 002c 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE186:
 153              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 154              		.align	1
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu fpv5-d16
 160              	SPI_TxISR_8BIT:
ARM GAS  /tmp/ccJX0uiU.s 			page 67


 161              	.LFB187:
3610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_8BIT(SPI_HandleTypeDef *hspi)
3619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 162              		.loc 1 3619 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167              	.LVL6:
3620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
3621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->TXDR = *((const uint8_t *)hspi->pTxBuffPtr);
 168              		.loc 1 3621 0
 169 0000 C26D     		ldr	r2, [r0, #92]
 170 0002 0368     		ldr	r3, [r0]
 171 0004 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 172 0006 83F82020 		strb	r2, [r3, #32]
3622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint8_t);
 173              		.loc 1 3622 0
 174 000a C36D     		ldr	r3, [r0, #92]
 175 000c 0133     		adds	r3, r3, #1
 176 000e C365     		str	r3, [r0, #92]
3623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount--;
 177              		.loc 1 3623 0
 178 0010 B0F86230 		ldrh	r3, [r0, #98]
 179 0014 013B     		subs	r3, r3, #1
 180 0016 9BB2     		uxth	r3, r3
 181 0018 A0F86230 		strh	r3, [r0, #98]	@ movhi
3624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->TxXferCount == 0UL)
 182              		.loc 1 3626 0
 183 001c B0F86230 		ldrh	r3, [r0, #98]
 184 0020 9BB2     		uxth	r3, r3
 185 0022 23B9     		cbnz	r3, .L7
3627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
3629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferSize  = hspi->Reload.TxXferSize;
3633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = hspi->Reload.TxXferSize;
3634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pTxBuffPtr  = hspi->Reload.pTxBuffPtr;
3635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable TXP interrupts */
3639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
3640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
ARM GAS  /tmp/ccJX0uiU.s 			page 68


3642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable TXP interrupts */
3643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
 186              		.loc 1 3643 0
 187 0024 0268     		ldr	r2, [r0]
 188 0026 1369     		ldr	r3, [r2, #16]
 189 0028 23F00203 		bic	r3, r3, #2
 190 002c 1361     		str	r3, [r2, #16]
 191              	.L7:
3644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_RELOAD_TRANSFER */
3645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 192              		.loc 1 3646 0
 193 002e 7047     		bx	lr
 194              		.cfi_endproc
 195              	.LFE187:
 197              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 198              		.align	1
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 202              		.fpu fpv5-d16
 204              	SPI_TxISR_16BIT:
 205              	.LFB188:
3647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_16BIT(SPI_HandleTypeDef *hspi)
3655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 206              		.loc 1 3655 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 211              	.LVL7:
3656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
3658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
 212              		.loc 1 3658 0
 213 0000 0368     		ldr	r3, [r0]
 214              	.LVL8:
3659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 215              		.loc 1 3660 0
 216 0002 C26D     		ldr	r2, [r0, #92]
 217 0004 1288     		ldrh	r2, [r2]
 218 0006 1A84     		strh	r2, [r3, #32]	@ movhi
3661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
3663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
3664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 219              		.loc 1 3664 0
 220 0008 C36D     		ldr	r3, [r0, #92]
 221              	.LVL9:
ARM GAS  /tmp/ccJX0uiU.s 			page 69


 222 000a 0233     		adds	r3, r3, #2
 223 000c C365     		str	r3, [r0, #92]
3665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount--;
 224              		.loc 1 3665 0
 225 000e B0F86230 		ldrh	r3, [r0, #98]
 226 0012 013B     		subs	r3, r3, #1
 227 0014 9BB2     		uxth	r3, r3
 228 0016 A0F86230 		strh	r3, [r0, #98]	@ movhi
3666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->TxXferCount == 0UL)
 229              		.loc 1 3668 0
 230 001a B0F86230 		ldrh	r3, [r0, #98]
 231 001e 9BB2     		uxth	r3, r3
 232 0020 23B9     		cbnz	r3, .L9
3669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
3671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferSize  = hspi->Reload.TxXferSize;
3675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = hspi->Reload.TxXferSize;
3676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pTxBuffPtr  = hspi->Reload.pTxBuffPtr;
3677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable TXP interrupts */
3681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
3682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable TXP interrupts */
3685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
 233              		.loc 1 3685 0
 234 0022 0268     		ldr	r2, [r0]
 235 0024 1369     		ldr	r3, [r2, #16]
 236 0026 23F00203 		bic	r3, r3, #2
 237 002a 1361     		str	r3, [r2, #16]
 238              	.L9:
3686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_RELOAD_TRANSFER */
3687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 239              		.loc 1 3688 0
 240 002c 7047     		bx	lr
 241              		.cfi_endproc
 242              	.LFE188:
 244              		.section	.text.SPI_TxISR_32BIT,"ax",%progbits
 245              		.align	1
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu fpv5-d16
 251              	SPI_TxISR_32BIT:
 252              	.LFB189:
3689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Handle the data 32-bit transmit in Interrupt mode.
3692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/ccJX0uiU.s 			page 70


3693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_TxISR_32BIT(SPI_HandleTypeDef *hspi)
3697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 253              		.loc 1 3697 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL10:
3698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Transmit data in 32 Bit mode */
3699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 259              		.loc 1 3699 0
 260 0000 C26D     		ldr	r2, [r0, #92]
 261 0002 0368     		ldr	r3, [r0]
 262 0004 1268     		ldr	r2, [r2]
 263 0006 1A62     		str	r2, [r3, #32]
3700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint32_t);
 264              		.loc 1 3700 0
 265 0008 C36D     		ldr	r3, [r0, #92]
 266 000a 0433     		adds	r3, r3, #4
 267 000c C365     		str	r3, [r0, #92]
3701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount--;
 268              		.loc 1 3701 0
 269 000e B0F86230 		ldrh	r3, [r0, #98]
 270 0012 013B     		subs	r3, r3, #1
 271 0014 9BB2     		uxth	r3, r3
 272 0016 A0F86230 		strh	r3, [r0, #98]	@ movhi
3702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable IT if no more data excepted */
3704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->TxXferCount == 0UL)
 273              		.loc 1 3704 0
 274 001a B0F86230 		ldrh	r3, [r0, #98]
 275 001e 9BB2     		uxth	r3, r3
 276 0020 23B9     		cbnz	r3, .L11
3705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined(USE_SPI_RELOAD_TRANSFER)
3707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if there is any request to reload */
3708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Reload.Requested == 1UL)
3709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferSize  = hspi->Reload.TxXferSize;
3711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount = hspi->Reload.TxXferSize;
3712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pTxBuffPtr  = hspi->Reload.pTxBuffPtr;
3713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     else
3715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       /* Disable TXP interrupts */
3717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
3718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
3720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Disable TXP interrupts */
3721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXP);
 277              		.loc 1 3721 0
 278 0022 0268     		ldr	r2, [r0]
 279 0024 1369     		ldr	r3, [r2, #16]
 280 0026 23F00203 		bic	r3, r3, #2
ARM GAS  /tmp/ccJX0uiU.s 			page 71


 281 002a 1361     		str	r3, [r2, #16]
 282              	.L11:
3722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_RELOAD_TRANSFER */
3723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 283              		.loc 1 3724 0
 284 002c 7047     		bx	lr
 285              		.cfi_endproc
 286              	.LFE189:
 288              		.section	.text.SPI_AbortTransfer,"ax",%progbits
 289              		.align	1
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv5-d16
 295              	SPI_AbortTransfer:
 296              	.LFB190:
3725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Abort Transfer and clear flags.
3728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval None
3731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_AbortTransfer(SPI_HandleTypeDef *hspi)
3733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 297              		.loc 1 3733 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302              	.LVL11:
3734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable SPI peripheral */
3735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 303              		.loc 1 3735 0
 304 0000 0268     		ldr	r2, [r0]
 305 0002 1368     		ldr	r3, [r2]
 306 0004 23F00103 		bic	r3, r3, #1
 307 0008 1360     		str	r3, [r2]
3736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable ITs */
3738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_RXP | SPI_IT_DXP | SPI_IT_UDR | SPI_
 308              		.loc 1 3738 0
 309 000a 0268     		ldr	r2, [r0]
 310 000c 1169     		ldr	r1, [r2, #16]
 311 000e 184B     		ldr	r3, .L14
 312 0010 0B40     		ands	r3, r3, r1
 313 0012 1361     		str	r3, [r2, #16]
3739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                               SPI_IT_FRE | SPI_IT_MODF));
3740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Clear the Status flags in the SR register */
3742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_EOTFLAG(hspi);
 314              		.loc 1 3742 0
 315 0014 0268     		ldr	r2, [r0]
 316 0016 9369     		ldr	r3, [r2, #24]
 317 0018 43F00803 		orr	r3, r3, #8
 318 001c 9361     		str	r3, [r2, #24]
ARM GAS  /tmp/ccJX0uiU.s 			page 72


3743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 319              		.loc 1 3743 0
 320 001e 0268     		ldr	r2, [r0]
 321 0020 9369     		ldr	r3, [r2, #24]
 322 0022 43F01003 		orr	r3, r3, #16
 323 0026 9361     		str	r3, [r2, #24]
3744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable Tx DMA Request */
3746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 324              		.loc 1 3746 0
 325 0028 0268     		ldr	r2, [r0]
 326 002a 9368     		ldr	r3, [r2, #8]
 327 002c 23F44043 		bic	r3, r3, #49152
 328 0030 9360     		str	r3, [r2, #8]
3747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 329              		.loc 1 3749 0
 330 0032 0268     		ldr	r2, [r0]
 331 0034 9369     		ldr	r3, [r2, #24]
 332 0036 43F04003 		orr	r3, r3, #64
 333 003a 9361     		str	r3, [r2, #24]
3750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_UDRFLAG(hspi);
 334              		.loc 1 3750 0
 335 003c 0268     		ldr	r2, [r0]
 336 003e 9369     		ldr	r3, [r2, #24]
 337 0040 43F02003 		orr	r3, r3, #32
 338 0044 9361     		str	r3, [r2, #24]
3751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 339              		.loc 1 3751 0
 340 0046 0268     		ldr	r2, [r0]
 341 0048 9369     		ldr	r3, [r2, #24]
 342 004a 43F48073 		orr	r3, r3, #256
 343 004e 9361     		str	r3, [r2, #24]
3752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_MODFFLAG(hspi);
 344              		.loc 1 3752 0
 345 0050 0268     		ldr	r2, [r0]
 346 0052 9369     		ldr	r3, [r2, #24]
 347 0054 43F40073 		orr	r3, r3, #512
 348 0058 9361     		str	r3, [r2, #24]
3753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 349              		.loc 1 3753 0
 350 005a 0268     		ldr	r2, [r0]
 351 005c 9369     		ldr	r3, [r2, #24]
 352 005e 43F40063 		orr	r3, r3, #2048
 353 0062 9361     		str	r3, [r2, #24]
3754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t)0UL;
 354              		.loc 1 3759 0
 355 0064 0023     		movs	r3, #0
 356 0066 A0F86230 		strh	r3, [r0, #98]	@ movhi
3760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t)0UL;
 357              		.loc 1 3760 0
ARM GAS  /tmp/ccJX0uiU.s 			page 73


 358 006a A0F86A30 		strh	r3, [r0, #106]	@ movhi
3761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 359              		.loc 1 3761 0
 360 006e 7047     		bx	lr
 361              	.L15:
 362              		.align	2
 363              	.L14:
 364 0070 90FCFFFF 		.word	-880
 365              		.cfi_endproc
 366              	.LFE190:
 368              		.section	.text.SPI_CloseTransfer,"ax",%progbits
 369              		.align	1
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 373              		.fpu fpv5-d16
 375              	SPI_CloseTransfer:
 376              	.LFB191:
3762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Close Transfer and clear flags.
3766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL_ERROR: if any error detected
3769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *         HAL_OK: if nothing detected
3770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static void SPI_CloseTransfer(SPI_HandleTypeDef *hspi)
3772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 377              		.loc 1 3772 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 382              	.LVL12:
 383 0000 10B4     		push	{r4}
 384              	.LCFI0:
 385              		.cfi_def_cfa_offset 4
 386              		.cfi_offset 4, -4
3773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t itflag = hspi->Instance->SR;
 387              		.loc 1 3773 0
 388 0002 0268     		ldr	r2, [r0]
 389 0004 5369     		ldr	r3, [r2, #20]
 390              	.LVL13:
3774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_EOTFLAG(hspi);
 391              		.loc 1 3775 0
 392 0006 9169     		ldr	r1, [r2, #24]
 393 0008 41F00801 		orr	r1, r1, #8
 394 000c 9161     		str	r1, [r2, #24]
3776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 395              		.loc 1 3776 0
 396 000e 0168     		ldr	r1, [r0]
 397 0010 8A69     		ldr	r2, [r1, #24]
 398 0012 42F01002 		orr	r2, r2, #16
 399 0016 8A61     		str	r2, [r1, #24]
3777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 74


3778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable SPI peripheral */
3779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 400              		.loc 1 3779 0
 401 0018 0168     		ldr	r1, [r0]
 402 001a 0A68     		ldr	r2, [r1]
 403 001c 22F00102 		bic	r2, r2, #1
 404 0020 0A60     		str	r2, [r1]
3780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable ITs */
3782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_RXP | SPI_IT_DXP | SPI_IT_UDR | SPI_
 405              		.loc 1 3782 0
 406 0022 0168     		ldr	r1, [r0]
 407 0024 0C69     		ldr	r4, [r1, #16]
 408 0026 294A     		ldr	r2, .L22
 409 0028 2240     		ands	r2, r2, r4
 410 002a 0A61     		str	r2, [r1, #16]
3783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                               SPI_IT_FRE | SPI_IT_MODF));
3784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Disable Tx DMA Request */
3786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 411              		.loc 1 3786 0
 412 002c 0168     		ldr	r1, [r0]
 413 002e 8A68     		ldr	r2, [r1, #8]
 414 0030 22F44042 		bic	r2, r2, #49152
 415 0034 8A60     		str	r2, [r1, #8]
3787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Report UnderRun error for non RX Only communication */
3789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 416              		.loc 1 3789 0
 417 0036 90F88120 		ldrb	r2, [r0, #129]	@ zero_extendqisi2
 418 003a D2B2     		uxtb	r2, r2
 419 003c 042A     		cmp	r2, #4
 420 003e 0DD0     		beq	.L17
3790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((itflag & SPI_FLAG_UDR) != 0UL)
 421              		.loc 1 3791 0
 422 0040 13F0200F 		tst	r3, #32
 423 0044 0AD0     		beq	.L17
3792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 424              		.loc 1 3793 0
 425 0046 D0F88420 		ldr	r2, [r0, #132]
 426 004a 42F08002 		orr	r2, r2, #128
 427 004e C0F88420 		str	r2, [r0, #132]
3794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_UDRFLAG(hspi);
 428              		.loc 1 3794 0
 429 0052 0168     		ldr	r1, [r0]
 430 0054 8A69     		ldr	r2, [r1, #24]
 431 0056 42F02002 		orr	r2, r2, #32
 432 005a 8A61     		str	r2, [r1, #24]
 433              	.L17:
3795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Report OverRun error for non TX Only communication */
3799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 434              		.loc 1 3799 0
ARM GAS  /tmp/ccJX0uiU.s 			page 75


 435 005c 90F88120 		ldrb	r2, [r0, #129]	@ zero_extendqisi2
 436 0060 D2B2     		uxtb	r2, r2
 437 0062 032A     		cmp	r2, #3
 438 0064 0DD0     		beq	.L18
3800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((itflag & SPI_FLAG_OVR) != 0UL)
 439              		.loc 1 3801 0
 440 0066 13F0400F 		tst	r3, #64
 441 006a 0AD0     		beq	.L18
3802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 442              		.loc 1 3803 0
 443 006c D0F88420 		ldr	r2, [r0, #132]
 444 0070 42F00402 		orr	r2, r2, #4
 445 0074 C0F88420 		str	r2, [r0, #132]
3804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
 446              		.loc 1 3804 0
 447 0078 0168     		ldr	r1, [r0]
 448 007a 8A69     		ldr	r2, [r1, #24]
 449 007c 42F04002 		orr	r2, r2, #64
 450 0080 8A61     		str	r2, [r1, #24]
 451              	.L18:
3805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_SPI_CRC != 0UL)
3808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check if CRC error occurred */
3809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if ((itflag & SPI_FLAG_CRCERR) != 0UL)
3812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
3813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
3816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI Mode Fault error interrupt occurred -------------------------------*/
3821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((itflag & SPI_FLAG_MODF) != 0UL)
 452              		.loc 1 3821 0
 453 0082 13F4007F 		tst	r3, #512
 454 0086 0AD0     		beq	.L19
3822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 455              		.loc 1 3823 0
 456 0088 D0F88420 		ldr	r2, [r0, #132]
 457 008c 42F00102 		orr	r2, r2, #1
 458 0090 C0F88420 		str	r2, [r0, #132]
3824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_MODFFLAG(hspi);
 459              		.loc 1 3824 0
 460 0094 0168     		ldr	r1, [r0]
 461 0096 8A69     		ldr	r2, [r1, #24]
 462 0098 42F40072 		orr	r2, r2, #512
 463 009c 8A61     		str	r2, [r1, #24]
 464              	.L19:
3825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 76


3827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* SPI Frame error interrupt occurred ------------------------------------*/
3828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if ((itflag & SPI_FLAG_FRE) != 0UL)
 465              		.loc 1 3828 0
 466 009e 13F4807F 		tst	r3, #256
 467 00a2 0AD0     		beq	.L20
3829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 468              		.loc 1 3830 0
 469 00a4 D0F88430 		ldr	r3, [r0, #132]
 470              	.LVL14:
 471 00a8 43F00803 		orr	r3, r3, #8
 472 00ac C0F88430 		str	r3, [r0, #132]
3831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
 473              		.loc 1 3831 0
 474 00b0 0268     		ldr	r2, [r0]
 475 00b2 9369     		ldr	r3, [r2, #24]
 476 00b4 43F48073 		orr	r3, r3, #256
 477 00b8 9361     		str	r3, [r2, #24]
 478              	.L20:
3832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t)0UL;
 479              		.loc 1 3834 0
 480 00ba 0023     		movs	r3, #0
 481 00bc A0F86230 		strh	r3, [r0, #98]	@ movhi
3835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t)0UL;
 482              		.loc 1 3835 0
 483 00c0 A0F86A30 		strh	r3, [r0, #106]	@ movhi
3836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 484              		.loc 1 3836 0
 485 00c4 5DF8044B 		ldr	r4, [sp], #4
 486              	.LCFI1:
 487              		.cfi_restore 4
 488              		.cfi_def_cfa_offset 0
 489 00c8 7047     		bx	lr
 490              	.L23:
 491 00ca 00BF     		.align	2
 492              	.L22:
 493 00cc 90FCFFFF 		.word	-880
 494              		.cfi_endproc
 495              	.LFE191:
 497              		.section	.text.SPI_GetPacketSize,"ax",%progbits
 498              		.align	1
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
 502              		.fpu fpv5-d16
 504              	SPI_GetPacketSize:
 505              	.LFB193:
3837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief Handle SPI Communication Timeout.
3840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param hspi: pointer to a SPI_HandleTypeDef structure that contains
3841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *              the configuration information for SPI module.
3842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param Flag: SPI flag to check
3843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param Status: flag state to check
3844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param Timeout: Timeout duration
ARM GAS  /tmp/ccJX0uiU.s 			page 77


3845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param Tickstart: Tick start value
3846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval HAL status
3847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagSta
3849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                     uint32_t Timeout, uint32_t Tickstart)
3850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
3851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Wait until flag is set */
3852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
3853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
3854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     /* Check for the Timeout */
3855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if ((((HAL_GetTick() - Tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U
3856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
3857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       return HAL_TIMEOUT;
3858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
3859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
3860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return HAL_OK;
3861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
3862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** /**
3864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @brief  Compute configured packet size from fifo perspective.
3865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
3866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   *               the configuration information for SPI module.
3867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   * @retval Packet size occupied in the fifo
3868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   */
3869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** static uint32_t SPI_GetPacketSize(SPI_HandleTypeDef *hspi)
3870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** {
 506              		.loc 1 3870 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 511              	.LVL15:
3871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
 512              		.loc 1 3871 0
 513 0000 C36B     		ldr	r3, [r0, #60]
 514 0002 5B09     		lsrs	r3, r3, #5
 515              	.LVL16:
3872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t data_size       = (hspi->Init.DataSize      >> SPI_CFG1_DSIZE_Pos) + 1UL;
 516              		.loc 1 3872 0
 517 0004 C068     		ldr	r0, [r0, #12]
 518              	.LVL17:
3873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Convert data size to Byte */
3875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   data_size = (data_size + 7UL) / 8UL;
 519              		.loc 1 3875 0
 520 0006 0830     		adds	r0, r0, #8
 521              	.LVL18:
 522 0008 C008     		lsrs	r0, r0, #3
 523              	.LVL19:
3876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
3877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return data_size * fifo_threashold;
3878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 524              		.loc 1 3878 0
 525 000a 03FB0000 		mla	r0, r3, r0, r0
 526              	.LVL20:
 527 000e 7047     		bx	lr
 528              		.cfi_endproc
ARM GAS  /tmp/ccJX0uiU.s 			page 78


 529              	.LFE193:
 531              		.section	.text.SPI_WaitOnFlagUntilTimeout,"ax",%progbits
 532              		.align	1
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu fpv5-d16
 538              	SPI_WaitOnFlagUntilTimeout:
 539              	.LFB192:
3850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Wait until flag is set */
 540              		.loc 1 3850 0
 541              		.cfi_startproc
 542              		@ args = 4, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544              	.LVL21:
 545 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 546              	.LCFI2:
 547              		.cfi_def_cfa_offset 24
 548              		.cfi_offset 4, -24
 549              		.cfi_offset 5, -20
 550              		.cfi_offset 6, -16
 551              		.cfi_offset 7, -12
 552              		.cfi_offset 8, -8
 553              		.cfi_offset 14, -4
 554 0004 0746     		mov	r7, r0
 555 0006 0E46     		mov	r6, r1
 556 0008 1546     		mov	r5, r2
 557 000a 1C46     		mov	r4, r3
 558 000c DDF81880 		ldr	r8, [sp, #24]
3852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 559              		.loc 1 3852 0
 560 0010 00E0     		b	.L26
 561              	.LVL22:
 562              	.L27:
3855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 563              		.loc 1 3855 0 discriminator 3
 564 0012 B4B1     		cbz	r4, .L31
 565              	.L26:
3852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 566              		.loc 1 3852 0
 567 0014 3B68     		ldr	r3, [r7]
 568 0016 5B69     		ldr	r3, [r3, #20]
 569 0018 36EA0303 		bics	r3, r6, r3
 570 001c 0CBF     		ite	eq
 571 001e 0123     		moveq	r3, #1
 572 0020 0023     		movne	r3, #0
 573 0022 AB42     		cmp	r3, r5
 574 0024 0AD1     		bne	.L33
3855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 575              		.loc 1 3855 0
 576 0026 FFF7FEFF 		bl	HAL_GetTick
 577              	.LVL23:
 578 002a A0EB0800 		sub	r0, r0, r8
 579 002e A042     		cmp	r0, r4
 580 0030 EFD3     		bcc	.L27
3855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 581              		.loc 1 3855 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccJX0uiU.s 			page 79


 582 0032 B4F1FF3F 		cmp	r4, #-1
 583 0036 ECD0     		beq	.L27
3857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 584              		.loc 1 3857 0 is_stmt 1
 585 0038 0320     		movs	r0, #3
 586 003a 00E0     		b	.L28
 587              	.L33:
3860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 588              		.loc 1 3860 0
 589 003c 0020     		movs	r0, #0
 590              	.L28:
3861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 591              		.loc 1 3861 0
 592 003e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 593              	.LVL24:
 594              	.L31:
3857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 595              		.loc 1 3857 0
 596 0042 0320     		movs	r0, #3
 597 0044 FBE7     		b	.L28
 598              		.cfi_endproc
 599              	.LFE192:
 601              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 602              		.align	1
 603              		.weak	HAL_SPI_MspInit
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 607              		.fpu fpv5-d16
 609              	HAL_SPI_MspInit:
 610              	.LFB146:
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 611              		.loc 1 524 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 616              	.LVL25:
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 617              		.loc 1 531 0
 618 0000 7047     		bx	lr
 619              		.cfi_endproc
 620              	.LFE146:
 622              		.section	.text.HAL_SPI_Init,"ax",%progbits
 623              		.align	1
 624              		.global	HAL_SPI_Init
 625              		.syntax unified
 626              		.thumb
 627              		.thumb_func
 628              		.fpu fpv5-d16
 630              	HAL_SPI_Init:
 631              	.LFB144:
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t crc_length;
 632              		.loc 1 242 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccJX0uiU.s 			page 80


 636              	.LVL26:
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 637              		.loc 1 247 0
 638 0000 0028     		cmp	r0, #0
 639 0002 00F0B780 		beq	.L49
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t crc_length;
 640              		.loc 1 242 0
 641 0006 70B5     		push	{r4, r5, r6, lr}
 642              	.LCFI3:
 643              		.cfi_def_cfa_offset 16
 644              		.cfi_offset 4, -16
 645              		.cfi_offset 5, -12
 646              		.cfi_offset 6, -8
 647              		.cfi_offset 14, -4
 648 0008 0446     		mov	r4, r0
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 649              		.loc 1 278 0
 650 000a 0023     		movs	r3, #0
 651 000c 8362     		str	r3, [r0, #40]
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 652              		.loc 1 282 0
 653 000e 0568     		ldr	r5, [r0]
 654 0010 5C4B     		ldr	r3, .L60
 655 0012 5D4E     		ldr	r6, .L60+4
 656 0014 9D42     		cmp	r5, r3
 657 0016 18BF     		it	ne
 658 0018 B542     		cmpne	r5, r6
 659 001a 14BF     		ite	ne
 660 001c 0126     		movne	r6, #1
 661 001e 0026     		moveq	r6, #0
 662 0020 07D0     		beq	.L37
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 663              		.loc 1 282 0 is_stmt 0 discriminator 1
 664 0022 A3F57443 		sub	r3, r3, #62464
 665 0026 9D42     		cmp	r5, r3
 666 0028 03D0     		beq	.L37
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 667              		.loc 1 282 0 discriminator 2
 668 002a C368     		ldr	r3, [r0, #12]
 669 002c 0F2B     		cmp	r3, #15
 670 002e 00F2A380 		bhi	.L50
 671              	.L37:
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 672              		.loc 1 288 0 is_stmt 1
 673 0032 2046     		mov	r0, r4
 674              	.LVL27:
 675 0034 FFF7FEFF 		bl	SPI_GetPacketSize
 676              	.LVL28:
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 677              		.loc 1 289 0
 678 0038 2EB1     		cbz	r6, .L38
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 679              		.loc 1 289 0 is_stmt 0 discriminator 1
 680 003a 544B     		ldr	r3, .L60+8
 681 003c 9D42     		cmp	r5, r3
 682 003e 02D0     		beq	.L38
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
ARM GAS  /tmp/ccJX0uiU.s 			page 81


 683              		.loc 1 289 0 discriminator 3
 684 0040 0828     		cmp	r0, #8
 685 0042 00F29B80 		bhi	.L51
 686              	.L38:
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 687              		.loc 1 289 0 discriminator 5
 688 0046 4F4A     		ldr	r2, .L60
 689 0048 4F4B     		ldr	r3, .L60+4
 690 004a 9D42     		cmp	r5, r3
 691 004c 18BF     		it	ne
 692 004e 9542     		cmpne	r5, r2
 693 0050 03D0     		beq	.L39
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 694              		.loc 1 290 0 is_stmt 1
 695 0052 03F58063 		add	r3, r3, #1024
 696 0056 9D42     		cmp	r5, r3
 697 0058 02D1     		bne	.L40
 698              	.L39:
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 699              		.loc 1 290 0 is_stmt 0 discriminator 1
 700 005a 1028     		cmp	r0, #16
 701 005c 00F29080 		bhi	.L52
 702              	.L40:
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 703              		.loc 1 326 0 is_stmt 1
 704 0060 94F88130 		ldrb	r3, [r4, #129]	@ zero_extendqisi2
 705 0064 F3B1     		cbz	r3, .L57
 706              	.LVL29:
 707              	.L41:
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 708              		.loc 1 356 0
 709 0066 0223     		movs	r3, #2
 710 0068 84F88130 		strb	r3, [r4, #129]
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 711              		.loc 1 359 0
 712 006c 2268     		ldr	r2, [r4]
 713 006e 1368     		ldr	r3, [r2]
 714 0070 23F00103 		bic	r3, r3, #1
 715 0074 1360     		str	r3, [r2]
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 716              		.loc 1 363 0
 717 0076 2168     		ldr	r1, [r4]
 718 0078 8A68     		ldr	r2, [r1, #8]
 719 007a 02F4F812 		and	r2, r2, #2031616
 720              	.LVL30:
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                             (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 721              		.loc 1 371 0
 722 007e A369     		ldr	r3, [r4, #24]
 723 0080 B3F1806F 		cmp	r3, #67108864
 724 0084 14D0     		beq	.L58
 725              	.L42:
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 726              		.loc 1 380 0
 727 0086 6368     		ldr	r3, [r4, #4]
 728 0088 13F4800F 		tst	r3, #4194304
 729 008c 23D0     		beq	.L45
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccJX0uiU.s 			page 82


 730              		.loc 1 380 0 is_stmt 0 discriminator 1
 731 008e E368     		ldr	r3, [r4, #12]
 732 0090 062B     		cmp	r3, #6
 733 0092 20D9     		bls	.L45
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 734              		.loc 1 382 0 is_stmt 1
 735 0094 2168     		ldr	r1, [r4]
 736 0096 0B68     		ldr	r3, [r1]
 737 0098 23F48073 		bic	r3, r3, #256
 738 009c 206D     		ldr	r0, [r4, #80]
 739 009e 0343     		orrs	r3, r3, r0
 740 00a0 0B60     		str	r3, [r1]
 741 00a2 1DE0     		b	.L46
 742              	.LVL31:
 743              	.L57:
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 744              		.loc 1 329 0
 745 00a4 84F88030 		strb	r3, [r4, #128]
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 746              		.loc 1 352 0
 747 00a8 2046     		mov	r0, r4
 748              	.LVL32:
 749 00aa FFF7FEFF 		bl	HAL_SPI_MspInit
 750              	.LVL33:
 751 00ae DAE7     		b	.L41
 752              	.LVL34:
 753              	.L58:
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                             (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 754              		.loc 1 371 0 discriminator 1
 755 00b0 6368     		ldr	r3, [r4, #4]
 756 00b2 B3F5800F 		cmp	r3, #4194304
 757 00b6 06D0     		beq	.L59
 758              	.L43:
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                            ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 759              		.loc 1 372 0
 760 00b8 002B     		cmp	r3, #0
 761 00ba E4D1     		bne	.L42
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 762              		.loc 1 374 0
 763 00bc A36B     		ldr	r3, [r4, #56]
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                             (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_HIGH))))
 764              		.loc 1 373 0
 765 00be B3F1805F 		cmp	r3, #268435456
 766 00c2 E0D1     		bne	.L42
 767 00c4 02E0     		b	.L44
 768              	.L59:
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                            ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 769              		.loc 1 372 0 discriminator 2
 770 00c6 A06B     		ldr	r0, [r4, #56]
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                             (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 771              		.loc 1 371 0 discriminator 2
 772 00c8 0028     		cmp	r0, #0
 773 00ca F5D1     		bne	.L43
 774              	.L44:
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 775              		.loc 1 376 0
 776 00cc 0B68     		ldr	r3, [r1]
ARM GAS  /tmp/ccJX0uiU.s 			page 83


 777 00ce 43F48053 		orr	r3, r3, #4096
 778 00d2 0B60     		str	r3, [r1]
 779 00d4 D7E7     		b	.L42
 780              	.L45:
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 781              		.loc 1 386 0
 782 00d6 2168     		ldr	r1, [r4]
 783 00d8 0B68     		ldr	r3, [r1]
 784 00da 23F48073 		bic	r3, r3, #256
 785 00de 0B60     		str	r3, [r1]
 786              	.L46:
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.FifoThreshold     | hspi->Init.DataSize));
 787              		.loc 1 390 0
 788 00e0 E369     		ldr	r3, [r4, #28]
 789 00e2 A16A     		ldr	r1, [r4, #40]
 790 00e4 0B43     		orrs	r3, r3, r1
 791 00e6 1343     		orrs	r3, r3, r2
 792 00e8 E26B     		ldr	r2, [r4, #60]
 793              	.LVL35:
 794 00ea 1343     		orrs	r3, r3, r2
 795 00ec E168     		ldr	r1, [r4, #12]
 796 00ee 2268     		ldr	r2, [r4]
 797 00f0 0B43     		orrs	r3, r3, r1
 798 00f2 9360     		str	r3, [r2, #8]
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                    hspi->Init.NSSPolarity             | hspi->Init.NSS       |
 799              		.loc 1 394 0
 800 00f4 636B     		ldr	r3, [r4, #52]
 801 00f6 626A     		ldr	r2, [r4, #36]
 802 00f8 1343     		orrs	r3, r3, r2
 803 00fa A26B     		ldr	r2, [r4, #56]
 804 00fc 1343     		orrs	r3, r3, r2
 805 00fe A269     		ldr	r2, [r4, #24]
 806 0100 1343     		orrs	r3, r3, r2
 807 0102 2269     		ldr	r2, [r4, #16]
 808 0104 1343     		orrs	r3, r3, r2
 809 0106 6269     		ldr	r2, [r4, #20]
 810 0108 1343     		orrs	r3, r3, r2
 811 010a 226A     		ldr	r2, [r4, #32]
 812 010c 1343     		orrs	r3, r3, r2
 813 010e 6268     		ldr	r2, [r4, #4]
 814 0110 1343     		orrs	r3, r3, r2
 815 0112 E26C     		ldr	r2, [r4, #76]
 816 0114 1343     		orrs	r3, r3, r2
 817 0116 A268     		ldr	r2, [r4, #8]
 818 0118 1343     		orrs	r3, r3, r2
 819 011a A26C     		ldr	r2, [r4, #72]
 820 011c 1343     		orrs	r3, r3, r2
 821 011e A16D     		ldr	r1, [r4, #88]
 822 0120 2268     		ldr	r2, [r4]
 823 0122 0B43     		orrs	r3, r3, r1
 824 0124 D360     		str	r3, [r2, #12]
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 825              		.loc 1 443 0
 826 0126 6368     		ldr	r3, [r4, #4]
 827 0128 6BB9     		cbnz	r3, .L47
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 828              		.loc 1 450 0
ARM GAS  /tmp/ccJX0uiU.s 			page 84


 829 012a 2268     		ldr	r2, [r4]
 830 012c 9368     		ldr	r3, [r2, #8]
 831 012e 23F4C053 		bic	r3, r3, #6144
 832 0132 43F40063 		orr	r3, r3, #2048
 833 0136 9360     		str	r3, [r2, #8]
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 834              		.loc 1 452 0
 835 0138 2268     		ldr	r2, [r4]
 836 013a 9368     		ldr	r3, [r2, #8]
 837 013c 23F4C063 		bic	r3, r3, #1536
 838 0140 43F48063 		orr	r3, r3, #1024
 839 0144 9360     		str	r3, [r2, #8]
 840              	.L47:
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 841              		.loc 1 457 0
 842 0146 2268     		ldr	r2, [r4]
 843 0148 136D     		ldr	r3, [r2, #80]
 844 014a 23F00103 		bic	r3, r3, #1
 845 014e 1365     		str	r3, [r2, #80]
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 846              		.loc 1 461 0
 847 0150 6368     		ldr	r3, [r4, #4]
 848 0152 13F4800F 		tst	r3, #4194304
 849 0156 06D0     		beq	.L48
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 850              		.loc 1 464 0
 851 0158 2268     		ldr	r2, [r4]
 852 015a D368     		ldr	r3, [r2, #12]
 853 015c 23F00043 		bic	r3, r3, #-2147483648
 854 0160 616D     		ldr	r1, [r4, #84]
 855 0162 0B43     		orrs	r3, r3, r1
 856 0164 D360     		str	r3, [r2, #12]
 857              	.L48:
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 858              		.loc 1 467 0
 859 0166 0020     		movs	r0, #0
 860 0168 C4F88400 		str	r0, [r4, #132]
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 861              		.loc 1 468 0
 862 016c 0123     		movs	r3, #1
 863 016e 84F88130 		strb	r3, [r4, #129]
 864              	.L36:
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 865              		.loc 1 471 0
 866 0172 70BD     		pop	{r4, r5, r6, pc}
 867              	.LVL36:
 868              	.L49:
 869              	.LCFI4:
 870              		.cfi_def_cfa_offset 0
 871              		.cfi_restore 4
 872              		.cfi_restore 5
 873              		.cfi_restore 6
 874              		.cfi_restore 14
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 875              		.loc 1 249 0
 876 0174 0120     		movs	r0, #1
 877              	.LVL37:
ARM GAS  /tmp/ccJX0uiU.s 			page 85


 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 878              		.loc 1 471 0
 879 0176 7047     		bx	lr
 880              	.LVL38:
 881              	.L50:
 882              	.LCFI5:
 883              		.cfi_def_cfa_offset 16
 884              		.cfi_offset 4, -16
 885              		.cfi_offset 5, -12
 886              		.cfi_offset 6, -8
 887              		.cfi_offset 14, -4
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 888              		.loc 1 284 0
 889 0178 0120     		movs	r0, #1
 890              	.LVL39:
 891 017a FAE7     		b	.L36
 892              	.LVL40:
 893              	.L51:
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 894              		.loc 1 292 0
 895 017c 0120     		movs	r0, #1
 896              	.LVL41:
 897 017e F8E7     		b	.L36
 898              	.LVL42:
 899              	.L52:
 900 0180 0120     		movs	r0, #1
 901              	.LVL43:
 902 0182 F6E7     		b	.L36
 903              	.L61:
 904              		.align	2
 905              	.L60:
 906 0184 00300140 		.word	1073819648
 907 0188 00380040 		.word	1073756160
 908 018c 003C0040 		.word	1073757184
 909              		.cfi_endproc
 910              	.LFE144:
 912              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 913              		.align	1
 914              		.weak	HAL_SPI_MspDeInit
 915              		.syntax unified
 916              		.thumb
 917              		.thumb_func
 918              		.fpu fpv5-d16
 920              	HAL_SPI_MspDeInit:
 921              	.LFB147:
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 922              		.loc 1 540 0
 923              		.cfi_startproc
 924              		@ args = 0, pretend = 0, frame = 0
 925              		@ frame_needed = 0, uses_anonymous_args = 0
 926              		@ link register save eliminated.
 927              	.LVL44:
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 928              		.loc 1 547 0
 929 0000 7047     		bx	lr
 930              		.cfi_endproc
 931              	.LFE147:
ARM GAS  /tmp/ccJX0uiU.s 			page 86


 933              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 934              		.align	1
 935              		.global	HAL_SPI_DeInit
 936              		.syntax unified
 937              		.thumb
 938              		.thumb_func
 939              		.fpu fpv5-d16
 941              	HAL_SPI_DeInit:
 942              	.LFB145:
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 943              		.loc 1 480 0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 0
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 947              	.LVL45:
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 948              		.loc 1 482 0
 949 0000 98B1     		cbz	r0, .L65
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 950              		.loc 1 480 0
 951 0002 10B5     		push	{r4, lr}
 952              	.LCFI6:
 953              		.cfi_def_cfa_offset 8
 954              		.cfi_offset 4, -8
 955              		.cfi_offset 14, -4
 956 0004 0446     		mov	r4, r0
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 957              		.loc 1 490 0
 958 0006 0223     		movs	r3, #2
 959 0008 80F88130 		strb	r3, [r0, #129]
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 960              		.loc 1 493 0
 961 000c 0268     		ldr	r2, [r0]
 962 000e 1368     		ldr	r3, [r2]
 963 0010 23F00103 		bic	r3, r3, #1
 964 0014 1360     		str	r3, [r2]
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 965              		.loc 1 505 0
 966 0016 FFF7FEFF 		bl	HAL_SPI_MspDeInit
 967              	.LVL46:
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 968              		.loc 1 508 0
 969 001a 0020     		movs	r0, #0
 970 001c C4F88400 		str	r0, [r4, #132]
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 971              		.loc 1 509 0
 972 0020 84F88100 		strb	r0, [r4, #129]
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 973              		.loc 1 512 0
 974 0024 84F88000 		strb	r0, [r4, #128]
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 975              		.loc 1 515 0
 976 0028 10BD     		pop	{r4, pc}
 977              	.LVL47:
 978              	.L65:
 979              	.LCFI7:
 980              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccJX0uiU.s 			page 87


 981              		.cfi_restore 4
 982              		.cfi_restore 14
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 983              		.loc 1 484 0
 984 002a 0120     		movs	r0, #1
 985              	.LVL48:
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 986              		.loc 1 515 0
 987 002c 7047     		bx	lr
 988              		.cfi_endproc
 989              	.LFE145:
 991              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 992              		.align	1
 993              		.global	HAL_SPI_Transmit
 994              		.syntax unified
 995              		.thumb
 996              		.thumb_func
 997              		.fpu fpv5-d16
 999              	HAL_SPI_Transmit:
 1000              	.LFB148:
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
 1001              		.loc 1 820 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005              	.LVL49:
 1006 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1007              	.LCFI8:
 1008              		.cfi_def_cfa_offset 28
 1009              		.cfi_offset 4, -28
 1010              		.cfi_offset 5, -24
 1011              		.cfi_offset 6, -20
 1012              		.cfi_offset 7, -16
 1013              		.cfi_offset 8, -12
 1014              		.cfi_offset 9, -8
 1015              		.cfi_offset 14, -4
 1016 0004 83B0     		sub	sp, sp, #12
 1017              	.LCFI9:
 1018              		.cfi_def_cfa_offset 40
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
 1019              		.loc 1 822 0
 1020 0006 D0F80090 		ldr	r9, [r0]
 1021              	.LVL50:
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1022              		.loc 1 832 0
 1023 000a 90F88040 		ldrb	r4, [r0, #128]	@ zero_extendqisi2
 1024 000e 012C     		cmp	r4, #1
 1025 0010 00F05581 		beq	.L101
 1026 0014 1D46     		mov	r5, r3
 1027 0016 1746     		mov	r7, r2
 1028 0018 8846     		mov	r8, r1
 1029 001a 0446     		mov	r4, r0
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1030              		.loc 1 832 0 is_stmt 0 discriminator 2
 1031 001c 0123     		movs	r3, #1
 1032              	.LVL51:
 1033 001e 80F88030 		strb	r3, [r0, #128]
ARM GAS  /tmp/ccJX0uiU.s 			page 88


 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1034              		.loc 1 835 0 is_stmt 1 discriminator 2
 1035 0022 FFF7FEFF 		bl	HAL_GetTick
 1036              	.LVL52:
 1037 0026 0646     		mov	r6, r0
 1038              	.LVL53:
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1039              		.loc 1 837 0 discriminator 2
 1040 0028 94F88130 		ldrb	r3, [r4, #129]	@ zero_extendqisi2
 1041 002c DBB2     		uxtb	r3, r3
 1042 002e 012B     		cmp	r3, #1
 1043 0030 3BD1     		bne	.L105
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1044              		.loc 1 844 0
 1045 0032 B7FA87F3 		clz	r3, r7
 1046 0036 5B09     		lsrs	r3, r3, #5
 1047 0038 B8F1000F 		cmp	r8, #0
 1048 003c 08BF     		it	eq
 1049 003e 0123     		moveq	r3, #1
 1050 0040 002B     		cmp	r3, #0
 1051 0042 37D1     		bne	.L106
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1052              		.loc 1 852 0
 1053 0044 0323     		movs	r3, #3
 1054 0046 84F88130 		strb	r3, [r4, #129]
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pData;
 1055              		.loc 1 853 0
 1056 004a 0023     		movs	r3, #0
 1057 004c C4F88430 		str	r3, [r4, #132]
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1058              		.loc 1 854 0
 1059 0050 C4F85C80 		str	r8, [r4, #92]
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1060              		.loc 1 855 0
 1061 0054 A4F86070 		strh	r7, [r4, #96]	@ movhi
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1062              		.loc 1 856 0
 1063 0058 A4F86270 		strh	r7, [r4, #98]	@ movhi
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = (uint16_t) 0UL;
 1064              		.loc 1 859 0
 1065 005c 6366     		str	r3, [r4, #100]
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t) 0UL;
 1066              		.loc 1 860 0
 1067 005e A4F86830 		strh	r3, [r4, #104]	@ movhi
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1068              		.loc 1 861 0
 1069 0062 A4F86A30 		strh	r3, [r4, #106]	@ movhi
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1070              		.loc 1 862 0
 1071 0066 6367     		str	r3, [r4, #116]
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1072              		.loc 1 863 0
 1073 0068 2367     		str	r3, [r4, #112]
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1074              		.loc 1 866 0
 1075 006a A368     		ldr	r3, [r4, #8]
 1076 006c B3F5C02F 		cmp	r3, #393216
ARM GAS  /tmp/ccJX0uiU.s 			page 89


 1077 0070 25D0     		beq	.L107
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1078              		.loc 1 872 0
 1079 0072 2268     		ldr	r2, [r4]
 1080 0074 D368     		ldr	r3, [r2, #12]
 1081 0076 23F4C023 		bic	r3, r3, #393216
 1082 007a 43F40033 		orr	r3, r3, #131072
 1083 007e D360     		str	r3, [r2, #12]
 1084              	.L75:
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1085              		.loc 1 876 0
 1086 0080 2368     		ldr	r3, [r4]
 1087 0082 5968     		ldr	r1, [r3, #4]
 1088 0084 904A     		ldr	r2, .L110
 1089 0086 0A40     		ands	r2, r2, r1
 1090 0088 1743     		orrs	r7, r7, r2
 1091 008a 5F60     		str	r7, [r3, #4]
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1092              		.loc 1 879 0
 1093 008c 2268     		ldr	r2, [r4]
 1094 008e 1368     		ldr	r3, [r2]
 1095 0090 43F00103 		orr	r3, r3, #1
 1096 0094 1360     		str	r3, [r2]
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1097              		.loc 1 881 0
 1098 0096 6368     		ldr	r3, [r4, #4]
 1099 0098 B3F5800F 		cmp	r3, #4194304
 1100 009c 15D0     		beq	.L108
 1101              	.L76:
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1102              		.loc 1 888 0
 1103 009e E368     		ldr	r3, [r4, #12]
 1104 00a0 0F2B     		cmp	r3, #15
 1105 00a2 21D8     		bhi	.L77
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1106              		.loc 1 919 0
 1107 00a4 072B     		cmp	r3, #7
 1108 00a6 55D8     		bhi	.L85
 1109 00a8 B1E0     		b	.L86
 1110              	.L105:
 1111              	.LVL54:
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 1112              		.loc 1 840 0
 1113 00aa 0023     		movs	r3, #0
 1114 00ac 84F88030 		strb	r3, [r4, #128]
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1115              		.loc 1 841 0
 1116 00b0 0220     		movs	r0, #2
 1117              	.LVL55:
 1118 00b2 05E1     		b	.L71
 1119              	.LVL56:
 1120              	.L106:
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 1121              		.loc 1 847 0
 1122 00b4 0023     		movs	r3, #0
 1123 00b6 84F88030 		strb	r3, [r4, #128]
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccJX0uiU.s 			page 90


 1124              		.loc 1 848 0
 1125 00ba 0120     		movs	r0, #1
 1126              	.LVL57:
 1127 00bc 00E1     		b	.L71
 1128              	.LVL58:
 1129              	.L107:
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1130              		.loc 1 868 0
 1131 00be 2268     		ldr	r2, [r4]
 1132 00c0 1368     		ldr	r3, [r2]
 1133 00c2 43F40063 		orr	r3, r3, #2048
 1134 00c6 1360     		str	r3, [r2]
 1135 00c8 DAE7     		b	.L75
 1136              	.L108:
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1137              		.loc 1 884 0
 1138 00ca 2268     		ldr	r2, [r4]
 1139 00cc 1368     		ldr	r3, [r2]
 1140 00ce 43F40073 		orr	r3, r3, #512
 1141 00d2 1360     		str	r3, [r2]
 1142 00d4 E3E7     		b	.L76
 1143              	.LVL59:
 1144              	.L79:
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1145              		.loc 1 903 0
 1146 00d6 FFF7FEFF 		bl	HAL_GetTick
 1147              	.LVL60:
 1148 00da 801B     		subs	r0, r0, r6
 1149 00dc A842     		cmp	r0, r5
 1150 00de 02D3     		bcc	.L81
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1151              		.loc 1 903 0 is_stmt 0 discriminator 1
 1152 00e0 B5F1FF3F 		cmp	r5, #-1
 1153 00e4 18D1     		bne	.L82
 1154              	.L81:
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1155              		.loc 1 903 0 discriminator 3
 1156 00e6 BDB1     		cbz	r5, .L82
 1157              	.L77:
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1158              		.loc 1 891 0 is_stmt 1
 1159 00e8 B4F86220 		ldrh	r2, [r4, #98]
 1160 00ec 92B2     		uxth	r2, r2
 1161 00ee 002A     		cmp	r2, #0
 1162 00f0 00F0C780 		beq	.L84
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1163              		.loc 1 894 0
 1164 00f4 2368     		ldr	r3, [r4]
 1165 00f6 5A69     		ldr	r2, [r3, #20]
 1166 00f8 12F0020F 		tst	r2, #2
 1167 00fc EBD0     		beq	.L79
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint32_t);
 1168              		.loc 1 896 0
 1169 00fe E26D     		ldr	r2, [r4, #92]
 1170 0100 1268     		ldr	r2, [r2]
 1171 0102 1A62     		str	r2, [r3, #32]
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxXferCount--;
ARM GAS  /tmp/ccJX0uiU.s 			page 91


 1172              		.loc 1 897 0
 1173 0104 E36D     		ldr	r3, [r4, #92]
 1174 0106 0433     		adds	r3, r3, #4
 1175 0108 E365     		str	r3, [r4, #92]
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 1176              		.loc 1 898 0
 1177 010a B4F86220 		ldrh	r2, [r4, #98]
 1178 010e 013A     		subs	r2, r2, #1
 1179 0110 92B2     		uxth	r2, r2
 1180 0112 A4F86220 		strh	r2, [r4, #98]	@ movhi
 1181 0116 E7E7     		b	.L77
 1182              	.L82:
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1183              		.loc 1 906 0
 1184 0118 2046     		mov	r0, r4
 1185 011a FFF7FEFF 		bl	SPI_CloseTransfer
 1186              	.LVL61:
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1187              		.loc 1 909 0
 1188 011e 0023     		movs	r3, #0
 1189 0120 84F88030 		strb	r3, [r4, #128]
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 1190              		.loc 1 911 0
 1191 0124 D4F88430 		ldr	r3, [r4, #132]
 1192 0128 43F48073 		orr	r3, r3, #256
 1193 012c C4F88430 		str	r3, [r4, #132]
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_TIMEOUT;
 1194              		.loc 1 912 0
 1195 0130 0123     		movs	r3, #1
 1196 0132 84F88130 		strb	r3, [r4, #129]
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1197              		.loc 1 913 0
 1198 0136 0320     		movs	r0, #3
 1199 0138 C2E0     		b	.L71
 1200              	.L88:
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 1201              		.loc 1 936 0
 1202 013a E36D     		ldr	r3, [r4, #92]
 1203 013c 1B88     		ldrh	r3, [r3]
 1204 013e A9F82030 		strh	r3, [r9, #32]	@ movhi
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
 1205              		.loc 1 940 0
 1206 0142 E36D     		ldr	r3, [r4, #92]
 1207 0144 0233     		adds	r3, r3, #2
 1208 0146 E365     		str	r3, [r4, #92]
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1209              		.loc 1 941 0
 1210 0148 B4F86230 		ldrh	r3, [r4, #98]
 1211 014c 013B     		subs	r3, r3, #1
 1212 014e 9BB2     		uxth	r3, r3
 1213 0150 A4F86230 		strh	r3, [r4, #98]	@ movhi
 1214              	.L85:
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1215              		.loc 1 922 0
 1216 0154 B4F86230 		ldrh	r3, [r4, #98]
 1217 0158 9BB2     		uxth	r3, r3
 1218 015a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccJX0uiU.s 			page 92


 1219 015c 00F09180 		beq	.L84
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1220              		.loc 1 925 0
 1221 0160 2268     		ldr	r2, [r4]
 1222 0162 5369     		ldr	r3, [r2, #20]
 1223 0164 13F0020F 		tst	r3, #2
 1224 0168 14D0     		beq	.L87
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1225              		.loc 1 927 0
 1226 016a B4F86230 		ldrh	r3, [r4, #98]
 1227 016e 9BB2     		uxth	r3, r3
 1228 0170 012B     		cmp	r3, #1
 1229 0172 E2D9     		bls	.L88
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1230              		.loc 1 927 0 is_stmt 0 discriminator 1
 1231 0174 E36B     		ldr	r3, [r4, #60]
 1232 0176 002B     		cmp	r3, #0
 1233 0178 DFD0     		beq	.L88
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
 1234              		.loc 1 929 0 is_stmt 1
 1235 017a E36D     		ldr	r3, [r4, #92]
 1236 017c 1B68     		ldr	r3, [r3]
 1237 017e 1362     		str	r3, [r2, #32]
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
 1238              		.loc 1 930 0
 1239 0180 E36D     		ldr	r3, [r4, #92]
 1240 0182 0433     		adds	r3, r3, #4
 1241 0184 E365     		str	r3, [r4, #92]
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1242              		.loc 1 931 0
 1243 0186 B4F86230 		ldrh	r3, [r4, #98]
 1244 018a 023B     		subs	r3, r3, #2
 1245 018c 9BB2     		uxth	r3, r3
 1246 018e A4F86230 		strh	r3, [r4, #98]	@ movhi
 1247 0192 DFE7     		b	.L85
 1248              	.L87:
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1249              		.loc 1 947 0
 1250 0194 FFF7FEFF 		bl	HAL_GetTick
 1251              	.LVL62:
 1252 0198 801B     		subs	r0, r0, r6
 1253 019a A842     		cmp	r0, r5
 1254 019c 02D3     		bcc	.L90
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1255              		.loc 1 947 0 is_stmt 0 discriminator 1
 1256 019e B5F1FF3F 		cmp	r5, #-1
 1257 01a2 01D1     		bne	.L91
 1258              	.L90:
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1259              		.loc 1 947 0 discriminator 3
 1260 01a4 002D     		cmp	r5, #0
 1261 01a6 D5D1     		bne	.L85
 1262              	.L91:
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1263              		.loc 1 950 0 is_stmt 1
 1264 01a8 2046     		mov	r0, r4
 1265 01aa FFF7FEFF 		bl	SPI_CloseTransfer
ARM GAS  /tmp/ccJX0uiU.s 			page 93


 1266              	.LVL63:
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1267              		.loc 1 953 0
 1268 01ae 0023     		movs	r3, #0
 1269 01b0 84F88030 		strb	r3, [r4, #128]
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 1270              		.loc 1 955 0
 1271 01b4 D4F88430 		ldr	r3, [r4, #132]
 1272 01b8 43F48073 		orr	r3, r3, #256
 1273 01bc C4F88430 		str	r3, [r4, #132]
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_TIMEOUT;
 1274              		.loc 1 956 0
 1275 01c0 0123     		movs	r3, #1
 1276 01c2 84F88130 		strb	r3, [r4, #129]
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1277              		.loc 1 957 0
 1278 01c6 0320     		movs	r0, #3
 1279 01c8 7AE0     		b	.L71
 1280              	.L94:
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1281              		.loc 1 976 0
 1282 01ca B4F86230 		ldrh	r3, [r4, #98]
 1283 01ce 9BB2     		uxth	r3, r3
 1284 01d0 012B     		cmp	r3, #1
 1285 01d2 0FD9     		bls	.L96
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1286              		.loc 1 976 0 is_stmt 0 discriminator 1
 1287 01d4 E36B     		ldr	r3, [r4, #60]
 1288 01d6 6BB1     		cbz	r3, .L96
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 1289              		.loc 1 979 0 is_stmt 1
 1290 01d8 E36D     		ldr	r3, [r4, #92]
 1291 01da 1B88     		ldrh	r3, [r3]
 1292 01dc A9F82030 		strh	r3, [r9, #32]	@ movhi
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)2UL;
 1293              		.loc 1 983 0
 1294 01e0 E36D     		ldr	r3, [r4, #92]
 1295 01e2 0233     		adds	r3, r3, #2
 1296 01e4 E365     		str	r3, [r4, #92]
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1297              		.loc 1 984 0
 1298 01e6 B4F86230 		ldrh	r3, [r4, #98]
 1299 01ea 023B     		subs	r3, r3, #2
 1300 01ec 9BB2     		uxth	r3, r3
 1301 01ee A4F86230 		strh	r3, [r4, #98]	@ movhi
 1302 01f2 0CE0     		b	.L86
 1303              	.L96:
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint8_t);
 1304              		.loc 1 988 0
 1305 01f4 E36D     		ldr	r3, [r4, #92]
 1306 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1307 01f8 82F82030 		strb	r3, [r2, #32]
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount--;
 1308              		.loc 1 989 0
 1309 01fc E36D     		ldr	r3, [r4, #92]
 1310 01fe 0133     		adds	r3, r3, #1
 1311 0200 E365     		str	r3, [r4, #92]
ARM GAS  /tmp/ccJX0uiU.s 			page 94


 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1312              		.loc 1 990 0
 1313 0202 B4F86230 		ldrh	r3, [r4, #98]
 1314 0206 013B     		subs	r3, r3, #1
 1315 0208 9BB2     		uxth	r3, r3
 1316 020a A4F86230 		strh	r3, [r4, #98]	@ movhi
 1317              	.L86:
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1318              		.loc 1 965 0
 1319 020e B4F86230 		ldrh	r3, [r4, #98]
 1320 0212 9BB2     		uxth	r3, r3
 1321 0214 002B     		cmp	r3, #0
 1322 0216 34D0     		beq	.L84
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1323              		.loc 1 968 0
 1324 0218 2268     		ldr	r2, [r4]
 1325 021a 5369     		ldr	r3, [r2, #20]
 1326 021c 13F0020F 		tst	r3, #2
 1327 0220 14D0     		beq	.L93
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1328              		.loc 1 970 0
 1329 0222 B4F86230 		ldrh	r3, [r4, #98]
 1330 0226 9BB2     		uxth	r3, r3
 1331 0228 032B     		cmp	r3, #3
 1332 022a CED9     		bls	.L94
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1333              		.loc 1 970 0 is_stmt 0 discriminator 1
 1334 022c E36B     		ldr	r3, [r4, #60]
 1335 022e 402B     		cmp	r3, #64
 1336 0230 CBD9     		bls	.L94
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint32_t);
 1337              		.loc 1 972 0 is_stmt 1
 1338 0232 E36D     		ldr	r3, [r4, #92]
 1339 0234 1B68     		ldr	r3, [r3]
 1340 0236 1362     		str	r3, [r2, #32]
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->TxXferCount -= (uint16_t)4UL;
 1341              		.loc 1 973 0
 1342 0238 E36D     		ldr	r3, [r4, #92]
 1343 023a 0433     		adds	r3, r3, #4
 1344 023c E365     		str	r3, [r4, #92]
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1345              		.loc 1 974 0
 1346 023e B4F86230 		ldrh	r3, [r4, #98]
 1347 0242 043B     		subs	r3, r3, #4
 1348 0244 9BB2     		uxth	r3, r3
 1349 0246 A4F86230 		strh	r3, [r4, #98]	@ movhi
 1350 024a E0E7     		b	.L86
 1351              	.L93:
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1352              		.loc 1 996 0
 1353 024c FFF7FEFF 		bl	HAL_GetTick
 1354              	.LVL64:
 1355 0250 801B     		subs	r0, r0, r6
 1356 0252 A842     		cmp	r0, r5
 1357 0254 02D3     		bcc	.L97
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1358              		.loc 1 996 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccJX0uiU.s 			page 95


 1359 0256 B5F1FF3F 		cmp	r5, #-1
 1360 025a 01D1     		bne	.L98
 1361              	.L97:
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1362              		.loc 1 996 0 discriminator 3
 1363 025c 002D     		cmp	r5, #0
 1364 025e D6D1     		bne	.L86
 1365              	.L98:
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1366              		.loc 1 999 0 is_stmt 1
 1367 0260 2046     		mov	r0, r4
 1368 0262 FFF7FEFF 		bl	SPI_CloseTransfer
 1369              	.LVL65:
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1370              		.loc 1 1002 0
 1371 0266 0023     		movs	r3, #0
 1372 0268 84F88030 		strb	r3, [r4, #128]
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 1373              		.loc 1 1004 0
 1374 026c D4F88430 		ldr	r3, [r4, #132]
 1375 0270 43F48073 		orr	r3, r3, #256
 1376 0274 C4F88430 		str	r3, [r4, #132]
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_TIMEOUT;
 1377              		.loc 1 1005 0
 1378 0278 0123     		movs	r3, #1
 1379 027a 84F88130 		strb	r3, [r4, #129]
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1380              		.loc 1 1006 0
 1381 027e 0320     		movs	r0, #3
 1382 0280 1EE0     		b	.L71
 1383              	.L84:
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1384              		.loc 1 1013 0
 1385 0282 0096     		str	r6, [sp]
 1386 0284 2B46     		mov	r3, r5
 1387 0286 0022     		movs	r2, #0
 1388 0288 0821     		movs	r1, #8
 1389 028a 2046     		mov	r0, r4
 1390 028c FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 1391              	.LVL66:
 1392 0290 28B1     		cbz	r0, .L100
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1393              		.loc 1 1015 0
 1394 0292 D4F88430 		ldr	r3, [r4, #132]
 1395 0296 43F02003 		orr	r3, r3, #32
 1396 029a C4F88430 		str	r3, [r4, #132]
 1397              	.L100:
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1398              		.loc 1 1019 0
 1399 029e 2046     		mov	r0, r4
 1400 02a0 FFF7FEFF 		bl	SPI_CloseTransfer
 1401              	.LVL67:
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1402              		.loc 1 1022 0
 1403 02a4 0023     		movs	r3, #0
 1404 02a6 84F88030 		strb	r3, [r4, #128]
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 96


 1405              		.loc 1 1024 0
 1406 02aa 0123     		movs	r3, #1
 1407 02ac 84F88130 		strb	r3, [r4, #129]
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1408              		.loc 1 1026 0
 1409 02b0 D4F88430 		ldr	r3, [r4, #132]
 1410 02b4 0BB9     		cbnz	r3, .L109
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 1411              		.loc 1 1030 0
 1412 02b6 0020     		movs	r0, #0
 1413 02b8 02E0     		b	.L71
 1414              	.L109:
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1415              		.loc 1 1028 0
 1416 02ba 0120     		movs	r0, #1
 1417 02bc 00E0     		b	.L71
 1418              	.LVL68:
 1419              	.L101:
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1420              		.loc 1 832 0
 1421 02be 0220     		movs	r0, #2
 1422              	.LVL69:
 1423              	.L71:
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1424              		.loc 1 1031 0
 1425 02c0 03B0     		add	sp, sp, #12
 1426              	.LCFI10:
 1427              		.cfi_def_cfa_offset 28
 1428              		@ sp needed
 1429 02c2 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1430              	.LVL70:
 1431              	.L111:
 1432 02c6 00BF     		.align	2
 1433              	.L110:
 1434 02c8 0000FFFF 		.word	-65536
 1435              		.cfi_endproc
 1436              	.LFE148:
 1438              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 1439              		.align	1
 1440              		.global	HAL_SPI_Receive
 1441              		.syntax unified
 1442              		.thumb
 1443              		.thumb_func
 1444              		.fpu fpv5-d16
 1446              	HAL_SPI_Receive:
 1447              	.LFB149:
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t tickstart;
 1448              		.loc 1 1043 0
 1449              		.cfi_startproc
 1450              		@ args = 0, pretend = 0, frame = 0
 1451              		@ frame_needed = 0, uses_anonymous_args = 0
 1452              	.LVL71:
 1453 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1454              	.LCFI11:
 1455              		.cfi_def_cfa_offset 32
 1456              		.cfi_offset 3, -32
 1457              		.cfi_offset 4, -28
ARM GAS  /tmp/ccJX0uiU.s 			page 97


 1458              		.cfi_offset 5, -24
 1459              		.cfi_offset 6, -20
 1460              		.cfi_offset 7, -16
 1461              		.cfi_offset 8, -12
 1462              		.cfi_offset 9, -8
 1463              		.cfi_offset 14, -4
 1464              	.LVL72:
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
 1465              		.loc 1 1047 0
 1466 0004 D0F80090 		ldr	r9, [r0]
 1467              	.LVL73:
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1468              		.loc 1 1054 0
 1469 0008 90F88040 		ldrb	r4, [r0, #128]	@ zero_extendqisi2
 1470 000c 012C     		cmp	r4, #1
 1471 000e 00F00781 		beq	.L139
 1472 0012 1D46     		mov	r5, r3
 1473 0014 1746     		mov	r7, r2
 1474 0016 8846     		mov	r8, r1
 1475 0018 0446     		mov	r4, r0
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1476              		.loc 1 1054 0 is_stmt 0 discriminator 2
 1477 001a 0123     		movs	r3, #1
 1478              	.LVL74:
 1479 001c 80F88030 		strb	r3, [r0, #128]
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1480              		.loc 1 1057 0 is_stmt 1 discriminator 2
 1481 0020 FFF7FEFF 		bl	HAL_GetTick
 1482              	.LVL75:
 1483 0024 0646     		mov	r6, r0
 1484              	.LVL76:
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1485              		.loc 1 1059 0 discriminator 2
 1486 0026 94F88130 		ldrb	r3, [r4, #129]	@ zero_extendqisi2
 1487 002a DBB2     		uxtb	r3, r3
 1488 002c 012B     		cmp	r3, #1
 1489 002e 3BD1     		bne	.L143
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1490              		.loc 1 1066 0
 1491 0030 B7FA87F3 		clz	r3, r7
 1492 0034 5B09     		lsrs	r3, r3, #5
 1493 0036 B8F1000F 		cmp	r8, #0
 1494 003a 08BF     		it	eq
 1495 003c 0123     		moveq	r3, #1
 1496 003e 002B     		cmp	r3, #0
 1497 0040 37D1     		bne	.L144
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1498              		.loc 1 1074 0
 1499 0042 0423     		movs	r3, #4
 1500 0044 84F88130 		strb	r3, [r4, #129]
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 1501              		.loc 1 1075 0
 1502 0048 0023     		movs	r3, #0
 1503 004a C4F88430 		str	r3, [r4, #132]
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1504              		.loc 1 1076 0
 1505 004e C4F86480 		str	r8, [r4, #100]
ARM GAS  /tmp/ccJX0uiU.s 			page 98


1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1506              		.loc 1 1077 0
 1507 0052 A4F86870 		strh	r7, [r4, #104]	@ movhi
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1508              		.loc 1 1078 0
 1509 0056 A4F86A70 		strh	r7, [r4, #106]	@ movhi
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = (uint16_t) 0UL;
 1510              		.loc 1 1081 0
 1511 005a E365     		str	r3, [r4, #92]
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
 1512              		.loc 1 1082 0
 1513 005c A4F86030 		strh	r3, [r4, #96]	@ movhi
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1514              		.loc 1 1083 0
 1515 0060 A4F86230 		strh	r3, [r4, #98]	@ movhi
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1516              		.loc 1 1084 0
 1517 0064 2367     		str	r3, [r4, #112]
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1518              		.loc 1 1085 0
 1519 0066 6367     		str	r3, [r4, #116]
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1520              		.loc 1 1088 0
 1521 0068 A368     		ldr	r3, [r4, #8]
 1522 006a B3F5C02F 		cmp	r3, #393216
 1523 006e 25D0     		beq	.L145
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1524              		.loc 1 1094 0
 1525 0070 2268     		ldr	r2, [r4]
 1526 0072 D368     		ldr	r3, [r2, #12]
 1527 0074 23F4C023 		bic	r3, r3, #393216
 1528 0078 43F48023 		orr	r3, r3, #262144
 1529 007c D360     		str	r3, [r2, #12]
 1530              	.L117:
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1531              		.loc 1 1098 0
 1532 007e 2368     		ldr	r3, [r4]
 1533 0080 5968     		ldr	r1, [r3, #4]
 1534 0082 694A     		ldr	r2, .L148
 1535 0084 0A40     		ands	r2, r2, r1
 1536 0086 1743     		orrs	r7, r7, r2
 1537 0088 5F60     		str	r7, [r3, #4]
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1538              		.loc 1 1101 0
 1539 008a 2268     		ldr	r2, [r4]
 1540 008c 1368     		ldr	r3, [r2]
 1541 008e 43F00103 		orr	r3, r3, #1
 1542 0092 1360     		str	r3, [r2]
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1543              		.loc 1 1103 0
 1544 0094 6368     		ldr	r3, [r4, #4]
 1545 0096 B3F5800F 		cmp	r3, #4194304
 1546 009a 15D0     		beq	.L146
 1547              	.L118:
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1548              		.loc 1 1110 0
 1549 009c E368     		ldr	r3, [r4, #12]
ARM GAS  /tmp/ccJX0uiU.s 			page 99


 1550 009e 0F2B     		cmp	r3, #15
 1551 00a0 21D8     		bhi	.L119
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1552              		.loc 1 1141 0
 1553 00a2 072B     		cmp	r3, #7
 1554 00a4 52D8     		bhi	.L127
 1555 00a6 83E0     		b	.L128
 1556              	.L143:
 1557              	.LVL77:
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 1558              		.loc 1 1062 0
 1559 00a8 0023     		movs	r3, #0
 1560 00aa 84F88030 		strb	r3, [r4, #128]
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1561              		.loc 1 1063 0
 1562 00ae 0220     		movs	r0, #2
 1563              	.LVL78:
 1564 00b0 B7E0     		b	.L113
 1565              	.LVL79:
 1566              	.L144:
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 1567              		.loc 1 1069 0
 1568 00b2 0023     		movs	r3, #0
 1569 00b4 84F88030 		strb	r3, [r4, #128]
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1570              		.loc 1 1070 0
 1571 00b8 0120     		movs	r0, #1
 1572              	.LVL80:
 1573 00ba B2E0     		b	.L113
 1574              	.LVL81:
 1575              	.L145:
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1576              		.loc 1 1090 0
 1577 00bc 2268     		ldr	r2, [r4]
 1578 00be 1368     		ldr	r3, [r2]
 1579 00c0 23F40063 		bic	r3, r3, #2048
 1580 00c4 1360     		str	r3, [r2]
 1581 00c6 DAE7     		b	.L117
 1582              	.L146:
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1583              		.loc 1 1106 0
 1584 00c8 2268     		ldr	r2, [r4]
 1585 00ca 1368     		ldr	r3, [r2]
 1586 00cc 43F40073 		orr	r3, r3, #512
 1587 00d0 1360     		str	r3, [r2]
 1588 00d2 E3E7     		b	.L118
 1589              	.LVL82:
 1590              	.L121:
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1591              		.loc 1 1125 0
 1592 00d4 FFF7FEFF 		bl	HAL_GetTick
 1593              	.LVL83:
 1594 00d8 801B     		subs	r0, r0, r6
 1595 00da A842     		cmp	r0, r5
 1596 00dc 02D3     		bcc	.L123
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1597              		.loc 1 1125 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccJX0uiU.s 			page 100


 1598 00de B5F1FF3F 		cmp	r5, #-1
 1599 00e2 19D1     		bne	.L124
 1600              	.L123:
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1601              		.loc 1 1125 0 discriminator 3
 1602 00e4 C5B1     		cbz	r5, .L124
 1603              	.L119:
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1604              		.loc 1 1113 0 is_stmt 1
 1605 00e6 B4F86A20 		ldrh	r2, [r4, #106]
 1606 00ea 92B2     		uxth	r2, r2
 1607 00ec 002A     		cmp	r2, #0
 1608 00ee 00F08780 		beq	.L126
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1609              		.loc 1 1116 0
 1610 00f2 2368     		ldr	r3, [r4]
 1611 00f4 5969     		ldr	r1, [r3, #20]
 1612 00f6 48F20802 		movw	r2, #32776
 1613 00fa 1142     		tst	r1, r2
 1614 00fc EAD0     		beq	.L121
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint32_t);
 1615              		.loc 1 1118 0
 1616 00fe 626E     		ldr	r2, [r4, #100]
 1617 0100 1B6B     		ldr	r3, [r3, #48]
 1618 0102 1360     		str	r3, [r2]
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount--;
 1619              		.loc 1 1119 0
 1620 0104 636E     		ldr	r3, [r4, #100]
 1621 0106 0433     		adds	r3, r3, #4
 1622 0108 6366     		str	r3, [r4, #100]
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 1623              		.loc 1 1120 0
 1624 010a B4F86A20 		ldrh	r2, [r4, #106]
 1625 010e 013A     		subs	r2, r2, #1
 1626 0110 92B2     		uxth	r2, r2
 1627 0112 A4F86A20 		strh	r2, [r4, #106]	@ movhi
 1628 0116 E6E7     		b	.L119
 1629              	.L124:
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1630              		.loc 1 1128 0
 1631 0118 2046     		mov	r0, r4
 1632 011a FFF7FEFF 		bl	SPI_CloseTransfer
 1633              	.LVL84:
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1634              		.loc 1 1131 0
 1635 011e 0023     		movs	r3, #0
 1636 0120 84F88030 		strb	r3, [r4, #128]
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 1637              		.loc 1 1133 0
 1638 0124 D4F88430 		ldr	r3, [r4, #132]
 1639 0128 43F48073 		orr	r3, r3, #256
 1640 012c C4F88430 		str	r3, [r4, #132]
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_TIMEOUT;
 1641              		.loc 1 1134 0
 1642 0130 0123     		movs	r3, #1
 1643 0132 84F88130 		strb	r3, [r4, #129]
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
ARM GAS  /tmp/ccJX0uiU.s 			page 101


 1644              		.loc 1 1135 0
 1645 0136 0320     		movs	r0, #3
 1646 0138 73E0     		b	.L113
 1647              	.L129:
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1648              		.loc 1 1160 0
 1649 013a FFF7FEFF 		bl	HAL_GetTick
 1650              	.LVL85:
 1651 013e 801B     		subs	r0, r0, r6
 1652 0140 A842     		cmp	r0, r5
 1653 0142 02D3     		bcc	.L131
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1654              		.loc 1 1160 0 is_stmt 0 discriminator 1
 1655 0144 B5F1FF3F 		cmp	r5, #-1
 1656 0148 18D1     		bne	.L132
 1657              	.L131:
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1658              		.loc 1 1160 0 discriminator 3
 1659 014a BDB1     		cbz	r5, .L132
 1660              	.L127:
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1661              		.loc 1 1144 0 is_stmt 1
 1662 014c B4F86A30 		ldrh	r3, [r4, #106]
 1663 0150 9BB2     		uxth	r3, r3
 1664 0152 002B     		cmp	r3, #0
 1665 0154 54D0     		beq	.L126
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1666              		.loc 1 1147 0
 1667 0156 2368     		ldr	r3, [r4]
 1668 0158 5B69     		ldr	r3, [r3, #20]
 1669 015a 13F0010F 		tst	r3, #1
 1670 015e ECD0     		beq	.L129
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 1671              		.loc 1 1150 0
 1672 0160 636E     		ldr	r3, [r4, #100]
 1673 0162 B9F83020 		ldrh	r2, [r9, #48]
 1674 0166 1A80     		strh	r2, [r3]	@ movhi
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount--;
 1675              		.loc 1 1154 0
 1676 0168 636E     		ldr	r3, [r4, #100]
 1677 016a 0233     		adds	r3, r3, #2
 1678 016c 6366     		str	r3, [r4, #100]
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 1679              		.loc 1 1155 0
 1680 016e B4F86A30 		ldrh	r3, [r4, #106]
 1681 0172 013B     		subs	r3, r3, #1
 1682 0174 9BB2     		uxth	r3, r3
 1683 0176 A4F86A30 		strh	r3, [r4, #106]	@ movhi
 1684 017a E7E7     		b	.L127
 1685              	.L132:
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1686              		.loc 1 1163 0
 1687 017c 2046     		mov	r0, r4
 1688 017e FFF7FEFF 		bl	SPI_CloseTransfer
 1689              	.LVL86:
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1690              		.loc 1 1166 0
ARM GAS  /tmp/ccJX0uiU.s 			page 102


 1691 0182 0023     		movs	r3, #0
 1692 0184 84F88030 		strb	r3, [r4, #128]
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 1693              		.loc 1 1168 0
 1694 0188 D4F88430 		ldr	r3, [r4, #132]
 1695 018c 43F48073 		orr	r3, r3, #256
 1696 0190 C4F88430 		str	r3, [r4, #132]
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_TIMEOUT;
 1697              		.loc 1 1169 0
 1698 0194 0123     		movs	r3, #1
 1699 0196 84F88130 		strb	r3, [r4, #129]
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1700              		.loc 1 1170 0
 1701 019a 0320     		movs	r0, #3
 1702 019c 41E0     		b	.L113
 1703              	.L134:
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1704              		.loc 1 1191 0
 1705 019e FFF7FEFF 		bl	HAL_GetTick
 1706              	.LVL87:
 1707 01a2 801B     		subs	r0, r0, r6
 1708 01a4 A842     		cmp	r0, r5
 1709 01a6 02D3     		bcc	.L136
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1710              		.loc 1 1191 0 is_stmt 0 discriminator 1
 1711 01a8 B5F1FF3F 		cmp	r5, #-1
 1712 01ac 17D1     		bne	.L137
 1713              	.L136:
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 1714              		.loc 1 1191 0 discriminator 3
 1715 01ae B5B1     		cbz	r5, .L137
 1716              	.L128:
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1717              		.loc 1 1179 0 is_stmt 1
 1718 01b0 B4F86A30 		ldrh	r3, [r4, #106]
 1719 01b4 9BB2     		uxth	r3, r3
 1720 01b6 1BB3     		cbz	r3, .L126
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1721              		.loc 1 1182 0
 1722 01b8 2368     		ldr	r3, [r4]
 1723 01ba 5A69     		ldr	r2, [r3, #20]
 1724 01bc 12F0010F 		tst	r2, #1
 1725 01c0 EDD0     		beq	.L134
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 1726              		.loc 1 1184 0
 1727 01c2 626E     		ldr	r2, [r4, #100]
 1728 01c4 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 1729 01c8 1370     		strb	r3, [r2]
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount--;
 1730              		.loc 1 1185 0
 1731 01ca 636E     		ldr	r3, [r4, #100]
 1732 01cc 0133     		adds	r3, r3, #1
 1733 01ce 6366     		str	r3, [r4, #100]
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 1734              		.loc 1 1186 0
 1735 01d0 B4F86A30 		ldrh	r3, [r4, #106]
 1736 01d4 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccJX0uiU.s 			page 103


 1737 01d6 9BB2     		uxth	r3, r3
 1738 01d8 A4F86A30 		strh	r3, [r4, #106]	@ movhi
 1739 01dc E8E7     		b	.L128
 1740              	.L137:
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1741              		.loc 1 1194 0
 1742 01de 2046     		mov	r0, r4
 1743 01e0 FFF7FEFF 		bl	SPI_CloseTransfer
 1744              	.LVL88:
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1745              		.loc 1 1197 0
 1746 01e4 0023     		movs	r3, #0
 1747 01e6 84F88030 		strb	r3, [r4, #128]
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 1748              		.loc 1 1199 0
 1749 01ea D4F88430 		ldr	r3, [r4, #132]
 1750 01ee 43F48073 		orr	r3, r3, #256
 1751 01f2 C4F88430 		str	r3, [r4, #132]
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           return HAL_TIMEOUT;
 1752              		.loc 1 1200 0
 1753 01f6 0123     		movs	r3, #1
 1754 01f8 84F88130 		strb	r3, [r4, #129]
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 1755              		.loc 1 1201 0
 1756 01fc 0320     		movs	r0, #3
 1757 01fe 10E0     		b	.L113
 1758              	.L126:
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1759              		.loc 1 1219 0
 1760 0200 2046     		mov	r0, r4
 1761 0202 FFF7FEFF 		bl	SPI_CloseTransfer
 1762              	.LVL89:
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1763              		.loc 1 1222 0
 1764 0206 0023     		movs	r3, #0
 1765 0208 84F88030 		strb	r3, [r4, #128]
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1766              		.loc 1 1224 0
 1767 020c 0123     		movs	r3, #1
 1768 020e 84F88130 		strb	r3, [r4, #129]
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1769              		.loc 1 1226 0
 1770 0212 D4F88430 		ldr	r3, [r4, #132]
 1771 0216 0BB9     		cbnz	r3, .L147
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 1772              		.loc 1 1230 0
 1773 0218 0020     		movs	r0, #0
 1774 021a 02E0     		b	.L113
 1775              	.L147:
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1776              		.loc 1 1228 0
 1777 021c 0120     		movs	r0, #1
 1778 021e 00E0     		b	.L113
 1779              	.LVL90:
 1780              	.L139:
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1781              		.loc 1 1054 0
ARM GAS  /tmp/ccJX0uiU.s 			page 104


 1782 0220 0220     		movs	r0, #2
 1783              	.LVL91:
 1784              	.L113:
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1785              		.loc 1 1231 0
 1786 0222 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1787              	.LVL92:
 1788              	.L149:
 1789 0226 00BF     		.align	2
 1790              	.L148:
 1791 0228 0000FFFF 		.word	-65536
 1792              		.cfi_endproc
 1793              	.LFE149:
 1795              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 1796              		.align	1
 1797              		.global	HAL_SPI_TransmitReceive
 1798              		.syntax unified
 1799              		.thumb
 1800              		.thumb_func
 1801              		.fpu fpv5-d16
 1803              	HAL_SPI_TransmitReceive:
 1804              	.LFB150:
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1805              		.loc 1 1245 0
 1806              		.cfi_startproc
 1807              		@ args = 4, pretend = 0, frame = 0
 1808              		@ frame_needed = 0, uses_anonymous_args = 0
 1809              	.LVL93:
 1810 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1811              	.LCFI12:
 1812              		.cfi_def_cfa_offset 32
 1813              		.cfi_offset 4, -32
 1814              		.cfi_offset 5, -28
 1815              		.cfi_offset 6, -24
 1816              		.cfi_offset 7, -20
 1817              		.cfi_offset 8, -16
 1818              		.cfi_offset 9, -12
 1819              		.cfi_offset 10, -8
 1820              		.cfi_offset 14, -4
 1821 0004 82B0     		sub	sp, sp, #8
 1822              	.LCFI13:
 1823              		.cfi_def_cfa_offset 40
 1824 0006 1D46     		mov	r5, r3
 1825 0008 0A9E     		ldr	r6, [sp, #40]
 1826              	.LVL94:
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
 1827              		.loc 1 1248 0
 1828 000a D0F800A0 		ldr	r10, [r0]
 1829              	.LVL95:
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1830              		.loc 1 1260 0
 1831 000e 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 1832              	.LVL96:
 1833 0012 012B     		cmp	r3, #1
 1834 0014 00F06C81 		beq	.L177
 1835 0018 0446     		mov	r4, r0
 1836 001a 8846     		mov	r8, r1
ARM GAS  /tmp/ccJX0uiU.s 			page 105


 1837 001c 9146     		mov	r9, r2
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1838              		.loc 1 1260 0 is_stmt 0 discriminator 2
 1839 001e 0123     		movs	r3, #1
 1840 0020 80F88030 		strb	r3, [r0, #128]
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1841              		.loc 1 1263 0 is_stmt 1 discriminator 2
 1842 0024 FFF7FEFF 		bl	HAL_GetTick
 1843              	.LVL97:
 1844 0028 0746     		mov	r7, r0
 1845              	.LVL98:
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1846              		.loc 1 1268 0 discriminator 2
 1847 002a 94F88130 		ldrb	r3, [r4, #129]	@ zero_extendqisi2
 1848 002e DBB2     		uxtb	r3, r3
 1849 0030 012B     		cmp	r3, #1
 1850 0032 3AD1     		bne	.L183
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1851              		.loc 1 1275 0
 1852 0034 B9FA89F3 		clz	r3, r9
 1853 0038 5B09     		lsrs	r3, r3, #5
 1854 003a B8F1000F 		cmp	r8, #0
 1855 003e 08BF     		it	eq
 1856 0040 0123     		moveq	r3, #1
 1857 0042 002B     		cmp	r3, #0
 1858 0044 36D1     		bne	.L153
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1859              		.loc 1 1275 0 is_stmt 0 discriminator 1
 1860 0046 002D     		cmp	r5, #0
 1861 0048 34D0     		beq	.L153
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1862              		.loc 1 1283 0 is_stmt 1
 1863 004a 0523     		movs	r3, #5
 1864 004c 84F88130 		strb	r3, [r4, #129]
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1865              		.loc 1 1284 0
 1866 0050 0023     		movs	r3, #0
 1867 0052 C4F88430 		str	r3, [r4, #132]
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1868              		.loc 1 1285 0
 1869 0056 C4F86490 		str	r9, [r4, #100]
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1870              		.loc 1 1286 0
 1871 005a A4F86A50 		strh	r5, [r4, #106]	@ movhi
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 1872              		.loc 1 1287 0
 1873 005e A4F86850 		strh	r5, [r4, #104]	@ movhi
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1874              		.loc 1 1288 0
 1875 0062 C4F85C80 		str	r8, [r4, #92]
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1876              		.loc 1 1289 0
 1877 0066 A4F86250 		strh	r5, [r4, #98]	@ movhi
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1878              		.loc 1 1290 0
 1879 006a A4F86050 		strh	r5, [r4, #96]	@ movhi
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
ARM GAS  /tmp/ccJX0uiU.s 			page 106


 1880              		.loc 1 1293 0
 1881 006e 2367     		str	r3, [r4, #112]
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1882              		.loc 1 1294 0
 1883 0070 6367     		str	r3, [r4, #116]
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1884              		.loc 1 1297 0
 1885 0072 2268     		ldr	r2, [r4]
 1886 0074 D368     		ldr	r3, [r2, #12]
 1887 0076 23F4C023 		bic	r3, r3, #393216
 1888 007a D360     		str	r3, [r2, #12]
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1889              		.loc 1 1300 0
 1890 007c 2268     		ldr	r2, [r4]
 1891 007e 5168     		ldr	r1, [r2, #4]
 1892 0080 9D4B     		ldr	r3, .L186
 1893 0082 0B40     		ands	r3, r3, r1
 1894 0084 2B43     		orrs	r3, r3, r5
 1895 0086 5360     		str	r3, [r2, #4]
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1896              		.loc 1 1302 0
 1897 0088 2268     		ldr	r2, [r4]
 1898 008a 1368     		ldr	r3, [r2]
 1899 008c 43F00103 		orr	r3, r3, #1
 1900 0090 1360     		str	r3, [r2]
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1901              		.loc 1 1304 0
 1902 0092 6368     		ldr	r3, [r4, #4]
 1903 0094 B3F5800F 		cmp	r3, #4194304
 1904 0098 11D0     		beq	.L184
 1905              	.L155:
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1906              		.loc 1 1311 0
 1907 009a E368     		ldr	r3, [r4, #12]
 1908 009c 0F2B     		cmp	r3, #15
 1909 009e 64D8     		bhi	.L178
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 1910              		.loc 1 1349 0
 1911 00a0 072B     		cmp	r3, #7
 1912 00a2 00F2B580 		bhi	.L179
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 1913              		.loc 1 1266 0
 1914 00a6 A846     		mov	r8, r5
 1915              	.LVL99:
 1916 00a8 BEE0     		b	.L165
 1917              	.LVL100:
 1918              	.L183:
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 1919              		.loc 1 1271 0
 1920 00aa 0023     		movs	r3, #0
 1921 00ac 84F88030 		strb	r3, [r4, #128]
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1922              		.loc 1 1272 0
 1923 00b0 0220     		movs	r0, #2
 1924              	.LVL101:
 1925 00b2 1EE1     		b	.L151
 1926              	.LVL102:
ARM GAS  /tmp/ccJX0uiU.s 			page 107


 1927              	.L153:
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 1928              		.loc 1 1278 0
 1929 00b4 0023     		movs	r3, #0
 1930 00b6 84F88030 		strb	r3, [r4, #128]
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1931              		.loc 1 1279 0
 1932 00ba 0120     		movs	r0, #1
 1933              	.LVL103:
 1934 00bc 19E1     		b	.L151
 1935              	.LVL104:
 1936              	.L184:
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 1937              		.loc 1 1307 0
 1938 00be 2268     		ldr	r2, [r4]
 1939 00c0 1368     		ldr	r3, [r2]
 1940 00c2 43F40073 		orr	r3, r3, #512
 1941 00c6 1360     		str	r3, [r2]
 1942 00c8 E7E7     		b	.L155
 1943              	.LVL105:
 1944              	.L159:
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1945              		.loc 1 1334 0
 1946 00ca FFF7FEFF 		bl	HAL_GetTick
 1947              	.LVL106:
 1948 00ce C01B     		subs	r0, r0, r7
 1949 00d0 B042     		cmp	r0, r6
 1950 00d2 02D3     		bcc	.L160
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1951              		.loc 1 1334 0 is_stmt 0 discriminator 1
 1952 00d4 B6F1FF3F 		cmp	r6, #-1
 1953 00d8 36D1     		bne	.L161
 1954              	.L160:
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1955              		.loc 1 1334 0 discriminator 3
 1956 00da 002E     		cmp	r6, #0
 1957 00dc 34D0     		beq	.L161
 1958              	.LVL107:
 1959              	.L156:
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 1960              		.loc 1 1313 0 is_stmt 1
 1961 00de 45EA0803 		orr	r3, r5, r8
 1962 00e2 9BB2     		uxth	r3, r3
 1963 00e4 002B     		cmp	r3, #0
 1964 00e6 00F0E580 		beq	.L163
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1965              		.loc 1 1316 0
 1966 00ea 2368     		ldr	r3, [r4]
 1967 00ec 5A69     		ldr	r2, [r3, #20]
 1968 00ee 12F0020F 		tst	r2, #2
 1969 00f2 0FD0     		beq	.L158
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1970              		.loc 1 1316 0 is_stmt 0 discriminator 1
 1971 00f4 75B1     		cbz	r5, .L158
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint32_t);
 1972              		.loc 1 1318 0 is_stmt 1
 1973 00f6 E26D     		ldr	r2, [r4, #92]
ARM GAS  /tmp/ccJX0uiU.s 			page 108


 1974 00f8 1268     		ldr	r2, [r2]
 1975 00fa 1A62     		str	r2, [r3, #32]
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxXferCount --;
 1976              		.loc 1 1319 0
 1977 00fc E36D     		ldr	r3, [r4, #92]
 1978 00fe 0433     		adds	r3, r3, #4
 1979 0100 E365     		str	r3, [r4, #92]
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_TxXferCount = hspi->TxXferCount;
 1980              		.loc 1 1320 0
 1981 0102 B4F86230 		ldrh	r3, [r4, #98]
 1982 0106 013B     		subs	r3, r3, #1
 1983 0108 9BB2     		uxth	r3, r3
 1984 010a A4F86230 		strh	r3, [r4, #98]	@ movhi
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 1985              		.loc 1 1321 0
 1986 010e B4F86250 		ldrh	r5, [r4, #98]
 1987              	.LVL108:
 1988 0112 ADB2     		uxth	r5, r5
 1989              	.LVL109:
 1990              	.L158:
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1991              		.loc 1 1325 0
 1992 0114 2368     		ldr	r3, [r4]
 1993 0116 5969     		ldr	r1, [r3, #20]
 1994 0118 48F20802 		movw	r2, #32776
 1995 011c 1142     		tst	r1, r2
 1996 011e D4D0     		beq	.L159
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 1997              		.loc 1 1325 0 is_stmt 0 discriminator 1
 1998 0120 B8F1000F 		cmp	r8, #0
 1999 0124 D1D0     		beq	.L159
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint32_t);
 2000              		.loc 1 1327 0 is_stmt 1
 2001 0126 626E     		ldr	r2, [r4, #100]
 2002 0128 1B6B     		ldr	r3, [r3, #48]
 2003 012a 1360     		str	r3, [r2]
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount --;
 2004              		.loc 1 1328 0
 2005 012c 636E     		ldr	r3, [r4, #100]
 2006 012e 0433     		adds	r3, r3, #4
 2007 0130 6366     		str	r3, [r4, #100]
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_RxXferCount = hspi->RxXferCount;
 2008              		.loc 1 1329 0
 2009 0132 B4F86A30 		ldrh	r3, [r4, #106]
 2010 0136 013B     		subs	r3, r3, #1
 2011 0138 9BB2     		uxth	r3, r3
 2012 013a A4F86A30 		strh	r3, [r4, #106]	@ movhi
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 2013              		.loc 1 1330 0
 2014 013e B4F86A80 		ldrh	r8, [r4, #106]
 2015              	.LVL110:
 2016 0142 1FFA88F8 		uxth	r8, r8
 2017              	.LVL111:
 2018 0146 C0E7     		b	.L159
 2019              	.L161:
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2020              		.loc 1 1337 0
ARM GAS  /tmp/ccJX0uiU.s 			page 109


 2021 0148 2046     		mov	r0, r4
 2022 014a FFF7FEFF 		bl	SPI_CloseTransfer
 2023              	.LVL112:
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2024              		.loc 1 1340 0
 2025 014e 0023     		movs	r3, #0
 2026 0150 84F88030 		strb	r3, [r4, #128]
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 2027              		.loc 1 1342 0
 2028 0154 D4F88430 		ldr	r3, [r4, #132]
 2029 0158 43F48073 		orr	r3, r3, #256
 2030 015c C4F88430 		str	r3, [r4, #132]
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         return HAL_TIMEOUT;
 2031              		.loc 1 1343 0
 2032 0160 0123     		movs	r3, #1
 2033 0162 84F88130 		strb	r3, [r4, #129]
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 2034              		.loc 1 1344 0
 2035 0166 0320     		movs	r0, #3
 2036 0168 C3E0     		b	.L151
 2037              	.LVL113:
 2038              	.L178:
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2039              		.loc 1 1266 0
 2040 016a A846     		mov	r8, r5
 2041              	.LVL114:
 2042 016c B7E7     		b	.L156
 2043              	.LVL115:
 2044              	.L167:
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 2045              		.loc 1 1380 0
 2046 016e FFF7FEFF 		bl	HAL_GetTick
 2047              	.LVL116:
 2048 0172 C01B     		subs	r0, r0, r7
 2049 0174 B042     		cmp	r0, r6
 2050 0176 02D3     		bcc	.L168
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 2051              		.loc 1 1380 0 is_stmt 0 discriminator 1
 2052 0178 B6F1FF3F 		cmp	r6, #-1
 2053 017c 37D1     		bne	.L169
 2054              	.L168:
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 2055              		.loc 1 1380 0 discriminator 3
 2056 017e 002E     		cmp	r6, #0
 2057 0180 35D0     		beq	.L169
 2058              	.LVL117:
 2059              	.L164:
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 2060              		.loc 1 1351 0 is_stmt 1
 2061 0182 45EA0803 		orr	r3, r5, r8
 2062 0186 9BB2     		uxth	r3, r3
 2063 0188 002B     		cmp	r3, #0
 2064 018a 00F09380 		beq	.L163
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 2065              		.loc 1 1354 0
 2066 018e 2368     		ldr	r3, [r4]
 2067 0190 5B69     		ldr	r3, [r3, #20]
ARM GAS  /tmp/ccJX0uiU.s 			page 110


 2068 0192 13F0020F 		tst	r3, #2
 2069 0196 10D0     		beq	.L166
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 2070              		.loc 1 1354 0 is_stmt 0 discriminator 1
 2071 0198 7DB1     		cbz	r5, .L166
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 2072              		.loc 1 1357 0 is_stmt 1
 2073 019a E36D     		ldr	r3, [r4, #92]
 2074 019c 1B88     		ldrh	r3, [r3]
 2075 019e AAF82030 		strh	r3, [r10, #32]	@ movhi
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxXferCount--;
 2076              		.loc 1 1361 0
 2077 01a2 E36D     		ldr	r3, [r4, #92]
 2078 01a4 0233     		adds	r3, r3, #2
 2079 01a6 E365     		str	r3, [r4, #92]
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_TxXferCount = hspi->TxXferCount;
 2080              		.loc 1 1362 0
 2081 01a8 B4F86230 		ldrh	r3, [r4, #98]
 2082 01ac 013B     		subs	r3, r3, #1
 2083 01ae 9BB2     		uxth	r3, r3
 2084 01b0 A4F86230 		strh	r3, [r4, #98]	@ movhi
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 2085              		.loc 1 1363 0
 2086 01b4 B4F86250 		ldrh	r5, [r4, #98]
 2087              	.LVL118:
 2088 01b8 ADB2     		uxth	r5, r5
 2089              	.LVL119:
 2090              	.L166:
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 2091              		.loc 1 1367 0
 2092 01ba 2368     		ldr	r3, [r4]
 2093 01bc 5B69     		ldr	r3, [r3, #20]
 2094 01be 13F0010F 		tst	r3, #1
 2095 01c2 D4D0     		beq	.L167
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 2096              		.loc 1 1367 0 is_stmt 0 discriminator 1
 2097 01c4 B8F1000F 		cmp	r8, #0
 2098 01c8 D1D0     		beq	.L167
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 2099              		.loc 1 1370 0 is_stmt 1
 2100 01ca 636E     		ldr	r3, [r4, #100]
 2101 01cc BAF83020 		ldrh	r2, [r10, #48]
 2102 01d0 1A80     		strh	r2, [r3]	@ movhi
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount--;
 2103              		.loc 1 1374 0
 2104 01d2 636E     		ldr	r3, [r4, #100]
 2105 01d4 0233     		adds	r3, r3, #2
 2106 01d6 6366     		str	r3, [r4, #100]
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_RxXferCount = hspi->RxXferCount;
 2107              		.loc 1 1375 0
 2108 01d8 B4F86A30 		ldrh	r3, [r4, #106]
 2109 01dc 013B     		subs	r3, r3, #1
 2110 01de 9BB2     		uxth	r3, r3
 2111 01e0 A4F86A30 		strh	r3, [r4, #106]	@ movhi
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 2112              		.loc 1 1376 0
 2113 01e4 B4F86A80 		ldrh	r8, [r4, #106]
ARM GAS  /tmp/ccJX0uiU.s 			page 111


 2114              	.LVL120:
 2115 01e8 1FFA88F8 		uxth	r8, r8
 2116              	.LVL121:
 2117 01ec BFE7     		b	.L167
 2118              	.L169:
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2119              		.loc 1 1383 0
 2120 01ee 2046     		mov	r0, r4
 2121 01f0 FFF7FEFF 		bl	SPI_CloseTransfer
 2122              	.LVL122:
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2123              		.loc 1 1386 0
 2124 01f4 0023     		movs	r3, #0
 2125 01f6 84F88030 		strb	r3, [r4, #128]
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 2126              		.loc 1 1388 0
 2127 01fa D4F88430 		ldr	r3, [r4, #132]
 2128 01fe 43F48073 		orr	r3, r3, #256
 2129 0202 C4F88430 		str	r3, [r4, #132]
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         return HAL_TIMEOUT;
 2130              		.loc 1 1389 0
 2131 0206 0123     		movs	r3, #1
 2132 0208 84F88130 		strb	r3, [r4, #129]
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 2133              		.loc 1 1390 0
 2134 020c 0320     		movs	r0, #3
 2135 020e 70E0     		b	.L151
 2136              	.LVL123:
 2137              	.L179:
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2138              		.loc 1 1266 0
 2139 0210 A846     		mov	r8, r5
 2140              	.LVL124:
 2141 0212 B6E7     		b	.L164
 2142              	.LVL125:
 2143              	.L172:
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 2144              		.loc 1 1418 0
 2145 0214 FFF7FEFF 		bl	HAL_GetTick
 2146              	.LVL126:
 2147 0218 C01B     		subs	r0, r0, r7
 2148 021a B042     		cmp	r0, r6
 2149 021c 02D3     		bcc	.L173
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 2150              		.loc 1 1418 0 is_stmt 0 discriminator 1
 2151 021e B6F1FF3F 		cmp	r6, #-1
 2152 0222 36D1     		bne	.L174
 2153              	.L173:
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 2154              		.loc 1 1418 0 discriminator 3
 2155 0224 002E     		cmp	r6, #0
 2156 0226 34D0     		beq	.L174
 2157              	.LVL127:
 2158              	.L165:
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 2159              		.loc 1 1397 0 is_stmt 1
 2160 0228 45EA0803 		orr	r3, r5, r8
ARM GAS  /tmp/ccJX0uiU.s 			page 112


 2161 022c 9BB2     		uxth	r3, r3
 2162 022e 002B     		cmp	r3, #0
 2163 0230 40D0     		beq	.L163
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 2164              		.loc 1 1400 0
 2165 0232 2368     		ldr	r3, [r4]
 2166 0234 5A69     		ldr	r2, [r3, #20]
 2167 0236 12F0020F 		tst	r2, #2
 2168 023a 10D0     		beq	.L171
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 2169              		.loc 1 1400 0 is_stmt 0 discriminator 1
 2170 023c 7DB1     		cbz	r5, .L171
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint8_t);
 2171              		.loc 1 1402 0 is_stmt 1
 2172 023e E26D     		ldr	r2, [r4, #92]
 2173 0240 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2174 0242 83F82020 		strb	r2, [r3, #32]
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->TxXferCount--;
 2175              		.loc 1 1403 0
 2176 0246 E36D     		ldr	r3, [r4, #92]
 2177 0248 0133     		adds	r3, r3, #1
 2178 024a E365     		str	r3, [r4, #92]
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_TxXferCount = hspi->TxXferCount;
 2179              		.loc 1 1404 0
 2180 024c B4F86230 		ldrh	r3, [r4, #98]
 2181 0250 013B     		subs	r3, r3, #1
 2182 0252 9BB2     		uxth	r3, r3
 2183 0254 A4F86230 		strh	r3, [r4, #98]	@ movhi
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 2184              		.loc 1 1405 0
 2185 0258 B4F86250 		ldrh	r5, [r4, #98]
 2186              	.LVL128:
 2187 025c ADB2     		uxth	r5, r5
 2188              	.LVL129:
 2189              	.L171:
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 2190              		.loc 1 1409 0
 2191 025e 2368     		ldr	r3, [r4]
 2192 0260 5A69     		ldr	r2, [r3, #20]
 2193 0262 12F0010F 		tst	r2, #1
 2194 0266 D5D0     		beq	.L172
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 2195              		.loc 1 1409 0 is_stmt 0 discriminator 1
 2196 0268 B8F1000F 		cmp	r8, #0
 2197 026c D2D0     		beq	.L172
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 2198              		.loc 1 1411 0 is_stmt 1
 2199 026e 626E     		ldr	r2, [r4, #100]
 2200 0270 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 2201 0274 1370     		strb	r3, [r2]
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->RxXferCount--;
 2202              		.loc 1 1412 0
 2203 0276 636E     		ldr	r3, [r4, #100]
 2204 0278 0133     		adds	r3, r3, #1
 2205 027a 6366     		str	r3, [r4, #100]
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         initial_RxXferCount = hspi->RxXferCount;
 2206              		.loc 1 1413 0
ARM GAS  /tmp/ccJX0uiU.s 			page 113


 2207 027c B4F86A30 		ldrh	r3, [r4, #106]
 2208 0280 013B     		subs	r3, r3, #1
 2209 0282 9BB2     		uxth	r3, r3
 2210 0284 A4F86A30 		strh	r3, [r4, #106]	@ movhi
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 2211              		.loc 1 1414 0
 2212 0288 B4F86A80 		ldrh	r8, [r4, #106]
 2213              	.LVL130:
 2214 028c 1FFA88F8 		uxth	r8, r8
 2215              	.LVL131:
 2216 0290 C0E7     		b	.L172
 2217              	.L174:
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2218              		.loc 1 1421 0
 2219 0292 2046     		mov	r0, r4
 2220 0294 FFF7FEFF 		bl	SPI_CloseTransfer
 2221              	.LVL132:
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2222              		.loc 1 1424 0
 2223 0298 0023     		movs	r3, #0
 2224 029a 84F88030 		strb	r3, [r4, #128]
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 2225              		.loc 1 1426 0
 2226 029e D4F88430 		ldr	r3, [r4, #132]
 2227 02a2 43F48073 		orr	r3, r3, #256
 2228 02a6 C4F88430 		str	r3, [r4, #132]
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         return HAL_TIMEOUT;
 2229              		.loc 1 1427 0
 2230 02aa 0123     		movs	r3, #1
 2231 02ac 84F88130 		strb	r3, [r4, #129]
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 2232              		.loc 1 1428 0
 2233 02b0 0320     		movs	r0, #3
 2234 02b2 1EE0     		b	.L151
 2235              	.L163:
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2236              		.loc 1 1434 0
 2237 02b4 0097     		str	r7, [sp]
 2238 02b6 3346     		mov	r3, r6
 2239 02b8 0022     		movs	r2, #0
 2240 02ba 0821     		movs	r1, #8
 2241 02bc 2046     		mov	r0, r4
 2242 02be FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 2243              	.LVL133:
 2244 02c2 28B1     		cbz	r0, .L176
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2245              		.loc 1 1436 0
 2246 02c4 D4F88430 		ldr	r3, [r4, #132]
 2247 02c8 43F02003 		orr	r3, r3, #32
 2248 02cc C4F88430 		str	r3, [r4, #132]
 2249              	.L176:
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2250              		.loc 1 1440 0
 2251 02d0 2046     		mov	r0, r4
 2252 02d2 FFF7FEFF 		bl	SPI_CloseTransfer
 2253              	.LVL134:
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 114


 2254              		.loc 1 1443 0
 2255 02d6 0023     		movs	r3, #0
 2256 02d8 84F88030 		strb	r3, [r4, #128]
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2257              		.loc 1 1445 0
 2258 02dc 0123     		movs	r3, #1
 2259 02de 84F88130 		strb	r3, [r4, #129]
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2260              		.loc 1 1447 0
 2261 02e2 D4F88430 		ldr	r3, [r4, #132]
 2262 02e6 0BB9     		cbnz	r3, .L185
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 2263              		.loc 1 1451 0
 2264 02e8 0020     		movs	r0, #0
 2265 02ea 02E0     		b	.L151
 2266              	.L185:
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2267              		.loc 1 1449 0
 2268 02ec 0120     		movs	r0, #1
 2269 02ee 00E0     		b	.L151
 2270              	.LVL135:
 2271              	.L177:
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2272              		.loc 1 1260 0
 2273 02f0 0220     		movs	r0, #2
 2274              	.LVL136:
 2275              	.L151:
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2276              		.loc 1 1452 0
 2277 02f2 02B0     		add	sp, sp, #8
 2278              	.LCFI14:
 2279              		.cfi_def_cfa_offset 32
 2280              		@ sp needed
 2281 02f4 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2282              	.LVL137:
 2283              	.L187:
 2284              		.align	2
 2285              	.L186:
 2286 02f8 0000FFFF 		.word	-65536
 2287              		.cfi_endproc
 2288              	.LFE150:
 2290              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 2291              		.align	1
 2292              		.global	HAL_SPI_Transmit_IT
 2293              		.syntax unified
 2294              		.thumb
 2295              		.thumb_func
 2296              		.fpu fpv5-d16
 2298              	HAL_SPI_Transmit_IT:
 2299              	.LFB151:
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2300              		.loc 1 1463 0
 2301              		.cfi_startproc
 2302              		@ args = 0, pretend = 0, frame = 0
 2303              		@ frame_needed = 0, uses_anonymous_args = 0
 2304              		@ link register save eliminated.
 2305              	.LVL138:
ARM GAS  /tmp/ccJX0uiU.s 			page 115


1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2306              		.loc 1 1470 0
 2307 0000 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 2308 0004 012B     		cmp	r3, #1
 2309 0006 6BD0     		beq	.L198
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2310              		.loc 1 1470 0 is_stmt 0 discriminator 2
 2311 0008 0123     		movs	r3, #1
 2312 000a 80F88030 		strb	r3, [r0, #128]
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2313              		.loc 1 1472 0 is_stmt 1 discriminator 2
 2314 000e B2FA82F3 		clz	r3, r2
 2315 0012 5B09     		lsrs	r3, r3, #5
 2316 0014 0029     		cmp	r1, #0
 2317 0016 08BF     		it	eq
 2318 0018 0123     		moveq	r3, #1
 2319 001a 002B     		cmp	r3, #0
 2320 001c 42D1     		bne	.L202
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2321              		.loc 1 1479 0
 2322 001e 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 2323 0022 DBB2     		uxtb	r3, r3
 2324 0024 012B     		cmp	r3, #1
 2325 0026 42D1     		bne	.L203
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2326              		.loc 1 1463 0
 2327 0028 10B4     		push	{r4}
 2328              	.LCFI15:
 2329              		.cfi_def_cfa_offset 4
 2330              		.cfi_offset 4, -4
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2331              		.loc 1 1487 0
 2332 002a 0323     		movs	r3, #3
 2333 002c 80F88130 		strb	r3, [r0, #129]
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pData;
 2334              		.loc 1 1488 0
 2335 0030 0023     		movs	r3, #0
 2336 0032 C0F88430 		str	r3, [r0, #132]
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2337              		.loc 1 1489 0
 2338 0036 C165     		str	r1, [r0, #92]
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2339              		.loc 1 1490 0
 2340 0038 A0F86020 		strh	r2, [r0, #96]	@ movhi
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2341              		.loc 1 1491 0
 2342 003c A0F86220 		strh	r2, [r0, #98]	@ movhi
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = (uint16_t) 0UL;
 2343              		.loc 1 1494 0
 2344 0040 4366     		str	r3, [r0, #100]
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t) 0UL;
 2345              		.loc 1 1495 0
 2346 0042 A0F86830 		strh	r3, [r0, #104]	@ movhi
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2347              		.loc 1 1496 0
 2348 0046 A0F86A30 		strh	r3, [r0, #106]	@ movhi
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 116


 2349              		.loc 1 1497 0
 2350 004a 0367     		str	r3, [r0, #112]
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2351              		.loc 1 1500 0
 2352 004c C368     		ldr	r3, [r0, #12]
 2353 004e 0F2B     		cmp	r3, #15
 2354 0050 32D9     		bls	.L192
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2355              		.loc 1 1502 0
 2356 0052 244B     		ldr	r3, .L206
 2357 0054 4367     		str	r3, [r0, #116]
 2358              	.L193:
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2359              		.loc 1 1514 0
 2360 0056 8368     		ldr	r3, [r0, #8]
 2361 0058 B3F5C02F 		cmp	r3, #393216
 2362 005c 34D0     		beq	.L204
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2363              		.loc 1 1520 0
 2364 005e 0168     		ldr	r1, [r0]
 2365              	.LVL139:
 2366 0060 CB68     		ldr	r3, [r1, #12]
 2367 0062 23F4C023 		bic	r3, r3, #393216
 2368 0066 43F40033 		orr	r3, r3, #131072
 2369 006a CB60     		str	r3, [r1, #12]
 2370              	.LVL140:
 2371              	.L196:
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2372              		.loc 1 1524 0
 2373 006c 0168     		ldr	r1, [r0]
 2374 006e 4C68     		ldr	r4, [r1, #4]
 2375 0070 1D4B     		ldr	r3, .L206+4
 2376 0072 2340     		ands	r3, r3, r4
 2377 0074 1A43     		orrs	r2, r2, r3
 2378              	.LVL141:
 2379 0076 4A60     		str	r2, [r1, #4]
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2380              		.loc 1 1527 0
 2381 0078 0268     		ldr	r2, [r0]
 2382 007a 1368     		ldr	r3, [r2]
 2383 007c 43F00103 		orr	r3, r3, #1
 2384 0080 1360     		str	r3, [r2]
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2385              		.loc 1 1530 0
 2386 0082 0268     		ldr	r2, [r0]
 2387 0084 1169     		ldr	r1, [r2, #16]
 2388 0086 40F22A73 		movw	r3, #1834
 2389 008a 0B43     		orrs	r3, r3, r1
 2390 008c 1361     		str	r3, [r2, #16]
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2391              		.loc 1 1532 0
 2392 008e 4368     		ldr	r3, [r0, #4]
 2393 0090 B3F5800F 		cmp	r3, #4194304
 2394 0094 1ED0     		beq	.L205
 2395              	.L197:
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 2396              		.loc 1 1538 0
ARM GAS  /tmp/ccJX0uiU.s 			page 117


 2397 0096 0023     		movs	r3, #0
 2398 0098 80F88030 		strb	r3, [r0, #128]
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 2399              		.loc 1 1539 0
 2400 009c 1846     		mov	r0, r3
 2401              	.LVL142:
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2402              		.loc 1 1540 0
 2403 009e 5DF8044B 		ldr	r4, [sp], #4
 2404              	.LCFI16:
 2405              		.cfi_restore 4
 2406              		.cfi_def_cfa_offset 0
 2407 00a2 7047     		bx	lr
 2408              	.LVL143:
 2409              	.L202:
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 2410              		.loc 1 1475 0
 2411 00a4 0023     		movs	r3, #0
 2412 00a6 80F88030 		strb	r3, [r0, #128]
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2413              		.loc 1 1476 0
 2414 00aa 0120     		movs	r0, #1
 2415              	.LVL144:
 2416 00ac 7047     		bx	lr
 2417              	.LVL145:
 2418              	.L203:
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 2419              		.loc 1 1482 0
 2420 00ae 0023     		movs	r3, #0
 2421 00b0 80F88030 		strb	r3, [r0, #128]
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2422              		.loc 1 1483 0
 2423 00b4 0220     		movs	r0, #2
 2424              	.LVL146:
 2425 00b6 7047     		bx	lr
 2426              	.LVL147:
 2427              	.L192:
 2428              	.LCFI17:
 2429              		.cfi_def_cfa_offset 4
 2430              		.cfi_offset 4, -4
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2431              		.loc 1 1504 0
 2432 00b8 072B     		cmp	r3, #7
 2433 00ba 02D9     		bls	.L194
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2434              		.loc 1 1506 0
 2435 00bc 0B4B     		ldr	r3, .L206+8
 2436 00be 4367     		str	r3, [r0, #116]
 2437 00c0 C9E7     		b	.L193
 2438              	.L194:
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2439              		.loc 1 1510 0
 2440 00c2 0B4B     		ldr	r3, .L206+12
 2441 00c4 4367     		str	r3, [r0, #116]
 2442 00c6 C6E7     		b	.L193
 2443              	.L204:
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccJX0uiU.s 			page 118


 2444              		.loc 1 1516 0
 2445 00c8 0168     		ldr	r1, [r0]
 2446              	.LVL148:
 2447 00ca 0B68     		ldr	r3, [r1]
 2448 00cc 43F40063 		orr	r3, r3, #2048
 2449 00d0 0B60     		str	r3, [r1]
 2450              	.LVL149:
 2451 00d2 CBE7     		b	.L196
 2452              	.LVL150:
 2453              	.L205:
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2454              		.loc 1 1535 0
 2455 00d4 0268     		ldr	r2, [r0]
 2456 00d6 1368     		ldr	r3, [r2]
 2457 00d8 43F40073 		orr	r3, r3, #512
 2458 00dc 1360     		str	r3, [r2]
 2459 00de DAE7     		b	.L197
 2460              	.LVL151:
 2461              	.L198:
 2462              	.LCFI18:
 2463              		.cfi_def_cfa_offset 0
 2464              		.cfi_restore 4
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2465              		.loc 1 1470 0
 2466 00e0 0220     		movs	r0, #2
 2467              	.LVL152:
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2468              		.loc 1 1540 0
 2469 00e2 7047     		bx	lr
 2470              	.L207:
 2471              		.align	2
 2472              	.L206:
 2473 00e4 00000000 		.word	SPI_TxISR_32BIT
 2474 00e8 0000FFFF 		.word	-65536
 2475 00ec 00000000 		.word	SPI_TxISR_16BIT
 2476 00f0 00000000 		.word	SPI_TxISR_8BIT
 2477              		.cfi_endproc
 2478              	.LFE151:
 2480              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 2481              		.align	1
 2482              		.global	HAL_SPI_Receive_IT
 2483              		.syntax unified
 2484              		.thumb
 2485              		.thumb_func
 2486              		.fpu fpv5-d16
 2488              	HAL_SPI_Receive_IT:
 2489              	.LFB152:
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2490              		.loc 1 1551 0
 2491              		.cfi_startproc
 2492              		@ args = 0, pretend = 0, frame = 0
 2493              		@ frame_needed = 0, uses_anonymous_args = 0
 2494              		@ link register save eliminated.
 2495              	.LVL153:
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2496              		.loc 1 1558 0
 2497 0000 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
ARM GAS  /tmp/ccJX0uiU.s 			page 119


 2498 0004 012B     		cmp	r3, #1
 2499 0006 6BD0     		beq	.L218
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2500              		.loc 1 1558 0 is_stmt 0 discriminator 2
 2501 0008 0123     		movs	r3, #1
 2502 000a 80F88030 		strb	r3, [r0, #128]
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2503              		.loc 1 1560 0 is_stmt 1 discriminator 2
 2504 000e 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 2505 0012 DBB2     		uxtb	r3, r3
 2506 0014 012B     		cmp	r3, #1
 2507 0016 45D1     		bne	.L222
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2508              		.loc 1 1567 0
 2509 0018 B2FA82F3 		clz	r3, r2
 2510 001c 5B09     		lsrs	r3, r3, #5
 2511 001e 0029     		cmp	r1, #0
 2512 0020 08BF     		it	eq
 2513 0022 0123     		moveq	r3, #1
 2514 0024 002B     		cmp	r3, #0
 2515 0026 42D1     		bne	.L223
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2516              		.loc 1 1551 0
 2517 0028 10B4     		push	{r4}
 2518              	.LCFI19:
 2519              		.cfi_def_cfa_offset 4
 2520              		.cfi_offset 4, -4
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2521              		.loc 1 1575 0
 2522 002a 0423     		movs	r3, #4
 2523 002c 80F88130 		strb	r3, [r0, #129]
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2524              		.loc 1 1576 0
 2525 0030 0023     		movs	r3, #0
 2526 0032 C0F88430 		str	r3, [r0, #132]
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2527              		.loc 1 1577 0
 2528 0036 4166     		str	r1, [r0, #100]
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2529              		.loc 1 1578 0
 2530 0038 A0F86820 		strh	r2, [r0, #104]	@ movhi
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2531              		.loc 1 1579 0
 2532 003c A0F86A20 		strh	r2, [r0, #106]	@ movhi
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = (uint16_t) 0UL;
 2533              		.loc 1 1582 0
 2534 0040 C365     		str	r3, [r0, #92]
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
 2535              		.loc 1 1583 0
 2536 0042 A0F86030 		strh	r3, [r0, #96]	@ movhi
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2537              		.loc 1 1584 0
 2538 0046 A0F86230 		strh	r3, [r0, #98]	@ movhi
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2539              		.loc 1 1585 0
 2540 004a 4367     		str	r3, [r0, #116]
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccJX0uiU.s 			page 120


 2541              		.loc 1 1588 0
 2542 004c C368     		ldr	r3, [r0, #12]
 2543 004e 0F2B     		cmp	r3, #15
 2544 0050 32D9     		bls	.L212
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2545              		.loc 1 1590 0
 2546 0052 244B     		ldr	r3, .L226
 2547 0054 0367     		str	r3, [r0, #112]
 2548              	.L213:
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2549              		.loc 1 1602 0
 2550 0056 8368     		ldr	r3, [r0, #8]
 2551 0058 B3F5C02F 		cmp	r3, #393216
 2552 005c 34D0     		beq	.L224
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2553              		.loc 1 1608 0
 2554 005e 0168     		ldr	r1, [r0]
 2555              	.LVL154:
 2556 0060 CB68     		ldr	r3, [r1, #12]
 2557 0062 23F4C023 		bic	r3, r3, #393216
 2558 0066 43F48023 		orr	r3, r3, #262144
 2559 006a CB60     		str	r3, [r1, #12]
 2560              	.LVL155:
 2561              	.L216:
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2562              		.loc 1 1616 0
 2563 006c 0168     		ldr	r1, [r0]
 2564 006e 4C68     		ldr	r4, [r1, #4]
 2565 0070 1D4B     		ldr	r3, .L226+4
 2566 0072 2340     		ands	r3, r3, r4
 2567 0074 1A43     		orrs	r2, r2, r3
 2568              	.LVL156:
 2569 0076 4A60     		str	r2, [r1, #4]
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2570              		.loc 1 1619 0
 2571 0078 0268     		ldr	r2, [r0]
 2572 007a 1368     		ldr	r3, [r2]
 2573 007c 43F00103 		orr	r3, r3, #1
 2574 0080 1360     		str	r3, [r2]
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2575              		.loc 1 1622 0
 2576 0082 0268     		ldr	r2, [r0]
 2577 0084 1169     		ldr	r1, [r2, #16]
 2578 0086 40F24973 		movw	r3, #1865
 2579 008a 0B43     		orrs	r3, r3, r1
 2580 008c 1361     		str	r3, [r2, #16]
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2581              		.loc 1 1624 0
 2582 008e 4368     		ldr	r3, [r0, #4]
 2583 0090 B3F5800F 		cmp	r3, #4194304
 2584 0094 1ED0     		beq	.L225
 2585              	.L217:
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 2586              		.loc 1 1631 0
 2587 0096 0023     		movs	r3, #0
 2588 0098 80F88030 		strb	r3, [r0, #128]
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
ARM GAS  /tmp/ccJX0uiU.s 			page 121


 2589              		.loc 1 1632 0
 2590 009c 1846     		mov	r0, r3
 2591              	.LVL157:
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2592              		.loc 1 1633 0
 2593 009e 5DF8044B 		ldr	r4, [sp], #4
 2594              	.LCFI20:
 2595              		.cfi_restore 4
 2596              		.cfi_def_cfa_offset 0
 2597 00a2 7047     		bx	lr
 2598              	.LVL158:
 2599              	.L222:
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 2600              		.loc 1 1563 0
 2601 00a4 0023     		movs	r3, #0
 2602 00a6 80F88030 		strb	r3, [r0, #128]
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2603              		.loc 1 1564 0
 2604 00aa 0220     		movs	r0, #2
 2605              	.LVL159:
 2606 00ac 7047     		bx	lr
 2607              	.LVL160:
 2608              	.L223:
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 2609              		.loc 1 1570 0
 2610 00ae 0023     		movs	r3, #0
 2611 00b0 80F88030 		strb	r3, [r0, #128]
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2612              		.loc 1 1571 0
 2613 00b4 0120     		movs	r0, #1
 2614              	.LVL161:
 2615 00b6 7047     		bx	lr
 2616              	.LVL162:
 2617              	.L212:
 2618              	.LCFI21:
 2619              		.cfi_def_cfa_offset 4
 2620              		.cfi_offset 4, -4
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2621              		.loc 1 1592 0
 2622 00b8 072B     		cmp	r3, #7
 2623 00ba 02D9     		bls	.L214
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2624              		.loc 1 1594 0
 2625 00bc 0B4B     		ldr	r3, .L226+8
 2626 00be 0367     		str	r3, [r0, #112]
 2627 00c0 C9E7     		b	.L213
 2628              	.L214:
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2629              		.loc 1 1598 0
 2630 00c2 0B4B     		ldr	r3, .L226+12
 2631 00c4 0367     		str	r3, [r0, #112]
 2632 00c6 C6E7     		b	.L213
 2633              	.L224:
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2634              		.loc 1 1604 0
 2635 00c8 0168     		ldr	r1, [r0]
 2636              	.LVL163:
ARM GAS  /tmp/ccJX0uiU.s 			page 122


 2637 00ca 0B68     		ldr	r3, [r1]
 2638 00cc 23F40063 		bic	r3, r3, #2048
 2639 00d0 0B60     		str	r3, [r1]
 2640              	.LVL164:
 2641 00d2 CBE7     		b	.L216
 2642              	.LVL165:
 2643              	.L225:
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2644              		.loc 1 1627 0
 2645 00d4 0268     		ldr	r2, [r0]
 2646 00d6 1368     		ldr	r3, [r2]
 2647 00d8 43F40073 		orr	r3, r3, #512
 2648 00dc 1360     		str	r3, [r2]
 2649 00de DAE7     		b	.L217
 2650              	.LVL166:
 2651              	.L218:
 2652              	.LCFI22:
 2653              		.cfi_def_cfa_offset 0
 2654              		.cfi_restore 4
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2655              		.loc 1 1558 0
 2656 00e0 0220     		movs	r0, #2
 2657              	.LVL167:
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2658              		.loc 1 1633 0
 2659 00e2 7047     		bx	lr
 2660              	.L227:
 2661              		.align	2
 2662              	.L226:
 2663 00e4 00000000 		.word	SPI_RxISR_32BIT
 2664 00e8 0000FFFF 		.word	-65536
 2665 00ec 00000000 		.word	SPI_RxISR_16BIT
 2666 00f0 00000000 		.word	SPI_RxISR_8BIT
 2667              		.cfi_endproc
 2668              	.LFE152:
 2670              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 2671              		.align	1
 2672              		.global	HAL_SPI_TransmitReceive_IT
 2673              		.syntax unified
 2674              		.thumb
 2675              		.thumb_func
 2676              		.fpu fpv5-d16
 2678              	HAL_SPI_TransmitReceive_IT:
 2679              	.LFB153:
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2680              		.loc 1 1646 0
 2681              		.cfi_startproc
 2682              		@ args = 0, pretend = 0, frame = 0
 2683              		@ frame_needed = 0, uses_anonymous_args = 0
 2684              		@ link register save eliminated.
 2685              	.LVL168:
 2686 0000 70B4     		push	{r4, r5, r6}
 2687              	.LCFI23:
 2688              		.cfi_def_cfa_offset 12
 2689              		.cfi_offset 4, -12
 2690              		.cfi_offset 5, -8
 2691              		.cfi_offset 6, -4
ARM GAS  /tmp/ccJX0uiU.s 			page 123


 2692              	.LVL169:
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* __GNUC__ */
 2693              		.loc 1 1651 0
 2694 0002 0568     		ldr	r5, [r0]
 2695              	.LVL170:
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2696              		.loc 1 1658 0
 2697 0004 90F88040 		ldrb	r4, [r0, #128]	@ zero_extendqisi2
 2698 0008 012C     		cmp	r4, #1
 2699 000a 00F0A380 		beq	.L243
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2700              		.loc 1 1658 0 is_stmt 0 discriminator 2
 2701 000e 0124     		movs	r4, #1
 2702 0010 80F88040 		strb	r4, [r0, #128]
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2703              		.loc 1 1660 0 is_stmt 1 discriminator 2
 2704 0014 90F88140 		ldrb	r4, [r0, #129]	@ zero_extendqisi2
 2705 0018 E4B2     		uxtb	r4, r4
 2706 001a 012C     		cmp	r4, #1
 2707 001c 34D1     		bne	.L245
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2708              		.loc 1 1667 0
 2709 001e B2FA82F4 		clz	r4, r2
 2710 0022 6409     		lsrs	r4, r4, #5
 2711 0024 0029     		cmp	r1, #0
 2712 0026 08BF     		it	eq
 2713 0028 0124     		moveq	r4, #1
 2714 002a 002C     		cmp	r4, #0
 2715 002c 32D1     		bne	.L231
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2716              		.loc 1 1667 0 is_stmt 0 discriminator 1
 2717 002e 002B     		cmp	r3, #0
 2718 0030 30D0     		beq	.L231
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2719              		.loc 1 1675 0 is_stmt 1
 2720 0032 0524     		movs	r4, #5
 2721 0034 80F88140 		strb	r4, [r0, #129]
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 2722              		.loc 1 1676 0
 2723 0038 0024     		movs	r4, #0
 2724 003a C0F88440 		str	r4, [r0, #132]
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2725              		.loc 1 1677 0
 2726 003e C165     		str	r1, [r0, #92]
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2727              		.loc 1 1678 0
 2728 0040 A0F86030 		strh	r3, [r0, #96]	@ movhi
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2729              		.loc 1 1679 0
 2730 0044 A0F86230 		strh	r3, [r0, #98]	@ movhi
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2731              		.loc 1 1680 0
 2732 0048 4266     		str	r2, [r0, #100]
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2733              		.loc 1 1681 0
 2734 004a A0F86830 		strh	r3, [r0, #104]	@ movhi
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   tmp_TxXferCount   = hspi->TxXferCount;
ARM GAS  /tmp/ccJX0uiU.s 			page 124


 2735              		.loc 1 1682 0
 2736 004e A0F86A30 		strh	r3, [r0, #106]	@ movhi
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2737              		.loc 1 1683 0
 2738 0052 B0F86220 		ldrh	r2, [r0, #98]
 2739              	.LVL171:
 2740 0056 92B2     		uxth	r2, r2
 2741              	.LVL172:
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2742              		.loc 1 1686 0
 2743 0058 C168     		ldr	r1, [r0, #12]
 2744              	.LVL173:
 2745 005a 0F29     		cmp	r1, #15
 2746 005c 1FD9     		bls	.L233
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR     = SPI_RxISR_32BIT;
 2747              		.loc 1 1688 0
 2748 005e 3E49     		ldr	r1, .L247
 2749 0060 4167     		str	r1, [r0, #116]
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2750              		.loc 1 1689 0
 2751 0062 3E49     		ldr	r1, .L247+4
 2752 0064 0167     		str	r1, [r0, #112]
 2753              	.L234:
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2754              		.loc 1 1703 0
 2755 0066 0468     		ldr	r4, [r0]
 2756 0068 E168     		ldr	r1, [r4, #12]
 2757 006a 21F4C021 		bic	r1, r1, #393216
 2758 006e E160     		str	r1, [r4, #12]
 2759              	.LVL174:
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2760              		.loc 1 1706 0
 2761 0070 0468     		ldr	r4, [r0]
 2762 0072 6668     		ldr	r6, [r4, #4]
 2763 0074 3A49     		ldr	r1, .L247+8
 2764 0076 3140     		ands	r1, r1, r6
 2765 0078 0B43     		orrs	r3, r3, r1
 2766              	.LVL175:
 2767 007a 6360     		str	r3, [r4, #4]
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2768              		.loc 1 1709 0
 2769 007c 0168     		ldr	r1, [r0]
 2770 007e 0B68     		ldr	r3, [r1]
 2771 0080 43F00103 		orr	r3, r3, #1
 2772 0084 0B60     		str	r3, [r1]
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2773              		.loc 1 1712 0
 2774 0086 27E0     		b	.L236
 2775              	.LVL176:
 2776              	.L245:
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 2777              		.loc 1 1663 0
 2778 0088 0023     		movs	r3, #0
 2779              	.LVL177:
 2780 008a 80F88030 		strb	r3, [r0, #128]
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2781              		.loc 1 1664 0
ARM GAS  /tmp/ccJX0uiU.s 			page 125


 2782 008e 0220     		movs	r0, #2
 2783              	.LVL178:
 2784              	.L229:
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2785              		.loc 1 1757 0
 2786 0090 70BC     		pop	{r4, r5, r6}
 2787              	.LCFI24:
 2788              		.cfi_remember_state
 2789              		.cfi_restore 6
 2790              		.cfi_restore 5
 2791              		.cfi_restore 4
 2792              		.cfi_def_cfa_offset 0
 2793              	.LVL179:
 2794 0092 7047     		bx	lr
 2795              	.LVL180:
 2796              	.L231:
 2797              	.LCFI25:
 2798              		.cfi_restore_state
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 2799              		.loc 1 1670 0
 2800 0094 0023     		movs	r3, #0
 2801              	.LVL181:
 2802 0096 80F88030 		strb	r3, [r0, #128]
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2803              		.loc 1 1671 0
 2804 009a 0120     		movs	r0, #1
 2805              	.LVL182:
 2806 009c F8E7     		b	.L229
 2807              	.LVL183:
 2808              	.L233:
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2809              		.loc 1 1691 0
 2810 009e 0729     		cmp	r1, #7
 2811 00a0 04D9     		bls	.L235
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR     = SPI_TxISR_16BIT;
 2812              		.loc 1 1693 0
 2813 00a2 3049     		ldr	r1, .L247+12
 2814 00a4 0167     		str	r1, [r0, #112]
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2815              		.loc 1 1694 0
 2816 00a6 3049     		ldr	r1, .L247+16
 2817 00a8 4167     		str	r1, [r0, #116]
 2818 00aa DCE7     		b	.L234
 2819              	.L235:
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->TxISR     = SPI_TxISR_8BIT;
 2820              		.loc 1 1698 0
 2821 00ac 2F49     		ldr	r1, .L247+20
 2822 00ae 0167     		str	r1, [r0, #112]
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2823              		.loc 1 1699 0
 2824 00b0 2F49     		ldr	r1, .L247+24
 2825 00b2 4167     		str	r1, [r0, #116]
 2826 00b4 D7E7     		b	.L234
 2827              	.LVL184:
 2828              	.L237:
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 2829              		.loc 1 1723 0
ARM GAS  /tmp/ccJX0uiU.s 			page 126


 2830 00b6 072A     		cmp	r2, #7
 2831 00b8 27D9     		bls	.L239
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 2832              		.loc 1 1726 0
 2833 00ba C36D     		ldr	r3, [r0, #92]
 2834 00bc 1B88     		ldrh	r3, [r3]
 2835 00be 2B84     		strh	r3, [r5, #32]	@ movhi
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount--;
 2836              		.loc 1 1730 0
 2837 00c0 C36D     		ldr	r3, [r0, #92]
 2838 00c2 0233     		adds	r3, r3, #2
 2839 00c4 C365     		str	r3, [r0, #92]
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       tmp_TxXferCount = hspi->TxXferCount;
 2840              		.loc 1 1731 0
 2841 00c6 B0F86230 		ldrh	r3, [r0, #98]
 2842 00ca 013B     		subs	r3, r3, #1
 2843 00cc 9BB2     		uxth	r3, r3
 2844 00ce A0F86230 		strh	r3, [r0, #98]	@ movhi
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 2845              		.loc 1 1732 0
 2846 00d2 B0F86220 		ldrh	r2, [r0, #98]
 2847 00d6 92B2     		uxth	r2, r2
 2848              	.LVL185:
 2849              	.L236:
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2850              		.loc 1 1712 0
 2851 00d8 0368     		ldr	r3, [r0]
 2852 00da 5969     		ldr	r1, [r3, #20]
 2853 00dc 11F0020F 		tst	r1, #2
 2854 00e0 24D0     		beq	.L240
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2855              		.loc 1 1712 0 is_stmt 0 discriminator 1
 2856 00e2 1AB3     		cbz	r2, .L240
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 2857              		.loc 1 1715 0 is_stmt 1
 2858 00e4 C268     		ldr	r2, [r0, #12]
 2859              	.LVL186:
 2860 00e6 0F2A     		cmp	r2, #15
 2861 00e8 E5D9     		bls	.L237
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint32_t);
 2862              		.loc 1 1717 0
 2863 00ea C26D     		ldr	r2, [r0, #92]
 2864 00ec 1268     		ldr	r2, [r2]
 2865 00ee 1A62     		str	r2, [r3, #32]
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount--;
 2866              		.loc 1 1718 0
 2867 00f0 C36D     		ldr	r3, [r0, #92]
 2868 00f2 0433     		adds	r3, r3, #4
 2869 00f4 C365     		str	r3, [r0, #92]
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       tmp_TxXferCount = hspi->TxXferCount;
 2870              		.loc 1 1719 0
 2871 00f6 B0F86230 		ldrh	r3, [r0, #98]
 2872 00fa 013B     		subs	r3, r3, #1
 2873 00fc 9BB2     		uxth	r3, r3
 2874 00fe A0F86230 		strh	r3, [r0, #98]	@ movhi
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 2875              		.loc 1 1720 0
ARM GAS  /tmp/ccJX0uiU.s 			page 127


 2876 0102 B0F86220 		ldrh	r2, [r0, #98]
 2877 0106 92B2     		uxth	r2, r2
 2878              	.LVL187:
 2879 0108 E6E7     		b	.L236
 2880              	.LVL188:
 2881              	.L239:
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 2882              		.loc 1 1737 0
 2883 010a C26D     		ldr	r2, [r0, #92]
 2884 010c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2885 010e 83F82020 		strb	r2, [r3, #32]
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       hspi->TxXferCount--;
 2886              		.loc 1 1738 0
 2887 0112 C36D     		ldr	r3, [r0, #92]
 2888 0114 0133     		adds	r3, r3, #1
 2889 0116 C365     		str	r3, [r0, #92]
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       tmp_TxXferCount = hspi->TxXferCount;
 2890              		.loc 1 1739 0
 2891 0118 B0F86230 		ldrh	r3, [r0, #98]
 2892 011c 013B     		subs	r3, r3, #1
 2893 011e 9BB2     		uxth	r3, r3
 2894 0120 A0F86230 		strh	r3, [r0, #98]	@ movhi
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 2895              		.loc 1 1740 0
 2896 0124 B0F86220 		ldrh	r2, [r0, #98]
 2897 0128 92B2     		uxth	r2, r2
 2898              	.LVL189:
 2899 012a D5E7     		b	.L236
 2900              	.L240:
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                              SPI_IT_FRE | SPI_IT_MODF | SPI_IT_TSERF));
 2901              		.loc 1 1745 0
 2902 012c 1969     		ldr	r1, [r3, #16]
 2903 012e 40F26C72 		movw	r2, #1900
 2904              	.LVL190:
 2905 0132 0A43     		orrs	r2, r2, r1
 2906 0134 1A61     		str	r2, [r3, #16]
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2907              		.loc 1 1748 0
 2908 0136 4368     		ldr	r3, [r0, #4]
 2909 0138 B3F5800F 		cmp	r3, #4194304
 2910 013c 04D0     		beq	.L246
 2911              	.L242:
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 2912              		.loc 1 1755 0
 2913 013e 0023     		movs	r3, #0
 2914 0140 80F88030 		strb	r3, [r0, #128]
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 2915              		.loc 1 1756 0
 2916 0144 1846     		mov	r0, r3
 2917              	.LVL191:
 2918 0146 A3E7     		b	.L229
 2919              	.LVL192:
 2920              	.L246:
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 2921              		.loc 1 1751 0
 2922 0148 0268     		ldr	r2, [r0]
 2923 014a 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccJX0uiU.s 			page 128


 2924 014c 43F40073 		orr	r3, r3, #512
 2925 0150 1360     		str	r3, [r2]
 2926 0152 F4E7     		b	.L242
 2927              	.LVL193:
 2928              	.L243:
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2929              		.loc 1 1658 0
 2930 0154 0220     		movs	r0, #2
 2931              	.LVL194:
 2932 0156 9BE7     		b	.L229
 2933              	.L248:
 2934              		.align	2
 2935              	.L247:
 2936 0158 00000000 		.word	SPI_TxISR_32BIT
 2937 015c 00000000 		.word	SPI_RxISR_32BIT
 2938 0160 0000FFFF 		.word	-65536
 2939 0164 00000000 		.word	SPI_RxISR_16BIT
 2940 0168 00000000 		.word	SPI_TxISR_16BIT
 2941 016c 00000000 		.word	SPI_RxISR_8BIT
 2942 0170 00000000 		.word	SPI_TxISR_8BIT
 2943              		.cfi_endproc
 2944              	.LFE153:
 2946              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 2947              		.align	1
 2948              		.global	HAL_SPI_Transmit_DMA
 2949              		.syntax unified
 2950              		.thumb
 2951              		.thumb_func
 2952              		.fpu fpv5-d16
 2954              	HAL_SPI_Transmit_DMA:
 2955              	.LFB154:
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2956              		.loc 1 1970 0
 2957              		.cfi_startproc
 2958              		@ args = 0, pretend = 0, frame = 0
 2959              		@ frame_needed = 0, uses_anonymous_args = 0
 2960              	.LVL195:
 2961 0000 38B5     		push	{r3, r4, r5, lr}
 2962              	.LCFI26:
 2963              		.cfi_def_cfa_offset 16
 2964              		.cfi_offset 3, -16
 2965              		.cfi_offset 4, -12
 2966              		.cfi_offset 5, -8
 2967              		.cfi_offset 14, -4
 2968              	.LVL196:
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2969              		.loc 1 1977 0
 2970 0002 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 2971 0006 012B     		cmp	r3, #1
 2972 0008 00F0D480 		beq	.L265
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2973              		.loc 1 1977 0 is_stmt 0 discriminator 2
 2974 000c 0123     		movs	r3, #1
 2975 000e 80F88030 		strb	r3, [r0, #128]
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2976              		.loc 1 1979 0 is_stmt 1 discriminator 2
 2977 0012 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
ARM GAS  /tmp/ccJX0uiU.s 			page 129


 2978 0016 DBB2     		uxtb	r3, r3
 2979 0018 012B     		cmp	r3, #1
 2980 001a 30D1     		bne	.L267
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 2981              		.loc 1 1986 0
 2982 001c B2FA82F3 		clz	r3, r2
 2983 0020 5B09     		lsrs	r3, r3, #5
 2984 0022 0029     		cmp	r1, #0
 2985 0024 08BF     		it	eq
 2986 0026 0123     		moveq	r3, #1
 2987 0028 7BBB     		cbnz	r3, .L268
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2988              		.loc 1 1994 0
 2989 002a 0323     		movs	r3, #3
 2990 002c 80F88130 		strb	r3, [r0, #129]
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pData;
 2991              		.loc 1 1995 0
 2992 0030 0023     		movs	r3, #0
 2993 0032 C0F88430 		str	r3, [r0, #132]
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2994              		.loc 1 1996 0
 2995 0036 C165     		str	r1, [r0, #92]
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2996              		.loc 1 1997 0
 2997 0038 A0F86020 		strh	r2, [r0, #96]	@ movhi
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 2998              		.loc 1 1998 0
 2999 003c A0F86220 		strh	r2, [r0, #98]	@ movhi
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3000              		.loc 1 2001 0
 3001 0040 4366     		str	r3, [r0, #100]
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 3002              		.loc 1 2002 0
 3003 0042 4367     		str	r3, [r0, #116]
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = (uint16_t)0UL;
 3004              		.loc 1 2003 0
 3005 0044 0367     		str	r3, [r0, #112]
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t)0UL;
 3006              		.loc 1 2004 0
 3007 0046 A0F86830 		strh	r3, [r0, #104]	@ movhi
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3008              		.loc 1 2005 0
 3009 004a A0F86A30 		strh	r3, [r0, #106]	@ movhi
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3010              		.loc 1 2008 0
 3011 004e 8368     		ldr	r3, [r0, #8]
 3012 0050 B3F5C02F 		cmp	r3, #393216
 3013 0054 1ED0     		beq	.L269
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3014              		.loc 1 2014 0
 3015 0056 0168     		ldr	r1, [r0]
 3016              	.LVL197:
 3017 0058 CB68     		ldr	r3, [r1, #12]
 3018 005a 23F4C023 		bic	r3, r3, #393216
 3019 005e 43F40033 		orr	r3, r3, #131072
 3020 0062 CB60     		str	r3, [r1, #12]
 3021              	.LVL198:
ARM GAS  /tmp/ccJX0uiU.s 			page 130


 3022              	.L254:
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MD
 3023              		.loc 1 2018 0
 3024 0064 C368     		ldr	r3, [r0, #12]
 3025 0066 0F2B     		cmp	r3, #15
 3026 0068 1AD9     		bls	.L255
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MD
 3027              		.loc 1 2018 0 is_stmt 0 discriminator 1
 3028 006a 816F     		ldr	r1, [r0, #120]
 3029 006c 8969     		ldr	r1, [r1, #24]
 3030 006e B1F5804F 		cmp	r1, #16384
 3031 0072 15D0     		beq	.L255
 3032              	.L256:
 3033              	.LVL199:
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3034              		.loc 1 2024 0 is_stmt 1
 3035 0074 0023     		movs	r3, #0
 3036 0076 80F88030 		strb	r3, [r0, #128]
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3037              		.loc 1 2025 0
 3038 007a 0123     		movs	r3, #1
 3039 007c 03E0     		b	.L250
 3040              	.LVL200:
 3041              	.L267:
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3042              		.loc 1 1982 0
 3043 007e 0023     		movs	r3, #0
 3044 0080 80F88030 		strb	r3, [r0, #128]
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3045              		.loc 1 1983 0
 3046 0084 0223     		movs	r3, #2
 3047              	.LVL201:
 3048              	.L250:
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3049              		.loc 1 2110 0
 3050 0086 1846     		mov	r0, r3
 3051 0088 38BD     		pop	{r3, r4, r5, pc}
 3052              	.LVL202:
 3053              	.L268:
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3054              		.loc 1 1989 0
 3055 008a 0023     		movs	r3, #0
 3056 008c 80F88030 		strb	r3, [r0, #128]
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3057              		.loc 1 1990 0
 3058 0090 0123     		movs	r3, #1
 3059 0092 F8E7     		b	.L250
 3060              	.LVL203:
 3061              	.L269:
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3062              		.loc 1 2010 0
 3063 0094 0168     		ldr	r1, [r0]
 3064              	.LVL204:
 3065 0096 0B68     		ldr	r3, [r1]
 3066 0098 43F40063 		orr	r3, r3, #2048
 3067 009c 0B60     		str	r3, [r1]
 3068              	.LVL205:
ARM GAS  /tmp/ccJX0uiU.s 			page 131


 3069 009e E1E7     		b	.L254
 3070              	.L255:
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MD
 3071              		.loc 1 2018 0 discriminator 3
 3072 00a0 072B     		cmp	r3, #7
 3073 00a2 07D9     		bls	.L257
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                      (hspi->hdmatx->Init.MemDataAlignment != DMA_MD
 3074              		.loc 1 2019 0
 3075 00a4 816F     		ldr	r1, [r0, #120]
 3076 00a6 8969     		ldr	r1, [r1, #24]
 3077 00a8 B1F5005F 		cmp	r1, #8192
 3078 00ac 18BF     		it	ne
 3079 00ae B1F5804F 		cmpne	r1, #16384
 3080 00b2 DFD1     		bne	.L256
 3081              	.L257:
2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3082              		.loc 1 2029 0
 3083 00b4 072B     		cmp	r3, #7
 3084 00b6 56D8     		bhi	.L258
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3085              		.loc 1 2031 0
 3086 00b8 836F     		ldr	r3, [r0, #120]
 3087 00ba 9969     		ldr	r1, [r3, #24]
 3088 00bc B1F5005F 		cmp	r1, #8192
 3089 00c0 43D0     		beq	.L270
 3090              	.L259:
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3091              		.loc 1 2035 0
 3092 00c2 9B69     		ldr	r3, [r3, #24]
 3093 00c4 B3F5804F 		cmp	r3, #16384
 3094 00c8 46D0     		beq	.L271
 3095              	.L260:
 3096 00ca 1546     		mov	r5, r2
 3097 00cc 0446     		mov	r4, r0
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3098              		.loc 1 2053 0
 3099 00ce 836F     		ldr	r3, [r0, #120]
 3100 00d0 394A     		ldr	r2, .L275
 3101              	.LVL206:
 3102 00d2 1A64     		str	r2, [r3, #64]
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3103              		.loc 1 2056 0
 3104 00d4 836F     		ldr	r3, [r0, #120]
 3105 00d6 394A     		ldr	r2, .L275+4
 3106 00d8 DA63     		str	r2, [r3, #60]
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3107              		.loc 1 2059 0
 3108 00da 836F     		ldr	r3, [r0, #120]
 3109 00dc 384A     		ldr	r2, .L275+8
 3110 00de DA64     		str	r2, [r3, #76]
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3111              		.loc 1 2062 0
 3112 00e0 836F     		ldr	r3, [r0, #120]
 3113 00e2 0022     		movs	r2, #0
 3114 00e4 1A65     		str	r2, [r3, #80]
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3115              		.loc 1 2065 0
ARM GAS  /tmp/ccJX0uiU.s 			page 132


 3116 00e6 0268     		ldr	r2, [r0]
 3117 00e8 9368     		ldr	r3, [r2, #8]
 3118 00ea 23F40043 		bic	r3, r3, #32768
 3119 00ee 9360     		str	r3, [r2, #8]
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                  hspi->TxXferCount))
 3120              		.loc 1 2068 0
 3121 00f0 0268     		ldr	r2, [r0]
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3122              		.loc 1 2069 0
 3123 00f2 B0F86230 		ldrh	r3, [r0, #98]
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                  hspi->TxXferCount))
 3124              		.loc 1 2068 0
 3125 00f6 2032     		adds	r2, r2, #32
 3126 00f8 C16D     		ldr	r1, [r0, #92]
 3127 00fa 806F     		ldr	r0, [r0, #120]
 3128              	.LVL207:
 3129 00fc FFF7FEFF 		bl	HAL_DMA_Start_IT
 3130              	.LVL208:
 3131 0100 0346     		mov	r3, r0
 3132 0102 0028     		cmp	r0, #0
 3133 0104 3DD1     		bne	.L272
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3134              		.loc 1 2083 0
 3135 0106 A26F     		ldr	r2, [r4, #120]
 3136 0108 D269     		ldr	r2, [r2, #28]
 3137 010a B2F5807F 		cmp	r2, #256
 3138 010e 45D0     		beq	.L273
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3139              		.loc 1 2089 0
 3140 0110 2168     		ldr	r1, [r4]
 3141 0112 4868     		ldr	r0, [r1, #4]
 3142 0114 2B4A     		ldr	r2, .L275+12
 3143 0116 0240     		ands	r2, r2, r0
 3144 0118 2A43     		orrs	r2, r2, r5
 3145 011a 4A60     		str	r2, [r1, #4]
 3146              	.L263:
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3147              		.loc 1 2093 0
 3148 011c 2168     		ldr	r1, [r4]
 3149 011e 8A68     		ldr	r2, [r1, #8]
 3150 0120 42F40042 		orr	r2, r2, #32768
 3151 0124 8A60     		str	r2, [r1, #8]
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3152              		.loc 1 2096 0
 3153 0126 2168     		ldr	r1, [r4]
 3154 0128 0A69     		ldr	r2, [r1, #16]
 3155 012a 42F44872 		orr	r2, r2, #800
 3156 012e 0A61     		str	r2, [r1, #16]
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3157              		.loc 1 2099 0
 3158 0130 2168     		ldr	r1, [r4]
 3159 0132 0A68     		ldr	r2, [r1]
 3160 0134 42F00102 		orr	r2, r2, #1
 3161 0138 0A60     		str	r2, [r1]
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3162              		.loc 1 2101 0
 3163 013a 6268     		ldr	r2, [r4, #4]
ARM GAS  /tmp/ccJX0uiU.s 			page 133


 3164 013c B2F5800F 		cmp	r2, #4194304
 3165 0140 32D0     		beq	.L274
 3166              	.L264:
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 3167              		.loc 1 2108 0
 3168 0142 0022     		movs	r2, #0
 3169 0144 84F88020 		strb	r2, [r4, #128]
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 3170              		.loc 1 2109 0
 3171 0148 9DE7     		b	.L250
 3172              	.LVL209:
 3173              	.L270:
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3174              		.loc 1 2033 0
 3175 014a B0F86210 		ldrh	r1, [r0, #98]
 3176 014e 0131     		adds	r1, r1, #1
 3177 0150 4908     		lsrs	r1, r1, #1
 3178 0152 A0F86210 		strh	r1, [r0, #98]	@ movhi
 3179 0156 B4E7     		b	.L259
 3180              	.L271:
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3181              		.loc 1 2037 0
 3182 0158 B0F86230 		ldrh	r3, [r0, #98]
 3183 015c 0333     		adds	r3, r3, #3
 3184 015e 9B08     		lsrs	r3, r3, #2
 3185 0160 A0F86230 		strh	r3, [r0, #98]	@ movhi
 3186 0164 B1E7     		b	.L260
 3187              	.L258:
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3188              		.loc 1 2040 0
 3189 0166 0F2B     		cmp	r3, #15
 3190 0168 AFD8     		bhi	.L260
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3191              		.loc 1 2042 0
 3192 016a 836F     		ldr	r3, [r0, #120]
 3193 016c 9B69     		ldr	r3, [r3, #24]
 3194 016e B3F5804F 		cmp	r3, #16384
 3195 0172 AAD1     		bne	.L260
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3196              		.loc 1 2044 0
 3197 0174 B0F86230 		ldrh	r3, [r0, #98]
 3198 0178 0133     		adds	r3, r3, #1
 3199 017a 5B08     		lsrs	r3, r3, #1
 3200 017c A0F86230 		strh	r3, [r0, #98]	@ movhi
 3201 0180 A3E7     		b	.L260
 3202              	.LVL210:
 3203              	.L272:
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3204              		.loc 1 2072 0
 3205 0182 D4F88430 		ldr	r3, [r4, #132]
 3206 0186 43F01003 		orr	r3, r3, #16
 3207 018a C4F88430 		str	r3, [r4, #132]
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3208              		.loc 1 2075 0
 3209 018e 0023     		movs	r3, #0
 3210 0190 84F88030 		strb	r3, [r4, #128]
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
ARM GAS  /tmp/ccJX0uiU.s 			page 134


 3211              		.loc 1 2077 0
 3212 0194 0123     		movs	r3, #1
 3213 0196 84F88130 		strb	r3, [r4, #129]
 3214              	.LVL211:
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3215              		.loc 1 2079 0
 3216 019a 74E7     		b	.L250
 3217              	.LVL212:
 3218              	.L273:
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3219              		.loc 1 2085 0
 3220 019c 2168     		ldr	r1, [r4]
 3221 019e 4868     		ldr	r0, [r1, #4]
 3222 01a0 084A     		ldr	r2, .L275+12
 3223 01a2 0240     		ands	r2, r2, r0
 3224 01a4 4A60     		str	r2, [r1, #4]
 3225 01a6 B9E7     		b	.L263
 3226              	.L274:
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3227              		.loc 1 2104 0
 3228 01a8 2168     		ldr	r1, [r4]
 3229 01aa 0A68     		ldr	r2, [r1]
 3230 01ac 42F40072 		orr	r2, r2, #512
 3231 01b0 0A60     		str	r2, [r1]
 3232 01b2 C6E7     		b	.L264
 3233              	.LVL213:
 3234              	.L265:
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3235              		.loc 1 1977 0
 3236 01b4 0223     		movs	r3, #2
 3237 01b6 66E7     		b	.L250
 3238              	.L276:
 3239              		.align	2
 3240              	.L275:
 3241 01b8 00000000 		.word	SPI_DMAHalfTransmitCplt
 3242 01bc 00000000 		.word	SPI_DMATransmitCplt
 3243 01c0 00000000 		.word	SPI_DMAError
 3244 01c4 0000FFFF 		.word	-65536
 3245              		.cfi_endproc
 3246              	.LFE154:
 3248              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 3249              		.align	1
 3250              		.global	HAL_SPI_Receive_DMA
 3251              		.syntax unified
 3252              		.thumb
 3253              		.thumb_func
 3254              		.fpu fpv5-d16
 3256              	HAL_SPI_Receive_DMA:
 3257              	.LFB155:
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3258              		.loc 1 2122 0
 3259              		.cfi_startproc
 3260              		@ args = 0, pretend = 0, frame = 0
 3261              		@ frame_needed = 0, uses_anonymous_args = 0
 3262              	.LVL214:
 3263 0000 38B5     		push	{r3, r4, r5, lr}
 3264              	.LCFI27:
ARM GAS  /tmp/ccJX0uiU.s 			page 135


 3265              		.cfi_def_cfa_offset 16
 3266              		.cfi_offset 3, -16
 3267              		.cfi_offset 4, -12
 3268              		.cfi_offset 5, -8
 3269              		.cfi_offset 14, -4
 3270              	.LVL215:
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3271              		.loc 1 2129 0
 3272 0002 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 3273 0006 012B     		cmp	r3, #1
 3274 0008 00F0D480 		beq	.L293
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3275              		.loc 1 2129 0 is_stmt 0 discriminator 2
 3276 000c 0123     		movs	r3, #1
 3277 000e 80F88030 		strb	r3, [r0, #128]
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3278              		.loc 1 2131 0 is_stmt 1 discriminator 2
 3279 0012 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 3280 0016 DBB2     		uxtb	r3, r3
 3281 0018 012B     		cmp	r3, #1
 3282 001a 2FD1     		bne	.L295
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3283              		.loc 1 2138 0
 3284 001c B2FA82F3 		clz	r3, r2
 3285 0020 5B09     		lsrs	r3, r3, #5
 3286 0022 0029     		cmp	r1, #0
 3287 0024 08BF     		it	eq
 3288 0026 0123     		moveq	r3, #1
 3289 0028 73BB     		cbnz	r3, .L296
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3290              		.loc 1 2146 0
 3291 002a 0423     		movs	r3, #4
 3292 002c 80F88130 		strb	r3, [r0, #129]
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 3293              		.loc 1 2147 0
 3294 0030 0023     		movs	r3, #0
 3295 0032 C0F88430 		str	r3, [r0, #132]
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3296              		.loc 1 2148 0
 3297 0036 4166     		str	r1, [r0, #100]
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3298              		.loc 1 2149 0
 3299 0038 A0F86820 		strh	r2, [r0, #104]	@ movhi
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3300              		.loc 1 2150 0
 3301 003c A0F86A20 		strh	r2, [r0, #106]	@ movhi
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3302              		.loc 1 2153 0
 3303 0040 0367     		str	r3, [r0, #112]
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = (uint16_t) 0UL;
 3304              		.loc 1 2154 0
 3305 0042 4367     		str	r3, [r0, #116]
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
 3306              		.loc 1 2155 0
 3307 0044 A0F86030 		strh	r3, [r0, #96]	@ movhi
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3308              		.loc 1 2156 0
ARM GAS  /tmp/ccJX0uiU.s 			page 136


 3309 0048 A0F86230 		strh	r3, [r0, #98]	@ movhi
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3310              		.loc 1 2159 0
 3311 004c 8368     		ldr	r3, [r0, #8]
 3312 004e B3F5C02F 		cmp	r3, #393216
 3313 0052 1ED0     		beq	.L297
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3314              		.loc 1 2165 0
 3315 0054 0168     		ldr	r1, [r0]
 3316              	.LVL216:
 3317 0056 CB68     		ldr	r3, [r1, #12]
 3318 0058 23F4C023 		bic	r3, r3, #393216
 3319 005c 43F48023 		orr	r3, r3, #262144
 3320 0060 CB60     		str	r3, [r1, #12]
 3321              	.LVL217:
 3322              	.L282:
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 3323              		.loc 1 2169 0
 3324 0062 C368     		ldr	r3, [r0, #12]
 3325 0064 0F2B     		cmp	r3, #15
 3326 0066 1AD9     		bls	.L283
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 3327              		.loc 1 2169 0 is_stmt 0 discriminator 1
 3328 0068 C16F     		ldr	r1, [r0, #124]
 3329 006a 8969     		ldr	r1, [r1, #24]
 3330 006c B1F5804F 		cmp	r1, #16384
 3331 0070 15D0     		beq	.L283
 3332              	.L284:
 3333              	.LVL218:
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3334              		.loc 1 2175 0 is_stmt 1
 3335 0072 0023     		movs	r3, #0
 3336 0074 80F88030 		strb	r3, [r0, #128]
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3337              		.loc 1 2176 0
 3338 0078 0123     		movs	r3, #1
 3339 007a 03E0     		b	.L278
 3340              	.LVL219:
 3341              	.L295:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3342              		.loc 1 2134 0
 3343 007c 0023     		movs	r3, #0
 3344 007e 80F88030 		strb	r3, [r0, #128]
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3345              		.loc 1 2135 0
 3346 0082 0223     		movs	r3, #2
 3347              	.LVL220:
 3348              	.L278:
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3349              		.loc 1 2261 0
 3350 0084 1846     		mov	r0, r3
 3351 0086 38BD     		pop	{r3, r4, r5, pc}
 3352              	.LVL221:
 3353              	.L296:
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3354              		.loc 1 2141 0
 3355 0088 0023     		movs	r3, #0
ARM GAS  /tmp/ccJX0uiU.s 			page 137


 3356 008a 80F88030 		strb	r3, [r0, #128]
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3357              		.loc 1 2142 0
 3358 008e 0123     		movs	r3, #1
 3359 0090 F8E7     		b	.L278
 3360              	.LVL222:
 3361              	.L297:
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3362              		.loc 1 2161 0
 3363 0092 0168     		ldr	r1, [r0]
 3364              	.LVL223:
 3365 0094 0B68     		ldr	r3, [r1]
 3366 0096 23F40063 		bic	r3, r3, #2048
 3367 009a 0B60     		str	r3, [r1]
 3368              	.LVL224:
 3369 009c E1E7     		b	.L282
 3370              	.L283:
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 3371              		.loc 1 2169 0 discriminator 3
 3372 009e 072B     		cmp	r3, #7
 3373 00a0 07D9     		bls	.L285
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                      (hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 3374              		.loc 1 2170 0
 3375 00a2 C36F     		ldr	r3, [r0, #124]
 3376 00a4 9B69     		ldr	r3, [r3, #24]
 3377 00a6 B3F5005F 		cmp	r3, #8192
 3378 00aa 18BF     		it	ne
 3379 00ac B3F5804F 		cmpne	r3, #16384
 3380 00b0 DFD1     		bne	.L284
 3381              	.L285:
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3382              		.loc 1 2180 0
 3383 00b2 0168     		ldr	r1, [r0]
 3384 00b4 8B68     		ldr	r3, [r1, #8]
 3385 00b6 23F48043 		bic	r3, r3, #16384
 3386 00ba 8B60     		str	r3, [r1, #8]
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3387              		.loc 1 2183 0
 3388 00bc C368     		ldr	r3, [r0, #12]
 3389 00be 072B     		cmp	r3, #7
 3390 00c0 51D8     		bhi	.L286
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3391              		.loc 1 2185 0
 3392 00c2 C36F     		ldr	r3, [r0, #124]
 3393 00c4 9969     		ldr	r1, [r3, #24]
 3394 00c6 B1F5005F 		cmp	r1, #8192
 3395 00ca 3ED0     		beq	.L298
 3396              	.L287:
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3397              		.loc 1 2189 0
 3398 00cc 9B69     		ldr	r3, [r3, #24]
 3399 00ce B3F5804F 		cmp	r3, #16384
 3400 00d2 41D0     		beq	.L299
 3401              	.L288:
 3402 00d4 1546     		mov	r5, r2
 3403 00d6 0446     		mov	r4, r0
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 138


 3404              		.loc 1 2207 0
 3405 00d8 C36F     		ldr	r3, [r0, #124]
 3406 00da 374A     		ldr	r2, .L303
 3407              	.LVL225:
 3408 00dc 1A64     		str	r2, [r3, #64]
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3409              		.loc 1 2210 0
 3410 00de C36F     		ldr	r3, [r0, #124]
 3411 00e0 364A     		ldr	r2, .L303+4
 3412 00e2 DA63     		str	r2, [r3, #60]
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3413              		.loc 1 2213 0
 3414 00e4 C36F     		ldr	r3, [r0, #124]
 3415 00e6 364A     		ldr	r2, .L303+8
 3416 00e8 DA64     		str	r2, [r3, #76]
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3417              		.loc 1 2216 0
 3418 00ea C36F     		ldr	r3, [r0, #124]
 3419 00ec 0022     		movs	r2, #0
 3420 00ee 1A65     		str	r2, [r3, #80]
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                  hspi->RxXferCount))
 3421              		.loc 1 2219 0
 3422 00f0 0168     		ldr	r1, [r0]
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3423              		.loc 1 2220 0
 3424 00f2 B0F86A30 		ldrh	r3, [r0, #106]
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                  hspi->RxXferCount))
 3425              		.loc 1 2219 0
 3426 00f6 426E     		ldr	r2, [r0, #100]
 3427 00f8 3031     		adds	r1, r1, #48
 3428 00fa C06F     		ldr	r0, [r0, #124]
 3429              	.LVL226:
 3430 00fc FFF7FEFF 		bl	HAL_DMA_Start_IT
 3431              	.LVL227:
 3432 0100 0346     		mov	r3, r0
 3433 0102 0028     		cmp	r0, #0
 3434 0104 3DD1     		bne	.L300
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3435              		.loc 1 2234 0
 3436 0106 E26F     		ldr	r2, [r4, #124]
 3437 0108 D269     		ldr	r2, [r2, #28]
 3438 010a B2F5807F 		cmp	r2, #256
 3439 010e 45D0     		beq	.L301
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3440              		.loc 1 2240 0
 3441 0110 2168     		ldr	r1, [r4]
 3442 0112 4868     		ldr	r0, [r1, #4]
 3443 0114 2B4A     		ldr	r2, .L303+12
 3444 0116 0240     		ands	r2, r2, r0
 3445 0118 2A43     		orrs	r2, r2, r5
 3446 011a 4A60     		str	r2, [r1, #4]
 3447              	.L291:
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3448              		.loc 1 2244 0
 3449 011c 2168     		ldr	r1, [r4]
 3450 011e 8A68     		ldr	r2, [r1, #8]
 3451 0120 42F48042 		orr	r2, r2, #16384
ARM GAS  /tmp/ccJX0uiU.s 			page 139


 3452 0124 8A60     		str	r2, [r1, #8]
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3453              		.loc 1 2247 0
 3454 0126 2168     		ldr	r1, [r4]
 3455 0128 0A69     		ldr	r2, [r1, #16]
 3456 012a 42F45072 		orr	r2, r2, #832
 3457 012e 0A61     		str	r2, [r1, #16]
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3458              		.loc 1 2250 0
 3459 0130 2168     		ldr	r1, [r4]
 3460 0132 0A68     		ldr	r2, [r1]
 3461 0134 42F00102 		orr	r2, r2, #1
 3462 0138 0A60     		str	r2, [r1]
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3463              		.loc 1 2252 0
 3464 013a 6268     		ldr	r2, [r4, #4]
 3465 013c B2F5800F 		cmp	r2, #4194304
 3466 0140 32D0     		beq	.L302
 3467              	.L292:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 3468              		.loc 1 2259 0
 3469 0142 0022     		movs	r2, #0
 3470 0144 84F88020 		strb	r2, [r4, #128]
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 3471              		.loc 1 2260 0
 3472 0148 9CE7     		b	.L278
 3473              	.LVL228:
 3474              	.L298:
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3475              		.loc 1 2187 0
 3476 014a B0F86A10 		ldrh	r1, [r0, #106]
 3477 014e 0131     		adds	r1, r1, #1
 3478 0150 4908     		lsrs	r1, r1, #1
 3479 0152 A0F86A10 		strh	r1, [r0, #106]	@ movhi
 3480 0156 B9E7     		b	.L287
 3481              	.L299:
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3482              		.loc 1 2191 0
 3483 0158 B0F86A30 		ldrh	r3, [r0, #106]
 3484 015c 0333     		adds	r3, r3, #3
 3485 015e 9B08     		lsrs	r3, r3, #2
 3486 0160 A0F86A30 		strh	r3, [r0, #106]	@ movhi
 3487 0164 B6E7     		b	.L288
 3488              	.L286:
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3489              		.loc 1 2194 0
 3490 0166 0F2B     		cmp	r3, #15
 3491 0168 B4D8     		bhi	.L288
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3492              		.loc 1 2196 0
 3493 016a C36F     		ldr	r3, [r0, #124]
 3494 016c 9B69     		ldr	r3, [r3, #24]
 3495 016e B3F5804F 		cmp	r3, #16384
 3496 0172 AFD1     		bne	.L288
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3497              		.loc 1 2198 0
 3498 0174 B0F86A30 		ldrh	r3, [r0, #106]
ARM GAS  /tmp/ccJX0uiU.s 			page 140


 3499 0178 0133     		adds	r3, r3, #1
 3500 017a 5B08     		lsrs	r3, r3, #1
 3501 017c A0F86A30 		strh	r3, [r0, #106]	@ movhi
 3502 0180 A8E7     		b	.L288
 3503              	.LVL229:
 3504              	.L300:
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3505              		.loc 1 2223 0
 3506 0182 D4F88430 		ldr	r3, [r4, #132]
 3507 0186 43F01003 		orr	r3, r3, #16
 3508 018a C4F88430 		str	r3, [r4, #132]
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3509              		.loc 1 2226 0
 3510 018e 0023     		movs	r3, #0
 3511 0190 84F88030 		strb	r3, [r4, #128]
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3512              		.loc 1 2228 0
 3513 0194 0123     		movs	r3, #1
 3514 0196 84F88130 		strb	r3, [r4, #129]
 3515              	.LVL230:
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3516              		.loc 1 2230 0
 3517 019a 73E7     		b	.L278
 3518              	.LVL231:
 3519              	.L301:
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3520              		.loc 1 2236 0
 3521 019c 2168     		ldr	r1, [r4]
 3522 019e 4868     		ldr	r0, [r1, #4]
 3523 01a0 084A     		ldr	r2, .L303+12
 3524 01a2 0240     		ands	r2, r2, r0
 3525 01a4 4A60     		str	r2, [r1, #4]
 3526 01a6 B9E7     		b	.L291
 3527              	.L302:
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3528              		.loc 1 2255 0
 3529 01a8 2168     		ldr	r1, [r4]
 3530 01aa 0A68     		ldr	r2, [r1]
 3531 01ac 42F40072 		orr	r2, r2, #512
 3532 01b0 0A60     		str	r2, [r1]
 3533 01b2 C6E7     		b	.L292
 3534              	.LVL232:
 3535              	.L293:
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3536              		.loc 1 2129 0
 3537 01b4 0223     		movs	r3, #2
 3538 01b6 65E7     		b	.L278
 3539              	.L304:
 3540              		.align	2
 3541              	.L303:
 3542 01b8 00000000 		.word	SPI_DMAHalfReceiveCplt
 3543 01bc 00000000 		.word	SPI_DMAReceiveCplt
 3544 01c0 00000000 		.word	SPI_DMAError
 3545 01c4 0000FFFF 		.word	-65536
 3546              		.cfi_endproc
 3547              	.LFE155:
 3549              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
ARM GAS  /tmp/ccJX0uiU.s 			page 141


 3550              		.align	1
 3551              		.global	HAL_SPI_TransmitReceive_DMA
 3552              		.syntax unified
 3553              		.thumb
 3554              		.thumb_func
 3555              		.fpu fpv5-d16
 3557              	HAL_SPI_TransmitReceive_DMA:
 3558              	.LFB156:
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3559              		.loc 1 2275 0
 3560              		.cfi_startproc
 3561              		@ args = 0, pretend = 0, frame = 0
 3562              		@ frame_needed = 0, uses_anonymous_args = 0
 3563              	.LVL233:
 3564 0000 38B5     		push	{r3, r4, r5, lr}
 3565              	.LCFI28:
 3566              		.cfi_def_cfa_offset 16
 3567              		.cfi_offset 3, -16
 3568              		.cfi_offset 4, -12
 3569              		.cfi_offset 5, -8
 3570              		.cfi_offset 14, -4
 3571              	.LVL234:
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3572              		.loc 1 2282 0
 3573 0002 90F88040 		ldrb	r4, [r0, #128]	@ zero_extendqisi2
 3574 0006 012C     		cmp	r4, #1
 3575 0008 00F01181 		beq	.L324
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3576              		.loc 1 2282 0 is_stmt 0 discriminator 2
 3577 000c 0124     		movs	r4, #1
 3578 000e 80F88040 		strb	r4, [r0, #128]
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3579              		.loc 1 2284 0 is_stmt 1 discriminator 2
 3580 0012 90F88140 		ldrb	r4, [r0, #129]	@ zero_extendqisi2
 3581 0016 E4B2     		uxtb	r4, r4
 3582 0018 012C     		cmp	r4, #1
 3583 001a 30D1     		bne	.L326
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3584              		.loc 1 2291 0
 3585 001c B2FA82F4 		clz	r4, r2
 3586 0020 6409     		lsrs	r4, r4, #5
 3587 0022 0029     		cmp	r1, #0
 3588 0024 08BF     		it	eq
 3589 0026 0124     		moveq	r4, #1
 3590 0028 7CBB     		cbnz	r4, .L308
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3591              		.loc 1 2291 0 is_stmt 0 discriminator 1
 3592 002a 73B3     		cbz	r3, .L308
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3593              		.loc 1 2299 0 is_stmt 1
 3594 002c 0524     		movs	r4, #5
 3595 002e 80F88140 		strb	r4, [r0, #129]
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 3596              		.loc 1 2300 0
 3597 0032 0024     		movs	r4, #0
 3598 0034 C0F88440 		str	r4, [r0, #132]
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
ARM GAS  /tmp/ccJX0uiU.s 			page 142


 3599              		.loc 1 2301 0
 3600 0038 C165     		str	r1, [r0, #92]
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 3601              		.loc 1 2302 0
 3602 003a A0F86030 		strh	r3, [r0, #96]	@ movhi
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 3603              		.loc 1 2303 0
 3604 003e A0F86230 		strh	r3, [r0, #98]	@ movhi
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3605              		.loc 1 2304 0
 3606 0042 4266     		str	r2, [r0, #100]
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3607              		.loc 1 2305 0
 3608 0044 A0F86830 		strh	r3, [r0, #104]	@ movhi
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3609              		.loc 1 2306 0
 3610 0048 A0F86A30 		strh	r3, [r0, #106]	@ movhi
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3611              		.loc 1 2309 0
 3612 004c 0467     		str	r4, [r0, #112]
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3613              		.loc 1 2310 0
 3614 004e 4467     		str	r4, [r0, #116]
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3615              		.loc 1 2313 0
 3616 0050 0168     		ldr	r1, [r0]
 3617              	.LVL235:
 3618 0052 CA68     		ldr	r2, [r1, #12]
 3619              	.LVL236:
 3620 0054 22F4C022 		bic	r2, r2, #393216
 3621 0058 CA60     		str	r2, [r1, #12]
 3622              	.LVL237:
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3623              		.loc 1 2316 0
 3624 005a 0168     		ldr	r1, [r0]
 3625 005c 8A68     		ldr	r2, [r1, #8]
 3626 005e 22F44042 		bic	r2, r2, #49152
 3627 0062 8A60     		str	r2, [r1, #8]
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 3628              		.loc 1 2319 0
 3629 0064 C268     		ldr	r2, [r0, #12]
 3630 0066 0F2A     		cmp	r2, #15
 3631 0068 14D9     		bls	.L310
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 3632              		.loc 1 2319 0 is_stmt 0 discriminator 1
 3633 006a C16F     		ldr	r1, [r0, #124]
 3634 006c 8969     		ldr	r1, [r1, #24]
 3635 006e B1F5804F 		cmp	r1, #16384
 3636 0072 0FD0     		beq	.L310
 3637              	.L311:
 3638              	.LVL238:
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3639              		.loc 1 2326 0 is_stmt 1
 3640 0074 0023     		movs	r3, #0
 3641              	.LVL239:
 3642 0076 80F88030 		strb	r3, [r0, #128]
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccJX0uiU.s 			page 143


 3643              		.loc 1 2327 0
 3644 007a 0122     		movs	r2, #1
 3645 007c 03E0     		b	.L306
 3646              	.LVL240:
 3647              	.L326:
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3648              		.loc 1 2287 0
 3649 007e 0023     		movs	r3, #0
 3650              	.LVL241:
 3651 0080 80F88030 		strb	r3, [r0, #128]
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3652              		.loc 1 2288 0
 3653 0084 0222     		movs	r2, #2
 3654              	.LVL242:
 3655              	.L306:
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3656              		.loc 1 2445 0
 3657 0086 1046     		mov	r0, r2
 3658 0088 38BD     		pop	{r3, r4, r5, pc}
 3659              	.LVL243:
 3660              	.L308:
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     return errorcode;
 3661              		.loc 1 2294 0
 3662 008a 0023     		movs	r3, #0
 3663              	.LVL244:
 3664 008c 80F88030 		strb	r3, [r0, #128]
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3665              		.loc 1 2295 0
 3666 0090 0122     		movs	r2, #1
 3667              	.LVL245:
 3668 0092 F8E7     		b	.L306
 3669              	.LVL246:
 3670              	.L310:
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 3671              		.loc 1 2319 0 discriminator 3
 3672 0094 072A     		cmp	r2, #7
 3673 0096 07D9     		bls	.L312
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                                      (hspi->hdmarx->Init.MemDataAlignment != DMA_MD
 3674              		.loc 1 2320 0
 3675 0098 C16F     		ldr	r1, [r0, #124]
 3676 009a 8969     		ldr	r1, [r1, #24]
 3677 009c B1F5005F 		cmp	r1, #8192
 3678 00a0 18BF     		it	ne
 3679 00a2 B1F5804F 		cmpne	r1, #16384
 3680 00a6 E5D1     		bne	.L311
 3681              	.L312:
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3682              		.loc 1 2331 0
 3683 00a8 072A     		cmp	r2, #7
 3684 00aa 52D8     		bhi	.L313
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3685              		.loc 1 2333 0
 3686 00ac 826F     		ldr	r2, [r0, #120]
 3687 00ae 9169     		ldr	r1, [r2, #24]
 3688 00b0 B1F5005F 		cmp	r1, #8192
 3689 00b4 31D0     		beq	.L327
 3690              	.L314:
ARM GAS  /tmp/ccJX0uiU.s 			page 144


2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3691              		.loc 1 2337 0
 3692 00b6 9269     		ldr	r2, [r2, #24]
 3693 00b8 B2F5804F 		cmp	r2, #16384
 3694 00bc 34D0     		beq	.L328
 3695              	.L315:
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3696              		.loc 1 2341 0
 3697 00be C26F     		ldr	r2, [r0, #124]
 3698 00c0 9169     		ldr	r1, [r2, #24]
 3699 00c2 B1F5005F 		cmp	r1, #8192
 3700 00c6 36D0     		beq	.L329
 3701              	.L316:
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3702              		.loc 1 2345 0
 3703 00c8 9269     		ldr	r2, [r2, #24]
 3704 00ca B2F5804F 		cmp	r2, #16384
 3705 00ce 39D0     		beq	.L330
 3706              	.L317:
 3707 00d0 1D46     		mov	r5, r3
 3708 00d2 0446     		mov	r4, r0
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 3709              		.loc 1 2367 0
 3710 00d4 C36F     		ldr	r3, [r0, #124]
 3711              	.LVL247:
 3712 00d6 574A     		ldr	r2, .L335
 3713 00d8 1A64     		str	r2, [r3, #64]
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3714              		.loc 1 2368 0
 3715 00da C36F     		ldr	r3, [r0, #124]
 3716 00dc 564A     		ldr	r2, .L335+4
 3717 00de DA63     		str	r2, [r3, #60]
2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3718              		.loc 1 2371 0
 3719 00e0 C36F     		ldr	r3, [r0, #124]
 3720 00e2 564A     		ldr	r2, .L335+8
 3721 00e4 DA64     		str	r2, [r3, #76]
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3722              		.loc 1 2374 0
 3723 00e6 C36F     		ldr	r3, [r0, #124]
 3724 00e8 0022     		movs	r2, #0
 3725 00ea 1A65     		str	r2, [r3, #80]
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                  hspi->RxXferCount))
 3726              		.loc 1 2377 0
 3727 00ec 0168     		ldr	r1, [r0]
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3728              		.loc 1 2378 0
 3729 00ee B0F86A30 		ldrh	r3, [r0, #106]
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                  hspi->RxXferCount))
 3730              		.loc 1 2377 0
 3731 00f2 426E     		ldr	r2, [r0, #100]
 3732 00f4 3031     		adds	r1, r1, #48
 3733 00f6 C06F     		ldr	r0, [r0, #124]
 3734              	.LVL248:
 3735 00f8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3736              	.LVL249:
 3737 00fc 0028     		cmp	r0, #0
ARM GAS  /tmp/ccJX0uiU.s 			page 145


 3738 00fe 42D0     		beq	.L319
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3739              		.loc 1 2381 0
 3740 0100 D4F88430 		ldr	r3, [r4, #132]
 3741 0104 43F01003 		orr	r3, r3, #16
 3742 0108 C4F88430 		str	r3, [r4, #132]
2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3743              		.loc 1 2384 0
 3744 010c 0023     		movs	r3, #0
 3745 010e 84F88030 		strb	r3, [r4, #128]
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3746              		.loc 1 2386 0
 3747 0112 0122     		movs	r2, #1
 3748 0114 84F88120 		strb	r2, [r4, #129]
 3749              	.LVL250:
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3750              		.loc 1 2388 0
 3751 0118 B5E7     		b	.L306
 3752              	.LVL251:
 3753              	.L327:
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3754              		.loc 1 2335 0
 3755 011a B0F86210 		ldrh	r1, [r0, #98]
 3756 011e 0131     		adds	r1, r1, #1
 3757 0120 4908     		lsrs	r1, r1, #1
 3758 0122 A0F86210 		strh	r1, [r0, #98]	@ movhi
 3759 0126 C6E7     		b	.L314
 3760              	.L328:
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3761              		.loc 1 2339 0
 3762 0128 B0F86220 		ldrh	r2, [r0, #98]
 3763 012c 0332     		adds	r2, r2, #3
 3764 012e 9208     		lsrs	r2, r2, #2
 3765 0130 A0F86220 		strh	r2, [r0, #98]	@ movhi
 3766 0134 C3E7     		b	.L315
 3767              	.L329:
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3768              		.loc 1 2343 0
 3769 0136 B0F86A10 		ldrh	r1, [r0, #106]
 3770 013a 0131     		adds	r1, r1, #1
 3771 013c 4908     		lsrs	r1, r1, #1
 3772 013e A0F86A10 		strh	r1, [r0, #106]	@ movhi
 3773 0142 C1E7     		b	.L316
 3774              	.L330:
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3775              		.loc 1 2347 0
 3776 0144 B0F86A20 		ldrh	r2, [r0, #106]
 3777 0148 0332     		adds	r2, r2, #3
 3778 014a 9208     		lsrs	r2, r2, #2
 3779 014c A0F86A20 		strh	r2, [r0, #106]	@ movhi
 3780 0150 BEE7     		b	.L317
 3781              	.L313:
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3782              		.loc 1 2350 0
 3783 0152 0F2A     		cmp	r2, #15
 3784 0154 BCD8     		bhi	.L317
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
ARM GAS  /tmp/ccJX0uiU.s 			page 146


 3785              		.loc 1 2352 0
 3786 0156 826F     		ldr	r2, [r0, #120]
 3787 0158 9269     		ldr	r2, [r2, #24]
 3788 015a B2F5804F 		cmp	r2, #16384
 3789 015e 0BD0     		beq	.L331
 3790              	.L318:
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 3791              		.loc 1 2356 0
 3792 0160 C26F     		ldr	r2, [r0, #124]
 3793 0162 9269     		ldr	r2, [r2, #24]
 3794 0164 B2F5804F 		cmp	r2, #16384
 3795 0168 B2D1     		bne	.L317
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3796              		.loc 1 2358 0
 3797 016a B0F86A20 		ldrh	r2, [r0, #106]
 3798 016e 0132     		adds	r2, r2, #1
 3799 0170 5208     		lsrs	r2, r2, #1
 3800 0172 A0F86A20 		strh	r2, [r0, #106]	@ movhi
 3801 0176 ABE7     		b	.L317
 3802              	.L331:
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 3803              		.loc 1 2354 0
 3804 0178 B0F86220 		ldrh	r2, [r0, #98]
 3805 017c 0132     		adds	r2, r2, #1
 3806 017e 5208     		lsrs	r2, r2, #1
 3807 0180 A0F86220 		strh	r2, [r0, #98]	@ movhi
 3808 0184 ECE7     		b	.L318
 3809              	.LVL252:
 3810              	.L319:
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3811              		.loc 1 2392 0
 3812 0186 2268     		ldr	r2, [r4]
 3813 0188 9368     		ldr	r3, [r2, #8]
 3814 018a 43F48043 		orr	r3, r3, #16384
 3815 018e 9360     		str	r3, [r2, #8]
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 3816              		.loc 1 2396 0
 3817 0190 A26F     		ldr	r2, [r4, #120]
 3818 0192 0023     		movs	r3, #0
 3819 0194 1364     		str	r3, [r2, #64]
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 3820              		.loc 1 2397 0
 3821 0196 A26F     		ldr	r2, [r4, #120]
 3822 0198 D363     		str	r3, [r2, #60]
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3823              		.loc 1 2398 0
 3824 019a A26F     		ldr	r2, [r4, #120]
 3825 019c 1365     		str	r3, [r2, #80]
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3826              		.loc 1 2401 0
 3827 019e A36F     		ldr	r3, [r4, #120]
 3828 01a0 264A     		ldr	r2, .L335+8
 3829 01a2 DA64     		str	r2, [r3, #76]
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                  hspi->TxXferCount))
 3830              		.loc 1 2404 0
 3831 01a4 2268     		ldr	r2, [r4]
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccJX0uiU.s 			page 147


 3832              		.loc 1 2405 0
 3833 01a6 B4F86230 		ldrh	r3, [r4, #98]
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                  hspi->TxXferCount))
 3834              		.loc 1 2404 0
 3835 01aa 2032     		adds	r2, r2, #32
 3836 01ac E16D     		ldr	r1, [r4, #92]
 3837 01ae A06F     		ldr	r0, [r4, #120]
 3838 01b0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3839              	.LVL253:
 3840 01b4 0246     		mov	r2, r0
 3841 01b6 08BB     		cbnz	r0, .L332
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3842              		.loc 1 2418 0
 3843 01b8 A36F     		ldr	r3, [r4, #120]
 3844 01ba DB69     		ldr	r3, [r3, #28]
 3845 01bc B3F5807F 		cmp	r3, #256
 3846 01c0 29D0     		beq	.L333
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3847              		.loc 1 2424 0
 3848 01c2 2168     		ldr	r1, [r4]
 3849 01c4 4868     		ldr	r0, [r1, #4]
 3850 01c6 1E4B     		ldr	r3, .L335+12
 3851 01c8 0340     		ands	r3, r3, r0
 3852 01ca 2B43     		orrs	r3, r3, r5
 3853 01cc 4B60     		str	r3, [r1, #4]
 3854              	.L322:
2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3855              		.loc 1 2428 0
 3856 01ce 2168     		ldr	r1, [r4]
 3857 01d0 8B68     		ldr	r3, [r1, #8]
 3858 01d2 43F40043 		orr	r3, r3, #32768
 3859 01d6 8B60     		str	r3, [r1, #8]
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3860              		.loc 1 2431 0
 3861 01d8 2168     		ldr	r1, [r4]
 3862 01da 0B69     		ldr	r3, [r1, #16]
 3863 01dc 43F45873 		orr	r3, r3, #864
 3864 01e0 0B61     		str	r3, [r1, #16]
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3865              		.loc 1 2434 0
 3866 01e2 2168     		ldr	r1, [r4]
 3867 01e4 0B68     		ldr	r3, [r1]
 3868 01e6 43F00103 		orr	r3, r3, #1
 3869 01ea 0B60     		str	r3, [r1]
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3870              		.loc 1 2436 0
 3871 01ec 6368     		ldr	r3, [r4, #4]
 3872 01ee B3F5800F 		cmp	r3, #4194304
 3873 01f2 16D0     		beq	.L334
 3874              	.L323:
2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   return errorcode;
 3875              		.loc 1 2443 0
 3876 01f4 0023     		movs	r3, #0
 3877 01f6 84F88030 		strb	r3, [r4, #128]
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 3878              		.loc 1 2444 0
 3879 01fa 44E7     		b	.L306
ARM GAS  /tmp/ccJX0uiU.s 			page 148


 3880              	.L332:
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3881              		.loc 1 2408 0
 3882 01fc D4F88430 		ldr	r3, [r4, #132]
 3883 0200 43F01003 		orr	r3, r3, #16
 3884 0204 C4F88430 		str	r3, [r4, #132]
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3885              		.loc 1 2411 0
 3886 0208 0023     		movs	r3, #0
 3887 020a 84F88030 		strb	r3, [r4, #128]
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3888              		.loc 1 2413 0
 3889 020e 0122     		movs	r2, #1
 3890 0210 84F88120 		strb	r2, [r4, #129]
 3891              	.LVL254:
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3892              		.loc 1 2415 0
 3893 0214 37E7     		b	.L306
 3894              	.LVL255:
 3895              	.L333:
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3896              		.loc 1 2420 0
 3897 0216 2168     		ldr	r1, [r4]
 3898 0218 4868     		ldr	r0, [r1, #4]
 3899 021a 094B     		ldr	r3, .L335+12
 3900 021c 0340     		ands	r3, r3, r0
 3901 021e 4B60     		str	r3, [r1, #4]
 3902 0220 D5E7     		b	.L322
 3903              	.L334:
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 3904              		.loc 1 2439 0
 3905 0222 2168     		ldr	r1, [r4]
 3906 0224 0B68     		ldr	r3, [r1]
 3907 0226 43F40073 		orr	r3, r3, #512
 3908 022a 0B60     		str	r3, [r1]
 3909 022c E2E7     		b	.L323
 3910              	.LVL256:
 3911              	.L324:
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3912              		.loc 1 2282 0
 3913 022e 0222     		movs	r2, #2
 3914              	.LVL257:
 3915 0230 29E7     		b	.L306
 3916              	.L336:
 3917 0232 00BF     		.align	2
 3918              	.L335:
 3919 0234 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 3920 0238 00000000 		.word	SPI_DMATransmitReceiveCplt
 3921 023c 00000000 		.word	SPI_DMAError
 3922 0240 0000FFFF 		.word	-65536
 3923              		.cfi_endproc
 3924              	.LFE156:
 3926              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 3927              		.align	1
 3928              		.global	HAL_SPI_Abort
 3929              		.syntax unified
 3930              		.thumb
ARM GAS  /tmp/ccJX0uiU.s 			page 149


 3931              		.thumb_func
 3932              		.fpu fpv5-d16
 3934              	HAL_SPI_Abort:
 3935              	.LFB157:
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 3936              		.loc 1 2461 0
 3937              		.cfi_startproc
 3938              		@ args = 0, pretend = 0, frame = 8
 3939              		@ frame_needed = 0, uses_anonymous_args = 0
 3940              	.LVL258:
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3941              		.loc 1 2467 0
 3942 0000 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 3943 0004 012B     		cmp	r3, #1
 3944 0006 00F09A80 		beq	.L351
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 3945              		.loc 1 2461 0 discriminator 2
 3946 000a 10B5     		push	{r4, lr}
 3947              	.LCFI29:
 3948              		.cfi_def_cfa_offset 8
 3949              		.cfi_offset 4, -8
 3950              		.cfi_offset 14, -4
 3951 000c 82B0     		sub	sp, sp, #8
 3952              	.LCFI30:
 3953              		.cfi_def_cfa_offset 16
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3954              		.loc 1 2467 0 discriminator 2
 3955 000e 0123     		movs	r3, #1
 3956 0010 80F88030 		strb	r3, [r0, #128]
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3957              		.loc 1 2470 0 discriminator 2
 3958 0014 0723     		movs	r3, #7
 3959 0016 80F88130 		strb	r3, [r0, #129]
 3960              	.LVL259:
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3961              		.loc 1 2474 0 discriminator 2
 3962 001a 4A4B     		ldr	r3, .L362
 3963 001c 1B68     		ldr	r3, [r3]
 3964 001e 4A4A     		ldr	r2, .L362+4
 3965 0020 A2FB0323 		umull	r2, r3, r2, r3
 3966 0024 5B0A     		lsrs	r3, r3, #9
 3967 0026 6422     		movs	r2, #100
 3968 0028 02FB03F3 		mul	r3, r2, r3
 3969 002c 0193     		str	r3, [sp, #4]
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 3970              		.loc 1 2477 0 discriminator 2
 3971 002e 0368     		ldr	r3, [r0]
 3972 0030 1A68     		ldr	r2, [r3]
 3973 0032 12F4007F 		tst	r2, #512
 3974 0036 40D0     		beq	.L339
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
 3975              		.loc 1 2480 0
 3976 0038 1A69     		ldr	r2, [r3, #16]
 3977 003a 22F00802 		bic	r2, r2, #8
 3978 003e 1A61     		str	r2, [r3, #16]
 3979              	.L342:
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
ARM GAS  /tmp/ccJX0uiU.s 			page 150


 3980              		.loc 1 2483 0
 3981 0040 019B     		ldr	r3, [sp, #4]
 3982 0042 013B     		subs	r3, r3, #1
 3983 0044 0193     		str	r3, [sp, #4]
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 3984              		.loc 1 2484 0
 3985 0046 019B     		ldr	r3, [sp, #4]
 3986 0048 2BB1     		cbz	r3, .L357
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 3987              		.loc 1 2490 0
 3988 004a 0368     		ldr	r3, [r0]
 3989 004c 1B69     		ldr	r3, [r3, #16]
 3990 004e 13F0080F 		tst	r3, #8
 3991 0052 F5D1     		bne	.L342
 3992 0054 05E0     		b	.L341
 3993              	.L357:
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 3994              		.loc 1 2486 0
 3995 0056 D0F88430 		ldr	r3, [r0, #132]
 3996 005a 43F04003 		orr	r3, r3, #64
 3997 005e C0F88430 		str	r3, [r0, #132]
 3998              	.L341:
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
 3999              		.loc 1 2493 0
 4000 0062 0268     		ldr	r2, [r0]
 4001 0064 1368     		ldr	r3, [r2]
 4002 0066 43F48063 		orr	r3, r3, #1024
 4003 006a 1360     		str	r3, [r2]
 4004              	.L345:
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
 4005              		.loc 1 2496 0
 4006 006c 019B     		ldr	r3, [sp, #4]
 4007 006e 013B     		subs	r3, r3, #1
 4008 0070 0193     		str	r3, [sp, #4]
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 4009              		.loc 1 2497 0
 4010 0072 019B     		ldr	r3, [sp, #4]
 4011 0074 2BB1     		cbz	r3, .L358
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4012              		.loc 1 2503 0
 4013 0076 0368     		ldr	r3, [r0]
 4014 0078 1B68     		ldr	r3, [r3]
 4015 007a 13F4007F 		tst	r3, #512
 4016 007e F5D1     		bne	.L345
 4017 0080 05E0     		b	.L344
 4018              	.L358:
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 4019              		.loc 1 2499 0
 4020 0082 D0F88430 		ldr	r3, [r0, #132]
 4021 0086 43F04003 		orr	r3, r3, #64
 4022 008a C0F88430 		str	r3, [r0, #132]
 4023              	.L344:
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
 4024              		.loc 1 2506 0
 4025 008e 0268     		ldr	r2, [r0]
 4026 0090 9369     		ldr	r3, [r2, #24]
 4027 0092 43F40063 		orr	r3, r3, #2048
ARM GAS  /tmp/ccJX0uiU.s 			page 151


 4028 0096 9361     		str	r3, [r2, #24]
 4029              	.L347:
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
 4030              		.loc 1 2509 0
 4031 0098 019B     		ldr	r3, [sp, #4]
 4032 009a 013B     		subs	r3, r3, #1
 4033 009c 0193     		str	r3, [sp, #4]
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 4034              		.loc 1 2510 0
 4035 009e 019B     		ldr	r3, [sp, #4]
 4036 00a0 2BB1     		cbz	r3, .L359
2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 4037              		.loc 1 2516 0
 4038 00a2 0368     		ldr	r3, [r0]
 4039 00a4 5B69     		ldr	r3, [r3, #20]
 4040 00a6 13F4006F 		tst	r3, #2048
 4041 00aa F5D1     		bne	.L347
 4042 00ac 05E0     		b	.L339
 4043              	.L359:
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 4044              		.loc 1 2512 0
 4045 00ae D0F88430 		ldr	r3, [r0, #132]
 4046 00b2 43F04003 		orr	r3, r3, #64
 4047 00b6 C0F88430 		str	r3, [r0, #132]
 4048              	.L339:
 4049 00ba 0446     		mov	r4, r0
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4050              		.loc 1 2520 0
 4051 00bc 0368     		ldr	r3, [r0]
 4052 00be 9B68     		ldr	r3, [r3, #8]
 4053 00c0 13F4004F 		tst	r3, #32768
 4054 00c4 07D0     		beq	.L348
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4055              		.loc 1 2522 0
 4056 00c6 836F     		ldr	r3, [r0, #120]
 4057 00c8 2BB1     		cbz	r3, .L348
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4058              		.loc 1 2525 0
 4059 00ca 0022     		movs	r2, #0
 4060 00cc 1A65     		str	r2, [r3, #80]
2528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 4061              		.loc 1 2528 0
 4062 00ce 806F     		ldr	r0, [r0, #120]
 4063              	.LVL260:
 4064 00d0 FFF7FEFF 		bl	HAL_DMA_Abort
 4065              	.LVL261:
 4066 00d4 F8B9     		cbnz	r0, .L360
 4067              	.L348:
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4068              		.loc 1 2539 0
 4069 00d6 2368     		ldr	r3, [r4]
 4070 00d8 9B68     		ldr	r3, [r3, #8]
 4071 00da 13F4804F 		tst	r3, #16384
 4072 00de 07D0     		beq	.L349
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4073              		.loc 1 2541 0
 4074 00e0 E36F     		ldr	r3, [r4, #124]
ARM GAS  /tmp/ccJX0uiU.s 			page 152


 4075 00e2 2BB1     		cbz	r3, .L349
2544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4076              		.loc 1 2544 0
 4077 00e4 0022     		movs	r2, #0
 4078 00e6 1A65     		str	r2, [r3, #80]
2547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 4079              		.loc 1 2547 0
 4080 00e8 E06F     		ldr	r0, [r4, #124]
 4081 00ea FFF7FEFF 		bl	HAL_DMA_Abort
 4082              	.LVL262:
 4083 00ee D8B9     		cbnz	r0, .L361
 4084              	.L349:
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4085              		.loc 1 2558 0
 4086 00f0 2046     		mov	r0, r4
 4087 00f2 FFF7FEFF 		bl	SPI_AbortTransfer
 4088              	.LVL263:
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4089              		.loc 1 2561 0
 4090 00f6 D4F88430 		ldr	r3, [r4, #132]
 4091 00fa 13F0400F 		tst	r3, #64
 4092 00fe 1CD1     		bne	.L352
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 4093              		.loc 1 2569 0
 4094 0100 0020     		movs	r0, #0
 4095 0102 C4F88400 		str	r0, [r4, #132]
 4096              	.L350:
 4097              	.LVL264:
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4098              		.loc 1 2573 0
 4099 0106 0023     		movs	r3, #0
 4100 0108 84F88030 		strb	r3, [r4, #128]
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4101              		.loc 1 2576 0
 4102 010c 0123     		movs	r3, #1
 4103 010e 84F88130 		strb	r3, [r4, #129]
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4104              		.loc 1 2579 0
 4105 0112 02B0     		add	sp, sp, #8
 4106              	.LCFI31:
 4107              		.cfi_remember_state
 4108              		.cfi_def_cfa_offset 8
 4109              		@ sp needed
 4110 0114 10BD     		pop	{r4, pc}
 4111              	.LVL265:
 4112              	.L360:
 4113              	.LCFI32:
 4114              		.cfi_restore_state
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 4115              		.loc 1 2530 0
 4116 0116 A06F     		ldr	r0, [r4, #120]
 4117 0118 FFF7FEFF 		bl	HAL_DMA_GetError
 4118              	.LVL266:
 4119 011c 2028     		cmp	r0, #32
 4120 011e DAD1     		bne	.L348
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 4121              		.loc 1 2532 0
ARM GAS  /tmp/ccJX0uiU.s 			page 153


 4122 0120 4023     		movs	r3, #64
 4123 0122 C4F88430 		str	r3, [r4, #132]
 4124 0126 D6E7     		b	.L348
 4125              	.L361:
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 4126              		.loc 1 2549 0
 4127 0128 E06F     		ldr	r0, [r4, #124]
 4128 012a FFF7FEFF 		bl	HAL_DMA_GetError
 4129              	.LVL267:
 4130 012e 2028     		cmp	r0, #32
 4131 0130 DED1     		bne	.L349
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 4132              		.loc 1 2551 0
 4133 0132 4023     		movs	r3, #64
 4134 0134 C4F88430 		str	r3, [r4, #132]
 4135 0138 DAE7     		b	.L349
 4136              	.L352:
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 4137              		.loc 1 2564 0
 4138 013a 0120     		movs	r0, #1
 4139 013c E3E7     		b	.L350
 4140              	.LVL268:
 4141              	.L351:
 4142              	.LCFI33:
 4143              		.cfi_def_cfa_offset 0
 4144              		.cfi_restore 4
 4145              		.cfi_restore 14
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4146              		.loc 1 2467 0
 4147 013e 0220     		movs	r0, #2
 4148              	.LVL269:
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4149              		.loc 1 2579 0
 4150 0140 7047     		bx	lr
 4151              	.L363:
 4152 0142 00BF     		.align	2
 4153              	.L362:
 4154 0144 00000000 		.word	SystemCoreClock
 4155 0148 F1197605 		.word	91625969
 4156              		.cfi_endproc
 4157              	.LFE157:
 4159              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 4160              		.align	1
 4161              		.global	HAL_SPI_DMAPause
 4162              		.syntax unified
 4163              		.thumb
 4164              		.thumb_func
 4165              		.fpu fpv5-d16
 4167              	HAL_SPI_DMAPause:
 4168              	.LFB159:
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set error code to not supported */
 4169              		.loc 1 2746 0
 4170              		.cfi_startproc
 4171              		@ args = 0, pretend = 0, frame = 0
 4172              		@ frame_needed = 0, uses_anonymous_args = 0
 4173              		@ link register save eliminated.
 4174              	.LVL270:
ARM GAS  /tmp/ccJX0uiU.s 			page 154


2748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4175              		.loc 1 2748 0
 4176 0000 D0F88430 		ldr	r3, [r0, #132]
 4177 0004 43F48063 		orr	r3, r3, #1024
 4178 0008 C0F88430 		str	r3, [r0, #132]
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4179              		.loc 1 2751 0
 4180 000c 0120     		movs	r0, #1
 4181              	.LVL271:
 4182 000e 7047     		bx	lr
 4183              		.cfi_endproc
 4184              	.LFE159:
 4186              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 4187              		.align	1
 4188              		.global	HAL_SPI_DMAResume
 4189              		.syntax unified
 4190              		.thumb
 4191              		.thumb_func
 4192              		.fpu fpv5-d16
 4194              	HAL_SPI_DMAResume:
 4195              	.LFB160:
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set error code to not supported */
 4196              		.loc 1 2761 0
 4197              		.cfi_startproc
 4198              		@ args = 0, pretend = 0, frame = 0
 4199              		@ frame_needed = 0, uses_anonymous_args = 0
 4200              		@ link register save eliminated.
 4201              	.LVL272:
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4202              		.loc 1 2763 0
 4203 0000 D0F88430 		ldr	r3, [r0, #132]
 4204 0004 43F48063 		orr	r3, r3, #1024
 4205 0008 C0F88430 		str	r3, [r0, #132]
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4206              		.loc 1 2766 0
 4207 000c 0120     		movs	r0, #1
 4208              	.LVL273:
 4209 000e 7047     		bx	lr
 4210              		.cfi_endproc
 4211              	.LFE160:
 4213              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 4214              		.align	1
 4215              		.global	HAL_SPI_DMAStop
 4216              		.syntax unified
 4217              		.thumb
 4218              		.thumb_func
 4219              		.fpu fpv5-d16
 4221              	HAL_SPI_DMAStop:
 4222              	.LFB161:
2776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Set error code to not supported */
 4223              		.loc 1 2776 0
 4224              		.cfi_startproc
 4225              		@ args = 0, pretend = 0, frame = 0
 4226              		@ frame_needed = 0, uses_anonymous_args = 0
 4227              		@ link register save eliminated.
 4228              	.LVL274:
2778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 155


 4229              		.loc 1 2778 0
 4230 0000 D0F88430 		ldr	r3, [r0, #132]
 4231 0004 43F48063 		orr	r3, r3, #1024
 4232 0008 C0F88430 		str	r3, [r0, #132]
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4233              		.loc 1 2781 0
 4234 000c 0120     		movs	r0, #1
 4235              	.LVL275:
 4236 000e 7047     		bx	lr
 4237              		.cfi_endproc
 4238              	.LFE161:
 4240              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 4241              		.align	1
 4242              		.weak	HAL_SPI_TxCpltCallback
 4243              		.syntax unified
 4244              		.thumb
 4245              		.thumb_func
 4246              		.fpu fpv5-d16
 4248              	HAL_SPI_TxCpltCallback:
 4249              	.LFB163:
3044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4250              		.loc 1 3044 0
 4251              		.cfi_startproc
 4252              		@ args = 0, pretend = 0, frame = 0
 4253              		@ frame_needed = 0, uses_anonymous_args = 0
 4254              		@ link register save eliminated.
 4255              	.LVL276:
3051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4256              		.loc 1 3051 0
 4257 0000 7047     		bx	lr
 4258              		.cfi_endproc
 4259              	.LFE163:
 4261              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 4262              		.align	1
 4263              		.syntax unified
 4264              		.thumb
 4265              		.thumb_func
 4266              		.fpu fpv5-d16
 4268              	SPI_DMATransmitCplt:
 4269              	.LFB174:
3245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4270              		.loc 1 3245 0
 4271              		.cfi_startproc
 4272              		@ args = 0, pretend = 0, frame = 0
 4273              		@ frame_needed = 0, uses_anonymous_args = 0
 4274              	.LVL277:
 4275 0000 08B5     		push	{r3, lr}
 4276              	.LCFI34:
 4277              		.cfi_def_cfa_offset 8
 4278              		.cfi_offset 3, -8
 4279              		.cfi_offset 14, -4
3246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4280              		.loc 1 3246 0
 4281 0002 806B     		ldr	r0, [r0, #56]
 4282              	.LVL278:
3248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4283              		.loc 1 3248 0
ARM GAS  /tmp/ccJX0uiU.s 			page 156


 4284 0004 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 4285 0008 DBB2     		uxtb	r3, r3
 4286 000a 072B     		cmp	r3, #7
 4287 000c 09D0     		beq	.L368
3250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4288              		.loc 1 3250 0
 4289 000e 836F     		ldr	r3, [r0, #120]
 4290 0010 DB69     		ldr	r3, [r3, #28]
 4291 0012 B3F5807F 		cmp	r3, #256
 4292 0016 05D0     		beq	.L372
3261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 4293              		.loc 1 3261 0
 4294 0018 0268     		ldr	r2, [r0]
 4295 001a 1369     		ldr	r3, [r2, #16]
 4296 001c 43F00803 		orr	r3, r3, #8
 4297 0020 1361     		str	r3, [r2, #16]
 4298              	.LVL279:
 4299              	.L368:
3264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4300              		.loc 1 3264 0
 4301 0022 08BD     		pop	{r3, pc}
 4302              	.LVL280:
 4303              	.L372:
3255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4304              		.loc 1 3255 0
 4305 0024 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 4306              	.LVL281:
 4307 0028 FBE7     		b	.L368
 4308              		.cfi_endproc
 4309              	.LFE174:
 4311              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 4312              		.align	1
 4313              		.weak	HAL_SPI_RxCpltCallback
 4314              		.syntax unified
 4315              		.thumb
 4316              		.thumb_func
 4317              		.fpu fpv5-d16
 4319              	HAL_SPI_RxCpltCallback:
 4320              	.LFB164:
3060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4321              		.loc 1 3060 0
 4322              		.cfi_startproc
 4323              		@ args = 0, pretend = 0, frame = 0
 4324              		@ frame_needed = 0, uses_anonymous_args = 0
 4325              		@ link register save eliminated.
 4326              	.LVL282:
3067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4327              		.loc 1 3067 0
 4328 0000 7047     		bx	lr
 4329              		.cfi_endproc
 4330              	.LFE164:
 4332              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 4333              		.align	1
 4334              		.syntax unified
 4335              		.thumb
 4336              		.thumb_func
 4337              		.fpu fpv5-d16
ARM GAS  /tmp/ccJX0uiU.s 			page 157


 4339              	SPI_DMAReceiveCplt:
 4340              	.LFB175:
3273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4341              		.loc 1 3273 0
 4342              		.cfi_startproc
 4343              		@ args = 0, pretend = 0, frame = 0
 4344              		@ frame_needed = 0, uses_anonymous_args = 0
 4345              	.LVL283:
 4346 0000 08B5     		push	{r3, lr}
 4347              	.LCFI35:
 4348              		.cfi_def_cfa_offset 8
 4349              		.cfi_offset 3, -8
 4350              		.cfi_offset 14, -4
3274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4351              		.loc 1 3274 0
 4352 0002 806B     		ldr	r0, [r0, #56]
 4353              	.LVL284:
3276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4354              		.loc 1 3276 0
 4355 0004 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 4356 0008 DBB2     		uxtb	r3, r3
 4357 000a 072B     		cmp	r3, #7
 4358 000c 09D0     		beq	.L374
3278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4359              		.loc 1 3278 0
 4360 000e C36F     		ldr	r3, [r0, #124]
 4361 0010 DB69     		ldr	r3, [r3, #28]
 4362 0012 B3F5807F 		cmp	r3, #256
 4363 0016 05D0     		beq	.L378
3289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 4364              		.loc 1 3289 0
 4365 0018 0268     		ldr	r2, [r0]
 4366 001a 1369     		ldr	r3, [r2, #16]
 4367 001c 43F00803 		orr	r3, r3, #8
 4368 0020 1361     		str	r3, [r2, #16]
 4369              	.LVL285:
 4370              	.L374:
3292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4371              		.loc 1 3292 0
 4372 0022 08BD     		pop	{r3, pc}
 4373              	.LVL286:
 4374              	.L378:
3283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4375              		.loc 1 3283 0
 4376 0024 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4377              	.LVL287:
 4378 0028 FBE7     		b	.L374
 4379              		.cfi_endproc
 4380              	.LFE175:
 4382              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 4383              		.align	1
 4384              		.weak	HAL_SPI_TxRxCpltCallback
 4385              		.syntax unified
 4386              		.thumb
 4387              		.thumb_func
 4388              		.fpu fpv5-d16
 4390              	HAL_SPI_TxRxCpltCallback:
ARM GAS  /tmp/ccJX0uiU.s 			page 158


 4391              	.LFB165:
3076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4392              		.loc 1 3076 0
 4393              		.cfi_startproc
 4394              		@ args = 0, pretend = 0, frame = 0
 4395              		@ frame_needed = 0, uses_anonymous_args = 0
 4396              		@ link register save eliminated.
 4397              	.LVL288:
3083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4398              		.loc 1 3083 0
 4399 0000 7047     		bx	lr
 4400              		.cfi_endproc
 4401              	.LFE165:
 4403              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 4404              		.align	1
 4405              		.syntax unified
 4406              		.thumb
 4407              		.thumb_func
 4408              		.fpu fpv5-d16
 4410              	SPI_DMATransmitReceiveCplt:
 4411              	.LFB176:
3301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4412              		.loc 1 3301 0
 4413              		.cfi_startproc
 4414              		@ args = 0, pretend = 0, frame = 0
 4415              		@ frame_needed = 0, uses_anonymous_args = 0
 4416              	.LVL289:
 4417 0000 08B5     		push	{r3, lr}
 4418              	.LCFI36:
 4419              		.cfi_def_cfa_offset 8
 4420              		.cfi_offset 3, -8
 4421              		.cfi_offset 14, -4
3302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4422              		.loc 1 3302 0
 4423 0002 806B     		ldr	r0, [r0, #56]
 4424              	.LVL290:
3304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4425              		.loc 1 3304 0
 4426 0004 90F88130 		ldrb	r3, [r0, #129]	@ zero_extendqisi2
 4427 0008 DBB2     		uxtb	r3, r3
 4428 000a 072B     		cmp	r3, #7
 4429 000c 09D0     		beq	.L380
3306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4430              		.loc 1 3306 0
 4431 000e 836F     		ldr	r3, [r0, #120]
 4432 0010 DB69     		ldr	r3, [r3, #28]
 4433 0012 B3F5807F 		cmp	r3, #256
 4434 0016 05D0     		beq	.L384
3317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 4435              		.loc 1 3317 0
 4436 0018 0268     		ldr	r2, [r0]
 4437 001a 1369     		ldr	r3, [r2, #16]
 4438 001c 43F00803 		orr	r3, r3, #8
 4439 0020 1361     		str	r3, [r2, #16]
 4440              	.LVL291:
 4441              	.L380:
3320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 159


 4442              		.loc 1 3320 0
 4443 0022 08BD     		pop	{r3, pc}
 4444              	.LVL292:
 4445              	.L384:
3311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4446              		.loc 1 3311 0
 4447 0024 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4448              	.LVL293:
 4449 0028 FBE7     		b	.L380
 4450              		.cfi_endproc
 4451              	.LFE176:
 4453              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 4454              		.align	1
 4455              		.weak	HAL_SPI_TxHalfCpltCallback
 4456              		.syntax unified
 4457              		.thumb
 4458              		.thumb_func
 4459              		.fpu fpv5-d16
 4461              	HAL_SPI_TxHalfCpltCallback:
 4462              	.LFB166:
3092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4463              		.loc 1 3092 0
 4464              		.cfi_startproc
 4465              		@ args = 0, pretend = 0, frame = 0
 4466              		@ frame_needed = 0, uses_anonymous_args = 0
 4467              		@ link register save eliminated.
 4468              	.LVL294:
3099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4469              		.loc 1 3099 0
 4470 0000 7047     		bx	lr
 4471              		.cfi_endproc
 4472              	.LFE166:
 4474              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 4475              		.align	1
 4476              		.syntax unified
 4477              		.thumb
 4478              		.thumb_func
 4479              		.fpu fpv5-d16
 4481              	SPI_DMAHalfTransmitCplt:
 4482              	.LFB177:
3329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4483              		.loc 1 3329 0
 4484              		.cfi_startproc
 4485              		@ args = 0, pretend = 0, frame = 0
 4486              		@ frame_needed = 0, uses_anonymous_args = 0
 4487              	.LVL295:
 4488 0000 08B5     		push	{r3, lr}
 4489              	.LCFI37:
 4490              		.cfi_def_cfa_offset 8
 4491              		.cfi_offset 3, -8
 4492              		.cfi_offset 14, -4
 4493              	.LVL296:
3335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4494              		.loc 1 3335 0
 4495 0002 806B     		ldr	r0, [r0, #56]
 4496              	.LVL297:
 4497 0004 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
ARM GAS  /tmp/ccJX0uiU.s 			page 160


 4498              	.LVL298:
3337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4499              		.loc 1 3337 0
 4500 0008 08BD     		pop	{r3, pc}
 4501              		.cfi_endproc
 4502              	.LFE177:
 4504              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 4505              		.align	1
 4506              		.weak	HAL_SPI_RxHalfCpltCallback
 4507              		.syntax unified
 4508              		.thumb
 4509              		.thumb_func
 4510              		.fpu fpv5-d16
 4512              	HAL_SPI_RxHalfCpltCallback:
 4513              	.LFB167:
3108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4514              		.loc 1 3108 0
 4515              		.cfi_startproc
 4516              		@ args = 0, pretend = 0, frame = 0
 4517              		@ frame_needed = 0, uses_anonymous_args = 0
 4518              		@ link register save eliminated.
 4519              	.LVL299:
3115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4520              		.loc 1 3115 0
 4521 0000 7047     		bx	lr
 4522              		.cfi_endproc
 4523              	.LFE167:
 4525              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 4526              		.align	1
 4527              		.syntax unified
 4528              		.thumb
 4529              		.thumb_func
 4530              		.fpu fpv5-d16
 4532              	SPI_DMAHalfReceiveCplt:
 4533              	.LFB178:
3346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4534              		.loc 1 3346 0
 4535              		.cfi_startproc
 4536              		@ args = 0, pretend = 0, frame = 0
 4537              		@ frame_needed = 0, uses_anonymous_args = 0
 4538              	.LVL300:
 4539 0000 08B5     		push	{r3, lr}
 4540              	.LCFI38:
 4541              		.cfi_def_cfa_offset 8
 4542              		.cfi_offset 3, -8
 4543              		.cfi_offset 14, -4
 4544              	.LVL301:
3352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4545              		.loc 1 3352 0
 4546 0002 806B     		ldr	r0, [r0, #56]
 4547              	.LVL302:
 4548 0004 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
 4549              	.LVL303:
3354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4550              		.loc 1 3354 0
 4551 0008 08BD     		pop	{r3, pc}
 4552              		.cfi_endproc
ARM GAS  /tmp/ccJX0uiU.s 			page 161


 4553              	.LFE178:
 4555              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 4556              		.align	1
 4557              		.weak	HAL_SPI_TxRxHalfCpltCallback
 4558              		.syntax unified
 4559              		.thumb
 4560              		.thumb_func
 4561              		.fpu fpv5-d16
 4563              	HAL_SPI_TxRxHalfCpltCallback:
 4564              	.LFB168:
3124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4565              		.loc 1 3124 0
 4566              		.cfi_startproc
 4567              		@ args = 0, pretend = 0, frame = 0
 4568              		@ frame_needed = 0, uses_anonymous_args = 0
 4569              		@ link register save eliminated.
 4570              	.LVL304:
3131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4571              		.loc 1 3131 0
 4572 0000 7047     		bx	lr
 4573              		.cfi_endproc
 4574              	.LFE168:
 4576              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 4577              		.align	1
 4578              		.syntax unified
 4579              		.thumb
 4580              		.thumb_func
 4581              		.fpu fpv5-d16
 4583              	SPI_DMAHalfTransmitReceiveCplt:
 4584              	.LFB179:
3363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4585              		.loc 1 3363 0
 4586              		.cfi_startproc
 4587              		@ args = 0, pretend = 0, frame = 0
 4588              		@ frame_needed = 0, uses_anonymous_args = 0
 4589              	.LVL305:
 4590 0000 08B5     		push	{r3, lr}
 4591              	.LCFI39:
 4592              		.cfi_def_cfa_offset 8
 4593              		.cfi_offset 3, -8
 4594              		.cfi_offset 14, -4
 4595              	.LVL306:
3369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4596              		.loc 1 3369 0
 4597 0002 806B     		ldr	r0, [r0, #56]
 4598              	.LVL307:
 4599 0004 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
 4600              	.LVL308:
3371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4601              		.loc 1 3371 0
 4602 0008 08BD     		pop	{r3, pc}
 4603              		.cfi_endproc
 4604              	.LFE179:
 4606              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 4607              		.align	1
 4608              		.weak	HAL_SPI_ErrorCallback
 4609              		.syntax unified
ARM GAS  /tmp/ccJX0uiU.s 			page 162


 4610              		.thumb
 4611              		.thumb_func
 4612              		.fpu fpv5-d16
 4614              	HAL_SPI_ErrorCallback:
 4615              	.LFB169:
3140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4616              		.loc 1 3140 0
 4617              		.cfi_startproc
 4618              		@ args = 0, pretend = 0, frame = 0
 4619              		@ frame_needed = 0, uses_anonymous_args = 0
 4620              		@ link register save eliminated.
 4621              	.LVL309:
3150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4622              		.loc 1 3150 0
 4623 0000 7047     		bx	lr
 4624              		.cfi_endproc
 4625              	.LFE169:
 4627              		.section	.text.SPI_DMAError,"ax",%progbits
 4628              		.align	1
 4629              		.syntax unified
 4630              		.thumb
 4631              		.thumb_func
 4632              		.fpu fpv5-d16
 4634              	SPI_DMAError:
 4635              	.LFB180:
3380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4636              		.loc 1 3380 0
 4637              		.cfi_startproc
 4638              		@ args = 0, pretend = 0, frame = 0
 4639              		@ frame_needed = 0, uses_anonymous_args = 0
 4640              	.LVL310:
 4641 0000 10B5     		push	{r4, lr}
 4642              	.LCFI40:
 4643              		.cfi_def_cfa_offset 8
 4644              		.cfi_offset 4, -8
 4645              		.cfi_offset 14, -4
3381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4646              		.loc 1 3381 0
 4647 0002 846B     		ldr	r4, [r0, #56]
 4648              	.LVL311:
3384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4649              		.loc 1 3384 0
 4650 0004 FFF7FEFF 		bl	HAL_DMA_GetError
 4651              	.LVL312:
 4652 0008 0228     		cmp	r0, #2
 4653 000a 0ED0     		beq	.L395
3387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4654              		.loc 1 3387 0
 4655 000c 2046     		mov	r0, r4
 4656 000e FFF7FEFF 		bl	SPI_CloseTransfer
 4657              	.LVL313:
3389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4658              		.loc 1 3389 0
 4659 0012 D4F88430 		ldr	r3, [r4, #132]
 4660 0016 43F01003 		orr	r3, r3, #16
 4661 001a C4F88430 		str	r3, [r4, #132]
3390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
ARM GAS  /tmp/ccJX0uiU.s 			page 163


 4662              		.loc 1 3390 0
 4663 001e 0123     		movs	r3, #1
 4664 0020 84F88130 		strb	r3, [r4, #129]
3394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4665              		.loc 1 3394 0
 4666 0024 2046     		mov	r0, r4
 4667 0026 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4668              	.LVL314:
 4669              	.L395:
3397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4670              		.loc 1 3397 0
 4671 002a 10BD     		pop	{r4, pc}
 4672              		.cfi_endproc
 4673              	.LFE180:
 4675              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 4676              		.align	1
 4677              		.syntax unified
 4678              		.thumb
 4679              		.thumb_func
 4680              		.fpu fpv5-d16
 4682              	SPI_DMAAbortOnError:
 4683              	.LFB181:
3406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4684              		.loc 1 3406 0
 4685              		.cfi_startproc
 4686              		@ args = 0, pretend = 0, frame = 0
 4687              		@ frame_needed = 0, uses_anonymous_args = 0
 4688              	.LVL315:
 4689 0000 08B5     		push	{r3, lr}
 4690              	.LCFI41:
 4691              		.cfi_def_cfa_offset 8
 4692              		.cfi_offset 3, -8
 4693              		.cfi_offset 14, -4
3407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->RxXferCount = (uint16_t) 0UL;
 4694              		.loc 1 3407 0
 4695 0002 806B     		ldr	r0, [r0, #56]
 4696              	.LVL316:
3408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   hspi->TxXferCount = (uint16_t) 0UL;
 4697              		.loc 1 3408 0
 4698 0004 0023     		movs	r3, #0
 4699 0006 A0F86A30 		strh	r3, [r0, #106]	@ movhi
3409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4700              		.loc 1 3409 0
 4701 000a A0F86230 		strh	r3, [r0, #98]	@ movhi
3412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4702              		.loc 1 3412 0
 4703 000e 0123     		movs	r3, #1
 4704 0010 80F88130 		strb	r3, [r0, #129]
3417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4705              		.loc 1 3417 0
 4706 0014 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4707              	.LVL317:
3419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4708              		.loc 1 3419 0
 4709 0018 08BD     		pop	{r3, pc}
 4710              		.cfi_endproc
 4711              	.LFE181:
ARM GAS  /tmp/ccJX0uiU.s 			page 164


 4713              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 4714              		.align	1
 4715              		.weak	HAL_SPI_AbortCpltCallback
 4716              		.syntax unified
 4717              		.thumb
 4718              		.thumb_func
 4719              		.fpu fpv5-d16
 4721              	HAL_SPI_AbortCpltCallback:
 4722              	.LFB170:
3158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4723              		.loc 1 3158 0
 4724              		.cfi_startproc
 4725              		@ args = 0, pretend = 0, frame = 0
 4726              		@ frame_needed = 0, uses_anonymous_args = 0
 4727              		@ link register save eliminated.
 4728              	.LVL318:
3165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4729              		.loc 1 3165 0
 4730 0000 7047     		bx	lr
 4731              		.cfi_endproc
 4732              	.LFE170:
 4734              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 4735              		.align	1
 4736              		.global	HAL_SPI_Abort_IT
 4737              		.syntax unified
 4738              		.thumb
 4739              		.thumb_func
 4740              		.fpu fpv5-d16
 4742              	HAL_SPI_Abort_IT:
 4743              	.LFB158:
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 4744              		.loc 1 2597 0
 4745              		.cfi_startproc
 4746              		@ args = 0, pretend = 0, frame = 8
 4747              		@ frame_needed = 0, uses_anonymous_args = 0
 4748              	.LVL319:
 4749 0000 30B5     		push	{r4, r5, lr}
 4750              	.LCFI42:
 4751              		.cfi_def_cfa_offset 12
 4752              		.cfi_offset 4, -12
 4753              		.cfi_offset 5, -8
 4754              		.cfi_offset 14, -4
 4755 0002 83B0     		sub	sp, sp, #12
 4756              	.LCFI43:
 4757              		.cfi_def_cfa_offset 24
 4758 0004 0446     		mov	r4, r0
 4759              	.LVL320:
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4760              		.loc 1 2604 0
 4761 0006 0723     		movs	r3, #7
 4762 0008 80F88130 		strb	r3, [r0, #129]
 4763              	.LVL321:
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4764              		.loc 1 2608 0
 4765 000c 554B     		ldr	r3, .L436
 4766 000e 1B68     		ldr	r3, [r3]
 4767 0010 554A     		ldr	r2, .L436+4
ARM GAS  /tmp/ccJX0uiU.s 			page 165


 4768 0012 A2FB0323 		umull	r2, r3, r2, r3
 4769 0016 5B0A     		lsrs	r3, r3, #9
 4770 0018 6422     		movs	r2, #100
 4771 001a 02FB03F3 		mul	r3, r2, r3
 4772 001e 0193     		str	r3, [sp, #4]
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4773              		.loc 1 2611 0
 4774 0020 0368     		ldr	r3, [r0]
 4775 0022 1A68     		ldr	r2, [r3]
 4776 0024 12F4007F 		tst	r2, #512
 4777 0028 40D0     		beq	.L402
2614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
 4778              		.loc 1 2614 0
 4779 002a 1A69     		ldr	r2, [r3, #16]
 4780 002c 22F00802 		bic	r2, r2, #8
 4781 0030 1A61     		str	r2, [r3, #16]
 4782              	.L405:
2617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
 4783              		.loc 1 2617 0
 4784 0032 019B     		ldr	r3, [sp, #4]
 4785 0034 013B     		subs	r3, r3, #1
 4786 0036 0193     		str	r3, [sp, #4]
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 4787              		.loc 1 2618 0
 4788 0038 019B     		ldr	r3, [sp, #4]
 4789 003a 2BB1     		cbz	r3, .L426
2624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4790              		.loc 1 2624 0
 4791 003c 2368     		ldr	r3, [r4]
 4792 003e 1B69     		ldr	r3, [r3, #16]
 4793 0040 13F0080F 		tst	r3, #8
 4794 0044 F5D1     		bne	.L405
 4795 0046 05E0     		b	.L404
 4796              	.L426:
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 4797              		.loc 1 2620 0
 4798 0048 D4F88430 		ldr	r3, [r4, #132]
 4799 004c 43F04003 		orr	r3, r3, #64
 4800 0050 C4F88430 		str	r3, [r4, #132]
 4801              	.L404:
2627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
 4802              		.loc 1 2627 0
 4803 0054 2268     		ldr	r2, [r4]
 4804 0056 1368     		ldr	r3, [r2]
 4805 0058 43F48063 		orr	r3, r3, #1024
 4806 005c 1360     		str	r3, [r2]
 4807              	.L408:
2630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
 4808              		.loc 1 2630 0
 4809 005e 019B     		ldr	r3, [sp, #4]
 4810 0060 013B     		subs	r3, r3, #1
 4811 0062 0193     		str	r3, [sp, #4]
2631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 4812              		.loc 1 2631 0
 4813 0064 019B     		ldr	r3, [sp, #4]
 4814 0066 2BB1     		cbz	r3, .L427
2637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 166


 4815              		.loc 1 2637 0
 4816 0068 2368     		ldr	r3, [r4]
 4817 006a 1B68     		ldr	r3, [r3]
 4818 006c 13F4007F 		tst	r3, #512
 4819 0070 F5D1     		bne	.L408
 4820 0072 05E0     		b	.L407
 4821              	.L427:
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 4822              		.loc 1 2633 0
 4823 0074 D4F88430 		ldr	r3, [r4, #132]
 4824 0078 43F04003 		orr	r3, r3, #64
 4825 007c C4F88430 		str	r3, [r4, #132]
 4826              	.L407:
2640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     do
 4827              		.loc 1 2640 0
 4828 0080 2268     		ldr	r2, [r4]
 4829 0082 9369     		ldr	r3, [r2, #24]
 4830 0084 43F40063 		orr	r3, r3, #2048
 4831 0088 9361     		str	r3, [r2, #24]
 4832              	.L410:
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       if (count == 0UL)
 4833              		.loc 1 2643 0
 4834 008a 019B     		ldr	r3, [sp, #4]
 4835 008c 013B     		subs	r3, r3, #1
 4836 008e 0193     		str	r3, [sp, #4]
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 4837              		.loc 1 2644 0
 4838 0090 019B     		ldr	r3, [sp, #4]
 4839 0092 2BB1     		cbz	r3, .L428
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 4840              		.loc 1 2650 0
 4841 0094 2368     		ldr	r3, [r4]
 4842 0096 5B69     		ldr	r3, [r3, #20]
 4843 0098 13F4006F 		tst	r3, #2048
 4844 009c F5D1     		bne	.L410
 4845 009e 05E0     		b	.L402
 4846              	.L428:
2646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         break;
 4847              		.loc 1 2646 0
 4848 00a0 D4F88430 		ldr	r3, [r4, #132]
 4849 00a4 43F04003 		orr	r3, r3, #64
 4850 00a8 C4F88430 		str	r3, [r4, #132]
 4851              	.L402:
2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4852              		.loc 1 2656 0
 4853 00ac A36F     		ldr	r3, [r4, #120]
 4854 00ae 63B3     		cbz	r3, .L417
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4855              		.loc 1 2658 0
 4856 00b0 2268     		ldr	r2, [r4]
 4857 00b2 9268     		ldr	r2, [r2, #8]
 4858 00b4 12F4004F 		tst	r2, #32768
 4859 00b8 13D1     		bne	.L429
2677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 4860              		.loc 1 2677 0
 4861 00ba 0022     		movs	r2, #0
 4862 00bc 1A65     		str	r2, [r3, #80]
ARM GAS  /tmp/ccJX0uiU.s 			page 167


2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t dma_rx_abort_done = 1UL;
 4863              		.loc 1 2600 0
 4864 00be 0125     		movs	r5, #1
 4865              	.LVL322:
 4866              	.L411:
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4867              		.loc 1 2681 0
 4868 00c0 E36F     		ldr	r3, [r4, #124]
 4869 00c2 002B     		cmp	r3, #0
 4870 00c4 37D0     		beq	.L420
2683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4871              		.loc 1 2683 0
 4872 00c6 2268     		ldr	r2, [r4]
 4873 00c8 9268     		ldr	r2, [r2, #8]
 4874 00ca 12F4804F 		tst	r2, #16384
 4875 00ce 1ED1     		bne	.L430
2702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 4876              		.loc 1 2702 0
 4877 00d0 0022     		movs	r2, #0
 4878 00d2 1A65     		str	r2, [r3, #80]
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4879              		.loc 1 2601 0
 4880 00d4 0123     		movs	r3, #1
 4881              	.LVL323:
 4882              	.L413:
2707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 4883              		.loc 1 2707 0
 4884 00d6 1D42     		tst	r5, r3
 4885 00d8 2FD1     		bne	.L431
2607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24UL / 1000UL);
 4886              		.loc 1 2607 0
 4887 00da 0025     		movs	r5, #0
 4888              	.LVL324:
 4889              	.L415:
2736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4890              		.loc 1 2736 0
 4891 00dc 2846     		mov	r0, r5
 4892 00de 03B0     		add	sp, sp, #12
 4893              	.LCFI44:
 4894              		.cfi_remember_state
 4895              		.cfi_def_cfa_offset 12
 4896              		@ sp needed
 4897 00e0 30BD     		pop	{r4, r5, pc}
 4898              	.LVL325:
 4899              	.L429:
 4900              	.LCFI45:
 4901              		.cfi_restore_state
2661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4902              		.loc 1 2661 0
 4903 00e2 224A     		ldr	r2, .L436+8
 4904 00e4 1A65     		str	r2, [r3, #80]
 4905              	.LVL326:
2666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 4906              		.loc 1 2666 0
 4907 00e6 A06F     		ldr	r0, [r4, #120]
 4908              	.LVL327:
 4909 00e8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
ARM GAS  /tmp/ccJX0uiU.s 			page 168


 4910              	.LVL328:
 4911 00ec 08B9     		cbnz	r0, .L432
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4912              		.loc 1 2663 0
 4913 00ee 0025     		movs	r5, #0
 4914 00f0 E6E7     		b	.L411
 4915              	.L432:
2668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 4916              		.loc 1 2668 0
 4917 00f2 A06F     		ldr	r0, [r4, #120]
 4918 00f4 FFF7FEFF 		bl	HAL_DMA_GetError
 4919              	.LVL329:
 4920 00f8 8028     		cmp	r0, #128
 4921 00fa 01D0     		beq	.L433
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4922              		.loc 1 2663 0
 4923 00fc 0025     		movs	r5, #0
 4924 00fe DFE7     		b	.L411
 4925              	.L433:
 4926              	.LVL330:
2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 4927              		.loc 1 2671 0
 4928 0100 A36F     		ldr	r3, [r4, #120]
 4929 0102 0022     		movs	r2, #0
 4930 0104 1A65     		str	r2, [r3, #80]
2670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = NULL;
 4931              		.loc 1 2670 0
 4932 0106 0125     		movs	r5, #1
 4933 0108 DAE7     		b	.L411
 4934              	.LVL331:
 4935              	.L417:
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t dma_rx_abort_done = 1UL;
 4936              		.loc 1 2600 0
 4937 010a 0125     		movs	r5, #1
 4938 010c D8E7     		b	.L411
 4939              	.LVL332:
 4940              	.L430:
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4941              		.loc 1 2686 0
 4942 010e 184A     		ldr	r2, .L436+12
 4943 0110 1A65     		str	r2, [r3, #80]
 4944              	.LVL333:
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 4945              		.loc 1 2691 0
 4946 0112 E06F     		ldr	r0, [r4, #124]
 4947 0114 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4948              	.LVL334:
 4949 0118 08B9     		cbnz	r0, .L434
2688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4950              		.loc 1 2688 0
 4951 011a 0023     		movs	r3, #0
 4952 011c DBE7     		b	.L413
 4953              	.L434:
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 4954              		.loc 1 2693 0
 4955 011e E06F     		ldr	r0, [r4, #124]
 4956 0120 FFF7FEFF 		bl	HAL_DMA_GetError
ARM GAS  /tmp/ccJX0uiU.s 			page 169


 4957              	.LVL335:
 4958 0124 8028     		cmp	r0, #128
 4959 0126 01D0     		beq	.L435
2688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4960              		.loc 1 2688 0
 4961 0128 0023     		movs	r3, #0
 4962 012a D4E7     		b	.L413
 4963              	.L435:
 4964              	.LVL336:
2696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 4965              		.loc 1 2696 0
 4966 012c E36F     		ldr	r3, [r4, #124]
 4967 012e 0022     		movs	r2, #0
 4968 0130 1A65     		str	r2, [r3, #80]
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = NULL;
 4969              		.loc 1 2695 0
 4970 0132 0123     		movs	r3, #1
 4971 0134 CFE7     		b	.L413
 4972              	.L420:
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4973              		.loc 1 2601 0
 4974 0136 0123     		movs	r3, #1
 4975 0138 CDE7     		b	.L413
 4976              	.LVL337:
 4977              	.L431:
2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4978              		.loc 1 2710 0
 4979 013a 2046     		mov	r0, r4
 4980 013c FFF7FEFF 		bl	SPI_AbortTransfer
 4981              	.LVL338:
2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 4982              		.loc 1 2713 0
 4983 0140 D4F88430 		ldr	r3, [r4, #132]
 4984 0144 13F0400F 		tst	r3, #64
 4985 0148 09D1     		bne	.L424
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 4986              		.loc 1 2721 0
 4987 014a 0025     		movs	r5, #0
 4988              	.LVL339:
 4989 014c C4F88450 		str	r5, [r4, #132]
 4990              	.L416:
 4991              	.LVL340:
2725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 4992              		.loc 1 2725 0
 4993 0150 0123     		movs	r3, #1
 4994 0152 84F88130 		strb	r3, [r4, #129]
2731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4995              		.loc 1 2731 0
 4996 0156 2046     		mov	r0, r4
 4997 0158 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 4998              	.LVL341:
 4999 015c BEE7     		b	.L415
 5000              	.LVL342:
 5001              	.L424:
2716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5002              		.loc 1 2716 0
 5003 015e 0125     		movs	r5, #1
ARM GAS  /tmp/ccJX0uiU.s 			page 170


 5004              	.LVL343:
 5005 0160 F6E7     		b	.L416
 5006              	.L437:
 5007 0162 00BF     		.align	2
 5008              	.L436:
 5009 0164 00000000 		.word	SystemCoreClock
 5010 0168 F1197605 		.word	91625969
 5011 016c 00000000 		.word	SPI_DMATxAbortCallback
 5012 0170 00000000 		.word	SPI_DMARxAbortCallback
 5013              		.cfi_endproc
 5014              	.LFE158:
 5016              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 5017              		.align	1
 5018              		.syntax unified
 5019              		.thumb
 5020              		.thumb_func
 5021              		.fpu fpv5-d16
 5023              	SPI_DMARxAbortCallback:
 5024              	.LFB183:
3467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5025              		.loc 1 3467 0
 5026              		.cfi_startproc
 5027              		@ args = 0, pretend = 0, frame = 0
 5028              		@ frame_needed = 0, uses_anonymous_args = 0
 5029              	.LVL344:
 5030 0000 10B5     		push	{r4, lr}
 5031              	.LCFI46:
 5032              		.cfi_def_cfa_offset 8
 5033              		.cfi_offset 4, -8
 5034              		.cfi_offset 14, -4
3468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5035              		.loc 1 3468 0
 5036 0002 846B     		ldr	r4, [r0, #56]
 5037              	.LVL345:
3470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5038              		.loc 1 3470 0
 5039 0004 E36F     		ldr	r3, [r4, #124]
 5040 0006 0022     		movs	r2, #0
 5041 0008 1A65     		str	r2, [r3, #80]
3473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 5042              		.loc 1 3473 0
 5043 000a A36F     		ldr	r3, [r4, #120]
 5044 000c 13B1     		cbz	r3, .L439
3475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5045              		.loc 1 3475 0
 5046 000e 1B6D     		ldr	r3, [r3, #80]
 5047 0010 03B1     		cbz	r3, .L439
 5048              	.LVL346:
 5049              	.L438:
3493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5050              		.loc 1 3493 0
 5051 0012 10BD     		pop	{r4, pc}
 5052              	.LVL347:
 5053              	.L439:
3482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5054              		.loc 1 3482 0
 5055 0014 2046     		mov	r0, r4
ARM GAS  /tmp/ccJX0uiU.s 			page 171


 5056              	.LVL348:
 5057 0016 FFF7FEFF 		bl	SPI_AbortTransfer
 5058              	.LVL349:
3485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5059              		.loc 1 3485 0
 5060 001a 0123     		movs	r3, #1
 5061 001c 84F88130 		strb	r3, [r4, #129]
3491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5062              		.loc 1 3491 0
 5063 0020 2046     		mov	r0, r4
 5064 0022 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5065              	.LVL350:
 5066 0026 F4E7     		b	.L438
 5067              		.cfi_endproc
 5068              	.LFE183:
 5070              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 5071              		.align	1
 5072              		.syntax unified
 5073              		.thumb
 5074              		.thumb_func
 5075              		.fpu fpv5-d16
 5077              	SPI_DMATxAbortCallback:
 5078              	.LFB182:
3430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5079              		.loc 1 3430 0
 5080              		.cfi_startproc
 5081              		@ args = 0, pretend = 0, frame = 0
 5082              		@ frame_needed = 0, uses_anonymous_args = 0
 5083              	.LVL351:
 5084 0000 10B5     		push	{r4, lr}
 5085              	.LCFI47:
 5086              		.cfi_def_cfa_offset 8
 5087              		.cfi_offset 4, -8
 5088              		.cfi_offset 14, -4
3431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5089              		.loc 1 3431 0
 5090 0002 846B     		ldr	r4, [r0, #56]
 5091              	.LVL352:
3433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5092              		.loc 1 3433 0
 5093 0004 A36F     		ldr	r3, [r4, #120]
 5094 0006 0022     		movs	r2, #0
 5095 0008 1A65     		str	r2, [r3, #80]
3436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 5096              		.loc 1 3436 0
 5097 000a E36F     		ldr	r3, [r4, #124]
 5098 000c 13B1     		cbz	r3, .L443
3438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5099              		.loc 1 3438 0
 5100 000e 1B6D     		ldr	r3, [r3, #80]
 5101 0010 03B1     		cbz	r3, .L443
 5102              	.LVL353:
 5103              	.L442:
3456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5104              		.loc 1 3456 0
 5105 0012 10BD     		pop	{r4, pc}
 5106              	.LVL354:
ARM GAS  /tmp/ccJX0uiU.s 			page 172


 5107              	.L443:
3445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5108              		.loc 1 3445 0
 5109 0014 2046     		mov	r0, r4
 5110              	.LVL355:
 5111 0016 FFF7FEFF 		bl	SPI_AbortTransfer
 5112              	.LVL356:
3448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5113              		.loc 1 3448 0
 5114 001a 0123     		movs	r3, #1
 5115 001c 84F88130 		strb	r3, [r4, #129]
3454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5116              		.loc 1 3454 0
 5117 0020 2046     		mov	r0, r4
 5118 0022 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5119              	.LVL357:
 5120 0026 F4E7     		b	.L442
 5121              		.cfi_endproc
 5122              	.LFE182:
 5124              		.section	.text.HAL_SPI_SuspendCallback,"ax",%progbits
 5125              		.align	1
 5126              		.weak	HAL_SPI_SuspendCallback
 5127              		.syntax unified
 5128              		.thumb
 5129              		.thumb_func
 5130              		.fpu fpv5-d16
 5132              	HAL_SPI_SuspendCallback:
 5133              	.LFB171:
3173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 5134              		.loc 1 3173 0
 5135              		.cfi_startproc
 5136              		@ args = 0, pretend = 0, frame = 0
 5137              		@ frame_needed = 0, uses_anonymous_args = 0
 5138              		@ link register save eliminated.
 5139              	.LVL358:
3180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5140              		.loc 1 3180 0
 5141 0000 7047     		bx	lr
 5142              		.cfi_endproc
 5143              	.LFE171:
 5145              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 5146              		.align	1
 5147              		.global	HAL_SPI_IRQHandler
 5148              		.syntax unified
 5149              		.thumb
 5150              		.thumb_func
 5151              		.fpu fpv5-d16
 5153              	HAL_SPI_IRQHandler:
 5154              	.LFB162:
2790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->IER;
 5155              		.loc 1 2790 0
 5156              		.cfi_startproc
 5157              		@ args = 0, pretend = 0, frame = 0
 5158              		@ frame_needed = 0, uses_anonymous_args = 0
 5159              	.LVL359:
 5160 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5161              	.LCFI48:
ARM GAS  /tmp/ccJX0uiU.s 			page 173


 5162              		.cfi_def_cfa_offset 24
 5163              		.cfi_offset 4, -24
 5164              		.cfi_offset 5, -20
 5165              		.cfi_offset 6, -16
 5166              		.cfi_offset 7, -12
 5167              		.cfi_offset 8, -8
 5168              		.cfi_offset 14, -4
 5169 0004 0446     		mov	r4, r0
2791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 5170              		.loc 1 2791 0
 5171 0006 0568     		ldr	r5, [r0]
 5172 0008 2A69     		ldr	r2, [r5, #16]
 5173              	.LVL360:
2792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t trigger  = itsource & itflag;
 5174              		.loc 1 2792 0
 5175 000a 6B69     		ldr	r3, [r5, #20]
 5176              	.LVL361:
2793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t cfg1     = hspi->Instance->CFG1;
 5177              		.loc 1 2793 0
 5178 000c 02EA0306 		and	r6, r2, r3
 5179              	.LVL362:
2794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   uint32_t handled  = 0UL;
 5180              		.loc 1 2794 0
 5181 0010 D5F80880 		ldr	r8, [r5, #8]
 5182              	.LVL363:
2797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #if defined (__GNUC__)
 5183              		.loc 1 2797 0
 5184 0014 90F88110 		ldrb	r1, [r0, #129]	@ zero_extendqisi2
 5185 0018 CFB2     		uxtb	r7, r1
 5186              	.LVL364:
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 5187              		.loc 1 2803 0
 5188 001a 13F4006F 		tst	r3, #2048
 5189 001e 02D0     		beq	.L448
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 5190              		.loc 1 2803 0 is_stmt 0 discriminator 1
 5191 0020 12F0080F 		tst	r2, #8
 5192 0024 1BD1     		bne	.L471
 5193              	.L448:
2818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_IS_BIT_SET(trigger, SPI_FLAG_DXP))
 5194              		.loc 1 2818 0 is_stmt 1
 5195 0026 06F06403 		and	r3, r6, #100
 5196              	.LVL365:
 5197 002a 042B     		cmp	r3, #4
 5198 002c 1ED1     		bne	.L469
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     hspi->RxISR(hspi);
 5199              		.loc 1 2821 0
 5200 002e 636F     		ldr	r3, [r4, #116]
 5201 0030 2046     		mov	r0, r4
 5202              	.LVL366:
 5203 0032 9847     		blx	r3
 5204              	.LVL367:
2822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     handled = 1UL;
 5205              		.loc 1 2822 0
 5206 0034 236F     		ldr	r3, [r4, #112]
 5207 0036 2046     		mov	r0, r4
 5208 0038 9847     		blx	r3
ARM GAS  /tmp/ccJX0uiU.s 			page 174


 5209              	.LVL368:
2823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 5210              		.loc 1 2823 0
 5211 003a 0123     		movs	r3, #1
 5212              	.LVL369:
 5213              	.L450:
2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
 5214              		.loc 1 2827 0
 5215 003c 06F04502 		and	r2, r6, #69
 5216 0040 012A     		cmp	r2, #1
 5217 0042 03D1     		bne	.L451
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     handled = 1UL;
 5218              		.loc 1 2830 0
 5219 0044 236F     		ldr	r3, [r4, #112]
 5220              	.LVL370:
 5221 0046 2046     		mov	r0, r4
 5222 0048 9847     		blx	r3
 5223              	.LVL371:
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 5224              		.loc 1 2831 0
 5225 004a 0123     		movs	r3, #1
 5226              	.LVL372:
 5227              	.L451:
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
 5228              		.loc 1 2835 0
 5229 004c 06F02602 		and	r2, r6, #38
 5230 0050 022A     		cmp	r2, #2
 5231 0052 0DD1     		bne	.L452
2838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     handled = 1UL;
 5232              		.loc 1 2838 0
 5233 0054 636F     		ldr	r3, [r4, #116]
 5234              	.LVL373:
 5235 0056 2046     		mov	r0, r4
 5236 0058 9847     		blx	r3
 5237              	.LVL374:
 5238              	.L447:
3035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5239              		.loc 1 3035 0
 5240 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5241              	.LVL375:
 5242              	.L471:
2806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5243              		.loc 1 2806 0
 5244 005e AB69     		ldr	r3, [r5, #24]
 5245              	.LVL376:
 5246 0060 43F40063 		orr	r3, r3, #2048
 5247 0064 AB61     		str	r3, [r5, #24]
2812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5248              		.loc 1 2812 0
 5249 0066 FFF7FEFF 		bl	HAL_SPI_SuspendCallback
 5250              	.LVL377:
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   }
 5251              		.loc 1 2814 0
 5252 006a F6E7     		b	.L447
 5253              	.LVL378:
 5254              	.L469:
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
ARM GAS  /tmp/ccJX0uiU.s 			page 175


 5255              		.loc 1 2795 0
 5256 006c 0023     		movs	r3, #0
 5257 006e E5E7     		b	.L450
 5258              	.LVL379:
 5259              	.L452:
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 5260              		.loc 1 2851 0
 5261 0070 002B     		cmp	r3, #0
 5262 0072 F2D1     		bne	.L447
2857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 5263              		.loc 1 2857 0
 5264 0074 16F0080F 		tst	r6, #8
 5265 0078 5FD0     		beq	.L453
2860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 5266              		.loc 1 2860 0
 5267 007a 2268     		ldr	r2, [r4]
 5268 007c 9369     		ldr	r3, [r2, #24]
 5269              	.LVL380:
 5270 007e 43F00803 		orr	r3, r3, #8
 5271 0082 9361     		str	r3, [r2, #24]
2861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 5272              		.loc 1 2861 0
 5273 0084 2268     		ldr	r2, [r4]
 5274 0086 9369     		ldr	r3, [r2, #24]
 5275 0088 43F01003 		orr	r3, r3, #16
 5276 008c 9361     		str	r3, [r2, #24]
2862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5277              		.loc 1 2862 0
 5278 008e 2268     		ldr	r2, [r4]
 5279 0090 9369     		ldr	r3, [r2, #24]
 5280 0092 43F40063 		orr	r3, r3, #2048
 5281 0096 9361     		str	r3, [r2, #24]
2865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5282              		.loc 1 2865 0
 5283 0098 2268     		ldr	r2, [r4]
 5284 009a 1369     		ldr	r3, [r2, #16]
 5285 009c 23F00803 		bic	r3, r3, #8
 5286 00a0 1361     		str	r3, [r2, #16]
2868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5287              		.loc 1 2868 0
 5288 00a2 2368     		ldr	r3, [r4]
 5289 00a4 9B68     		ldr	r3, [r3, #8]
 5290 00a6 13F4404F 		tst	r3, #49152
 5291 00aa 21D0     		beq	.L454
 5292              	.L455:
2901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5293              		.loc 1 2901 0
 5294 00ac 2046     		mov	r0, r4
 5295 00ae FFF7FEFF 		bl	SPI_CloseTransfer
 5296              	.LVL381:
2903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 5297              		.loc 1 2903 0
 5298 00b2 0123     		movs	r3, #1
 5299 00b4 84F88130 		strb	r3, [r4, #129]
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5300              		.loc 1 2904 0
 5301 00b8 D4F88430 		ldr	r3, [r4, #132]
ARM GAS  /tmp/ccJX0uiU.s 			page 176


 5302 00bc 002B     		cmp	r3, #0
 5303 00be 30D1     		bne	.L472
2930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5304              		.loc 1 2930 0
 5305 00c0 052F     		cmp	r7, #5
 5306 00c2 32D0     		beq	.L473
2934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5307              		.loc 1 2934 0
 5308 00c4 042F     		cmp	r7, #4
 5309 00c6 34D0     		beq	.L474
2938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5310              		.loc 1 2938 0
 5311 00c8 032F     		cmp	r7, #3
 5312 00ca C6D1     		bne	.L447
2940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5313              		.loc 1 2940 0
 5314 00cc 2046     		mov	r0, r4
 5315 00ce FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 5316              	.LVL382:
 5317 00d2 C2E7     		b	.L447
 5318              	.L456:
2880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 5319              		.loc 1 2880 0
 5320 00d4 072B     		cmp	r3, #7
 5321 00d6 1BD9     		bls	.L458
2883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #else
 5322              		.loc 1 2883 0
 5323 00d8 636E     		ldr	r3, [r4, #100]
 5324 00da 2A8E     		ldrh	r2, [r5, #48]
 5325 00dc 1A80     		strh	r2, [r3]	@ movhi
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 5326              		.loc 1 2887 0
 5327 00de 636E     		ldr	r3, [r4, #100]
 5328 00e0 0233     		adds	r3, r3, #2
 5329 00e2 6366     		str	r3, [r4, #100]
 5330              	.L457:
2896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       }
 5331              		.loc 1 2896 0
 5332 00e4 B4F86A30 		ldrh	r3, [r4, #106]
 5333 00e8 013B     		subs	r3, r3, #1
 5334 00ea 9BB2     		uxth	r3, r3
 5335 00ec A4F86A30 		strh	r3, [r4, #106]	@ movhi
 5336              	.L454:
2871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 5337              		.loc 1 2871 0
 5338 00f0 B4F86A30 		ldrh	r3, [r4, #106]
 5339 00f4 9BB2     		uxth	r3, r3
 5340 00f6 002B     		cmp	r3, #0
 5341 00f8 D8D0     		beq	.L455
2874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 5342              		.loc 1 2874 0
 5343 00fa E368     		ldr	r3, [r4, #12]
 5344 00fc 0F2B     		cmp	r3, #15
 5345 00fe E9D9     		bls	.L456
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint32_t);
 5346              		.loc 1 2876 0
 5347 0100 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccJX0uiU.s 			page 177


 5348 0102 636E     		ldr	r3, [r4, #100]
 5349 0104 126B     		ldr	r2, [r2, #48]
 5350 0106 1A60     		str	r2, [r3]
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 5351              		.loc 1 2877 0
 5352 0108 636E     		ldr	r3, [r4, #100]
 5353 010a 0433     		adds	r3, r3, #4
 5354 010c 6366     		str	r3, [r4, #100]
 5355 010e E9E7     		b	.L457
 5356              	.L458:
2892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint8_t);
 5357              		.loc 1 2892 0
 5358 0110 2268     		ldr	r2, [r4]
 5359 0112 636E     		ldr	r3, [r4, #100]
 5360 0114 92F83020 		ldrb	r2, [r2, #48]	@ zero_extendqisi2
 5361 0118 1A70     		strb	r2, [r3]
2893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         }
 5362              		.loc 1 2893 0
 5363 011a 636E     		ldr	r3, [r4, #100]
 5364 011c 0133     		adds	r3, r3, #1
 5365 011e 6366     		str	r3, [r4, #100]
 5366 0120 E0E7     		b	.L457
 5367              	.L472:
2909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5368              		.loc 1 2909 0
 5369 0122 2046     		mov	r0, r4
 5370 0124 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5371              	.LVL383:
2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5372              		.loc 1 2911 0
 5373 0128 97E7     		b	.L447
 5374              	.L473:
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5375              		.loc 1 2932 0
 5376 012a 2046     		mov	r0, r4
 5377 012c FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 5378              	.LVL384:
 5379 0130 93E7     		b	.L447
 5380              	.L474:
2936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5381              		.loc 1 2936 0
 5382 0132 2046     		mov	r0, r4
 5383 0134 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 5384              	.LVL385:
 5385 0138 8FE7     		b	.L447
 5386              	.LVL386:
 5387              	.L453:
2952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   {
 5388              		.loc 1 2952 0
 5389 013a 16F4587F 		tst	r6, #864
 5390 013e 8CD0     		beq	.L447
2955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5391              		.loc 1 2955 0
 5392 0140 16F0400F 		tst	r6, #64
 5393 0144 0AD0     		beq	.L463
2957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5394              		.loc 1 2957 0
ARM GAS  /tmp/ccJX0uiU.s 			page 178


 5395 0146 D4F88430 		ldr	r3, [r4, #132]
 5396              	.LVL387:
 5397 014a 43F00403 		orr	r3, r3, #4
 5398 014e C4F88430 		str	r3, [r4, #132]
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5399              		.loc 1 2958 0
 5400 0152 2268     		ldr	r2, [r4]
 5401 0154 9369     		ldr	r3, [r2, #24]
 5402 0156 43F04003 		orr	r3, r3, #64
 5403 015a 9361     		str	r3, [r2, #24]
 5404              	.L463:
2962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5405              		.loc 1 2962 0
 5406 015c 16F4007F 		tst	r6, #512
 5407 0160 0AD0     		beq	.L464
2964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 5408              		.loc 1 2964 0
 5409 0162 D4F88430 		ldr	r3, [r4, #132]
 5410 0166 43F00103 		orr	r3, r3, #1
 5411 016a C4F88430 		str	r3, [r4, #132]
2965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5412              		.loc 1 2965 0
 5413 016e 2268     		ldr	r2, [r4]
 5414 0170 9369     		ldr	r3, [r2, #24]
 5415 0172 43F40073 		orr	r3, r3, #512
 5416 0176 9361     		str	r3, [r2, #24]
 5417              	.L464:
2969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5418              		.loc 1 2969 0
 5419 0178 16F4807F 		tst	r6, #256
 5420 017c 0AD0     		beq	.L465
2971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
 5421              		.loc 1 2971 0
 5422 017e D4F88430 		ldr	r3, [r4, #132]
 5423 0182 43F00803 		orr	r3, r3, #8
 5424 0186 C4F88430 		str	r3, [r4, #132]
2972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5425              		.loc 1 2972 0
 5426 018a 2268     		ldr	r2, [r4]
 5427 018c 9369     		ldr	r3, [r2, #24]
 5428 018e 43F48073 		orr	r3, r3, #256
 5429 0192 9361     		str	r3, [r2, #24]
 5430              	.L465:
2976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5431              		.loc 1 2976 0
 5432 0194 16F0200F 		tst	r6, #32
 5433 0198 0AD0     		beq	.L466
2978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       __HAL_SPI_CLEAR_UDRFLAG(hspi);
 5434              		.loc 1 2978 0
 5435 019a D4F88430 		ldr	r3, [r4, #132]
 5436 019e 43F08003 		orr	r3, r3, #128
 5437 01a2 C4F88430 		str	r3, [r4, #132]
2979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     }
 5438              		.loc 1 2979 0
 5439 01a6 2268     		ldr	r2, [r4]
 5440 01a8 9369     		ldr	r3, [r2, #24]
 5441 01aa 43F02003 		orr	r3, r3, #32
ARM GAS  /tmp/ccJX0uiU.s 			page 179


 5442 01ae 9361     		str	r3, [r2, #24]
 5443              	.L466:
2982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****     {
 5444              		.loc 1 2982 0
 5445 01b0 D4F88430 		ldr	r3, [r4, #132]
 5446 01b4 002B     		cmp	r3, #0
 5447 01b6 3FF450AF 		beq	.L447
2985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5448              		.loc 1 2985 0
 5449 01ba 2268     		ldr	r2, [r4]
 5450 01bc 1368     		ldr	r3, [r2]
 5451 01be 23F00103 		bic	r3, r3, #1
 5452 01c2 1360     		str	r3, [r2]
2988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****                                   SPI_IT_OVR | SPI_IT_FRE | SPI_IT_UDR));
 5453              		.loc 1 2988 0
 5454 01c4 2268     		ldr	r2, [r4]
 5455 01c6 1169     		ldr	r1, [r2, #16]
 5456 01c8 1A4B     		ldr	r3, .L475
 5457 01ca 0B40     		ands	r3, r3, r1
 5458 01cc 1361     		str	r3, [r2, #16]
2992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****       {
 5459              		.loc 1 2992 0
 5460 01ce 08F44048 		and	r8, r8, #49152
 5461              	.LVL388:
 5462 01d2 B8F5404F 		cmp	r8, #49152
 5463 01d6 25D1     		bne	.L467
2995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5464              		.loc 1 2995 0
 5465 01d8 2268     		ldr	r2, [r4]
 5466 01da 9368     		ldr	r3, [r2, #8]
 5467 01dc 23F44043 		bic	r3, r3, #49152
 5468 01e0 9360     		str	r3, [r2, #8]
2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 5469              		.loc 1 2998 0
 5470 01e2 E36F     		ldr	r3, [r4, #124]
 5471 01e4 5BB1     		cbz	r3, .L468
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 5472              		.loc 1 3002 0
 5473 01e6 144A     		ldr	r2, .L475+4
 5474 01e8 1A65     		str	r2, [r3, #80]
3003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
 5475              		.loc 1 3003 0
 5476 01ea E06F     		ldr	r0, [r4, #124]
 5477 01ec FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5478              	.LVL389:
 5479 01f0 28B1     		cbz	r0, .L468
3005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
 5480              		.loc 1 3005 0
 5481 01f2 D4F88430 		ldr	r3, [r4, #132]
 5482 01f6 43F04003 		orr	r3, r3, #64
 5483 01fa C4F88430 		str	r3, [r4, #132]
 5484              	.L468:
3009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****         {
 5485              		.loc 1 3009 0
 5486 01fe A36F     		ldr	r3, [r4, #120]
 5487 0200 002B     		cmp	r3, #0
 5488 0202 3FF42AAF 		beq	.L447
ARM GAS  /tmp/ccJX0uiU.s 			page 180


3013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 5489              		.loc 1 3013 0
 5490 0206 0C4A     		ldr	r2, .L475+4
 5491 0208 1A65     		str	r2, [r3, #80]
3014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           {
 5492              		.loc 1 3014 0
 5493 020a A06F     		ldr	r0, [r4, #120]
 5494 020c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5495              	.LVL390:
 5496 0210 0028     		cmp	r0, #0
 5497 0212 3FF422AF 		beq	.L447
3016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****           }
 5498              		.loc 1 3016 0
 5499 0216 D4F88430 		ldr	r3, [r4, #132]
 5500 021a 43F04003 		orr	r3, r3, #64
 5501 021e C4F88430 		str	r3, [r4, #132]
 5502 0222 1AE7     		b	.L447
 5503              	.L467:
3023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5504              		.loc 1 3023 0
 5505 0224 0123     		movs	r3, #1
 5506 0226 84F88130 		strb	r3, [r4, #129]
3029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5507              		.loc 1 3029 0
 5508 022a 2046     		mov	r0, r4
 5509 022c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5510              	.LVL391:
 5511 0230 13E7     		b	.L447
 5512              	.L476:
 5513 0232 00BF     		.align	2
 5514              	.L475:
 5515 0234 94FCFFFF 		.word	-876
 5516 0238 00000000 		.word	SPI_DMAAbortOnError
 5517              		.cfi_endproc
 5518              	.LFE162:
 5520              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 5521              		.align	1
 5522              		.global	HAL_SPI_GetState
 5523              		.syntax unified
 5524              		.thumb
 5525              		.thumb_func
 5526              		.fpu fpv5-d16
 5528              	HAL_SPI_GetState:
 5529              	.LFB172:
3208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Return SPI handle state */
 5530              		.loc 1 3208 0
 5531              		.cfi_startproc
 5532              		@ args = 0, pretend = 0, frame = 0
 5533              		@ frame_needed = 0, uses_anonymous_args = 0
 5534              		@ link register save eliminated.
 5535              	.LVL392:
3210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 5536              		.loc 1 3210 0
 5537 0000 90F88100 		ldrb	r0, [r0, #129]	@ zero_extendqisi2
 5538              	.LVL393:
3211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5539              		.loc 1 3211 0
ARM GAS  /tmp/ccJX0uiU.s 			page 181


 5540 0004 7047     		bx	lr
 5541              		.cfi_endproc
 5542              	.LFE172:
 5544              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 5545              		.align	1
 5546              		.global	HAL_SPI_GetError
 5547              		.syntax unified
 5548              		.thumb
 5549              		.thumb_func
 5550              		.fpu fpv5-d16
 5552              	HAL_SPI_GetError:
 5553              	.LFB173:
3220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c ****   /* Return SPI ErrorCode */
 5554              		.loc 1 3220 0
 5555              		.cfi_startproc
 5556              		@ args = 0, pretend = 0, frame = 0
 5557              		@ frame_needed = 0, uses_anonymous_args = 0
 5558              		@ link register save eliminated.
 5559              	.LVL394:
3222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** }
 5560              		.loc 1 3222 0
 5561 0000 D0F88400 		ldr	r0, [r0, #132]
 5562              	.LVL395:
3223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c **** 
 5563              		.loc 1 3223 0
 5564 0004 7047     		bx	lr
 5565              		.cfi_endproc
 5566              	.LFE173:
 5568              		.text
 5569              	.Letext0:
 5570              		.file 2 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 5571              		.file 3 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 5572              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 5573              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 5574              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 5575              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 5576              		.file 8 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 5577              		.file 9 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 5578              		.file 10 "/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
 5579              		.file 11 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 5580              		.file 12 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/math.h"
 5581              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 5582              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 5583              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 5584              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_spi.h"
 5585              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccJX0uiU.s 			page 182


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_spi.c
     /tmp/ccJX0uiU.s:17     .text.SPI_RxISR_8BIT:0000000000000000 $t
     /tmp/ccJX0uiU.s:23     .text.SPI_RxISR_8BIT:0000000000000000 SPI_RxISR_8BIT
     /tmp/ccJX0uiU.s:62     .text.SPI_RxISR_16BIT:0000000000000000 $t
     /tmp/ccJX0uiU.s:68     .text.SPI_RxISR_16BIT:0000000000000000 SPI_RxISR_16BIT
     /tmp/ccJX0uiU.s:110    .text.SPI_RxISR_32BIT:0000000000000000 $t
     /tmp/ccJX0uiU.s:116    .text.SPI_RxISR_32BIT:0000000000000000 SPI_RxISR_32BIT
     /tmp/ccJX0uiU.s:154    .text.SPI_TxISR_8BIT:0000000000000000 $t
     /tmp/ccJX0uiU.s:160    .text.SPI_TxISR_8BIT:0000000000000000 SPI_TxISR_8BIT
     /tmp/ccJX0uiU.s:198    .text.SPI_TxISR_16BIT:0000000000000000 $t
     /tmp/ccJX0uiU.s:204    .text.SPI_TxISR_16BIT:0000000000000000 SPI_TxISR_16BIT
     /tmp/ccJX0uiU.s:245    .text.SPI_TxISR_32BIT:0000000000000000 $t
     /tmp/ccJX0uiU.s:251    .text.SPI_TxISR_32BIT:0000000000000000 SPI_TxISR_32BIT
     /tmp/ccJX0uiU.s:289    .text.SPI_AbortTransfer:0000000000000000 $t
     /tmp/ccJX0uiU.s:295    .text.SPI_AbortTransfer:0000000000000000 SPI_AbortTransfer
     /tmp/ccJX0uiU.s:364    .text.SPI_AbortTransfer:0000000000000070 $d
     /tmp/ccJX0uiU.s:369    .text.SPI_CloseTransfer:0000000000000000 $t
     /tmp/ccJX0uiU.s:375    .text.SPI_CloseTransfer:0000000000000000 SPI_CloseTransfer
     /tmp/ccJX0uiU.s:493    .text.SPI_CloseTransfer:00000000000000cc $d
     /tmp/ccJX0uiU.s:498    .text.SPI_GetPacketSize:0000000000000000 $t
     /tmp/ccJX0uiU.s:504    .text.SPI_GetPacketSize:0000000000000000 SPI_GetPacketSize
     /tmp/ccJX0uiU.s:532    .text.SPI_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccJX0uiU.s:538    .text.SPI_WaitOnFlagUntilTimeout:0000000000000000 SPI_WaitOnFlagUntilTimeout
     /tmp/ccJX0uiU.s:602    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccJX0uiU.s:609    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccJX0uiU.s:623    .text.HAL_SPI_Init:0000000000000000 $t
     /tmp/ccJX0uiU.s:630    .text.HAL_SPI_Init:0000000000000000 HAL_SPI_Init
     /tmp/ccJX0uiU.s:906    .text.HAL_SPI_Init:0000000000000184 $d
     /tmp/ccJX0uiU.s:913    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccJX0uiU.s:920    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccJX0uiU.s:934    .text.HAL_SPI_DeInit:0000000000000000 $t
     /tmp/ccJX0uiU.s:941    .text.HAL_SPI_DeInit:0000000000000000 HAL_SPI_DeInit
     /tmp/ccJX0uiU.s:992    .text.HAL_SPI_Transmit:0000000000000000 $t
     /tmp/ccJX0uiU.s:999    .text.HAL_SPI_Transmit:0000000000000000 HAL_SPI_Transmit
     /tmp/ccJX0uiU.s:1434   .text.HAL_SPI_Transmit:00000000000002c8 $d
     /tmp/ccJX0uiU.s:1439   .text.HAL_SPI_Receive:0000000000000000 $t
     /tmp/ccJX0uiU.s:1446   .text.HAL_SPI_Receive:0000000000000000 HAL_SPI_Receive
     /tmp/ccJX0uiU.s:1791   .text.HAL_SPI_Receive:0000000000000228 $d
     /tmp/ccJX0uiU.s:1796   .text.HAL_SPI_TransmitReceive:0000000000000000 $t
     /tmp/ccJX0uiU.s:1803   .text.HAL_SPI_TransmitReceive:0000000000000000 HAL_SPI_TransmitReceive
     /tmp/ccJX0uiU.s:2286   .text.HAL_SPI_TransmitReceive:00000000000002f8 $d
     /tmp/ccJX0uiU.s:2291   .text.HAL_SPI_Transmit_IT:0000000000000000 $t
     /tmp/ccJX0uiU.s:2298   .text.HAL_SPI_Transmit_IT:0000000000000000 HAL_SPI_Transmit_IT
     /tmp/ccJX0uiU.s:2473   .text.HAL_SPI_Transmit_IT:00000000000000e4 $d
     /tmp/ccJX0uiU.s:2481   .text.HAL_SPI_Receive_IT:0000000000000000 $t
     /tmp/ccJX0uiU.s:2488   .text.HAL_SPI_Receive_IT:0000000000000000 HAL_SPI_Receive_IT
     /tmp/ccJX0uiU.s:2663   .text.HAL_SPI_Receive_IT:00000000000000e4 $d
     /tmp/ccJX0uiU.s:2671   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccJX0uiU.s:2678   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 HAL_SPI_TransmitReceive_IT
     /tmp/ccJX0uiU.s:2936   .text.HAL_SPI_TransmitReceive_IT:0000000000000158 $d
     /tmp/ccJX0uiU.s:2947   .text.HAL_SPI_Transmit_DMA:0000000000000000 $t
     /tmp/ccJX0uiU.s:2954   .text.HAL_SPI_Transmit_DMA:0000000000000000 HAL_SPI_Transmit_DMA
     /tmp/ccJX0uiU.s:3241   .text.HAL_SPI_Transmit_DMA:00000000000001b8 $d
     /tmp/ccJX0uiU.s:4481   .text.SPI_DMAHalfTransmitCplt:0000000000000000 SPI_DMAHalfTransmitCplt
     /tmp/ccJX0uiU.s:4268   .text.SPI_DMATransmitCplt:0000000000000000 SPI_DMATransmitCplt
     /tmp/ccJX0uiU.s:4634   .text.SPI_DMAError:0000000000000000 SPI_DMAError
ARM GAS  /tmp/ccJX0uiU.s 			page 183


     /tmp/ccJX0uiU.s:3249   .text.HAL_SPI_Receive_DMA:0000000000000000 $t
     /tmp/ccJX0uiU.s:3256   .text.HAL_SPI_Receive_DMA:0000000000000000 HAL_SPI_Receive_DMA
     /tmp/ccJX0uiU.s:3542   .text.HAL_SPI_Receive_DMA:00000000000001b8 $d
     /tmp/ccJX0uiU.s:4532   .text.SPI_DMAHalfReceiveCplt:0000000000000000 SPI_DMAHalfReceiveCplt
     /tmp/ccJX0uiU.s:4339   .text.SPI_DMAReceiveCplt:0000000000000000 SPI_DMAReceiveCplt
     /tmp/ccJX0uiU.s:3550   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 $t
     /tmp/ccJX0uiU.s:3557   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 HAL_SPI_TransmitReceive_DMA
     /tmp/ccJX0uiU.s:3919   .text.HAL_SPI_TransmitReceive_DMA:0000000000000234 $d
     /tmp/ccJX0uiU.s:4583   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/ccJX0uiU.s:4410   .text.SPI_DMATransmitReceiveCplt:0000000000000000 SPI_DMATransmitReceiveCplt
     /tmp/ccJX0uiU.s:3927   .text.HAL_SPI_Abort:0000000000000000 $t
     /tmp/ccJX0uiU.s:3934   .text.HAL_SPI_Abort:0000000000000000 HAL_SPI_Abort
     /tmp/ccJX0uiU.s:4154   .text.HAL_SPI_Abort:0000000000000144 $d
     /tmp/ccJX0uiU.s:4160   .text.HAL_SPI_DMAPause:0000000000000000 $t
     /tmp/ccJX0uiU.s:4167   .text.HAL_SPI_DMAPause:0000000000000000 HAL_SPI_DMAPause
     /tmp/ccJX0uiU.s:4187   .text.HAL_SPI_DMAResume:0000000000000000 $t
     /tmp/ccJX0uiU.s:4194   .text.HAL_SPI_DMAResume:0000000000000000 HAL_SPI_DMAResume
     /tmp/ccJX0uiU.s:4214   .text.HAL_SPI_DMAStop:0000000000000000 $t
     /tmp/ccJX0uiU.s:4221   .text.HAL_SPI_DMAStop:0000000000000000 HAL_SPI_DMAStop
     /tmp/ccJX0uiU.s:4241   .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/ccJX0uiU.s:4248   .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/ccJX0uiU.s:4262   .text.SPI_DMATransmitCplt:0000000000000000 $t
     /tmp/ccJX0uiU.s:4312   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/ccJX0uiU.s:4319   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/ccJX0uiU.s:4333   .text.SPI_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccJX0uiU.s:4383   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccJX0uiU.s:4390   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccJX0uiU.s:4404   .text.SPI_DMATransmitReceiveCplt:0000000000000000 $t
     /tmp/ccJX0uiU.s:4454   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccJX0uiU.s:4461   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 HAL_SPI_TxHalfCpltCallback
     /tmp/ccJX0uiU.s:4475   .text.SPI_DMAHalfTransmitCplt:0000000000000000 $t
     /tmp/ccJX0uiU.s:4505   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccJX0uiU.s:4512   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 HAL_SPI_RxHalfCpltCallback
     /tmp/ccJX0uiU.s:4526   .text.SPI_DMAHalfReceiveCplt:0000000000000000 $t
     /tmp/ccJX0uiU.s:4556   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 $t
     /tmp/ccJX0uiU.s:4563   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/ccJX0uiU.s:4577   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 $t
     /tmp/ccJX0uiU.s:4607   .text.HAL_SPI_ErrorCallback:0000000000000000 $t
     /tmp/ccJX0uiU.s:4614   .text.HAL_SPI_ErrorCallback:0000000000000000 HAL_SPI_ErrorCallback
     /tmp/ccJX0uiU.s:4628   .text.SPI_DMAError:0000000000000000 $t
     /tmp/ccJX0uiU.s:4676   .text.SPI_DMAAbortOnError:0000000000000000 $t
     /tmp/ccJX0uiU.s:4682   .text.SPI_DMAAbortOnError:0000000000000000 SPI_DMAAbortOnError
     /tmp/ccJX0uiU.s:4714   .text.HAL_SPI_AbortCpltCallback:0000000000000000 $t
     /tmp/ccJX0uiU.s:4721   .text.HAL_SPI_AbortCpltCallback:0000000000000000 HAL_SPI_AbortCpltCallback
     /tmp/ccJX0uiU.s:4735   .text.HAL_SPI_Abort_IT:0000000000000000 $t
     /tmp/ccJX0uiU.s:4742   .text.HAL_SPI_Abort_IT:0000000000000000 HAL_SPI_Abort_IT
     /tmp/ccJX0uiU.s:5009   .text.HAL_SPI_Abort_IT:0000000000000164 $d
     /tmp/ccJX0uiU.s:5077   .text.SPI_DMATxAbortCallback:0000000000000000 SPI_DMATxAbortCallback
     /tmp/ccJX0uiU.s:5023   .text.SPI_DMARxAbortCallback:0000000000000000 SPI_DMARxAbortCallback
     /tmp/ccJX0uiU.s:5017   .text.SPI_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccJX0uiU.s:5071   .text.SPI_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccJX0uiU.s:5125   .text.HAL_SPI_SuspendCallback:0000000000000000 $t
     /tmp/ccJX0uiU.s:5132   .text.HAL_SPI_SuspendCallback:0000000000000000 HAL_SPI_SuspendCallback
     /tmp/ccJX0uiU.s:5146   .text.HAL_SPI_IRQHandler:0000000000000000 $t
     /tmp/ccJX0uiU.s:5153   .text.HAL_SPI_IRQHandler:0000000000000000 HAL_SPI_IRQHandler
     /tmp/ccJX0uiU.s:5515   .text.HAL_SPI_IRQHandler:0000000000000234 $d
     /tmp/ccJX0uiU.s:5521   .text.HAL_SPI_GetState:0000000000000000 $t
ARM GAS  /tmp/ccJX0uiU.s 			page 184


     /tmp/ccJX0uiU.s:5528   .text.HAL_SPI_GetState:0000000000000000 HAL_SPI_GetState
     /tmp/ccJX0uiU.s:5545   .text.HAL_SPI_GetError:0000000000000000 $t
     /tmp/ccJX0uiU.s:5552   .text.HAL_SPI_GetError:0000000000000000 HAL_SPI_GetError

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
SystemCoreClock
HAL_DMA_Abort_IT
