ARM GAS  /tmp/cc4GmWmk.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"st7789.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.monitor_cb,"ax",%progbits
  17              		.align	1
  18              		.global	monitor_cb
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	monitor_cb:
  25              	.LFB350:
  26              		.file 1 "Drivers/ST7789/st7789.c"
   1:Drivers/ST7789/st7789.c **** #include "st7789.h"
   2:Drivers/ST7789/st7789.c **** 
   3:Drivers/ST7789/st7789.c **** #ifdef USE_DMA
   4:Drivers/ST7789/st7789.c **** #include <string.h>
   5:Drivers/ST7789/st7789.c **** uint16_t DMA_MIN_SIZE = 16;
   6:Drivers/ST7789/st7789.c **** /* If you're using DMA, then u need a "framebuffer" to store datas to be displayed.
   7:Drivers/ST7789/st7789.c ****  * If your MCU don't have enough RAM, please avoid using DMA(or set 5 to 1).
   8:Drivers/ST7789/st7789.c ****  * And if your MCU have enough RAM(even larger than full-frame size),
   9:Drivers/ST7789/st7789.c ****  * Then you can specify the framebuffer size to the full resolution below.
  10:Drivers/ST7789/st7789.c ****  */
  11:Drivers/ST7789/st7789.c ****  #define HOR_LEN 	5	//	Alse mind the resolution of your screen!
  12:Drivers/ST7789/st7789.c **** uint16_t disp_buf[ST7789_WIDTH * HOR_LEN];
  13:Drivers/ST7789/st7789.c **** #endif
  14:Drivers/ST7789/st7789.c **** 
  15:Drivers/ST7789/st7789.c **** #define MAX(a,b) ((a)>(b) ? (a):(b))
  16:Drivers/ST7789/st7789.c **** 
  17:Drivers/ST7789/st7789.c **** #define DISP_VER_RES 240
  18:Drivers/ST7789/st7789.c **** #define DISP_HOR_RES 240
  19:Drivers/ST7789/st7789.c **** 
  20:Drivers/ST7789/st7789.c **** //uint16_t DISP_fb[MAX(DISP_VER_RES, DISP_HOR_RES)]; // LCD FRAME buffer for 1 ROW
  21:Drivers/ST7789/st7789.c **** 
  22:Drivers/ST7789/st7789.c **** 
  23:Drivers/ST7789/st7789.c **** //lv_disp_draw_buf_t  g;
  24:Drivers/ST7789/st7789.c **** static lv_disp_drv_t disp_drv;
  25:Drivers/ST7789/st7789.c **** static lv_color_t disp_buf1[DISP_HOR_RES * DISP_VER_RES /10];
  26:Drivers/ST7789/st7789.c **** static lv_color_t disp_buf2[DISP_HOR_RES * DISP_VER_RES /10];
  27:Drivers/ST7789/st7789.c **** 
  28:Drivers/ST7789/st7789.c **** static volatile uint32_t t_saved = 0;
  29:Drivers/ST7789/st7789.c **** 
  30:Drivers/ST7789/st7789.c **** void monitor_cb(lv_disp_drv_t *d, uint32_t t, uint32_t p){
  27              		.loc 1 30 0
  28              		.cfi_startproc
ARM GAS  /tmp/cc4GmWmk.s 			page 2


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  31:Drivers/ST7789/st7789.c **** 	t_saved = t;
  33              		.loc 1 31 0
  34 0000 014B     		ldr	r3, .L2
  35 0002 1960     		str	r1, [r3]
  32:Drivers/ST7789/st7789.c **** }
  36              		.loc 1 32 0
  37 0004 7047     		bx	lr
  38              	.L3:
  39 0006 00BF     		.align	2
  40              	.L2:
  41 0008 00000000 		.word	.LANCHOR0
  42              		.cfi_endproc
  43              	.LFE350:
  45              		.section	.text.ST7789_WriteCommand,"ax",%progbits
  46              		.align	1
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu fpv5-d16
  52              	ST7789_WriteCommand:
  53              	.LFB353:
  33:Drivers/ST7789/st7789.c **** void tft_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p);
  34:Drivers/ST7789/st7789.c **** 
  35:Drivers/ST7789/st7789.c **** void Display_init(int rotation){
  36:Drivers/ST7789/st7789.c **** 	static lv_disp_draw_buf_t buf;
  37:Drivers/ST7789/st7789.c **** 
  38:Drivers/ST7789/st7789.c **** 	lv_disp_draw_buf_init(&buf, disp_buf1, disp_buf2, DISP_HOR_RES * DISP_VER_RES /10);
  39:Drivers/ST7789/st7789.c **** 	lv_disp_drv_init(&disp_drv);
  40:Drivers/ST7789/st7789.c **** 
  41:Drivers/ST7789/st7789.c **** 	ST7789_Init();
  42:Drivers/ST7789/st7789.c **** 
  43:Drivers/ST7789/st7789.c **** 	disp_drv.draw_buf = &buf;
  44:Drivers/ST7789/st7789.c **** 	disp_drv.flush_cb = tft_flush;
  45:Drivers/ST7789/st7789.c **** 	disp_drv.monitor_cb = monitor_cb;
  46:Drivers/ST7789/st7789.c **** 	disp_drv.hor_res = DISP_HOR_RES;
  47:Drivers/ST7789/st7789.c **** 	disp_drv.ver_res = DISP_VER_RES;
  48:Drivers/ST7789/st7789.c **** 	disp_drv.rotated = rotation;
  49:Drivers/ST7789/st7789.c **** 	lv_disp_drv_register(&disp_drv);
  50:Drivers/ST7789/st7789.c **** 
  51:Drivers/ST7789/st7789.c **** }
  52:Drivers/ST7789/st7789.c **** 
  53:Drivers/ST7789/st7789.c **** void tft_flush(lv_disp_drv_t * disp, const lv_area_t * area, lv_color_t * color_p){
  54:Drivers/ST7789/st7789.c **** 
  55:Drivers/ST7789/st7789.c ****     if(area->x2 < 0) return;
  56:Drivers/ST7789/st7789.c ****     if(area->y2 < 0) return;
  57:Drivers/ST7789/st7789.c ****     if(area->x1 > DISP_HOR_RES - 1) return;
  58:Drivers/ST7789/st7789.c ****     if(area->y1 > DISP_VER_RES - 1) return;
  59:Drivers/ST7789/st7789.c **** 
  60:Drivers/ST7789/st7789.c ****     int indx=0;
  61:Drivers/ST7789/st7789.c ****     for(int32_t y = area->y1; y <= area->y2; y++) {
  62:Drivers/ST7789/st7789.c ****         for(int32_t x = area->x1; x <= area->x2; x++) {
  63:Drivers/ST7789/st7789.c ****             //set_pixel(x, y, *color_p);  /* Put a pixel to the display.*/
  64:Drivers/ST7789/st7789.c ****         	ST7789_DrawPixel(x, y, color_p->full);
ARM GAS  /tmp/cc4GmWmk.s 			page 3


  65:Drivers/ST7789/st7789.c ****             color_p++;
  66:Drivers/ST7789/st7789.c ****             indx++;
  67:Drivers/ST7789/st7789.c ****         }
  68:Drivers/ST7789/st7789.c ****         indx =0;
  69:Drivers/ST7789/st7789.c ****     }
  70:Drivers/ST7789/st7789.c **** 
  71:Drivers/ST7789/st7789.c ****     lv_disp_flush_ready(disp);         /* Indicate you are ready with the flushing*/
  72:Drivers/ST7789/st7789.c **** }
  73:Drivers/ST7789/st7789.c **** 
  74:Drivers/ST7789/st7789.c **** /**
  75:Drivers/ST7789/st7789.c ****  * @brief Write command to ST7789 controller
  76:Drivers/ST7789/st7789.c ****  * @param cmd -> command to write
  77:Drivers/ST7789/st7789.c ****  * @return none
  78:Drivers/ST7789/st7789.c ****  */
  79:Drivers/ST7789/st7789.c **** static void ST7789_WriteCommand(uint8_t cmd)
  80:Drivers/ST7789/st7789.c **** {
  54              		.loc 1 80 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 8
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              	.LVL1:
  59 0000 30B5     		push	{r4, r5, lr}
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 12
  62              		.cfi_offset 4, -12
  63              		.cfi_offset 5, -8
  64              		.cfi_offset 14, -4
  65 0002 83B0     		sub	sp, sp, #12
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 24
  68 0004 02AD     		add	r5, sp, #8
  69 0006 05F8010D 		strb	r0, [r5, #-1]!
  81:Drivers/ST7789/st7789.c **** 	ST7789_Select();
  70              		.loc 1 81 0
  71 000a 0C4C     		ldr	r4, .L6
  72 000c 0022     		movs	r2, #0
  73 000e 0421     		movs	r1, #4
  74 0010 2046     		mov	r0, r4
  75              	.LVL2:
  76 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
  77              	.LVL3:
  82:Drivers/ST7789/st7789.c **** 	ST7789_DC_Clr();
  78              		.loc 1 82 0
  79 0016 0022     		movs	r2, #0
  80 0018 0221     		movs	r1, #2
  81 001a 2046     		mov	r0, r4
  82 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
  83              	.LVL4:
  83:Drivers/ST7789/st7789.c **** 	HAL_SPI_Transmit(&ST7789_SPI_PORT, &cmd, sizeof(cmd), HAL_MAX_DELAY);
  84              		.loc 1 83 0
  85 0020 4FF0FF33 		mov	r3, #-1
  86 0024 0122     		movs	r2, #1
  87 0026 2946     		mov	r1, r5
  88 0028 0548     		ldr	r0, .L6+4
  89 002a FFF7FEFF 		bl	HAL_SPI_Transmit
  90              	.LVL5:
  84:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
ARM GAS  /tmp/cc4GmWmk.s 			page 4


  91              		.loc 1 84 0
  92 002e 0122     		movs	r2, #1
  93 0030 0421     		movs	r1, #4
  94 0032 2046     		mov	r0, r4
  95 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
  96              	.LVL6:
  85:Drivers/ST7789/st7789.c **** }
  97              		.loc 1 85 0
  98 0038 03B0     		add	sp, sp, #12
  99              	.LCFI2:
 100              		.cfi_def_cfa_offset 12
 101              		@ sp needed
 102 003a 30BD     		pop	{r4, r5, pc}
 103              	.L7:
 104              		.align	2
 105              	.L6:
 106 003c 00000258 		.word	1476526080
 107 0040 00000000 		.word	hspi1
 108              		.cfi_endproc
 109              	.LFE353:
 111              		.section	.text.ST7789_WriteSmallData,"ax",%progbits
 112              		.align	1
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu fpv5-d16
 118              	ST7789_WriteSmallData:
 119              	.LFB355:
  86:Drivers/ST7789/st7789.c **** 
  87:Drivers/ST7789/st7789.c **** /**
  88:Drivers/ST7789/st7789.c ****  * @brief Write data to ST7789 controller
  89:Drivers/ST7789/st7789.c ****  * @param buff -> pointer of data buffer
  90:Drivers/ST7789/st7789.c ****  * @param buff_size -> size of the data buffer
  91:Drivers/ST7789/st7789.c ****  * @return none
  92:Drivers/ST7789/st7789.c ****  */
  93:Drivers/ST7789/st7789.c **** static void ST7789_WriteData(uint8_t *buff, size_t buff_size)
  94:Drivers/ST7789/st7789.c **** {
  95:Drivers/ST7789/st7789.c **** 	ST7789_Select();
  96:Drivers/ST7789/st7789.c **** 	ST7789_DC_Set();
  97:Drivers/ST7789/st7789.c **** 
  98:Drivers/ST7789/st7789.c **** 	// split data in small chunks because HAL can't send more than 64K at once
  99:Drivers/ST7789/st7789.c **** 
 100:Drivers/ST7789/st7789.c **** 	while (buff_size > 0) {
 101:Drivers/ST7789/st7789.c **** 		uint16_t chunk_size = buff_size > 65535 ? 65535 : buff_size;
 102:Drivers/ST7789/st7789.c **** 		#ifdef USE_DMA
 103:Drivers/ST7789/st7789.c **** 			if (DMA_MIN_SIZE <= buff_size)
 104:Drivers/ST7789/st7789.c **** 			{
 105:Drivers/ST7789/st7789.c **** 				HAL_SPI_Transmit_DMA(&ST7789_SPI_PORT, buff, chunk_size);
 106:Drivers/ST7789/st7789.c **** 				while (ST7789_SPI_PORT.hdmatx->State != HAL_DMA_STATE_READY)
 107:Drivers/ST7789/st7789.c **** 				{}
 108:Drivers/ST7789/st7789.c **** 			}
 109:Drivers/ST7789/st7789.c **** 			else
 110:Drivers/ST7789/st7789.c **** 				HAL_SPI_Transmit(&ST7789_SPI_PORT, buff, chunk_size, HAL_MAX_DELAY);
 111:Drivers/ST7789/st7789.c **** 		#else
 112:Drivers/ST7789/st7789.c **** 			HAL_SPI_Transmit(&ST7789_SPI_PORT, buff, chunk_size, HAL_MAX_DELAY);
 113:Drivers/ST7789/st7789.c **** 		#endif
 114:Drivers/ST7789/st7789.c **** 		buff += chunk_size;
ARM GAS  /tmp/cc4GmWmk.s 			page 5


 115:Drivers/ST7789/st7789.c **** 		buff_size -= chunk_size;
 116:Drivers/ST7789/st7789.c **** 	}
 117:Drivers/ST7789/st7789.c **** 
 118:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 119:Drivers/ST7789/st7789.c **** }
 120:Drivers/ST7789/st7789.c **** /**
 121:Drivers/ST7789/st7789.c ****  * @brief Write data to ST7789 controller, simplify for 8bit data.
 122:Drivers/ST7789/st7789.c ****  * data -> data to write
 123:Drivers/ST7789/st7789.c ****  * @return none
 124:Drivers/ST7789/st7789.c ****  */
 125:Drivers/ST7789/st7789.c **** static void ST7789_WriteSmallData(uint8_t data)
 126:Drivers/ST7789/st7789.c **** {
 120              		.loc 1 126 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 8
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              	.LVL7:
 125 0000 30B5     		push	{r4, r5, lr}
 126              	.LCFI3:
 127              		.cfi_def_cfa_offset 12
 128              		.cfi_offset 4, -12
 129              		.cfi_offset 5, -8
 130              		.cfi_offset 14, -4
 131 0002 83B0     		sub	sp, sp, #12
 132              	.LCFI4:
 133              		.cfi_def_cfa_offset 24
 134 0004 02AD     		add	r5, sp, #8
 135 0006 05F8010D 		strb	r0, [r5, #-1]!
 127:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 136              		.loc 1 127 0
 137 000a 0C4C     		ldr	r4, .L10
 138 000c 0022     		movs	r2, #0
 139 000e 0421     		movs	r1, #4
 140 0010 2046     		mov	r0, r4
 141              	.LVL8:
 142 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 143              	.LVL9:
 128:Drivers/ST7789/st7789.c **** 	ST7789_DC_Set();
 144              		.loc 1 128 0
 145 0016 0122     		movs	r2, #1
 146 0018 0221     		movs	r1, #2
 147 001a 2046     		mov	r0, r4
 148 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 149              	.LVL10:
 129:Drivers/ST7789/st7789.c **** 	HAL_SPI_Transmit(&ST7789_SPI_PORT, &data, sizeof(data), HAL_MAX_DELAY);
 150              		.loc 1 129 0
 151 0020 4FF0FF33 		mov	r3, #-1
 152 0024 0122     		movs	r2, #1
 153 0026 2946     		mov	r1, r5
 154 0028 0548     		ldr	r0, .L10+4
 155 002a FFF7FEFF 		bl	HAL_SPI_Transmit
 156              	.LVL11:
 130:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 157              		.loc 1 130 0
 158 002e 0122     		movs	r2, #1
 159 0030 0421     		movs	r1, #4
 160 0032 2046     		mov	r0, r4
ARM GAS  /tmp/cc4GmWmk.s 			page 6


 161 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 162              	.LVL12:
 131:Drivers/ST7789/st7789.c **** }
 163              		.loc 1 131 0
 164 0038 03B0     		add	sp, sp, #12
 165              	.LCFI5:
 166              		.cfi_def_cfa_offset 12
 167              		@ sp needed
 168 003a 30BD     		pop	{r4, r5, pc}
 169              	.L11:
 170              		.align	2
 171              	.L10:
 172 003c 00000258 		.word	1476526080
 173 0040 00000000 		.word	hspi1
 174              		.cfi_endproc
 175              	.LFE355:
 177              		.section	.text.ST7789_WriteData,"ax",%progbits
 178              		.align	1
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu fpv5-d16
 184              	ST7789_WriteData:
 185              	.LFB354:
  94:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 186              		.loc 1 94 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              	.LVL13:
 191 0000 70B5     		push	{r4, r5, r6, lr}
 192              	.LCFI6:
 193              		.cfi_def_cfa_offset 16
 194              		.cfi_offset 4, -16
 195              		.cfi_offset 5, -12
 196              		.cfi_offset 6, -8
 197              		.cfi_offset 14, -4
 198 0002 0646     		mov	r6, r0
 199 0004 0D46     		mov	r5, r1
  95:Drivers/ST7789/st7789.c **** 	ST7789_DC_Set();
 200              		.loc 1 95 0
 201 0006 114C     		ldr	r4, .L16
 202 0008 0022     		movs	r2, #0
 203 000a 0421     		movs	r1, #4
 204              	.LVL14:
 205 000c 2046     		mov	r0, r4
 206              	.LVL15:
 207 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 208              	.LVL16:
  96:Drivers/ST7789/st7789.c **** 
 209              		.loc 1 96 0
 210 0012 0122     		movs	r2, #1
 211 0014 0221     		movs	r1, #2
 212 0016 2046     		mov	r0, r4
 213 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 214              	.LVL17:
 100:Drivers/ST7789/st7789.c **** 		uint16_t chunk_size = buff_size > 65535 ? 65535 : buff_size;
ARM GAS  /tmp/cc4GmWmk.s 			page 7


 215              		.loc 1 100 0
 216 001c 0EE0     		b	.L13
 217              	.L14:
 218              	.LBB2:
 101:Drivers/ST7789/st7789.c **** 		#ifdef USE_DMA
 219              		.loc 1 101 0
 220 001e 4FF6FF74 		movw	r4, #65535
 221 0022 AC42     		cmp	r4, r5
 222 0024 28BF     		it	cs
 223 0026 2C46     		movcs	r4, r5
 224 0028 A4B2     		uxth	r4, r4
 225              	.LVL18:
 112:Drivers/ST7789/st7789.c **** 		#endif
 226              		.loc 1 112 0
 227 002a 4FF0FF33 		mov	r3, #-1
 228 002e 2246     		mov	r2, r4
 229 0030 3146     		mov	r1, r6
 230 0032 0748     		ldr	r0, .L16+4
 231 0034 FFF7FEFF 		bl	HAL_SPI_Transmit
 232              	.LVL19:
 114:Drivers/ST7789/st7789.c **** 		buff_size -= chunk_size;
 233              		.loc 1 114 0
 234 0038 2644     		add	r6, r6, r4
 235              	.LVL20:
 115:Drivers/ST7789/st7789.c **** 	}
 236              		.loc 1 115 0
 237 003a 2D1B     		subs	r5, r5, r4
 238              	.LVL21:
 239              	.L13:
 240              	.LBE2:
 100:Drivers/ST7789/st7789.c **** 		uint16_t chunk_size = buff_size > 65535 ? 65535 : buff_size;
 241              		.loc 1 100 0
 242 003c 002D     		cmp	r5, #0
 243 003e EED1     		bne	.L14
 118:Drivers/ST7789/st7789.c **** }
 244              		.loc 1 118 0
 245 0040 0122     		movs	r2, #1
 246 0042 0421     		movs	r1, #4
 247 0044 0148     		ldr	r0, .L16
 248 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 249              	.LVL22:
 119:Drivers/ST7789/st7789.c **** /**
 250              		.loc 1 119 0
 251 004a 70BD     		pop	{r4, r5, r6, pc}
 252              	.LVL23:
 253              	.L17:
 254              		.align	2
 255              	.L16:
 256 004c 00000258 		.word	1476526080
 257 0050 00000000 		.word	hspi1
 258              		.cfi_endproc
 259              	.LFE354:
 261              		.section	.text.ST7789_SetAddressWindow,"ax",%progbits
 262              		.align	1
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
ARM GAS  /tmp/cc4GmWmk.s 			page 8


 266              		.fpu fpv5-d16
 268              	ST7789_SetAddressWindow:
 269              	.LFB357:
 132:Drivers/ST7789/st7789.c **** 
 133:Drivers/ST7789/st7789.c **** /**
 134:Drivers/ST7789/st7789.c ****  * @brief Set the rotation direction of the display
 135:Drivers/ST7789/st7789.c ****  * @param m -> rotation parameter(please refer it in st7789.h)
 136:Drivers/ST7789/st7789.c ****  * @return none
 137:Drivers/ST7789/st7789.c ****  */
 138:Drivers/ST7789/st7789.c **** void ST7789_SetRotation(uint8_t m)
 139:Drivers/ST7789/st7789.c **** {
 140:Drivers/ST7789/st7789.c **** 	ST7789_WriteCommand(ST7789_MADCTL);	// MADCTL
 141:Drivers/ST7789/st7789.c **** 	switch (m) {
 142:Drivers/ST7789/st7789.c **** 	case 0:
 143:Drivers/ST7789/st7789.c **** 		ST7789_WriteSmallData(ST7789_MADCTL_MX | ST7789_MADCTL_MY | ST7789_MADCTL_RGB);
 144:Drivers/ST7789/st7789.c **** 		break;
 145:Drivers/ST7789/st7789.c **** 	case 1:
 146:Drivers/ST7789/st7789.c **** 		ST7789_WriteSmallData(ST7789_MADCTL_MY | ST7789_MADCTL_MV | ST7789_MADCTL_RGB);
 147:Drivers/ST7789/st7789.c **** 		break;
 148:Drivers/ST7789/st7789.c **** 	case 2:
 149:Drivers/ST7789/st7789.c **** 		ST7789_WriteSmallData(ST7789_MADCTL_RGB);
 150:Drivers/ST7789/st7789.c **** 		break;
 151:Drivers/ST7789/st7789.c **** 	case 3:
 152:Drivers/ST7789/st7789.c **** 		ST7789_WriteSmallData(ST7789_MADCTL_MX | ST7789_MADCTL_MV | ST7789_MADCTL_RGB);
 153:Drivers/ST7789/st7789.c **** 		break;
 154:Drivers/ST7789/st7789.c **** 	default:
 155:Drivers/ST7789/st7789.c **** 		break;
 156:Drivers/ST7789/st7789.c **** 	}
 157:Drivers/ST7789/st7789.c **** }
 158:Drivers/ST7789/st7789.c **** 
 159:Drivers/ST7789/st7789.c **** /**
 160:Drivers/ST7789/st7789.c ****  * @brief Set address of DisplayWindow
 161:Drivers/ST7789/st7789.c ****  * @param xi&yi -> coordinates of window
 162:Drivers/ST7789/st7789.c ****  * @return none
 163:Drivers/ST7789/st7789.c ****  */
 164:Drivers/ST7789/st7789.c **** static void ST7789_SetAddressWindow(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1)
 165:Drivers/ST7789/st7789.c **** {
 270              		.loc 1 165 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 8
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              	.LVL24:
 275 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 276              	.LCFI7:
 277              		.cfi_def_cfa_offset 24
 278              		.cfi_offset 4, -24
 279              		.cfi_offset 5, -20
 280              		.cfi_offset 6, -16
 281              		.cfi_offset 7, -12
 282              		.cfi_offset 8, -8
 283              		.cfi_offset 14, -4
 284 0004 82B0     		sub	sp, sp, #8
 285              	.LCFI8:
 286              		.cfi_def_cfa_offset 32
 287 0006 8046     		mov	r8, r0
 288 0008 0E46     		mov	r6, r1
 289 000a 1746     		mov	r7, r2
ARM GAS  /tmp/cc4GmWmk.s 			page 9


 290 000c 1D46     		mov	r5, r3
 166:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 291              		.loc 1 166 0
 292 000e 1B4C     		ldr	r4, .L20
 293 0010 0022     		movs	r2, #0
 294              	.LVL25:
 295 0012 0421     		movs	r1, #4
 296              	.LVL26:
 297 0014 2046     		mov	r0, r4
 298              	.LVL27:
 299 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 300              	.LVL28:
 167:Drivers/ST7789/st7789.c **** 	uint16_t x_start = x0 + X_SHIFT, x_end = x1 + X_SHIFT;
 168:Drivers/ST7789/st7789.c **** 	uint16_t y_start = y0 + Y_SHIFT, y_end = y1 + Y_SHIFT;
 169:Drivers/ST7789/st7789.c **** 	
 170:Drivers/ST7789/st7789.c **** 	/* Column Address set */
 171:Drivers/ST7789/st7789.c **** 	ST7789_WriteCommand(ST7789_CASET); 
 301              		.loc 1 171 0
 302 001a 2A20     		movs	r0, #42
 303 001c FFF7FEFF 		bl	ST7789_WriteCommand
 304              	.LVL29:
 305              	.LBB3:
 172:Drivers/ST7789/st7789.c **** 	{
 173:Drivers/ST7789/st7789.c **** 		uint8_t data[] = {x_start >> 8, x_start & 0xFF, x_end >> 8, x_end & 0xFF};
 306              		.loc 1 173 0
 307 0020 4FEA1823 		lsr	r3, r8, #8
 308 0024 8DF80430 		strb	r3, [sp, #4]
 309 0028 8DF80580 		strb	r8, [sp, #5]
 310 002c 3B0A     		lsrs	r3, r7, #8
 311 002e 8DF80630 		strb	r3, [sp, #6]
 312 0032 8DF80770 		strb	r7, [sp, #7]
 174:Drivers/ST7789/st7789.c **** 		ST7789_WriteData(data, sizeof(data));
 313              		.loc 1 174 0
 314 0036 0421     		movs	r1, #4
 315 0038 0DEB0100 		add	r0, sp, r1
 316 003c FFF7FEFF 		bl	ST7789_WriteData
 317              	.LVL30:
 318              	.LBE3:
 175:Drivers/ST7789/st7789.c **** 	}
 176:Drivers/ST7789/st7789.c **** 
 177:Drivers/ST7789/st7789.c **** 	/* Row Address set */
 178:Drivers/ST7789/st7789.c **** 	ST7789_WriteCommand(ST7789_RASET);
 319              		.loc 1 178 0
 320 0040 2B20     		movs	r0, #43
 321 0042 FFF7FEFF 		bl	ST7789_WriteCommand
 322              	.LVL31:
 323              	.LBB4:
 179:Drivers/ST7789/st7789.c **** 	{
 180:Drivers/ST7789/st7789.c **** 		uint8_t data[] = {y_start >> 8, y_start & 0xFF, y_end >> 8, y_end & 0xFF};
 324              		.loc 1 180 0
 325 0046 330A     		lsrs	r3, r6, #8
 326 0048 8DF80430 		strb	r3, [sp, #4]
 327 004c 8DF80560 		strb	r6, [sp, #5]
 328 0050 2B0A     		lsrs	r3, r5, #8
 329 0052 8DF80630 		strb	r3, [sp, #6]
 330 0056 8DF80750 		strb	r5, [sp, #7]
 181:Drivers/ST7789/st7789.c **** 		ST7789_WriteData(data, sizeof(data));
ARM GAS  /tmp/cc4GmWmk.s 			page 10


 331              		.loc 1 181 0
 332 005a 0421     		movs	r1, #4
 333 005c 0DEB0100 		add	r0, sp, r1
 334 0060 FFF7FEFF 		bl	ST7789_WriteData
 335              	.LVL32:
 336              	.LBE4:
 182:Drivers/ST7789/st7789.c **** 	}
 183:Drivers/ST7789/st7789.c **** 	/* Write to RAM */
 184:Drivers/ST7789/st7789.c **** 	ST7789_WriteCommand(ST7789_RAMWR);
 337              		.loc 1 184 0
 338 0064 2C20     		movs	r0, #44
 339 0066 FFF7FEFF 		bl	ST7789_WriteCommand
 340              	.LVL33:
 185:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 341              		.loc 1 185 0
 342 006a 0122     		movs	r2, #1
 343 006c 0421     		movs	r1, #4
 344 006e 2046     		mov	r0, r4
 345 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 346              	.LVL34:
 186:Drivers/ST7789/st7789.c **** }
 347              		.loc 1 186 0
 348 0074 02B0     		add	sp, sp, #8
 349              	.LCFI9:
 350              		.cfi_def_cfa_offset 24
 351              		@ sp needed
 352 0076 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 353              	.LVL35:
 354              	.L21:
 355 007a 00BF     		.align	2
 356              	.L20:
 357 007c 00000258 		.word	1476526080
 358              		.cfi_endproc
 359              	.LFE357:
 361              		.section	.text.ST7789_SetRotation,"ax",%progbits
 362              		.align	1
 363              		.global	ST7789_SetRotation
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 367              		.fpu fpv5-d16
 369              	ST7789_SetRotation:
 370              	.LFB356:
 139:Drivers/ST7789/st7789.c **** 	ST7789_WriteCommand(ST7789_MADCTL);	// MADCTL
 371              		.loc 1 139 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              	.LVL36:
 376 0000 10B5     		push	{r4, lr}
 377              	.LCFI10:
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 4, -8
 380              		.cfi_offset 14, -4
 381 0002 0446     		mov	r4, r0
 140:Drivers/ST7789/st7789.c **** 	switch (m) {
 382              		.loc 1 140 0
ARM GAS  /tmp/cc4GmWmk.s 			page 11


 383 0004 3620     		movs	r0, #54
 384              	.LVL37:
 385 0006 FFF7FEFF 		bl	ST7789_WriteCommand
 386              	.LVL38:
 141:Drivers/ST7789/st7789.c **** 	case 0:
 387              		.loc 1 141 0
 388 000a 032C     		cmp	r4, #3
 389 000c 06D8     		bhi	.L22
 390 000e DFE804F0 		tbb	[pc, r4]
 391              	.L25:
 392 0012 02       		.byte	(.L24-.L25)/2
 393 0013 06       		.byte	(.L26-.L25)/2
 394 0014 0A       		.byte	(.L27-.L25)/2
 395 0015 0E       		.byte	(.L28-.L25)/2
 396              		.p2align 1
 397              	.L24:
 143:Drivers/ST7789/st7789.c **** 		break;
 398              		.loc 1 143 0
 399 0016 C020     		movs	r0, #192
 400 0018 FFF7FEFF 		bl	ST7789_WriteSmallData
 401              	.LVL39:
 402              	.L22:
 157:Drivers/ST7789/st7789.c **** 
 403              		.loc 1 157 0
 404 001c 10BD     		pop	{r4, pc}
 405              	.L26:
 146:Drivers/ST7789/st7789.c **** 		break;
 406              		.loc 1 146 0
 407 001e A020     		movs	r0, #160
 408 0020 FFF7FEFF 		bl	ST7789_WriteSmallData
 409              	.LVL40:
 147:Drivers/ST7789/st7789.c **** 	case 2:
 410              		.loc 1 147 0
 411 0024 FAE7     		b	.L22
 412              	.L27:
 149:Drivers/ST7789/st7789.c **** 		break;
 413              		.loc 1 149 0
 414 0026 0020     		movs	r0, #0
 415 0028 FFF7FEFF 		bl	ST7789_WriteSmallData
 416              	.LVL41:
 150:Drivers/ST7789/st7789.c **** 	case 3:
 417              		.loc 1 150 0
 418 002c F6E7     		b	.L22
 419              	.L28:
 152:Drivers/ST7789/st7789.c **** 		break;
 420              		.loc 1 152 0
 421 002e 6020     		movs	r0, #96
 422 0030 FFF7FEFF 		bl	ST7789_WriteSmallData
 423              	.LVL42:
 157:Drivers/ST7789/st7789.c **** 
 424              		.loc 1 157 0
 425 0034 F2E7     		b	.L22
 426              		.cfi_endproc
 427              	.LFE356:
 429              		.section	.text.ST7789_Fill_Color,"ax",%progbits
 430              		.align	1
 431              		.global	ST7789_Fill_Color
ARM GAS  /tmp/cc4GmWmk.s 			page 12


 432              		.syntax unified
 433              		.thumb
 434              		.thumb_func
 435              		.fpu fpv5-d16
 437              	ST7789_Fill_Color:
 438              	.LFB359:
 187:Drivers/ST7789/st7789.c **** 
 188:Drivers/ST7789/st7789.c **** /**
 189:Drivers/ST7789/st7789.c ****  * @brief Initialize ST7789 controller
 190:Drivers/ST7789/st7789.c ****  * @param none
 191:Drivers/ST7789/st7789.c ****  * @return none
 192:Drivers/ST7789/st7789.c ****  */
 193:Drivers/ST7789/st7789.c **** void ST7789_Init(void)
 194:Drivers/ST7789/st7789.c **** {
 195:Drivers/ST7789/st7789.c **** 	#ifdef USE_DMA
 196:Drivers/ST7789/st7789.c **** 		memset(disp_buf, 0, sizeof(disp_buf));
 197:Drivers/ST7789/st7789.c **** 	#endif
 198:Drivers/ST7789/st7789.c **** 	osDelay(25);
 199:Drivers/ST7789/st7789.c ****     ST7789_RST_Clr();
 200:Drivers/ST7789/st7789.c ****     osDelay(25);
 201:Drivers/ST7789/st7789.c ****     ST7789_RST_Set();
 202:Drivers/ST7789/st7789.c ****     osDelay(50);
 203:Drivers/ST7789/st7789.c **** 		
 204:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand(ST7789_COLMOD);		//	Set color mode
 205:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData(ST7789_COLOR_MODE_16bit);
 206:Drivers/ST7789/st7789.c ****   	ST7789_WriteCommand(0xB2);				//	Porch control
 207:Drivers/ST7789/st7789.c **** 	{
 208:Drivers/ST7789/st7789.c **** 		uint8_t data[] = {0x0C, 0x0C, 0x00, 0x33, 0x33};
 209:Drivers/ST7789/st7789.c **** 		ST7789_WriteData(data, sizeof(data));
 210:Drivers/ST7789/st7789.c **** 	}
 211:Drivers/ST7789/st7789.c **** 	ST7789_SetRotation(ST7789_ROTATION);	//	MADCTL (Display Rotation)
 212:Drivers/ST7789/st7789.c **** 	
 213:Drivers/ST7789/st7789.c **** 	/* Internal LCD Voltage generator settings */
 214:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand(0XB7);				//	Gate Control
 215:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData(0x35);			//	Default value
 216:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand(0xBB);				//	VCOM setting
 217:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData(0x19);			//	0.725v (default 0.75v for 0x20)
 218:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand(0xC0);				//	LCMCTRL	
 219:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData (0x2C);			//	Default value
 220:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand (0xC2);				//	VDV and VRH command Enable
 221:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData (0x01);			//	Default value
 222:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand (0xC3);				//	VRH set
 223:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData (0x12);			//	+-4.45v (defalut +-4.1v for 0x0B)
 224:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand (0xC4);				//	VDV set
 225:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData (0x20);			//	Default value
 226:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand (0xC6);				//	Frame rate control in normal mode
 227:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData (0x0F);			//	Default value (60HZ)
 228:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand (0xD0);				//	Power control
 229:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData (0xA4);			//	Default value
 230:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData (0xA1);			//	Default value
 231:Drivers/ST7789/st7789.c **** 	/**************** Division line ****************/
 232:Drivers/ST7789/st7789.c **** 
 233:Drivers/ST7789/st7789.c **** 	ST7789_WriteCommand(0xE0);
 234:Drivers/ST7789/st7789.c **** 	{
 235:Drivers/ST7789/st7789.c **** 		uint8_t data[] = {0xD0, 0x04, 0x0D, 0x11, 0x13, 0x2B, 0x3F, 0x54, 0x4C, 0x18, 0x0D, 0x0B, 0x1F, 0
 236:Drivers/ST7789/st7789.c **** 		ST7789_WriteData(data, sizeof(data));
 237:Drivers/ST7789/st7789.c **** 	}
ARM GAS  /tmp/cc4GmWmk.s 			page 13


 238:Drivers/ST7789/st7789.c **** 
 239:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand(0xE1);
 240:Drivers/ST7789/st7789.c **** 	{
 241:Drivers/ST7789/st7789.c **** 		uint8_t data[] = {0xD0, 0x04, 0x0C, 0x11, 0x13, 0x2C, 0x3F, 0x44, 0x51, 0x2F, 0x1F, 0x1F, 0x20, 0
 242:Drivers/ST7789/st7789.c **** 		ST7789_WriteData(data, sizeof(data));
 243:Drivers/ST7789/st7789.c **** 	}
 244:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand (ST7789_INVON);		//	Inversion ON
 245:Drivers/ST7789/st7789.c **** 	ST7789_WriteCommand (ST7789_SLPOUT);	//	Out of sleep mode
 246:Drivers/ST7789/st7789.c ****   	ST7789_WriteCommand (ST7789_NORON);		//	Normal Display on
 247:Drivers/ST7789/st7789.c ****   	ST7789_WriteCommand (ST7789_DISPON);	//	Main screen turned on	
 248:Drivers/ST7789/st7789.c **** 
 249:Drivers/ST7789/st7789.c **** 	osDelay(50);
 250:Drivers/ST7789/st7789.c **** 	ST7789_Fill_Color(MAGENTA);				//	Fill with Black.
 251:Drivers/ST7789/st7789.c **** 	ST7789_BLK_Set();
 252:Drivers/ST7789/st7789.c **** }
 253:Drivers/ST7789/st7789.c **** 
 254:Drivers/ST7789/st7789.c **** /**
 255:Drivers/ST7789/st7789.c ****  * @brief Fill the DisplayWindow with single color
 256:Drivers/ST7789/st7789.c ****  * @param color -> color to Fill with
 257:Drivers/ST7789/st7789.c ****  * @return none
 258:Drivers/ST7789/st7789.c ****  */
 259:Drivers/ST7789/st7789.c **** void ST7789_Fill_Color(uint16_t color)
 260:Drivers/ST7789/st7789.c **** {
 439              		.loc 1 260 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 8
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              	.LVL43:
 444 0000 70B5     		push	{r4, r5, r6, lr}
 445              	.LCFI11:
 446              		.cfi_def_cfa_offset 16
 447              		.cfi_offset 4, -16
 448              		.cfi_offset 5, -12
 449              		.cfi_offset 6, -8
 450              		.cfi_offset 14, -4
 451 0002 82B0     		sub	sp, sp, #8
 452              	.LCFI12:
 453              		.cfi_def_cfa_offset 24
 454 0004 0546     		mov	r5, r0
 261:Drivers/ST7789/st7789.c **** 	uint16_t i;
 262:Drivers/ST7789/st7789.c **** 	ST7789_SetAddressWindow(0, 0, ST7789_WIDTH - 1, ST7789_HEIGHT - 1);
 455              		.loc 1 262 0
 456 0006 EF23     		movs	r3, #239
 457 0008 1A46     		mov	r2, r3
 458 000a 0021     		movs	r1, #0
 459 000c 0846     		mov	r0, r1
 460              	.LVL44:
 461 000e FFF7FEFF 		bl	ST7789_SetAddressWindow
 462              	.LVL45:
 263:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 463              		.loc 1 263 0
 464 0012 0022     		movs	r2, #0
 465 0014 0421     		movs	r1, #4
 466 0016 0F48     		ldr	r0, .L37
 467 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 468              	.LVL46:
 264:Drivers/ST7789/st7789.c **** 
ARM GAS  /tmp/cc4GmWmk.s 			page 14


 265:Drivers/ST7789/st7789.c **** 	#ifdef USE_DMA
 266:Drivers/ST7789/st7789.c **** 		for (i = 0; i < ST7789_HEIGHT / HOR_LEN; i++)
 267:Drivers/ST7789/st7789.c **** 		{
 268:Drivers/ST7789/st7789.c **** 			memset(disp_buf, color, sizeof(disp_buf));
 269:Drivers/ST7789/st7789.c **** 			ST7789_WriteData(disp_buf, sizeof(disp_buf));
 270:Drivers/ST7789/st7789.c **** 		}
 271:Drivers/ST7789/st7789.c **** 	#else
 272:Drivers/ST7789/st7789.c **** 		uint16_t j;
 273:Drivers/ST7789/st7789.c **** 		for (i = 0; i < ST7789_WIDTH; i++)
 469              		.loc 1 273 0
 470 001c 0026     		movs	r6, #0
 471 001e 0EE0     		b	.L31
 472              	.LVL47:
 473              	.L32:
 474              	.LBB5:
 274:Drivers/ST7789/st7789.c **** 				for (j = 0; j < ST7789_HEIGHT; j++) {
 275:Drivers/ST7789/st7789.c **** 					uint8_t data[] = {color >> 8, color & 0xFF};
 475              		.loc 1 275 0 discriminator 3
 476 0020 2B0A     		lsrs	r3, r5, #8
 477 0022 8DF80430 		strb	r3, [sp, #4]
 478 0026 8DF80550 		strb	r5, [sp, #5]
 276:Drivers/ST7789/st7789.c **** 					ST7789_WriteData(data, sizeof(data));
 479              		.loc 1 276 0 discriminator 3
 480 002a 0221     		movs	r1, #2
 481 002c 01A8     		add	r0, sp, #4
 482 002e FFF7FEFF 		bl	ST7789_WriteData
 483              	.LVL48:
 484              	.LBE5:
 274:Drivers/ST7789/st7789.c **** 				for (j = 0; j < ST7789_HEIGHT; j++) {
 485              		.loc 1 274 0 discriminator 3
 486 0032 0134     		adds	r4, r4, #1
 487              	.LVL49:
 488 0034 A4B2     		uxth	r4, r4
 489              	.LVL50:
 490              	.L33:
 274:Drivers/ST7789/st7789.c **** 				for (j = 0; j < ST7789_HEIGHT; j++) {
 491              		.loc 1 274 0 is_stmt 0 discriminator 1
 492 0036 EF2C     		cmp	r4, #239
 493 0038 F2D9     		bls	.L32
 273:Drivers/ST7789/st7789.c **** 				for (j = 0; j < ST7789_HEIGHT; j++) {
 494              		.loc 1 273 0 is_stmt 1 discriminator 2
 495 003a 0136     		adds	r6, r6, #1
 496              	.LVL51:
 497 003c B6B2     		uxth	r6, r6
 498              	.LVL52:
 499              	.L31:
 273:Drivers/ST7789/st7789.c **** 				for (j = 0; j < ST7789_HEIGHT; j++) {
 500              		.loc 1 273 0 is_stmt 0 discriminator 1
 501 003e EF2E     		cmp	r6, #239
 502 0040 01D8     		bhi	.L36
 274:Drivers/ST7789/st7789.c **** 				for (j = 0; j < ST7789_HEIGHT; j++) {
 503              		.loc 1 274 0 is_stmt 1
 504 0042 0024     		movs	r4, #0
 505 0044 F7E7     		b	.L33
 506              	.L36:
 277:Drivers/ST7789/st7789.c **** 				}
 278:Drivers/ST7789/st7789.c **** 	#endif
ARM GAS  /tmp/cc4GmWmk.s 			page 15


 279:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 507              		.loc 1 279 0
 508 0046 0122     		movs	r2, #1
 509 0048 0421     		movs	r1, #4
 510 004a 0248     		ldr	r0, .L37
 511 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 512              	.LVL53:
 280:Drivers/ST7789/st7789.c **** }
 513              		.loc 1 280 0
 514 0050 02B0     		add	sp, sp, #8
 515              	.LCFI13:
 516              		.cfi_def_cfa_offset 16
 517              		@ sp needed
 518 0052 70BD     		pop	{r4, r5, r6, pc}
 519              	.LVL54:
 520              	.L38:
 521              		.align	2
 522              	.L37:
 523 0054 00000258 		.word	1476526080
 524              		.cfi_endproc
 525              	.LFE359:
 527              		.section	.text.ST7789_Init,"ax",%progbits
 528              		.align	1
 529              		.global	ST7789_Init
 530              		.syntax unified
 531              		.thumb
 532              		.thumb_func
 533              		.fpu fpv5-d16
 535              	ST7789_Init:
 536              	.LFB358:
 194:Drivers/ST7789/st7789.c **** 	#ifdef USE_DMA
 537              		.loc 1 194 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 16
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541 0000 70B5     		push	{r4, r5, r6, lr}
 542              	.LCFI14:
 543              		.cfi_def_cfa_offset 16
 544              		.cfi_offset 4, -16
 545              		.cfi_offset 5, -12
 546              		.cfi_offset 6, -8
 547              		.cfi_offset 14, -4
 548 0002 84B0     		sub	sp, sp, #16
 549              	.LCFI15:
 550              		.cfi_def_cfa_offset 32
 198:Drivers/ST7789/st7789.c ****     ST7789_RST_Clr();
 551              		.loc 1 198 0
 552 0004 1920     		movs	r0, #25
 553 0006 FFF7FEFF 		bl	osDelay
 554              	.LVL55:
 199:Drivers/ST7789/st7789.c ****     osDelay(25);
 555              		.loc 1 199 0
 556 000a 474E     		ldr	r6, .L41
 557 000c 0022     		movs	r2, #0
 558 000e 0121     		movs	r1, #1
 559 0010 3046     		mov	r0, r6
 560 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/cc4GmWmk.s 			page 16


 561              	.LVL56:
 200:Drivers/ST7789/st7789.c ****     ST7789_RST_Set();
 562              		.loc 1 200 0
 563 0016 1920     		movs	r0, #25
 564 0018 FFF7FEFF 		bl	osDelay
 565              	.LVL57:
 201:Drivers/ST7789/st7789.c ****     osDelay(50);
 566              		.loc 1 201 0
 567 001c 0122     		movs	r2, #1
 568 001e 1146     		mov	r1, r2
 569 0020 3046     		mov	r0, r6
 570 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 571              	.LVL58:
 202:Drivers/ST7789/st7789.c **** 		
 572              		.loc 1 202 0
 573 0026 3220     		movs	r0, #50
 574 0028 FFF7FEFF 		bl	osDelay
 575              	.LVL59:
 204:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData(ST7789_COLOR_MODE_16bit);
 576              		.loc 1 204 0
 577 002c 3A20     		movs	r0, #58
 578 002e FFF7FEFF 		bl	ST7789_WriteCommand
 579              	.LVL60:
 205:Drivers/ST7789/st7789.c ****   	ST7789_WriteCommand(0xB2);				//	Porch control
 580              		.loc 1 205 0
 581 0032 5520     		movs	r0, #85
 582 0034 FFF7FEFF 		bl	ST7789_WriteSmallData
 583              	.LVL61:
 206:Drivers/ST7789/st7789.c **** 	{
 584              		.loc 1 206 0
 585 0038 B220     		movs	r0, #178
 586 003a FFF7FEFF 		bl	ST7789_WriteCommand
 587              	.LVL62:
 588              	.LBB6:
 208:Drivers/ST7789/st7789.c **** 		ST7789_WriteData(data, sizeof(data));
 589              		.loc 1 208 0
 590 003e 3B4C     		ldr	r4, .L41+4
 591 0040 94E80300 		ldm	r4, {r0, r1}
 592 0044 0090     		str	r0, [sp]
 593 0046 8DF80410 		strb	r1, [sp, #4]
 209:Drivers/ST7789/st7789.c **** 	}
 594              		.loc 1 209 0
 595 004a 0521     		movs	r1, #5
 596 004c 6846     		mov	r0, sp
 597 004e FFF7FEFF 		bl	ST7789_WriteData
 598              	.LVL63:
 599              	.LBE6:
 211:Drivers/ST7789/st7789.c **** 	
 600              		.loc 1 211 0
 601 0052 0220     		movs	r0, #2
 602 0054 FFF7FEFF 		bl	ST7789_SetRotation
 603              	.LVL64:
 214:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData(0x35);			//	Default value
 604              		.loc 1 214 0
 605 0058 B720     		movs	r0, #183
 606 005a FFF7FEFF 		bl	ST7789_WriteCommand
 607              	.LVL65:
ARM GAS  /tmp/cc4GmWmk.s 			page 17


 215:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand(0xBB);				//	VCOM setting
 608              		.loc 1 215 0
 609 005e 3520     		movs	r0, #53
 610 0060 FFF7FEFF 		bl	ST7789_WriteSmallData
 611              	.LVL66:
 216:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData(0x19);			//	0.725v (default 0.75v for 0x20)
 612              		.loc 1 216 0
 613 0064 BB20     		movs	r0, #187
 614 0066 FFF7FEFF 		bl	ST7789_WriteCommand
 615              	.LVL67:
 217:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand(0xC0);				//	LCMCTRL	
 616              		.loc 1 217 0
 617 006a 1920     		movs	r0, #25
 618 006c FFF7FEFF 		bl	ST7789_WriteSmallData
 619              	.LVL68:
 218:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData (0x2C);			//	Default value
 620              		.loc 1 218 0
 621 0070 C020     		movs	r0, #192
 622 0072 FFF7FEFF 		bl	ST7789_WriteCommand
 623              	.LVL69:
 219:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand (0xC2);				//	VDV and VRH command Enable
 624              		.loc 1 219 0
 625 0076 2C20     		movs	r0, #44
 626 0078 FFF7FEFF 		bl	ST7789_WriteSmallData
 627              	.LVL70:
 220:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData (0x01);			//	Default value
 628              		.loc 1 220 0
 629 007c C220     		movs	r0, #194
 630 007e FFF7FEFF 		bl	ST7789_WriteCommand
 631              	.LVL71:
 221:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand (0xC3);				//	VRH set
 632              		.loc 1 221 0
 633 0082 0120     		movs	r0, #1
 634 0084 FFF7FEFF 		bl	ST7789_WriteSmallData
 635              	.LVL72:
 222:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData (0x12);			//	+-4.45v (defalut +-4.1v for 0x0B)
 636              		.loc 1 222 0
 637 0088 C320     		movs	r0, #195
 638 008a FFF7FEFF 		bl	ST7789_WriteCommand
 639              	.LVL73:
 223:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand (0xC4);				//	VDV set
 640              		.loc 1 223 0
 641 008e 1220     		movs	r0, #18
 642 0090 FFF7FEFF 		bl	ST7789_WriteSmallData
 643              	.LVL74:
 224:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData (0x20);			//	Default value
 644              		.loc 1 224 0
 645 0094 C420     		movs	r0, #196
 646 0096 FFF7FEFF 		bl	ST7789_WriteCommand
 647              	.LVL75:
 225:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand (0xC6);				//	Frame rate control in normal mode
 648              		.loc 1 225 0
 649 009a 2020     		movs	r0, #32
 650 009c FFF7FEFF 		bl	ST7789_WriteSmallData
 651              	.LVL76:
 226:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData (0x0F);			//	Default value (60HZ)
 652              		.loc 1 226 0
ARM GAS  /tmp/cc4GmWmk.s 			page 18


 653 00a0 C620     		movs	r0, #198
 654 00a2 FFF7FEFF 		bl	ST7789_WriteCommand
 655              	.LVL77:
 227:Drivers/ST7789/st7789.c ****     ST7789_WriteCommand (0xD0);				//	Power control
 656              		.loc 1 227 0
 657 00a6 0F20     		movs	r0, #15
 658 00a8 FFF7FEFF 		bl	ST7789_WriteSmallData
 659              	.LVL78:
 228:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData (0xA4);			//	Default value
 660              		.loc 1 228 0
 661 00ac D020     		movs	r0, #208
 662 00ae FFF7FEFF 		bl	ST7789_WriteCommand
 663              	.LVL79:
 229:Drivers/ST7789/st7789.c ****     ST7789_WriteSmallData (0xA1);			//	Default value
 664              		.loc 1 229 0
 665 00b2 A420     		movs	r0, #164
 666 00b4 FFF7FEFF 		bl	ST7789_WriteSmallData
 667              	.LVL80:
 230:Drivers/ST7789/st7789.c **** 	/**************** Division line ****************/
 668              		.loc 1 230 0
 669 00b8 A120     		movs	r0, #161
 670 00ba FFF7FEFF 		bl	ST7789_WriteSmallData
 671              	.LVL81:
 233:Drivers/ST7789/st7789.c **** 	{
 672              		.loc 1 233 0
 673 00be E020     		movs	r0, #224
 674 00c0 FFF7FEFF 		bl	ST7789_WriteCommand
 675              	.LVL82:
 676              	.LBB7:
 235:Drivers/ST7789/st7789.c **** 		ST7789_WriteData(data, sizeof(data));
 677              		.loc 1 235 0
 678 00c4 6D46     		mov	r5, sp
 679 00c6 04F10803 		add	r3, r4, #8
 680 00ca 0FCB     		ldm	r3, {r0, r1, r2, r3}
 681 00cc 07C5     		stmia	r5!, {r0, r1, r2}
 682 00ce 2B80     		strh	r3, [r5]	@ movhi
 236:Drivers/ST7789/st7789.c **** 	}
 683              		.loc 1 236 0
 684 00d0 0E21     		movs	r1, #14
 685 00d2 6846     		mov	r0, sp
 686 00d4 FFF7FEFF 		bl	ST7789_WriteData
 687              	.LVL83:
 688              	.LBE7:
 239:Drivers/ST7789/st7789.c **** 	{
 689              		.loc 1 239 0
 690 00d8 E120     		movs	r0, #225
 691 00da FFF7FEFF 		bl	ST7789_WriteCommand
 692              	.LVL84:
 693              	.LBB8:
 241:Drivers/ST7789/st7789.c **** 		ST7789_WriteData(data, sizeof(data));
 694              		.loc 1 241 0
 695 00de 6D46     		mov	r5, sp
 696 00e0 1834     		adds	r4, r4, #24
 697 00e2 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 698 00e6 07C5     		stmia	r5!, {r0, r1, r2}
 699 00e8 2B80     		strh	r3, [r5]	@ movhi
 242:Drivers/ST7789/st7789.c **** 	}
ARM GAS  /tmp/cc4GmWmk.s 			page 19


 700              		.loc 1 242 0
 701 00ea 0E21     		movs	r1, #14
 702 00ec 6846     		mov	r0, sp
 703 00ee FFF7FEFF 		bl	ST7789_WriteData
 704              	.LVL85:
 705              	.LBE8:
 244:Drivers/ST7789/st7789.c **** 	ST7789_WriteCommand (ST7789_SLPOUT);	//	Out of sleep mode
 706              		.loc 1 244 0
 707 00f2 2120     		movs	r0, #33
 708 00f4 FFF7FEFF 		bl	ST7789_WriteCommand
 709              	.LVL86:
 245:Drivers/ST7789/st7789.c ****   	ST7789_WriteCommand (ST7789_NORON);		//	Normal Display on
 710              		.loc 1 245 0
 711 00f8 1120     		movs	r0, #17
 712 00fa FFF7FEFF 		bl	ST7789_WriteCommand
 713              	.LVL87:
 246:Drivers/ST7789/st7789.c ****   	ST7789_WriteCommand (ST7789_DISPON);	//	Main screen turned on	
 714              		.loc 1 246 0
 715 00fe 1320     		movs	r0, #19
 716 0100 FFF7FEFF 		bl	ST7789_WriteCommand
 717              	.LVL88:
 247:Drivers/ST7789/st7789.c **** 
 718              		.loc 1 247 0
 719 0104 2920     		movs	r0, #41
 720 0106 FFF7FEFF 		bl	ST7789_WriteCommand
 721              	.LVL89:
 249:Drivers/ST7789/st7789.c **** 	ST7789_Fill_Color(MAGENTA);				//	Fill with Black.
 722              		.loc 1 249 0
 723 010a 3220     		movs	r0, #50
 724 010c FFF7FEFF 		bl	osDelay
 725              	.LVL90:
 250:Drivers/ST7789/st7789.c **** 	ST7789_BLK_Set();
 726              		.loc 1 250 0
 727 0110 4FF61F00 		movw	r0, #63519
 728 0114 FFF7FEFF 		bl	ST7789_Fill_Color
 729              	.LVL91:
 251:Drivers/ST7789/st7789.c **** }
 730              		.loc 1 251 0
 731 0118 0122     		movs	r2, #1
 732 011a 0821     		movs	r1, #8
 733 011c 3046     		mov	r0, r6
 734 011e FFF7FEFF 		bl	HAL_GPIO_WritePin
 735              	.LVL92:
 252:Drivers/ST7789/st7789.c **** 
 736              		.loc 1 252 0
 737 0122 04B0     		add	sp, sp, #16
 738              	.LCFI16:
 739              		.cfi_def_cfa_offset 16
 740              		@ sp needed
 741 0124 70BD     		pop	{r4, r5, r6, pc}
 742              	.L42:
 743 0126 00BF     		.align	2
 744              	.L41:
 745 0128 00000258 		.word	1476526080
 746 012c 00000000 		.word	.LANCHOR1
 747              		.cfi_endproc
 748              	.LFE358:
ARM GAS  /tmp/cc4GmWmk.s 			page 20


 750              		.section	.text.Display_init,"ax",%progbits
 751              		.align	1
 752              		.global	Display_init
 753              		.syntax unified
 754              		.thumb
 755              		.thumb_func
 756              		.fpu fpv5-d16
 758              	Display_init:
 759              	.LFB351:
  35:Drivers/ST7789/st7789.c **** 	static lv_disp_draw_buf_t buf;
 760              		.loc 1 35 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 764              	.LVL93:
 765 0000 70B5     		push	{r4, r5, r6, lr}
 766              	.LCFI17:
 767              		.cfi_def_cfa_offset 16
 768              		.cfi_offset 4, -16
 769              		.cfi_offset 5, -12
 770              		.cfi_offset 6, -8
 771              		.cfi_offset 14, -4
 772 0002 0646     		mov	r6, r0
  38:Drivers/ST7789/st7789.c **** 	lv_disp_drv_init(&disp_drv);
 773              		.loc 1 38 0
 774 0004 0E4D     		ldr	r5, .L45
 775 0006 4FF4B453 		mov	r3, #5760
 776 000a 0E4A     		ldr	r2, .L45+4
 777 000c 0E49     		ldr	r1, .L45+8
 778 000e 2846     		mov	r0, r5
 779              	.LVL94:
 780 0010 FFF7FEFF 		bl	lv_disp_draw_buf_init
 781              	.LVL95:
  39:Drivers/ST7789/st7789.c **** 
 782              		.loc 1 39 0
 783 0014 0D4C     		ldr	r4, .L45+12
 784 0016 2046     		mov	r0, r4
 785 0018 FFF7FEFF 		bl	lv_disp_drv_init
 786              	.LVL96:
  41:Drivers/ST7789/st7789.c **** 
 787              		.loc 1 41 0
 788 001c FFF7FEFF 		bl	ST7789_Init
 789              	.LVL97:
  43:Drivers/ST7789/st7789.c **** 	disp_drv.flush_cb = tft_flush;
 790              		.loc 1 43 0
 791 0020 E560     		str	r5, [r4, #12]
  44:Drivers/ST7789/st7789.c **** 	disp_drv.monitor_cb = monitor_cb;
 792              		.loc 1 44 0
 793 0022 0B4B     		ldr	r3, .L45+16
 794 0024 6361     		str	r3, [r4, #20]
  45:Drivers/ST7789/st7789.c **** 	disp_drv.hor_res = DISP_HOR_RES;
 795              		.loc 1 45 0
 796 0026 0B4B     		ldr	r3, .L45+20
 797 0028 6362     		str	r3, [r4, #36]
  46:Drivers/ST7789/st7789.c **** 	disp_drv.ver_res = DISP_VER_RES;
 798              		.loc 1 46 0
 799 002a F023     		movs	r3, #240
ARM GAS  /tmp/cc4GmWmk.s 			page 21


 800 002c 2380     		strh	r3, [r4]	@ movhi
  47:Drivers/ST7789/st7789.c **** 	disp_drv.rotated = rotation;
 801              		.loc 1 47 0
 802 002e 6380     		strh	r3, [r4, #2]	@ movhi
  48:Drivers/ST7789/st7789.c **** 	lv_disp_drv_register(&disp_drv);
 803              		.loc 1 48 0
 804 0030 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 805 0032 66F30513 		bfi	r3, r6, #4, #2
 806 0036 2374     		strb	r3, [r4, #16]
  49:Drivers/ST7789/st7789.c **** 
 807              		.loc 1 49 0
 808 0038 2046     		mov	r0, r4
 809 003a FFF7FEFF 		bl	lv_disp_drv_register
 810              	.LVL98:
  51:Drivers/ST7789/st7789.c **** 
 811              		.loc 1 51 0
 812 003e 70BD     		pop	{r4, r5, r6, pc}
 813              	.LVL99:
 814              	.L46:
 815              		.align	2
 816              	.L45:
 817 0040 00000000 		.word	.LANCHOR2
 818 0044 00000000 		.word	disp_buf2
 819 0048 00000000 		.word	disp_buf1
 820 004c 00000000 		.word	.LANCHOR3
 821 0050 00000000 		.word	tft_flush
 822 0054 00000000 		.word	monitor_cb
 823              		.cfi_endproc
 824              	.LFE351:
 826              		.section	.text.ST7789_DrawPixel,"ax",%progbits
 827              		.align	1
 828              		.global	ST7789_DrawPixel
 829              		.syntax unified
 830              		.thumb
 831              		.thumb_func
 832              		.fpu fpv5-d16
 834              	ST7789_DrawPixel:
 835              	.LFB360:
 281:Drivers/ST7789/st7789.c **** 
 282:Drivers/ST7789/st7789.c **** /**
 283:Drivers/ST7789/st7789.c ****  * @brief Draw a Pixel
 284:Drivers/ST7789/st7789.c ****  * @param x&y -> coordinate to Draw
 285:Drivers/ST7789/st7789.c ****  * @param color -> color of the Pixel
 286:Drivers/ST7789/st7789.c ****  * @return none
 287:Drivers/ST7789/st7789.c ****  */
 288:Drivers/ST7789/st7789.c **** void ST7789_DrawPixel(uint16_t x, uint16_t y, uint16_t color)
 289:Drivers/ST7789/st7789.c **** {
 836              		.loc 1 289 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 8
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              	.LVL100:
 290:Drivers/ST7789/st7789.c **** 	if ((x < 0) || (x >= ST7789_WIDTH) ||
 841              		.loc 1 290 0
 842 0000 EF29     		cmp	r1, #239
 843 0002 98BF     		it	ls
 844 0004 EF28     		cmpls	r0, #239
ARM GAS  /tmp/cc4GmWmk.s 			page 22


 845 0006 00D9     		bls	.L54
 846 0008 7047     		bx	lr
 847              	.L54:
 289:Drivers/ST7789/st7789.c **** 	if ((x < 0) || (x >= ST7789_WIDTH) ||
 848              		.loc 1 289 0
 849 000a 10B5     		push	{r4, lr}
 850              	.LCFI18:
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 4, -8
 853              		.cfi_offset 14, -4
 854 000c 82B0     		sub	sp, sp, #8
 855              	.LCFI19:
 856              		.cfi_def_cfa_offset 16
 857 000e 1446     		mov	r4, r2
 291:Drivers/ST7789/st7789.c **** 		 (y < 0) || (y >= ST7789_HEIGHT))	return;
 292:Drivers/ST7789/st7789.c **** 	
 293:Drivers/ST7789/st7789.c **** 	ST7789_SetAddressWindow(x, y, x, y);
 858              		.loc 1 293 0
 859 0010 0B46     		mov	r3, r1
 860 0012 0246     		mov	r2, r0
 861              	.LVL101:
 862 0014 FFF7FEFF 		bl	ST7789_SetAddressWindow
 863              	.LVL102:
 294:Drivers/ST7789/st7789.c **** 	uint8_t data[] = {color >> 8, color & 0xFF};
 864              		.loc 1 294 0
 865 0018 230A     		lsrs	r3, r4, #8
 866 001a 8DF80430 		strb	r3, [sp, #4]
 867 001e 8DF80540 		strb	r4, [sp, #5]
 295:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 868              		.loc 1 295 0
 869 0022 084C     		ldr	r4, .L55
 870 0024 0022     		movs	r2, #0
 871 0026 0421     		movs	r1, #4
 872 0028 2046     		mov	r0, r4
 873 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 874              	.LVL103:
 296:Drivers/ST7789/st7789.c **** 	ST7789_WriteData(data, sizeof(data));
 875              		.loc 1 296 0
 876 002e 0221     		movs	r1, #2
 877 0030 01A8     		add	r0, sp, #4
 878 0032 FFF7FEFF 		bl	ST7789_WriteData
 879              	.LVL104:
 297:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 880              		.loc 1 297 0
 881 0036 0122     		movs	r2, #1
 882 0038 0421     		movs	r1, #4
 883 003a 2046     		mov	r0, r4
 884 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 885              	.LVL105:
 298:Drivers/ST7789/st7789.c **** }
 886              		.loc 1 298 0
 887 0040 02B0     		add	sp, sp, #8
 888              	.LCFI20:
 889              		.cfi_def_cfa_offset 8
 890              		@ sp needed
 891 0042 10BD     		pop	{r4, pc}
 892              	.L56:
ARM GAS  /tmp/cc4GmWmk.s 			page 23


 893              		.align	2
 894              	.L55:
 895 0044 00000258 		.word	1476526080
 896              		.cfi_endproc
 897              	.LFE360:
 899              		.section	.text.tft_flush,"ax",%progbits
 900              		.align	1
 901              		.global	tft_flush
 902              		.syntax unified
 903              		.thumb
 904              		.thumb_func
 905              		.fpu fpv5-d16
 907              	tft_flush:
 908              	.LFB352:
  53:Drivers/ST7789/st7789.c **** 
 909              		.loc 1 53 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913              	.LVL106:
  55:Drivers/ST7789/st7789.c ****     if(area->y2 < 0) return;
 914              		.loc 1 55 0
 915 0000 B1F90430 		ldrsh	r3, [r1, #4]
 916 0004 002B     		cmp	r3, #0
 917 0006 29DB     		blt	.L64
  53:Drivers/ST7789/st7789.c **** 
 918              		.loc 1 53 0
 919 0008 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 920              	.LCFI21:
 921              		.cfi_def_cfa_offset 24
 922              		.cfi_offset 4, -24
 923              		.cfi_offset 5, -20
 924              		.cfi_offset 6, -16
 925              		.cfi_offset 7, -12
 926              		.cfi_offset 8, -8
 927              		.cfi_offset 14, -4
 928 000c 8046     		mov	r8, r0
 929 000e 0D46     		mov	r5, r1
 930 0010 1646     		mov	r6, r2
  56:Drivers/ST7789/st7789.c ****     if(area->x1 > DISP_HOR_RES - 1) return;
 931              		.loc 1 56 0
 932 0012 B1F90630 		ldrsh	r3, [r1, #6]
 933 0016 002B     		cmp	r3, #0
 934 0018 1EDB     		blt	.L57
  57:Drivers/ST7789/st7789.c ****     if(area->y1 > DISP_VER_RES - 1) return;
 935              		.loc 1 57 0
 936 001a B1F90030 		ldrsh	r3, [r1]
 937 001e EF2B     		cmp	r3, #239
 938 0020 1ADC     		bgt	.L57
  58:Drivers/ST7789/st7789.c **** 
 939              		.loc 1 58 0
 940 0022 B1F90270 		ldrsh	r7, [r1, #2]
 941 0026 EF2F     		cmp	r7, #239
 942 0028 0CDD     		ble	.L59
 943 002a 15E0     		b	.L57
 944              	.LVL107:
 945              	.L61:
ARM GAS  /tmp/cc4GmWmk.s 			page 24


 946              	.LBB9:
 947              	.LBB10:
  64:Drivers/ST7789/st7789.c ****             color_p++;
 948              		.loc 1 64 0 discriminator 3
 949 002c 36F8022B 		ldrh	r2, [r6], #2
 950              	.LVL108:
 951 0030 B9B2     		uxth	r1, r7
 952 0032 A0B2     		uxth	r0, r4
 953 0034 FFF7FEFF 		bl	ST7789_DrawPixel
 954              	.LVL109:
  62:Drivers/ST7789/st7789.c ****             //set_pixel(x, y, *color_p);  /* Put a pixel to the display.*/
 955              		.loc 1 62 0 discriminator 3
 956 0038 0134     		adds	r4, r4, #1
 957              	.LVL110:
 958              	.L60:
  62:Drivers/ST7789/st7789.c ****             //set_pixel(x, y, *color_p);  /* Put a pixel to the display.*/
 959              		.loc 1 62 0 is_stmt 0 discriminator 1
 960 003a B5F90430 		ldrsh	r3, [r5, #4]
 961 003e A342     		cmp	r3, r4
 962 0040 F4DA     		bge	.L61
 963              	.LVL111:
 964              	.LBE10:
  61:Drivers/ST7789/st7789.c ****         for(int32_t x = area->x1; x <= area->x2; x++) {
 965              		.loc 1 61 0 is_stmt 1 discriminator 2
 966 0042 0137     		adds	r7, r7, #1
 967              	.LVL112:
 968              	.L59:
  61:Drivers/ST7789/st7789.c ****         for(int32_t x = area->x1; x <= area->x2; x++) {
 969              		.loc 1 61 0 is_stmt 0 discriminator 1
 970 0044 B5F90630 		ldrsh	r3, [r5, #6]
 971 0048 BB42     		cmp	r3, r7
 972 004a 02DB     		blt	.L67
 973              	.LBB11:
  62:Drivers/ST7789/st7789.c ****             //set_pixel(x, y, *color_p);  /* Put a pixel to the display.*/
 974              		.loc 1 62 0 is_stmt 1
 975 004c B5F90040 		ldrsh	r4, [r5]
 976              	.LVL113:
 977 0050 F3E7     		b	.L60
 978              	.LVL114:
 979              	.L67:
 980              	.LBE11:
 981              	.LBE9:
  71:Drivers/ST7789/st7789.c **** }
 982              		.loc 1 71 0
 983 0052 4046     		mov	r0, r8
 984 0054 FFF7FEFF 		bl	lv_disp_flush_ready
 985              	.LVL115:
 986              	.L57:
  72:Drivers/ST7789/st7789.c **** 
 987              		.loc 1 72 0
 988 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 989              	.LVL116:
 990              	.L64:
 991              	.LCFI22:
 992              		.cfi_def_cfa_offset 0
 993              		.cfi_restore 4
 994              		.cfi_restore 5
ARM GAS  /tmp/cc4GmWmk.s 			page 25


 995              		.cfi_restore 6
 996              		.cfi_restore 7
 997              		.cfi_restore 8
 998              		.cfi_restore 14
 999 005c 7047     		bx	lr
 1000              		.cfi_endproc
 1001              	.LFE352:
 1003              		.section	.text.ST7789_Fill,"ax",%progbits
 1004              		.align	1
 1005              		.global	ST7789_Fill
 1006              		.syntax unified
 1007              		.thumb
 1008              		.thumb_func
 1009              		.fpu fpv5-d16
 1011              	ST7789_Fill:
 1012              	.LFB361:
 299:Drivers/ST7789/st7789.c **** 
 300:Drivers/ST7789/st7789.c **** /**
 301:Drivers/ST7789/st7789.c ****  * @brief Fill an Area with single color
 302:Drivers/ST7789/st7789.c ****  * @param xSta&ySta -> coordinate of the start point
 303:Drivers/ST7789/st7789.c ****  * @param xEnd&yEnd -> coordinate of the end point
 304:Drivers/ST7789/st7789.c ****  * @param color -> color to Fill with
 305:Drivers/ST7789/st7789.c ****  * @return none
 306:Drivers/ST7789/st7789.c ****  */
 307:Drivers/ST7789/st7789.c **** void ST7789_Fill(uint16_t xSta, uint16_t ySta, uint16_t xEnd, uint16_t yEnd, uint16_t color)
 308:Drivers/ST7789/st7789.c **** {
 1013              		.loc 1 308 0
 1014              		.cfi_startproc
 1015              		@ args = 4, pretend = 0, frame = 8
 1016              		@ frame_needed = 0, uses_anonymous_args = 0
 1017              	.LVL117:
 1018 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1019              	.LCFI23:
 1020              		.cfi_def_cfa_offset 28
 1021              		.cfi_offset 4, -28
 1022              		.cfi_offset 5, -24
 1023              		.cfi_offset 6, -20
 1024              		.cfi_offset 7, -16
 1025              		.cfi_offset 8, -12
 1026              		.cfi_offset 9, -8
 1027              		.cfi_offset 14, -4
 1028 0004 83B0     		sub	sp, sp, #12
 1029              	.LCFI24:
 1030              		.cfi_def_cfa_offset 40
 1031 0006 BDF82850 		ldrh	r5, [sp, #40]
 309:Drivers/ST7789/st7789.c **** 	if ((xEnd < 0) || (xEnd >= ST7789_WIDTH) ||
 1032              		.loc 1 309 0
 1033 000a EF2B     		cmp	r3, #239
 1034 000c 98BF     		it	ls
 1035 000e EF2A     		cmpls	r2, #239
 1036 0010 02D9     		bls	.L75
 1037              	.LVL118:
 1038              	.L68:
 310:Drivers/ST7789/st7789.c **** 		 (yEnd < 0) || (yEnd >= ST7789_HEIGHT))	return;
 311:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 312:Drivers/ST7789/st7789.c **** 	uint16_t i, j;
 313:Drivers/ST7789/st7789.c **** 	ST7789_SetAddressWindow(xSta, ySta, xEnd, yEnd);
ARM GAS  /tmp/cc4GmWmk.s 			page 26


 314:Drivers/ST7789/st7789.c **** 	for (i = ySta; i <= yEnd; i++)
 315:Drivers/ST7789/st7789.c **** 		for (j = xSta; j <= xEnd; j++) {
 316:Drivers/ST7789/st7789.c **** 			uint8_t data[] = {color >> 8, color & 0xFF};
 317:Drivers/ST7789/st7789.c **** 			ST7789_WriteData(data, sizeof(data));
 318:Drivers/ST7789/st7789.c **** 		}
 319:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 320:Drivers/ST7789/st7789.c **** }
 1039              		.loc 1 320 0
 1040 0012 03B0     		add	sp, sp, #12
 1041              	.LCFI25:
 1042              		.cfi_remember_state
 1043              		.cfi_def_cfa_offset 28
 1044              		@ sp needed
 1045 0014 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1046              	.LVL119:
 1047              	.L75:
 1048              	.LCFI26:
 1049              		.cfi_restore_state
 1050 0018 8146     		mov	r9, r0
 1051 001a 0F46     		mov	r7, r1
 1052 001c 1646     		mov	r6, r2
 1053 001e 9846     		mov	r8, r3
 311:Drivers/ST7789/st7789.c **** 	uint16_t i, j;
 1054              		.loc 1 311 0
 1055 0020 0022     		movs	r2, #0
 1056              	.LVL120:
 1057 0022 0421     		movs	r1, #4
 1058              	.LVL121:
 1059 0024 1148     		ldr	r0, .L77
 1060              	.LVL122:
 1061 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1062              	.LVL123:
 313:Drivers/ST7789/st7789.c **** 	for (i = ySta; i <= yEnd; i++)
 1063              		.loc 1 313 0
 1064 002a 4346     		mov	r3, r8
 1065 002c 3246     		mov	r2, r6
 1066 002e 3946     		mov	r1, r7
 1067 0030 4846     		mov	r0, r9
 1068 0032 FFF7FEFF 		bl	ST7789_SetAddressWindow
 1069              	.LVL124:
 314:Drivers/ST7789/st7789.c **** 		for (j = xSta; j <= xEnd; j++) {
 1070              		.loc 1 314 0
 1071 0036 0EE0     		b	.L70
 1072              	.LVL125:
 1073              	.L71:
 1074              	.LBB12:
 316:Drivers/ST7789/st7789.c **** 			ST7789_WriteData(data, sizeof(data));
 1075              		.loc 1 316 0 discriminator 3
 1076 0038 2B0A     		lsrs	r3, r5, #8
 1077 003a 8DF80430 		strb	r3, [sp, #4]
 1078 003e 8DF80550 		strb	r5, [sp, #5]
 317:Drivers/ST7789/st7789.c **** 		}
 1079              		.loc 1 317 0 discriminator 3
 1080 0042 0221     		movs	r1, #2
 1081 0044 01A8     		add	r0, sp, #4
 1082 0046 FFF7FEFF 		bl	ST7789_WriteData
 1083              	.LVL126:
ARM GAS  /tmp/cc4GmWmk.s 			page 27


 1084              	.LBE12:
 315:Drivers/ST7789/st7789.c **** 			uint8_t data[] = {color >> 8, color & 0xFF};
 1085              		.loc 1 315 0 discriminator 3
 1086 004a 0134     		adds	r4, r4, #1
 1087              	.LVL127:
 1088 004c A4B2     		uxth	r4, r4
 1089              	.LVL128:
 1090              	.L72:
 315:Drivers/ST7789/st7789.c **** 			uint8_t data[] = {color >> 8, color & 0xFF};
 1091              		.loc 1 315 0 is_stmt 0 discriminator 1
 1092 004e B442     		cmp	r4, r6
 1093 0050 F2D9     		bls	.L71
 314:Drivers/ST7789/st7789.c **** 		for (j = xSta; j <= xEnd; j++) {
 1094              		.loc 1 314 0 is_stmt 1 discriminator 2
 1095 0052 0137     		adds	r7, r7, #1
 1096              	.LVL129:
 1097 0054 BFB2     		uxth	r7, r7
 1098              	.LVL130:
 1099              	.L70:
 314:Drivers/ST7789/st7789.c **** 		for (j = xSta; j <= xEnd; j++) {
 1100              		.loc 1 314 0 is_stmt 0 discriminator 1
 1101 0056 4745     		cmp	r7, r8
 1102 0058 01D8     		bhi	.L76
 315:Drivers/ST7789/st7789.c **** 			uint8_t data[] = {color >> 8, color & 0xFF};
 1103              		.loc 1 315 0 is_stmt 1
 1104 005a 4C46     		mov	r4, r9
 1105 005c F7E7     		b	.L72
 1106              	.L76:
 319:Drivers/ST7789/st7789.c **** }
 1107              		.loc 1 319 0
 1108 005e 0122     		movs	r2, #1
 1109 0060 0421     		movs	r1, #4
 1110 0062 0248     		ldr	r0, .L77
 1111 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1112              	.LVL131:
 1113 0068 D3E7     		b	.L68
 1114              	.L78:
 1115 006a 00BF     		.align	2
 1116              	.L77:
 1117 006c 00000258 		.word	1476526080
 1118              		.cfi_endproc
 1119              	.LFE361:
 1121              		.section	.text.ST7789_DrawPixel_4px,"ax",%progbits
 1122              		.align	1
 1123              		.global	ST7789_DrawPixel_4px
 1124              		.syntax unified
 1125              		.thumb
 1126              		.thumb_func
 1127              		.fpu fpv5-d16
 1129              	ST7789_DrawPixel_4px:
 1130              	.LFB362:
 321:Drivers/ST7789/st7789.c **** 
 322:Drivers/ST7789/st7789.c **** /**
 323:Drivers/ST7789/st7789.c ****  * @brief Draw a big Pixel at a point
 324:Drivers/ST7789/st7789.c ****  * @param x&y -> coordinate of the point
 325:Drivers/ST7789/st7789.c ****  * @param color -> color of the Pixel
 326:Drivers/ST7789/st7789.c ****  * @return none
ARM GAS  /tmp/cc4GmWmk.s 			page 28


 327:Drivers/ST7789/st7789.c ****  */
 328:Drivers/ST7789/st7789.c **** void ST7789_DrawPixel_4px(uint16_t x, uint16_t y, uint16_t color)
 329:Drivers/ST7789/st7789.c **** {
 1131              		.loc 1 329 0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 0
 1134              		@ frame_needed = 0, uses_anonymous_args = 0
 1135              	.LVL132:
 1136 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1137              	.LCFI27:
 1138              		.cfi_def_cfa_offset 28
 1139              		.cfi_offset 4, -28
 1140              		.cfi_offset 5, -24
 1141              		.cfi_offset 6, -20
 1142              		.cfi_offset 7, -16
 1143              		.cfi_offset 8, -12
 1144              		.cfi_offset 9, -8
 1145              		.cfi_offset 14, -4
 1146 0004 83B0     		sub	sp, sp, #12
 1147              	.LCFI28:
 1148              		.cfi_def_cfa_offset 40
 330:Drivers/ST7789/st7789.c **** 	if ((x <= 0) || (x > ST7789_WIDTH) ||
 1149              		.loc 1 330 0
 1150 0006 441E     		subs	r4, r0, #1
 1151 0008 A4B2     		uxth	r4, r4
 1152 000a EF2C     		cmp	r4, #239
 1153 000c 03D8     		bhi	.L79
 331:Drivers/ST7789/st7789.c **** 		 (y <= 0) || (y > ST7789_HEIGHT))	return;
 1154              		.loc 1 331 0
 1155 000e 4F1E     		subs	r7, r1, #1
 1156 0010 BFB2     		uxth	r7, r7
 1157 0012 EF2F     		cmp	r7, #239
 1158 0014 02D9     		bls	.L82
 1159              	.LVL133:
 1160              	.L79:
 332:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 333:Drivers/ST7789/st7789.c **** 	ST7789_Fill(x - 1, y - 1, x + 1, y + 1, color);
 334:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 335:Drivers/ST7789/st7789.c **** }
 1161              		.loc 1 335 0
 1162 0016 03B0     		add	sp, sp, #12
 1163              	.LCFI29:
 1164              		.cfi_remember_state
 1165              		.cfi_def_cfa_offset 28
 1166              		@ sp needed
 1167 0018 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1168              	.LVL134:
 1169              	.L82:
 1170              	.LCFI30:
 1171              		.cfi_restore_state
 1172 001c 9046     		mov	r8, r2
 1173 001e 0E46     		mov	r6, r1
 1174 0020 0546     		mov	r5, r0
 332:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 1175              		.loc 1 332 0
 1176 0022 DFF82C90 		ldr	r9, .L83
 1177 0026 0022     		movs	r2, #0
ARM GAS  /tmp/cc4GmWmk.s 			page 29


 1178              	.LVL135:
 1179 0028 0421     		movs	r1, #4
 1180              	.LVL136:
 1181 002a 4846     		mov	r0, r9
 1182              	.LVL137:
 1183 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1184              	.LVL138:
 333:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 1185              		.loc 1 333 0
 1186 0030 731C     		adds	r3, r6, #1
 1187 0032 6A1C     		adds	r2, r5, #1
 1188 0034 CDF80080 		str	r8, [sp]
 1189 0038 9BB2     		uxth	r3, r3
 1190 003a 92B2     		uxth	r2, r2
 1191 003c 3946     		mov	r1, r7
 1192 003e 2046     		mov	r0, r4
 1193 0040 FFF7FEFF 		bl	ST7789_Fill
 1194              	.LVL139:
 334:Drivers/ST7789/st7789.c **** }
 1195              		.loc 1 334 0
 1196 0044 0122     		movs	r2, #1
 1197 0046 0421     		movs	r1, #4
 1198 0048 4846     		mov	r0, r9
 1199 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1200              	.LVL140:
 1201 004e E2E7     		b	.L79
 1202              	.L84:
 1203              		.align	2
 1204              	.L83:
 1205 0050 00000258 		.word	1476526080
 1206              		.cfi_endproc
 1207              	.LFE362:
 1209              		.section	.text.ST7789_DrawLine,"ax",%progbits
 1210              		.align	1
 1211              		.global	ST7789_DrawLine
 1212              		.syntax unified
 1213              		.thumb
 1214              		.thumb_func
 1215              		.fpu fpv5-d16
 1217              	ST7789_DrawLine:
 1218              	.LFB363:
 336:Drivers/ST7789/st7789.c **** 
 337:Drivers/ST7789/st7789.c **** /**
 338:Drivers/ST7789/st7789.c ****  * @brief Draw a line with single color
 339:Drivers/ST7789/st7789.c ****  * @param x1&y1 -> coordinate of the start point
 340:Drivers/ST7789/st7789.c ****  * @param x2&y2 -> coordinate of the end point
 341:Drivers/ST7789/st7789.c ****  * @param color -> color of the line to Draw
 342:Drivers/ST7789/st7789.c ****  * @return none
 343:Drivers/ST7789/st7789.c ****  */
 344:Drivers/ST7789/st7789.c **** void ST7789_DrawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1,
 345:Drivers/ST7789/st7789.c ****         uint16_t color) {
 1219              		.loc 1 345 0
 1220              		.cfi_startproc
 1221              		@ args = 4, pretend = 0, frame = 8
 1222              		@ frame_needed = 0, uses_anonymous_args = 0
 1223              	.LVL141:
 1224 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
ARM GAS  /tmp/cc4GmWmk.s 			page 30


 1225              	.LCFI31:
 1226              		.cfi_def_cfa_offset 36
 1227              		.cfi_offset 4, -36
 1228              		.cfi_offset 5, -32
 1229              		.cfi_offset 6, -28
 1230              		.cfi_offset 7, -24
 1231              		.cfi_offset 8, -20
 1232              		.cfi_offset 9, -16
 1233              		.cfi_offset 10, -12
 1234              		.cfi_offset 11, -8
 1235              		.cfi_offset 14, -4
 1236 0004 83B0     		sub	sp, sp, #12
 1237              	.LCFI32:
 1238              		.cfi_def_cfa_offset 48
 1239 0006 0F46     		mov	r7, r1
 1240 0008 1646     		mov	r6, r2
 1241 000a 1D46     		mov	r5, r3
 1242 000c BDF83030 		ldrh	r3, [sp, #48]
 1243              	.LVL142:
 1244 0010 0093     		str	r3, [sp]
 346:Drivers/ST7789/st7789.c **** 	uint16_t swap;
 347:Drivers/ST7789/st7789.c ****     uint16_t steep = ABS(y1 - y0) > ABS(x1 - x0);
 1245              		.loc 1 347 0
 1246 0012 A5EB0108 		sub	r8, r5, r1
 1247 0016 B8F1000F 		cmp	r8, #0
 1248 001a B8BF     		it	lt
 1249 001c C8F10008 		rsblt	r8, r8, #0
 1250 0020 A2EB0009 		sub	r9, r2, r0
 1251 0024 B9F1000F 		cmp	r9, #0
 1252 0028 B8BF     		it	lt
 1253 002a C9F10009 		rsblt	r9, r9, #0
 1254              	.LVL143:
 348:Drivers/ST7789/st7789.c ****     if (steep) {
 1255              		.loc 1 348 0
 1256 002e C845     		cmp	r8, r9
 1257 0030 04DC     		bgt	.L86
 1258 0032 2B46     		mov	r3, r5
 1259 0034 1546     		mov	r5, r2
 1260 0036 1E46     		mov	r6, r3
 1261 0038 0746     		mov	r7, r0
 1262 003a 0846     		mov	r0, r1
 1263              	.LVL144:
 1264              	.L86:
 349:Drivers/ST7789/st7789.c **** 		swap = x0;
 350:Drivers/ST7789/st7789.c **** 		x0 = y0;
 351:Drivers/ST7789/st7789.c **** 		y0 = swap;
 352:Drivers/ST7789/st7789.c **** 
 353:Drivers/ST7789/st7789.c **** 		swap = x1;
 354:Drivers/ST7789/st7789.c **** 		x1 = y1;
 355:Drivers/ST7789/st7789.c **** 		y1 = swap;
 356:Drivers/ST7789/st7789.c ****         //_swap_int16_t(x0, y0);
 357:Drivers/ST7789/st7789.c ****         //_swap_int16_t(x1, y1);
 358:Drivers/ST7789/st7789.c ****     }
 359:Drivers/ST7789/st7789.c **** 
 360:Drivers/ST7789/st7789.c ****     if (x0 > x1) {
 1265              		.loc 1 360 0
 1266 003c AF42     		cmp	r7, r5
ARM GAS  /tmp/cc4GmWmk.s 			page 31


 1267 003e 05D8     		bhi	.L87
 1268 0040 3346     		mov	r3, r6
 1269 0042 0646     		mov	r6, r0
 1270              	.LVL145:
 1271 0044 1846     		mov	r0, r3
 1272              	.LVL146:
 1273 0046 2B46     		mov	r3, r5
 1274 0048 3D46     		mov	r5, r7
 1275              	.LVL147:
 1276 004a 1F46     		mov	r7, r3
 1277              	.LVL148:
 1278              	.L87:
 361:Drivers/ST7789/st7789.c **** 		swap = x0;
 362:Drivers/ST7789/st7789.c **** 		x0 = x1;
 363:Drivers/ST7789/st7789.c **** 		x1 = swap;
 364:Drivers/ST7789/st7789.c **** 
 365:Drivers/ST7789/st7789.c **** 		swap = y0;
 366:Drivers/ST7789/st7789.c **** 		y0 = y1;
 367:Drivers/ST7789/st7789.c **** 		y1 = swap;
 368:Drivers/ST7789/st7789.c ****         //_swap_int16_t(x0, x1);
 369:Drivers/ST7789/st7789.c ****         //_swap_int16_t(y0, y1);
 370:Drivers/ST7789/st7789.c ****     }
 371:Drivers/ST7789/st7789.c **** 
 372:Drivers/ST7789/st7789.c ****     int16_t dx, dy;
 373:Drivers/ST7789/st7789.c ****     dx = x1 - x0;
 1279              		.loc 1 373 0
 1280 004c A7EB050B 		sub	fp, r7, r5
 1281 0050 1FFA8BFB 		uxth	fp, fp
 1282 0054 0FFA8BF3 		sxth	r3, fp
 1283              	.LVL149:
 374:Drivers/ST7789/st7789.c ****     dy = ABS(y1 - y0);
 1284              		.loc 1 374 0
 1285 0058 A0EB060A 		sub	r10, r0, r6
 1286 005c BAF1000F 		cmp	r10, #0
 1287 0060 B8BF     		it	lt
 1288 0062 CAF1000A 		rsblt	r10, r10, #0
 1289              	.LVL150:
 375:Drivers/ST7789/st7789.c **** 
 376:Drivers/ST7789/st7789.c ****     int16_t err = dx / 2;
 1290              		.loc 1 376 0
 1291 0066 1C46     		mov	r4, r3
 1292 0068 002B     		cmp	r3, #0
 1293 006a 06DB     		blt	.L97
 1294              	.L88:
 1295 006c 6410     		asrs	r4, r4, #1
 1296              	.LVL151:
 377:Drivers/ST7789/st7789.c ****     int16_t ystep;
 378:Drivers/ST7789/st7789.c **** 
 379:Drivers/ST7789/st7789.c ****     if (y0 < y1) {
 1297              		.loc 1 379 0
 1298 006e 8642     		cmp	r6, r0
 1299 0070 23D3     		bcc	.L89
 380:Drivers/ST7789/st7789.c ****         ystep = 1;
 381:Drivers/ST7789/st7789.c ****     } else {
 382:Drivers/ST7789/st7789.c ****         ystep = -1;
 1300              		.loc 1 382 0
 1301 0072 4FF0FF33 		mov	r3, #-1
ARM GAS  /tmp/cc4GmWmk.s 			page 32


 1302              	.LVL152:
 1303 0076 0193     		str	r3, [sp, #4]
 1304 0078 0EE0     		b	.L94
 1305              	.LVL153:
 1306              	.L97:
 376:Drivers/ST7789/st7789.c ****     int16_t ystep;
 1307              		.loc 1 376 0
 1308 007a 5C1C     		adds	r4, r3, #1
 1309 007c F6E7     		b	.L88
 1310              	.LVL154:
 1311              	.L91:
 383:Drivers/ST7789/st7789.c ****     }
 384:Drivers/ST7789/st7789.c **** 
 385:Drivers/ST7789/st7789.c ****     for (; x0<=x1; x0++) {
 386:Drivers/ST7789/st7789.c ****         if (steep) {
 387:Drivers/ST7789/st7789.c ****             ST7789_DrawPixel(y0, x0, color);
 388:Drivers/ST7789/st7789.c ****         } else {
 389:Drivers/ST7789/st7789.c ****             ST7789_DrawPixel(x0, y0, color);
 1312              		.loc 1 389 0
 1313 007e 009A     		ldr	r2, [sp]
 1314 0080 3146     		mov	r1, r6
 1315 0082 2846     		mov	r0, r5
 1316 0084 FFF7FEFF 		bl	ST7789_DrawPixel
 1317              	.LVL155:
 1318              	.L92:
 390:Drivers/ST7789/st7789.c ****         }
 391:Drivers/ST7789/st7789.c ****         err -= dy;
 1319              		.loc 1 391 0
 1320 0088 A4EB0A04 		sub	r4, r4, r10
 1321              	.LVL156:
 1322 008c A3B2     		uxth	r3, r4
 1323 008e 1CB2     		sxth	r4, r3
 1324              	.LVL157:
 392:Drivers/ST7789/st7789.c ****         if (err < 0) {
 1325              		.loc 1 392 0
 1326 0090 002C     		cmp	r4, #0
 1327 0092 0BDB     		blt	.L98
 1328              	.L93:
 385:Drivers/ST7789/st7789.c ****         if (steep) {
 1329              		.loc 1 385 0
 1330 0094 0135     		adds	r5, r5, #1
 1331              	.LVL158:
 1332 0096 ADB2     		uxth	r5, r5
 1333              	.LVL159:
 1334              	.L94:
 385:Drivers/ST7789/st7789.c ****         if (steep) {
 1335              		.loc 1 385 0 is_stmt 0 discriminator 1
 1336 0098 BD42     		cmp	r5, r7
 1337 009a 11D8     		bhi	.L99
 386:Drivers/ST7789/st7789.c ****             ST7789_DrawPixel(y0, x0, color);
 1338              		.loc 1 386 0 is_stmt 1
 1339 009c C845     		cmp	r8, r9
 1340 009e EEDD     		ble	.L91
 387:Drivers/ST7789/st7789.c ****         } else {
 1341              		.loc 1 387 0
 1342 00a0 009A     		ldr	r2, [sp]
 1343 00a2 2946     		mov	r1, r5
ARM GAS  /tmp/cc4GmWmk.s 			page 33


 1344 00a4 3046     		mov	r0, r6
 1345 00a6 FFF7FEFF 		bl	ST7789_DrawPixel
 1346              	.LVL160:
 1347 00aa EDE7     		b	.L92
 1348              	.L98:
 393:Drivers/ST7789/st7789.c ****             y0 += ystep;
 1349              		.loc 1 393 0
 1350 00ac 019A     		ldr	r2, [sp, #4]
 1351 00ae 1644     		add	r6, r6, r2
 1352              	.LVL161:
 1353 00b0 B6B2     		uxth	r6, r6
 1354              	.LVL162:
 394:Drivers/ST7789/st7789.c ****             err += dx;
 1355              		.loc 1 394 0
 1356 00b2 0BEB0304 		add	r4, fp, r3
 1357              	.LVL163:
 1358 00b6 24B2     		sxth	r4, r4
 1359              	.LVL164:
 1360 00b8 ECE7     		b	.L93
 1361              	.LVL165:
 1362              	.L89:
 380:Drivers/ST7789/st7789.c ****     } else {
 1363              		.loc 1 380 0
 1364 00ba 0123     		movs	r3, #1
 1365              	.LVL166:
 1366 00bc 0193     		str	r3, [sp, #4]
 1367 00be EBE7     		b	.L94
 1368              	.LVL167:
 1369              	.L99:
 395:Drivers/ST7789/st7789.c ****         }
 396:Drivers/ST7789/st7789.c ****     }
 397:Drivers/ST7789/st7789.c **** }
 1370              		.loc 1 397 0
 1371 00c0 03B0     		add	sp, sp, #12
 1372              	.LCFI33:
 1373              		.cfi_def_cfa_offset 36
 1374              		@ sp needed
 1375 00c2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1376              		.cfi_endproc
 1377              	.LFE363:
 1379              		.section	.text.ST7789_DrawRectangle,"ax",%progbits
 1380              		.align	1
 1381              		.global	ST7789_DrawRectangle
 1382              		.syntax unified
 1383              		.thumb
 1384              		.thumb_func
 1385              		.fpu fpv5-d16
 1387              	ST7789_DrawRectangle:
 1388              	.LFB364:
 398:Drivers/ST7789/st7789.c **** 
 399:Drivers/ST7789/st7789.c **** /**
 400:Drivers/ST7789/st7789.c ****  * @brief Draw a Rectangle with single color
 401:Drivers/ST7789/st7789.c ****  * @param xi&yi -> 2 coordinates of 2 top points.
 402:Drivers/ST7789/st7789.c ****  * @param color -> color of the Rectangle line
 403:Drivers/ST7789/st7789.c ****  * @return none
 404:Drivers/ST7789/st7789.c ****  */
 405:Drivers/ST7789/st7789.c **** void ST7789_DrawRectangle(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint16_t color)
ARM GAS  /tmp/cc4GmWmk.s 			page 34


 406:Drivers/ST7789/st7789.c **** {
 1389              		.loc 1 406 0
 1390              		.cfi_startproc
 1391              		@ args = 4, pretend = 0, frame = 0
 1392              		@ frame_needed = 0, uses_anonymous_args = 0
 1393              	.LVL168:
 1394 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1395              	.LCFI34:
 1396              		.cfi_def_cfa_offset 28
 1397              		.cfi_offset 4, -28
 1398              		.cfi_offset 5, -24
 1399              		.cfi_offset 6, -20
 1400              		.cfi_offset 7, -16
 1401              		.cfi_offset 8, -12
 1402              		.cfi_offset 9, -8
 1403              		.cfi_offset 14, -4
 1404 0004 83B0     		sub	sp, sp, #12
 1405              	.LCFI35:
 1406              		.cfi_def_cfa_offset 40
 1407 0006 8046     		mov	r8, r0
 1408 0008 0D46     		mov	r5, r1
 1409 000a 1446     		mov	r4, r2
 1410 000c 1E46     		mov	r6, r3
 1411 000e BDF82870 		ldrh	r7, [sp, #40]
 407:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 1412              		.loc 1 407 0
 1413 0012 DFF85490 		ldr	r9, .L102
 1414 0016 0022     		movs	r2, #0
 1415              	.LVL169:
 1416 0018 0421     		movs	r1, #4
 1417              	.LVL170:
 1418 001a 4846     		mov	r0, r9
 1419              	.LVL171:
 1420 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1421              	.LVL172:
 408:Drivers/ST7789/st7789.c **** 	ST7789_DrawLine(x1, y1, x2, y1, color);
 1422              		.loc 1 408 0
 1423 0020 0097     		str	r7, [sp]
 1424 0022 2B46     		mov	r3, r5
 1425 0024 2246     		mov	r2, r4
 1426 0026 2946     		mov	r1, r5
 1427 0028 4046     		mov	r0, r8
 1428 002a FFF7FEFF 		bl	ST7789_DrawLine
 1429              	.LVL173:
 409:Drivers/ST7789/st7789.c **** 	ST7789_DrawLine(x1, y1, x1, y2, color);
 1430              		.loc 1 409 0
 1431 002e 0097     		str	r7, [sp]
 1432 0030 3346     		mov	r3, r6
 1433 0032 4246     		mov	r2, r8
 1434 0034 2946     		mov	r1, r5
 1435 0036 4046     		mov	r0, r8
 1436 0038 FFF7FEFF 		bl	ST7789_DrawLine
 1437              	.LVL174:
 410:Drivers/ST7789/st7789.c **** 	ST7789_DrawLine(x1, y2, x2, y2, color);
 1438              		.loc 1 410 0
 1439 003c 0097     		str	r7, [sp]
 1440 003e 3346     		mov	r3, r6
ARM GAS  /tmp/cc4GmWmk.s 			page 35


 1441 0040 2246     		mov	r2, r4
 1442 0042 3146     		mov	r1, r6
 1443 0044 4046     		mov	r0, r8
 1444 0046 FFF7FEFF 		bl	ST7789_DrawLine
 1445              	.LVL175:
 411:Drivers/ST7789/st7789.c **** 	ST7789_DrawLine(x2, y1, x2, y2, color);
 1446              		.loc 1 411 0
 1447 004a 0097     		str	r7, [sp]
 1448 004c 3346     		mov	r3, r6
 1449 004e 2246     		mov	r2, r4
 1450 0050 2946     		mov	r1, r5
 1451 0052 2046     		mov	r0, r4
 1452 0054 FFF7FEFF 		bl	ST7789_DrawLine
 1453              	.LVL176:
 412:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 1454              		.loc 1 412 0
 1455 0058 0122     		movs	r2, #1
 1456 005a 0421     		movs	r1, #4
 1457 005c 4846     		mov	r0, r9
 1458 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1459              	.LVL177:
 413:Drivers/ST7789/st7789.c **** }
 1460              		.loc 1 413 0
 1461 0062 03B0     		add	sp, sp, #12
 1462              	.LCFI36:
 1463              		.cfi_def_cfa_offset 28
 1464              		@ sp needed
 1465 0064 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1466              	.LVL178:
 1467              	.L103:
 1468              		.align	2
 1469              	.L102:
 1470 0068 00000258 		.word	1476526080
 1471              		.cfi_endproc
 1472              	.LFE364:
 1474              		.section	.text.ST7789_DrawCircle,"ax",%progbits
 1475              		.align	1
 1476              		.global	ST7789_DrawCircle
 1477              		.syntax unified
 1478              		.thumb
 1479              		.thumb_func
 1480              		.fpu fpv5-d16
 1482              	ST7789_DrawCircle:
 1483              	.LFB365:
 414:Drivers/ST7789/st7789.c **** 
 415:Drivers/ST7789/st7789.c **** /** 
 416:Drivers/ST7789/st7789.c ****  * @brief Draw a circle with single color
 417:Drivers/ST7789/st7789.c ****  * @param x0&y0 -> coordinate of circle center
 418:Drivers/ST7789/st7789.c ****  * @param r -> radius of circle
 419:Drivers/ST7789/st7789.c ****  * @param color -> color of circle line
 420:Drivers/ST7789/st7789.c ****  * @return  none
 421:Drivers/ST7789/st7789.c ****  */
 422:Drivers/ST7789/st7789.c **** void ST7789_DrawCircle(uint16_t x0, uint16_t y0, uint8_t r, uint16_t color)
 423:Drivers/ST7789/st7789.c **** {
 1484              		.loc 1 423 0
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /tmp/cc4GmWmk.s 			page 36


 1487              		@ frame_needed = 0, uses_anonymous_args = 0
 1488              	.LVL179:
 1489 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1490              	.LCFI37:
 1491              		.cfi_def_cfa_offset 36
 1492              		.cfi_offset 4, -36
 1493              		.cfi_offset 5, -32
 1494              		.cfi_offset 6, -28
 1495              		.cfi_offset 7, -24
 1496              		.cfi_offset 8, -20
 1497              		.cfi_offset 9, -16
 1498              		.cfi_offset 10, -12
 1499              		.cfi_offset 11, -8
 1500              		.cfi_offset 14, -4
 1501 0004 87B0     		sub	sp, sp, #28
 1502              	.LCFI38:
 1503              		.cfi_def_cfa_offset 64
 1504 0006 8346     		mov	fp, r0
 1505 0008 8A46     		mov	r10, r1
 1506 000a 1E46     		mov	r6, r3
 1507 000c 0193     		str	r3, [sp, #4]
 424:Drivers/ST7789/st7789.c **** 	int16_t f = 1 - r;
 1508              		.loc 1 424 0
 1509 000e 95B2     		uxth	r5, r2
 1510 0010 C5F10104 		rsb	r4, r5, #1
 1511              	.LVL180:
 425:Drivers/ST7789/st7789.c **** 	int16_t ddF_x = 1;
 426:Drivers/ST7789/st7789.c **** 	int16_t ddF_y = -2 * r;
 1512              		.loc 1 426 0
 1513 0014 C5EBC531 		rsb	r1, r5, r5, lsl #15
 1514              	.LVL181:
 1515 0018 4B00     		lsls	r3, r1, #1
 1516              	.LVL182:
 1517 001a 19B2     		sxth	r1, r3
 1518 001c 0591     		str	r1, [sp, #20]
 1519              	.LVL183:
 427:Drivers/ST7789/st7789.c **** 	int16_t x = 0;
 428:Drivers/ST7789/st7789.c **** 	int16_t y = r;
 1520              		.loc 1 428 0
 1521 001e 12B2     		sxth	r2, r2
 1522              	.LVL184:
 1523 0020 0292     		str	r2, [sp, #8]
 1524              	.LVL185:
 429:Drivers/ST7789/st7789.c **** 
 430:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 1525              		.loc 1 430 0
 1526 0022 0022     		movs	r2, #0
 1527 0024 0421     		movs	r1, #4
 1528 0026 4848     		ldr	r0, .L110
 1529              	.LVL186:
 1530 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1531              	.LVL187:
 431:Drivers/ST7789/st7789.c **** 	ST7789_DrawPixel(x0, y0 + r, color);
 1532              		.loc 1 431 0
 1533 002c 05EB0A01 		add	r1, r5, r10
 1534 0030 3246     		mov	r2, r6
 1535 0032 89B2     		uxth	r1, r1
ARM GAS  /tmp/cc4GmWmk.s 			page 37


 1536 0034 5846     		mov	r0, fp
 1537 0036 FFF7FEFF 		bl	ST7789_DrawPixel
 1538              	.LVL188:
 432:Drivers/ST7789/st7789.c **** 	ST7789_DrawPixel(x0, y0 - r, color);
 1539              		.loc 1 432 0
 1540 003a AAEB0501 		sub	r1, r10, r5
 1541 003e 3246     		mov	r2, r6
 1542 0040 89B2     		uxth	r1, r1
 1543 0042 5846     		mov	r0, fp
 1544 0044 FFF7FEFF 		bl	ST7789_DrawPixel
 1545              	.LVL189:
 433:Drivers/ST7789/st7789.c **** 	ST7789_DrawPixel(x0 + r, y0, color);
 1546              		.loc 1 433 0
 1547 0048 05EB0B00 		add	r0, r5, fp
 1548 004c 3246     		mov	r2, r6
 1549 004e 5146     		mov	r1, r10
 1550 0050 80B2     		uxth	r0, r0
 1551 0052 FFF7FEFF 		bl	ST7789_DrawPixel
 1552              	.LVL190:
 434:Drivers/ST7789/st7789.c **** 	ST7789_DrawPixel(x0 - r, y0, color);
 1553              		.loc 1 434 0
 1554 0056 ABEB0500 		sub	r0, fp, r5
 1555 005a 3246     		mov	r2, r6
 1556 005c 5146     		mov	r1, r10
 1557 005e 80B2     		uxth	r0, r0
 1558 0060 FFF7FEFF 		bl	ST7789_DrawPixel
 1559              	.LVL191:
 427:Drivers/ST7789/st7789.c **** 	int16_t y = r;
 1560              		.loc 1 427 0
 1561 0064 4FF00009 		mov	r9, #0
 425:Drivers/ST7789/st7789.c **** 	int16_t ddF_y = -2 * r;
 1562              		.loc 1 425 0
 1563 0068 0123     		movs	r3, #1
 1564 006a 0393     		str	r3, [sp, #12]
 435:Drivers/ST7789/st7789.c **** 
 436:Drivers/ST7789/st7789.c **** 	while (x < y) {
 1565              		.loc 1 436 0
 1566 006c 53E0     		b	.L105
 1567              	.LVL192:
 1568              	.L106:
 437:Drivers/ST7789/st7789.c **** 		if (f >= 0) {
 438:Drivers/ST7789/st7789.c **** 			y--;
 439:Drivers/ST7789/st7789.c **** 			ddF_y += 2;
 440:Drivers/ST7789/st7789.c **** 			f += ddF_y;
 441:Drivers/ST7789/st7789.c **** 		}
 442:Drivers/ST7789/st7789.c **** 		x++;
 1569              		.loc 1 442 0
 1570 006e 09F10105 		add	r5, r9, #1
 1571 0072 ADB2     		uxth	r5, r5
 1572 0074 0FFA85F9 		sxth	r9, r5
 1573              	.LVL193:
 443:Drivers/ST7789/st7789.c **** 		ddF_x += 2;
 1574              		.loc 1 443 0
 1575 0078 039B     		ldr	r3, [sp, #12]
 1576 007a 0233     		adds	r3, r3, #2
 1577 007c 9BB2     		uxth	r3, r3
 1578 007e 1AB2     		sxth	r2, r3
ARM GAS  /tmp/cc4GmWmk.s 			page 38


 1579 0080 0392     		str	r2, [sp, #12]
 1580              	.LVL194:
 444:Drivers/ST7789/st7789.c **** 		f += ddF_x;
 1581              		.loc 1 444 0
 1582 0082 1C44     		add	r4, r4, r3
 1583              	.LVL195:
 1584 0084 24B2     		sxth	r4, r4
 1585              	.LVL196:
 445:Drivers/ST7789/st7789.c **** 
 446:Drivers/ST7789/st7789.c **** 		ST7789_DrawPixel(x0 + x, y0 + y, color);
 1586              		.loc 1 446 0
 1587 0086 05EB0B03 		add	r3, r5, fp
 1588 008a 9BB2     		uxth	r3, r3
 1589 008c BDF80860 		ldrh	r6, [sp, #8]
 1590 0090 06EB0A08 		add	r8, r6, r10
 1591 0094 1FFA88F8 		uxth	r8, r8
 1592 0098 019A     		ldr	r2, [sp, #4]
 1593 009a 4146     		mov	r1, r8
 1594 009c 0493     		str	r3, [sp, #16]
 1595 009e 1846     		mov	r0, r3
 1596 00a0 FFF7FEFF 		bl	ST7789_DrawPixel
 1597              	.LVL197:
 447:Drivers/ST7789/st7789.c **** 		ST7789_DrawPixel(x0 - x, y0 + y, color);
 1598              		.loc 1 447 0
 1599 00a4 ABEB0507 		sub	r7, fp, r5
 1600 00a8 BFB2     		uxth	r7, r7
 1601 00aa 019A     		ldr	r2, [sp, #4]
 1602 00ac 4146     		mov	r1, r8
 1603 00ae 3846     		mov	r0, r7
 1604 00b0 FFF7FEFF 		bl	ST7789_DrawPixel
 1605              	.LVL198:
 448:Drivers/ST7789/st7789.c **** 		ST7789_DrawPixel(x0 + x, y0 - y, color);
 1606              		.loc 1 448 0
 1607 00b4 AAEB0608 		sub	r8, r10, r6
 1608 00b8 1FFA88F8 		uxth	r8, r8
 1609 00bc 019A     		ldr	r2, [sp, #4]
 1610 00be 4146     		mov	r1, r8
 1611 00c0 0498     		ldr	r0, [sp, #16]
 1612 00c2 FFF7FEFF 		bl	ST7789_DrawPixel
 1613              	.LVL199:
 449:Drivers/ST7789/st7789.c **** 		ST7789_DrawPixel(x0 - x, y0 - y, color);
 1614              		.loc 1 449 0
 1615 00c6 019A     		ldr	r2, [sp, #4]
 1616 00c8 4146     		mov	r1, r8
 1617 00ca 3846     		mov	r0, r7
 1618 00cc FFF7FEFF 		bl	ST7789_DrawPixel
 1619              	.LVL200:
 450:Drivers/ST7789/st7789.c **** 
 451:Drivers/ST7789/st7789.c **** 		ST7789_DrawPixel(x0 + y, y0 + x, color);
 1620              		.loc 1 451 0
 1621 00d0 06EB0B07 		add	r7, r6, fp
 1622 00d4 BFB2     		uxth	r7, r7
 1623 00d6 05EB0A08 		add	r8, r5, r10
 1624 00da 1FFA88F8 		uxth	r8, r8
 1625 00de 019A     		ldr	r2, [sp, #4]
 1626 00e0 4146     		mov	r1, r8
 1627 00e2 3846     		mov	r0, r7
ARM GAS  /tmp/cc4GmWmk.s 			page 39


 1628 00e4 FFF7FEFF 		bl	ST7789_DrawPixel
 1629              	.LVL201:
 452:Drivers/ST7789/st7789.c **** 		ST7789_DrawPixel(x0 - y, y0 + x, color);
 1630              		.loc 1 452 0
 1631 00e8 ABEB0606 		sub	r6, fp, r6
 1632 00ec B6B2     		uxth	r6, r6
 1633 00ee 019A     		ldr	r2, [sp, #4]
 1634 00f0 4146     		mov	r1, r8
 1635 00f2 3046     		mov	r0, r6
 1636 00f4 FFF7FEFF 		bl	ST7789_DrawPixel
 1637              	.LVL202:
 453:Drivers/ST7789/st7789.c **** 		ST7789_DrawPixel(x0 + y, y0 - x, color);
 1638              		.loc 1 453 0
 1639 00f8 AAEB0505 		sub	r5, r10, r5
 1640 00fc ADB2     		uxth	r5, r5
 1641 00fe DDF80480 		ldr	r8, [sp, #4]
 1642 0102 4246     		mov	r2, r8
 1643 0104 2946     		mov	r1, r5
 1644 0106 3846     		mov	r0, r7
 1645 0108 FFF7FEFF 		bl	ST7789_DrawPixel
 1646              	.LVL203:
 454:Drivers/ST7789/st7789.c **** 		ST7789_DrawPixel(x0 - y, y0 - x, color);
 1647              		.loc 1 454 0
 1648 010c 4246     		mov	r2, r8
 1649 010e 2946     		mov	r1, r5
 1650 0110 3046     		mov	r0, r6
 1651 0112 FFF7FEFF 		bl	ST7789_DrawPixel
 1652              	.LVL204:
 1653              	.L105:
 436:Drivers/ST7789/st7789.c **** 		if (f >= 0) {
 1654              		.loc 1 436 0
 1655 0116 029B     		ldr	r3, [sp, #8]
 1656 0118 9945     		cmp	r9, r3
 1657 011a 0DDA     		bge	.L109
 437:Drivers/ST7789/st7789.c **** 			y--;
 1658              		.loc 1 437 0
 1659 011c 002C     		cmp	r4, #0
 1660 011e A6DB     		blt	.L106
 438:Drivers/ST7789/st7789.c **** 			ddF_y += 2;
 1661              		.loc 1 438 0
 1662 0120 029B     		ldr	r3, [sp, #8]
 1663 0122 013B     		subs	r3, r3, #1
 1664 0124 1BB2     		sxth	r3, r3
 1665 0126 0293     		str	r3, [sp, #8]
 1666              	.LVL205:
 439:Drivers/ST7789/st7789.c **** 			f += ddF_y;
 1667              		.loc 1 439 0
 1668 0128 059B     		ldr	r3, [sp, #20]
 1669 012a 0233     		adds	r3, r3, #2
 1670 012c 9BB2     		uxth	r3, r3
 1671 012e 1AB2     		sxth	r2, r3
 1672 0130 0592     		str	r2, [sp, #20]
 1673              	.LVL206:
 440:Drivers/ST7789/st7789.c **** 		}
 1674              		.loc 1 440 0
 1675 0132 1C44     		add	r4, r4, r3
 1676              	.LVL207:
ARM GAS  /tmp/cc4GmWmk.s 			page 40


 1677 0134 24B2     		sxth	r4, r4
 1678              	.LVL208:
 1679 0136 9AE7     		b	.L106
 1680              	.L109:
 455:Drivers/ST7789/st7789.c **** 	}
 456:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 1681              		.loc 1 456 0
 1682 0138 0122     		movs	r2, #1
 1683 013a 0421     		movs	r1, #4
 1684 013c 0248     		ldr	r0, .L110
 1685 013e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1686              	.LVL209:
 457:Drivers/ST7789/st7789.c **** }
 1687              		.loc 1 457 0
 1688 0142 07B0     		add	sp, sp, #28
 1689              	.LCFI39:
 1690              		.cfi_def_cfa_offset 36
 1691              		@ sp needed
 1692 0144 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1693              	.LVL210:
 1694              	.L111:
 1695              		.align	2
 1696              	.L110:
 1697 0148 00000258 		.word	1476526080
 1698              		.cfi_endproc
 1699              	.LFE365:
 1701              		.section	.text.ST7789_DrawImage,"ax",%progbits
 1702              		.align	1
 1703              		.global	ST7789_DrawImage
 1704              		.syntax unified
 1705              		.thumb
 1706              		.thumb_func
 1707              		.fpu fpv5-d16
 1709              	ST7789_DrawImage:
 1710              	.LFB366:
 458:Drivers/ST7789/st7789.c **** 
 459:Drivers/ST7789/st7789.c **** /**
 460:Drivers/ST7789/st7789.c ****  * @brief Draw an Image on the screen
 461:Drivers/ST7789/st7789.c ****  * @param x&y -> start point of the Image
 462:Drivers/ST7789/st7789.c ****  * @param w&h -> width & height of the Image to Draw
 463:Drivers/ST7789/st7789.c ****  * @param data -> pointer of the Image array
 464:Drivers/ST7789/st7789.c ****  * @return none
 465:Drivers/ST7789/st7789.c ****  */
 466:Drivers/ST7789/st7789.c **** void ST7789_DrawImage(uint16_t x, uint16_t y, uint16_t w, uint16_t h, const uint16_t *data)
 467:Drivers/ST7789/st7789.c **** {
 1711              		.loc 1 467 0
 1712              		.cfi_startproc
 1713              		@ args = 4, pretend = 0, frame = 0
 1714              		@ frame_needed = 0, uses_anonymous_args = 0
 1715              	.LVL211:
 468:Drivers/ST7789/st7789.c **** 	if ((x >= ST7789_WIDTH) || (y >= ST7789_HEIGHT))
 1716              		.loc 1 468 0
 1717 0000 EF29     		cmp	r1, #239
 1718 0002 98BF     		it	ls
 1719 0004 EF28     		cmpls	r0, #239
 1720 0006 2ED8     		bhi	.L115
 467:Drivers/ST7789/st7789.c **** 	if ((x >= ST7789_WIDTH) || (y >= ST7789_HEIGHT))
ARM GAS  /tmp/cc4GmWmk.s 			page 41


 1721              		.loc 1 467 0
 1722 0008 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1723              	.LCFI40:
 1724              		.cfi_def_cfa_offset 24
 1725              		.cfi_offset 4, -24
 1726              		.cfi_offset 5, -20
 1727              		.cfi_offset 6, -16
 1728              		.cfi_offset 7, -12
 1729              		.cfi_offset 8, -8
 1730              		.cfi_offset 14, -4
 469:Drivers/ST7789/st7789.c **** 		return;
 470:Drivers/ST7789/st7789.c **** 	if ((x + w - 1) >= ST7789_WIDTH)
 1731              		.loc 1 470 0
 1732 000c 8418     		adds	r4, r0, r2
 1733 000e 013C     		subs	r4, r4, #1
 1734 0010 EF2C     		cmp	r4, #239
 1735 0012 03DC     		bgt	.L112
 471:Drivers/ST7789/st7789.c **** 		return;
 472:Drivers/ST7789/st7789.c **** 	if ((y + h - 1) >= ST7789_HEIGHT)
 1736              		.loc 1 472 0
 1737 0014 CC18     		adds	r4, r1, r3
 1738 0016 013C     		subs	r4, r4, #1
 1739 0018 EF2C     		cmp	r4, #239
 1740 001a 01DD     		ble	.L118
 1741              	.LVL212:
 1742              	.L112:
 473:Drivers/ST7789/st7789.c **** 		return;
 474:Drivers/ST7789/st7789.c **** 
 475:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 476:Drivers/ST7789/st7789.c **** 	ST7789_SetAddressWindow(x, y, x + w - 1, y + h - 1);
 477:Drivers/ST7789/st7789.c **** 	ST7789_WriteData((uint8_t *)data, sizeof(uint16_t) * w * h);
 478:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 479:Drivers/ST7789/st7789.c **** }
 1743              		.loc 1 479 0
 1744 001c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1745              	.LVL213:
 1746              	.L118:
 1747 0020 1F46     		mov	r7, r3
 1748 0022 1646     		mov	r6, r2
 1749 0024 0D46     		mov	r5, r1
 1750 0026 0446     		mov	r4, r0
 475:Drivers/ST7789/st7789.c **** 	ST7789_SetAddressWindow(x, y, x + w - 1, y + h - 1);
 1751              		.loc 1 475 0
 1752 0028 DFF83C80 		ldr	r8, .L119
 1753 002c 0022     		movs	r2, #0
 1754              	.LVL214:
 1755 002e 0421     		movs	r1, #4
 1756              	.LVL215:
 1757 0030 4046     		mov	r0, r8
 1758              	.LVL216:
 1759 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1760              	.LVL217:
 476:Drivers/ST7789/st7789.c **** 	ST7789_WriteData((uint8_t *)data, sizeof(uint16_t) * w * h);
 1761              		.loc 1 476 0
 1762 0036 A219     		adds	r2, r4, r6
 1763 0038 92B2     		uxth	r2, r2
 1764 003a EB19     		adds	r3, r5, r7
ARM GAS  /tmp/cc4GmWmk.s 			page 42


 1765 003c 9BB2     		uxth	r3, r3
 1766 003e 013B     		subs	r3, r3, #1
 1767 0040 013A     		subs	r2, r2, #1
 1768 0042 9BB2     		uxth	r3, r3
 1769 0044 92B2     		uxth	r2, r2
 1770 0046 2946     		mov	r1, r5
 1771 0048 2046     		mov	r0, r4
 1772 004a FFF7FEFF 		bl	ST7789_SetAddressWindow
 1773              	.LVL218:
 477:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 1774              		.loc 1 477 0
 1775 004e 07FB06F1 		mul	r1, r7, r6
 1776 0052 4900     		lsls	r1, r1, #1
 1777 0054 0698     		ldr	r0, [sp, #24]
 1778 0056 FFF7FEFF 		bl	ST7789_WriteData
 1779              	.LVL219:
 478:Drivers/ST7789/st7789.c **** }
 1780              		.loc 1 478 0
 1781 005a 0122     		movs	r2, #1
 1782 005c 0421     		movs	r1, #4
 1783 005e 4046     		mov	r0, r8
 1784 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1785              	.LVL220:
 1786 0064 DAE7     		b	.L112
 1787              	.LVL221:
 1788              	.L115:
 1789              	.LCFI41:
 1790              		.cfi_def_cfa_offset 0
 1791              		.cfi_restore 4
 1792              		.cfi_restore 5
 1793              		.cfi_restore 6
 1794              		.cfi_restore 7
 1795              		.cfi_restore 8
 1796              		.cfi_restore 14
 1797 0066 7047     		bx	lr
 1798              	.L120:
 1799              		.align	2
 1800              	.L119:
 1801 0068 00000258 		.word	1476526080
 1802              		.cfi_endproc
 1803              	.LFE366:
 1805              		.section	.text.ST7789_InvertColors,"ax",%progbits
 1806              		.align	1
 1807              		.global	ST7789_InvertColors
 1808              		.syntax unified
 1809              		.thumb
 1810              		.thumb_func
 1811              		.fpu fpv5-d16
 1813              	ST7789_InvertColors:
 1814              	.LFB367:
 480:Drivers/ST7789/st7789.c **** 
 481:Drivers/ST7789/st7789.c **** /**
 482:Drivers/ST7789/st7789.c ****  * @brief Invert Fullscreen color
 483:Drivers/ST7789/st7789.c ****  * @param invert -> Whether to invert
 484:Drivers/ST7789/st7789.c ****  * @return none
 485:Drivers/ST7789/st7789.c ****  */
 486:Drivers/ST7789/st7789.c **** void ST7789_InvertColors(uint8_t invert)
ARM GAS  /tmp/cc4GmWmk.s 			page 43


 487:Drivers/ST7789/st7789.c **** {
 1815              		.loc 1 487 0
 1816              		.cfi_startproc
 1817              		@ args = 0, pretend = 0, frame = 0
 1818              		@ frame_needed = 0, uses_anonymous_args = 0
 1819              	.LVL222:
 1820 0000 10B5     		push	{r4, lr}
 1821              	.LCFI42:
 1822              		.cfi_def_cfa_offset 8
 1823              		.cfi_offset 4, -8
 1824              		.cfi_offset 14, -4
 1825 0002 0446     		mov	r4, r0
 488:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 1826              		.loc 1 488 0
 1827 0004 0022     		movs	r2, #0
 1828 0006 0421     		movs	r1, #4
 1829 0008 0748     		ldr	r0, .L126
 1830              	.LVL223:
 1831 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1832              	.LVL224:
 489:Drivers/ST7789/st7789.c **** 	ST7789_WriteCommand(invert ? 0x21 /* INVON */ : 0x20 /* INVOFF */);
 1833              		.loc 1 489 0
 1834 000e 44B9     		cbnz	r4, .L125
 1835 0010 2020     		movs	r0, #32
 1836              	.L122:
 1837              		.loc 1 489 0 is_stmt 0 discriminator 4
 1838 0012 FFF7FEFF 		bl	ST7789_WriteCommand
 1839              	.LVL225:
 490:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 1840              		.loc 1 490 0 is_stmt 1 discriminator 4
 1841 0016 0122     		movs	r2, #1
 1842 0018 0421     		movs	r1, #4
 1843 001a 0348     		ldr	r0, .L126
 1844 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1845              	.LVL226:
 491:Drivers/ST7789/st7789.c **** }
 1846              		.loc 1 491 0 discriminator 4
 1847 0020 10BD     		pop	{r4, pc}
 1848              	.L125:
 489:Drivers/ST7789/st7789.c **** 	ST7789_WriteCommand(invert ? 0x21 /* INVON */ : 0x20 /* INVOFF */);
 1849              		.loc 1 489 0
 1850 0022 2120     		movs	r0, #33
 1851 0024 F5E7     		b	.L122
 1852              	.L127:
 1853 0026 00BF     		.align	2
 1854              	.L126:
 1855 0028 00000258 		.word	1476526080
 1856              		.cfi_endproc
 1857              	.LFE367:
 1859              		.section	.text.ST7789_WriteChar,"ax",%progbits
 1860              		.align	1
 1861              		.global	ST7789_WriteChar
 1862              		.syntax unified
 1863              		.thumb
 1864              		.thumb_func
 1865              		.fpu fpv5-d16
 1867              	ST7789_WriteChar:
ARM GAS  /tmp/cc4GmWmk.s 			page 44


 1868              	.LFB368:
 492:Drivers/ST7789/st7789.c **** 
 493:Drivers/ST7789/st7789.c **** /** 
 494:Drivers/ST7789/st7789.c ****  * @brief Write a char
 495:Drivers/ST7789/st7789.c ****  * @param  x&y -> cursor of the start point.
 496:Drivers/ST7789/st7789.c ****  * @param ch -> char to write
 497:Drivers/ST7789/st7789.c ****  * @param font -> fontstyle of the string
 498:Drivers/ST7789/st7789.c ****  * @param color -> color of the char
 499:Drivers/ST7789/st7789.c ****  * @param bgcolor -> background color of the char
 500:Drivers/ST7789/st7789.c ****  * @return  none
 501:Drivers/ST7789/st7789.c ****  */
 502:Drivers/ST7789/st7789.c **** void ST7789_WriteChar(uint16_t x, uint16_t y, char ch, FontDef font, uint16_t color, uint16_t bgcol
 503:Drivers/ST7789/st7789.c **** {
 1869              		.loc 1 503 0
 1870              		.cfi_startproc
 1871              		@ args = 20, pretend = 8, frame = 8
 1872              		@ frame_needed = 0, uses_anonymous_args = 0
 1873              	.LVL227:
 1874 0000 82B0     		sub	sp, sp, #8
 1875              	.LCFI43:
 1876              		.cfi_def_cfa_offset 8
 1877 0002 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1878              	.LCFI44:
 1879              		.cfi_def_cfa_offset 36
 1880              		.cfi_offset 4, -36
 1881              		.cfi_offset 5, -32
 1882              		.cfi_offset 6, -28
 1883              		.cfi_offset 7, -24
 1884              		.cfi_offset 8, -20
 1885              		.cfi_offset 9, -16
 1886              		.cfi_offset 14, -12
 1887 0006 83B0     		sub	sp, sp, #12
 1888              	.LCFI45:
 1889              		.cfi_def_cfa_offset 48
 1890 0008 0446     		mov	r4, r0
 1891 000a 0D46     		mov	r5, r1
 1892 000c 9146     		mov	r9, r2
 1893 000e 0B93     		str	r3, [sp, #44]
 1894 0010 BDF83470 		ldrh	r7, [sp, #52]
 1895 0014 BDF83860 		ldrh	r6, [sp, #56]
 504:Drivers/ST7789/st7789.c **** 	uint32_t i, b, j;
 505:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 1896              		.loc 1 505 0
 1897 0018 0022     		movs	r2, #0
 1898              	.LVL228:
 1899 001a 0421     		movs	r1, #4
 1900              	.LVL229:
 1901 001c 2548     		ldr	r0, .L138
 1902              	.LVL230:
 1903 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1904              	.LVL231:
 506:Drivers/ST7789/st7789.c **** 	ST7789_SetAddressWindow(x, y, x + font.width - 1, y + font.height - 1);
 1905              		.loc 1 506 0
 1906 0022 9DF82C20 		ldrb	r2, [sp, #44]	@ zero_extendqisi2
 1907 0026 2244     		add	r2, r2, r4
 1908 0028 92B2     		uxth	r2, r2
 1909 002a 9DF82D30 		ldrb	r3, [sp, #45]	@ zero_extendqisi2
ARM GAS  /tmp/cc4GmWmk.s 			page 45


 1910 002e 2B44     		add	r3, r3, r5
 1911 0030 9BB2     		uxth	r3, r3
 1912 0032 013B     		subs	r3, r3, #1
 1913 0034 013A     		subs	r2, r2, #1
 1914 0036 9BB2     		uxth	r3, r3
 1915 0038 92B2     		uxth	r2, r2
 1916 003a 2946     		mov	r1, r5
 1917 003c 2046     		mov	r0, r4
 1918 003e FFF7FEFF 		bl	ST7789_SetAddressWindow
 1919              	.LVL232:
 507:Drivers/ST7789/st7789.c **** 
 508:Drivers/ST7789/st7789.c **** 	for (i = 0; i < font.height; i++) {
 1920              		.loc 1 508 0
 1921 0042 4FF00008 		mov	r8, #0
 1922 0046 1EE0     		b	.L129
 1923              	.LVL233:
 1924              	.L131:
 1925              	.LBB13:
 509:Drivers/ST7789/st7789.c **** 		b = font.data[(ch - 32) * font.height + i];
 510:Drivers/ST7789/st7789.c **** 		for (j = 0; j < font.width; j++) {
 511:Drivers/ST7789/st7789.c **** 			if ((b << j) & 0x8000) {
 512:Drivers/ST7789/st7789.c **** 				uint8_t data[] = {color >> 8, color & 0xFF};
 513:Drivers/ST7789/st7789.c **** 				ST7789_WriteData(data, sizeof(data));
 514:Drivers/ST7789/st7789.c **** 			}
 515:Drivers/ST7789/st7789.c **** 			else {
 516:Drivers/ST7789/st7789.c **** 				uint8_t data[] = {bgcolor >> 8, bgcolor & 0xFF};
 1926              		.loc 1 516 0
 1927 0048 330A     		lsrs	r3, r6, #8
 1928 004a 8DF80430 		strb	r3, [sp, #4]
 1929 004e 8DF80560 		strb	r6, [sp, #5]
 517:Drivers/ST7789/st7789.c **** 				ST7789_WriteData(data, sizeof(data));
 1930              		.loc 1 517 0
 1931 0052 0221     		movs	r1, #2
 1932 0054 01A8     		add	r0, sp, #4
 1933 0056 FFF7FEFF 		bl	ST7789_WriteData
 1934              	.LVL234:
 1935              	.L132:
 1936              	.LBE13:
 510:Drivers/ST7789/st7789.c **** 			if ((b << j) & 0x8000) {
 1937              		.loc 1 510 0 discriminator 2
 1938 005a 0134     		adds	r4, r4, #1
 1939              	.LVL235:
 1940              	.L130:
 510:Drivers/ST7789/st7789.c **** 			if ((b << j) & 0x8000) {
 1941              		.loc 1 510 0 is_stmt 0 discriminator 1
 1942 005c 9DF82C30 		ldrb	r3, [sp, #44]	@ zero_extendqisi2
 1943 0060 A342     		cmp	r3, r4
 1944 0062 0ED9     		bls	.L136
 511:Drivers/ST7789/st7789.c **** 				uint8_t data[] = {color >> 8, color & 0xFF};
 1945              		.loc 1 511 0 is_stmt 1
 1946 0064 05FA04F3 		lsl	r3, r5, r4
 1947 0068 13F4004F 		tst	r3, #32768
 1948 006c ECD0     		beq	.L131
 1949              	.LBB14:
 512:Drivers/ST7789/st7789.c **** 				ST7789_WriteData(data, sizeof(data));
 1950              		.loc 1 512 0
 1951 006e 3B0A     		lsrs	r3, r7, #8
ARM GAS  /tmp/cc4GmWmk.s 			page 46


 1952 0070 8DF80430 		strb	r3, [sp, #4]
 1953 0074 8DF80570 		strb	r7, [sp, #5]
 513:Drivers/ST7789/st7789.c **** 			}
 1954              		.loc 1 513 0
 1955 0078 0221     		movs	r1, #2
 1956 007a 01A8     		add	r0, sp, #4
 1957 007c FFF7FEFF 		bl	ST7789_WriteData
 1958              	.LVL236:
 1959              	.LBE14:
 1960 0080 EBE7     		b	.L132
 1961              	.L136:
 508:Drivers/ST7789/st7789.c **** 		b = font.data[(ch - 32) * font.height + i];
 1962              		.loc 1 508 0 discriminator 2
 1963 0082 08F10108 		add	r8, r8, #1
 1964              	.LVL237:
 1965              	.L129:
 508:Drivers/ST7789/st7789.c **** 		b = font.data[(ch - 32) * font.height + i];
 1966              		.loc 1 508 0 is_stmt 0 discriminator 1
 1967 0086 9DF82D20 		ldrb	r2, [sp, #45]	@ zero_extendqisi2
 1968 008a 4245     		cmp	r2, r8
 1969 008c 08D9     		bls	.L137
 509:Drivers/ST7789/st7789.c **** 		for (j = 0; j < font.width; j++) {
 1970              		.loc 1 509 0 is_stmt 1
 1971 008e A9F12003 		sub	r3, r9, #32
 1972 0092 02FB0383 		mla	r3, r2, r3, r8
 1973 0096 0C9A     		ldr	r2, [sp, #48]
 1974 0098 32F81350 		ldrh	r5, [r2, r3, lsl #1]
 1975              	.LVL238:
 510:Drivers/ST7789/st7789.c **** 			if ((b << j) & 0x8000) {
 1976              		.loc 1 510 0
 1977 009c 0024     		movs	r4, #0
 1978 009e DDE7     		b	.L130
 1979              	.LVL239:
 1980              	.L137:
 518:Drivers/ST7789/st7789.c **** 			}
 519:Drivers/ST7789/st7789.c **** 		}
 520:Drivers/ST7789/st7789.c **** 	}
 521:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 1981              		.loc 1 521 0
 1982 00a0 0122     		movs	r2, #1
 1983 00a2 0421     		movs	r1, #4
 1984 00a4 0348     		ldr	r0, .L138
 1985 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1986              	.LVL240:
 522:Drivers/ST7789/st7789.c **** }
 1987              		.loc 1 522 0
 1988 00aa 03B0     		add	sp, sp, #12
 1989              	.LCFI46:
 1990              		.cfi_def_cfa_offset 36
 1991              		@ sp needed
 1992 00ac BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
 1993              	.LCFI47:
 1994              		.cfi_restore 14
 1995              		.cfi_restore 9
 1996              		.cfi_restore 8
 1997              		.cfi_restore 7
 1998              		.cfi_restore 6
ARM GAS  /tmp/cc4GmWmk.s 			page 47


 1999              		.cfi_restore 5
 2000              		.cfi_restore 4
 2001              		.cfi_def_cfa_offset 8
 2002              	.LVL241:
 2003 00b0 02B0     		add	sp, sp, #8
 2004              	.LCFI48:
 2005              		.cfi_def_cfa_offset 0
 2006 00b2 7047     		bx	lr
 2007              	.L139:
 2008              		.align	2
 2009              	.L138:
 2010 00b4 00000258 		.word	1476526080
 2011              		.cfi_endproc
 2012              	.LFE368:
 2014              		.section	.text.ST7789_WriteString,"ax",%progbits
 2015              		.align	1
 2016              		.global	ST7789_WriteString
 2017              		.syntax unified
 2018              		.thumb
 2019              		.thumb_func
 2020              		.fpu fpv5-d16
 2022              	ST7789_WriteString:
 2023              	.LFB369:
 523:Drivers/ST7789/st7789.c **** 
 524:Drivers/ST7789/st7789.c **** /** 
 525:Drivers/ST7789/st7789.c ****  * @brief Write a string 
 526:Drivers/ST7789/st7789.c ****  * @param  x&y -> cursor of the start point.
 527:Drivers/ST7789/st7789.c ****  * @param str -> string to write
 528:Drivers/ST7789/st7789.c ****  * @param font -> fontstyle of the string
 529:Drivers/ST7789/st7789.c ****  * @param color -> color of the string
 530:Drivers/ST7789/st7789.c ****  * @param bgcolor -> background color of the string
 531:Drivers/ST7789/st7789.c ****  * @return  none
 532:Drivers/ST7789/st7789.c ****  */
 533:Drivers/ST7789/st7789.c **** void ST7789_WriteString(uint16_t x, uint16_t y, const char *str, FontDef font, uint16_t color, uint
 534:Drivers/ST7789/st7789.c **** {
 2024              		.loc 1 534 0
 2025              		.cfi_startproc
 2026              		@ args = 20, pretend = 8, frame = 0
 2027              		@ frame_needed = 0, uses_anonymous_args = 0
 2028              	.LVL242:
 2029 0000 82B0     		sub	sp, sp, #8
 2030              	.LCFI49:
 2031              		.cfi_def_cfa_offset 8
 2032 0002 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2033              	.LCFI50:
 2034              		.cfi_def_cfa_offset 36
 2035              		.cfi_offset 4, -36
 2036              		.cfi_offset 5, -32
 2037              		.cfi_offset 6, -28
 2038              		.cfi_offset 7, -24
 2039              		.cfi_offset 8, -20
 2040              		.cfi_offset 9, -16
 2041              		.cfi_offset 14, -12
 2042 0006 85B0     		sub	sp, sp, #20
 2043              	.LCFI51:
 2044              		.cfi_def_cfa_offset 56
 2045 0008 0646     		mov	r6, r0
ARM GAS  /tmp/cc4GmWmk.s 			page 48


 2046 000a 0D46     		mov	r5, r1
 2047 000c 1746     		mov	r7, r2
 2048 000e 0D93     		str	r3, [sp, #52]
 2049 0010 BDF83C90 		ldrh	r9, [sp, #60]
 2050 0014 BDF84080 		ldrh	r8, [sp, #64]
 535:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 2051              		.loc 1 535 0
 2052 0018 0022     		movs	r2, #0
 2053              	.LVL243:
 2054 001a 0421     		movs	r1, #4
 2055              	.LVL244:
 2056 001c 1848     		ldr	r0, .L149
 2057              	.LVL245:
 2058 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 2059              	.LVL246:
 536:Drivers/ST7789/st7789.c **** 	while (*str) {
 2060              		.loc 1 536 0
 2061 0022 10E0     		b	.L141
 2062              	.LVL247:
 2063              	.L148:
 537:Drivers/ST7789/st7789.c **** 		if (x + font.width >= ST7789_WIDTH) {
 538:Drivers/ST7789/st7789.c **** 			x = 0;
 539:Drivers/ST7789/st7789.c **** 			y += font.height;
 540:Drivers/ST7789/st7789.c **** 			if (y + font.height >= ST7789_HEIGHT) {
 541:Drivers/ST7789/st7789.c **** 				break;
 542:Drivers/ST7789/st7789.c **** 			}
 543:Drivers/ST7789/st7789.c **** 
 544:Drivers/ST7789/st7789.c **** 			if (*str == ' ') {
 545:Drivers/ST7789/st7789.c **** 				// skip spaces in the beginning of the new line
 546:Drivers/ST7789/st7789.c **** 				str++;
 2064              		.loc 1 546 0
 2065 0024 0137     		adds	r7, r7, #1
 2066              	.LVL248:
 538:Drivers/ST7789/st7789.c **** 			y += font.height;
 2067              		.loc 1 538 0
 2068 0026 0026     		movs	r6, #0
 547:Drivers/ST7789/st7789.c **** 				continue;
 2069              		.loc 1 547 0
 2070 0028 0DE0     		b	.L141
 2071              	.LVL249:
 2072              	.L142:
 548:Drivers/ST7789/st7789.c **** 			}
 549:Drivers/ST7789/st7789.c **** 		}
 550:Drivers/ST7789/st7789.c **** 		ST7789_WriteChar(x, y, *str, font, color, bgcolor);
 2073              		.loc 1 550 0
 2074 002a CDF80880 		str	r8, [sp, #8]
 2075 002e CDF80490 		str	r9, [sp, #4]
 2076 0032 0E9B     		ldr	r3, [sp, #56]
 2077 0034 0093     		str	r3, [sp]
 2078 0036 0D9B     		ldr	r3, [sp, #52]
 2079 0038 2946     		mov	r1, r5
 2080 003a 3046     		mov	r0, r6
 2081 003c FFF7FEFF 		bl	ST7789_WriteChar
 2082              	.LVL250:
 551:Drivers/ST7789/st7789.c **** 		x += font.width;
 2083              		.loc 1 551 0
 2084 0040 3444     		add	r4, r4, r6
ARM GAS  /tmp/cc4GmWmk.s 			page 49


 2085 0042 A6B2     		uxth	r6, r4
 2086              	.LVL251:
 552:Drivers/ST7789/st7789.c **** 		str++;
 2087              		.loc 1 552 0
 2088 0044 0137     		adds	r7, r7, #1
 2089              	.LVL252:
 2090              	.L141:
 536:Drivers/ST7789/st7789.c **** 		if (x + font.width >= ST7789_WIDTH) {
 2091              		.loc 1 536 0
 2092 0046 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 2093 0048 7AB1     		cbz	r2, .L143
 537:Drivers/ST7789/st7789.c **** 			x = 0;
 2094              		.loc 1 537 0
 2095 004a 9DF83440 		ldrb	r4, [sp, #52]	@ zero_extendqisi2
 2096 004e 3319     		adds	r3, r6, r4
 2097 0050 EF2B     		cmp	r3, #239
 2098 0052 EADD     		ble	.L142
 2099              	.LVL253:
 539:Drivers/ST7789/st7789.c **** 			if (y + font.height >= ST7789_HEIGHT) {
 2100              		.loc 1 539 0
 2101 0054 9DF83530 		ldrb	r3, [sp, #53]	@ zero_extendqisi2
 2102 0058 1D44     		add	r5, r5, r3
 2103              	.LVL254:
 2104 005a ADB2     		uxth	r5, r5
 2105              	.LVL255:
 540:Drivers/ST7789/st7789.c **** 				break;
 2106              		.loc 1 540 0
 2107 005c 2B44     		add	r3, r3, r5
 2108 005e EF2B     		cmp	r3, #239
 2109 0060 03DC     		bgt	.L143
 544:Drivers/ST7789/st7789.c **** 				// skip spaces in the beginning of the new line
 2110              		.loc 1 544 0
 2111 0062 202A     		cmp	r2, #32
 2112 0064 DED0     		beq	.L148
 538:Drivers/ST7789/st7789.c **** 			y += font.height;
 2113              		.loc 1 538 0
 2114 0066 0026     		movs	r6, #0
 2115 0068 DFE7     		b	.L142
 2116              	.LVL256:
 2117              	.L143:
 553:Drivers/ST7789/st7789.c **** 	}
 554:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 2118              		.loc 1 554 0
 2119 006a 0122     		movs	r2, #1
 2120 006c 0421     		movs	r1, #4
 2121 006e 0448     		ldr	r0, .L149
 2122 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2123              	.LVL257:
 555:Drivers/ST7789/st7789.c **** }
 2124              		.loc 1 555 0
 2125 0074 05B0     		add	sp, sp, #20
 2126              	.LCFI52:
 2127              		.cfi_def_cfa_offset 36
 2128              		@ sp needed
 2129 0076 BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
 2130              	.LCFI53:
 2131              		.cfi_restore 14
ARM GAS  /tmp/cc4GmWmk.s 			page 50


 2132              		.cfi_restore 9
 2133              		.cfi_restore 8
 2134              		.cfi_restore 7
 2135              		.cfi_restore 6
 2136              		.cfi_restore 5
 2137              		.cfi_restore 4
 2138              		.cfi_def_cfa_offset 8
 2139              	.LVL258:
 2140 007a 02B0     		add	sp, sp, #8
 2141              	.LCFI54:
 2142              		.cfi_def_cfa_offset 0
 2143 007c 7047     		bx	lr
 2144              	.L150:
 2145 007e 00BF     		.align	2
 2146              	.L149:
 2147 0080 00000258 		.word	1476526080
 2148              		.cfi_endproc
 2149              	.LFE369:
 2151              		.section	.text.ST7789_DrawFilledRectangle,"ax",%progbits
 2152              		.align	1
 2153              		.global	ST7789_DrawFilledRectangle
 2154              		.syntax unified
 2155              		.thumb
 2156              		.thumb_func
 2157              		.fpu fpv5-d16
 2159              	ST7789_DrawFilledRectangle:
 2160              	.LFB370:
 556:Drivers/ST7789/st7789.c **** 
 557:Drivers/ST7789/st7789.c **** /** 
 558:Drivers/ST7789/st7789.c ****  * @brief Draw a filled Rectangle with single color
 559:Drivers/ST7789/st7789.c ****  * @param  x&y -> coordinates of the starting point
 560:Drivers/ST7789/st7789.c ****  * @param w&h -> width & height of the Rectangle
 561:Drivers/ST7789/st7789.c ****  * @param color -> color of the Rectangle
 562:Drivers/ST7789/st7789.c ****  * @return  none
 563:Drivers/ST7789/st7789.c ****  */
 564:Drivers/ST7789/st7789.c **** void ST7789_DrawFilledRectangle(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t color)
 565:Drivers/ST7789/st7789.c **** {
 2161              		.loc 1 565 0
 2162              		.cfi_startproc
 2163              		@ args = 4, pretend = 0, frame = 0
 2164              		@ frame_needed = 0, uses_anonymous_args = 0
 2165              	.LVL259:
 2166 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2167              	.LCFI55:
 2168              		.cfi_def_cfa_offset 28
 2169              		.cfi_offset 4, -28
 2170              		.cfi_offset 5, -24
 2171              		.cfi_offset 6, -20
 2172              		.cfi_offset 7, -16
 2173              		.cfi_offset 8, -12
 2174              		.cfi_offset 9, -8
 2175              		.cfi_offset 14, -4
 2176 0004 83B0     		sub	sp, sp, #12
 2177              	.LCFI56:
 2178              		.cfi_def_cfa_offset 40
 2179 0006 0546     		mov	r5, r0
 2180 0008 0F46     		mov	r7, r1
ARM GAS  /tmp/cc4GmWmk.s 			page 51


 2181 000a 9046     		mov	r8, r2
 2182 000c 1E46     		mov	r6, r3
 2183 000e BDF82890 		ldrh	r9, [sp, #40]
 566:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 2184              		.loc 1 566 0
 2185 0012 0022     		movs	r2, #0
 2186              	.LVL260:
 2187 0014 0421     		movs	r1, #4
 2188              	.LVL261:
 2189 0016 1748     		ldr	r0, .L158
 2190              	.LVL262:
 2191 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2192              	.LVL263:
 567:Drivers/ST7789/st7789.c **** 	uint8_t i;
 568:Drivers/ST7789/st7789.c **** 
 569:Drivers/ST7789/st7789.c **** 	/* Check input parameters */
 570:Drivers/ST7789/st7789.c **** 	if (x >= ST7789_WIDTH ||
 2193              		.loc 1 570 0
 2194 001c EF2F     		cmp	r7, #239
 2195 001e 98BF     		it	ls
 2196 0020 EF2D     		cmpls	r5, #239
 2197 0022 24D8     		bhi	.L151
 571:Drivers/ST7789/st7789.c **** 		y >= ST7789_HEIGHT) {
 572:Drivers/ST7789/st7789.c **** 		/* Return error */
 573:Drivers/ST7789/st7789.c **** 		return;
 574:Drivers/ST7789/st7789.c **** 	}
 575:Drivers/ST7789/st7789.c **** 
 576:Drivers/ST7789/st7789.c **** 	/* Check width and height */
 577:Drivers/ST7789/st7789.c **** 	if ((x + w) >= ST7789_WIDTH) {
 2198              		.loc 1 577 0
 2199 0024 05EB0803 		add	r3, r5, r8
 2200 0028 EF2B     		cmp	r3, #239
 2201 002a 03DD     		ble	.L153
 578:Drivers/ST7789/st7789.c **** 		w = ST7789_WIDTH - x;
 2202              		.loc 1 578 0
 2203 002c C5F1F008 		rsb	r8, r5, #240
 2204 0030 1FFA88F8 		uxth	r8, r8
 2205              	.LVL264:
 2206              	.L153:
 579:Drivers/ST7789/st7789.c **** 	}
 580:Drivers/ST7789/st7789.c **** 	if ((y + h) >= ST7789_HEIGHT) {
 2207              		.loc 1 580 0
 2208 0034 BB19     		adds	r3, r7, r6
 2209 0036 EF2B     		cmp	r3, #239
 2210 0038 02DD     		ble	.L154
 581:Drivers/ST7789/st7789.c **** 		h = ST7789_HEIGHT - y;
 2211              		.loc 1 581 0
 2212 003a C7F1F006 		rsb	r6, r7, #240
 2213 003e B6B2     		uxth	r6, r6
 2214              	.LVL265:
 2215              	.L154:
 582:Drivers/ST7789/st7789.c **** 	}
 583:Drivers/ST7789/st7789.c **** 
 584:Drivers/ST7789/st7789.c **** 	/* Draw lines */
 585:Drivers/ST7789/st7789.c **** 	for (i = 0; i <= h; i++) {
 2216              		.loc 1 585 0
 2217 0040 0024     		movs	r4, #0
ARM GAS  /tmp/cc4GmWmk.s 			page 52


 2218 0042 0CE0     		b	.L155
 2219              	.LVL266:
 2220              	.L156:
 586:Drivers/ST7789/st7789.c **** 		/* Draw lines */
 587:Drivers/ST7789/st7789.c **** 		ST7789_DrawLine(x, y + i, x + w, y + i, color);
 2221              		.loc 1 587 0 discriminator 3
 2222 0044 3944     		add	r1, r1, r7
 2223 0046 89B2     		uxth	r1, r1
 2224 0048 08EB0502 		add	r2, r8, r5
 2225 004c CDF80090 		str	r9, [sp]
 2226 0050 0B46     		mov	r3, r1
 2227 0052 92B2     		uxth	r2, r2
 2228 0054 2846     		mov	r0, r5
 2229 0056 FFF7FEFF 		bl	ST7789_DrawLine
 2230              	.LVL267:
 585:Drivers/ST7789/st7789.c **** 		/* Draw lines */
 2231              		.loc 1 585 0 discriminator 3
 2232 005a 0134     		adds	r4, r4, #1
 2233              	.LVL268:
 2234 005c E4B2     		uxtb	r4, r4
 2235              	.LVL269:
 2236              	.L155:
 585:Drivers/ST7789/st7789.c **** 		/* Draw lines */
 2237              		.loc 1 585 0 is_stmt 0 discriminator 1
 2238 005e A1B2     		uxth	r1, r4
 2239 0060 B142     		cmp	r1, r6
 2240 0062 EFD9     		bls	.L156
 588:Drivers/ST7789/st7789.c **** 	}
 589:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 2241              		.loc 1 589 0 is_stmt 1
 2242 0064 0122     		movs	r2, #1
 2243 0066 0421     		movs	r1, #4
 2244 0068 0248     		ldr	r0, .L158
 2245 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 2246              	.LVL270:
 2247              	.L151:
 590:Drivers/ST7789/st7789.c **** }
 2248              		.loc 1 590 0
 2249 006e 03B0     		add	sp, sp, #12
 2250              	.LCFI57:
 2251              		.cfi_def_cfa_offset 28
 2252              		@ sp needed
 2253 0070 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2254              	.LVL271:
 2255              	.L159:
 2256              		.align	2
 2257              	.L158:
 2258 0074 00000258 		.word	1476526080
 2259              		.cfi_endproc
 2260              	.LFE370:
 2262              		.section	.text.ST7789_DrawTriangle,"ax",%progbits
 2263              		.align	1
 2264              		.global	ST7789_DrawTriangle
 2265              		.syntax unified
 2266              		.thumb
 2267              		.thumb_func
 2268              		.fpu fpv5-d16
ARM GAS  /tmp/cc4GmWmk.s 			page 53


 2270              	ST7789_DrawTriangle:
 2271              	.LFB371:
 591:Drivers/ST7789/st7789.c **** 
 592:Drivers/ST7789/st7789.c **** /** 
 593:Drivers/ST7789/st7789.c ****  * @brief Draw a Triangle with single color
 594:Drivers/ST7789/st7789.c ****  * @param  xi&yi -> 3 coordinates of 3 top points.
 595:Drivers/ST7789/st7789.c ****  * @param color ->color of the lines
 596:Drivers/ST7789/st7789.c ****  * @return  none
 597:Drivers/ST7789/st7789.c ****  */
 598:Drivers/ST7789/st7789.c **** void ST7789_DrawTriangle(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint16_t x3, uint16_t 
 599:Drivers/ST7789/st7789.c **** {
 2272              		.loc 1 599 0
 2273              		.cfi_startproc
 2274              		@ args = 12, pretend = 0, frame = 0
 2275              		@ frame_needed = 0, uses_anonymous_args = 0
 2276              	.LVL272:
 2277 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2278              	.LCFI58:
 2279              		.cfi_def_cfa_offset 36
 2280              		.cfi_offset 4, -36
 2281              		.cfi_offset 5, -32
 2282              		.cfi_offset 6, -28
 2283              		.cfi_offset 7, -24
 2284              		.cfi_offset 8, -20
 2285              		.cfi_offset 9, -16
 2286              		.cfi_offset 10, -12
 2287              		.cfi_offset 11, -8
 2288              		.cfi_offset 14, -4
 2289 0004 83B0     		sub	sp, sp, #12
 2290              	.LCFI59:
 2291              		.cfi_def_cfa_offset 48
 2292 0006 8046     		mov	r8, r0
 2293 0008 8946     		mov	r9, r1
 2294 000a 9246     		mov	r10, r2
 2295 000c 9B46     		mov	fp, r3
 2296 000e BDF83060 		ldrh	r6, [sp, #48]
 2297 0012 BDF83470 		ldrh	r7, [sp, #52]
 2298 0016 BDF83840 		ldrh	r4, [sp, #56]
 600:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 2299              		.loc 1 600 0
 2300 001a 114D     		ldr	r5, .L162
 2301 001c 0022     		movs	r2, #0
 2302              	.LVL273:
 2303 001e 0421     		movs	r1, #4
 2304              	.LVL274:
 2305 0020 2846     		mov	r0, r5
 2306              	.LVL275:
 2307 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2308              	.LVL276:
 601:Drivers/ST7789/st7789.c **** 	/* Draw lines */
 602:Drivers/ST7789/st7789.c **** 	ST7789_DrawLine(x1, y1, x2, y2, color);
 2309              		.loc 1 602 0
 2310 0026 0094     		str	r4, [sp]
 2311 0028 5B46     		mov	r3, fp
 2312 002a 5246     		mov	r2, r10
 2313 002c 4946     		mov	r1, r9
 2314 002e 4046     		mov	r0, r8
ARM GAS  /tmp/cc4GmWmk.s 			page 54


 2315 0030 FFF7FEFF 		bl	ST7789_DrawLine
 2316              	.LVL277:
 603:Drivers/ST7789/st7789.c **** 	ST7789_DrawLine(x2, y2, x3, y3, color);
 2317              		.loc 1 603 0
 2318 0034 0094     		str	r4, [sp]
 2319 0036 3B46     		mov	r3, r7
 2320 0038 3246     		mov	r2, r6
 2321 003a 5946     		mov	r1, fp
 2322 003c 5046     		mov	r0, r10
 2323 003e FFF7FEFF 		bl	ST7789_DrawLine
 2324              	.LVL278:
 604:Drivers/ST7789/st7789.c **** 	ST7789_DrawLine(x3, y3, x1, y1, color);
 2325              		.loc 1 604 0
 2326 0042 0094     		str	r4, [sp]
 2327 0044 4B46     		mov	r3, r9
 2328 0046 4246     		mov	r2, r8
 2329 0048 3946     		mov	r1, r7
 2330 004a 3046     		mov	r0, r6
 2331 004c FFF7FEFF 		bl	ST7789_DrawLine
 2332              	.LVL279:
 605:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 2333              		.loc 1 605 0
 2334 0050 0122     		movs	r2, #1
 2335 0052 0421     		movs	r1, #4
 2336 0054 2846     		mov	r0, r5
 2337 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2338              	.LVL280:
 606:Drivers/ST7789/st7789.c **** }
 2339              		.loc 1 606 0
 2340 005a 03B0     		add	sp, sp, #12
 2341              	.LCFI60:
 2342              		.cfi_def_cfa_offset 36
 2343              		@ sp needed
 2344 005c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2345              	.LVL281:
 2346              	.L163:
 2347              		.align	2
 2348              	.L162:
 2349 0060 00000258 		.word	1476526080
 2350              		.cfi_endproc
 2351              	.LFE371:
 2353              		.section	.text.ST7789_DrawFilledTriangle,"ax",%progbits
 2354              		.align	1
 2355              		.global	ST7789_DrawFilledTriangle
 2356              		.syntax unified
 2357              		.thumb
 2358              		.thumb_func
 2359              		.fpu fpv5-d16
 2361              	ST7789_DrawFilledTriangle:
 2362              	.LFB372:
 607:Drivers/ST7789/st7789.c **** 
 608:Drivers/ST7789/st7789.c **** /** 
 609:Drivers/ST7789/st7789.c ****  * @brief Draw a filled Triangle with single color
 610:Drivers/ST7789/st7789.c ****  * @param  xi&yi -> 3 coordinates of 3 top points.
 611:Drivers/ST7789/st7789.c ****  * @param color ->color of the triangle
 612:Drivers/ST7789/st7789.c ****  * @return  none
 613:Drivers/ST7789/st7789.c ****  */
ARM GAS  /tmp/cc4GmWmk.s 			page 55


 614:Drivers/ST7789/st7789.c **** void ST7789_DrawFilledTriangle(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint16_t x3, uin
 615:Drivers/ST7789/st7789.c **** {
 2363              		.loc 1 615 0
 2364              		.cfi_startproc
 2365              		@ args = 12, pretend = 0, frame = 32
 2366              		@ frame_needed = 0, uses_anonymous_args = 0
 2367              	.LVL282:
 2368 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2369              	.LCFI61:
 2370              		.cfi_def_cfa_offset 36
 2371              		.cfi_offset 4, -36
 2372              		.cfi_offset 5, -32
 2373              		.cfi_offset 6, -28
 2374              		.cfi_offset 7, -24
 2375              		.cfi_offset 8, -20
 2376              		.cfi_offset 9, -16
 2377              		.cfi_offset 10, -12
 2378              		.cfi_offset 11, -8
 2379              		.cfi_offset 14, -4
 2380 0004 8BB0     		sub	sp, sp, #44
 2381              	.LCFI62:
 2382              		.cfi_def_cfa_offset 80
 2383 0006 0746     		mov	r7, r0
 2384 0008 0C46     		mov	r4, r1
 2385 000a 9146     		mov	r9, r2
 2386 000c 9846     		mov	r8, r3
 2387 000e BDF85030 		ldrh	r3, [sp, #80]
 2388              	.LVL283:
 2389 0012 0593     		str	r3, [sp, #20]
 2390 0014 BDF85430 		ldrh	r3, [sp, #84]
 2391 0018 0693     		str	r3, [sp, #24]
 2392 001a BDF85830 		ldrh	r3, [sp, #88]
 2393 001e 0793     		str	r3, [sp, #28]
 616:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 2394              		.loc 1 616 0
 2395 0020 0022     		movs	r2, #0
 2396              	.LVL284:
 2397 0022 0421     		movs	r1, #4
 2398              	.LVL285:
 2399 0024 3C48     		ldr	r0, .L180
 2400              	.LVL286:
 2401 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2402              	.LVL287:
 617:Drivers/ST7789/st7789.c **** 	int16_t deltax = 0, deltay = 0, x = 0, y = 0, xinc1 = 0, xinc2 = 0,
 618:Drivers/ST7789/st7789.c **** 			yinc1 = 0, yinc2 = 0, den = 0, num = 0, numadd = 0, numpixels = 0,
 619:Drivers/ST7789/st7789.c **** 			curpixel = 0;
 620:Drivers/ST7789/st7789.c **** 
 621:Drivers/ST7789/st7789.c **** 	deltax = ABS(x2 - x1);
 2403              		.loc 1 621 0
 2404 002a A9EB070A 		sub	r10, r9, r7
 2405 002e BAF1000F 		cmp	r10, #0
 2406 0032 B8BF     		it	lt
 2407 0034 CAF1000A 		rsblt	r10, r10, #0
 2408 0038 0FFA8AFA 		sxth	r10, r10
 2409              	.LVL288:
 622:Drivers/ST7789/st7789.c **** 	deltay = ABS(y2 - y1);
 2410              		.loc 1 622 0
ARM GAS  /tmp/cc4GmWmk.s 			page 56


 2411 003c A8EB040B 		sub	fp, r8, r4
 2412 0040 BBF1000F 		cmp	fp, #0
 2413 0044 B8BF     		it	lt
 2414 0046 CBF1000B 		rsblt	fp, fp, #0
 2415 004a 0FFA8BFB 		sxth	fp, fp
 2416              	.LVL289:
 623:Drivers/ST7789/st7789.c **** 	x = x1;
 2417              		.loc 1 623 0
 2418 004e 3DB2     		sxth	r5, r7
 2419              	.LVL290:
 624:Drivers/ST7789/st7789.c **** 	y = y1;
 2420              		.loc 1 624 0
 2421 0050 26B2     		sxth	r6, r4
 2422              	.LVL291:
 625:Drivers/ST7789/st7789.c **** 
 626:Drivers/ST7789/st7789.c **** 	if (x2 >= x1) {
 2423              		.loc 1 626 0
 2424 0052 B945     		cmp	r9, r7
 2425 0054 14D3     		bcc	.L174
 627:Drivers/ST7789/st7789.c **** 		xinc1 = 1;
 2426              		.loc 1 627 0
 2427 0056 0123     		movs	r3, #1
 2428 0058 0893     		str	r3, [sp, #32]
 2429              	.L165:
 2430              	.LVL292:
 628:Drivers/ST7789/st7789.c **** 		xinc2 = 1;
 629:Drivers/ST7789/st7789.c **** 	}
 630:Drivers/ST7789/st7789.c **** 	else {
 631:Drivers/ST7789/st7789.c **** 		xinc1 = -1;
 632:Drivers/ST7789/st7789.c **** 		xinc2 = -1;
 633:Drivers/ST7789/st7789.c **** 	}
 634:Drivers/ST7789/st7789.c **** 
 635:Drivers/ST7789/st7789.c **** 	if (y2 >= y1) {
 2431              		.loc 1 635 0
 2432 005a A045     		cmp	r8, r4
 2433 005c 14D3     		bcc	.L175
 636:Drivers/ST7789/st7789.c **** 		yinc1 = 1;
 2434              		.loc 1 636 0
 2435 005e 0123     		movs	r3, #1
 2436 0060 0993     		str	r3, [sp, #36]
 2437              	.L166:
 2438              	.LVL293:
 637:Drivers/ST7789/st7789.c **** 		yinc2 = 1;
 638:Drivers/ST7789/st7789.c **** 	}
 639:Drivers/ST7789/st7789.c **** 	else {
 640:Drivers/ST7789/st7789.c **** 		yinc1 = -1;
 641:Drivers/ST7789/st7789.c **** 		yinc2 = -1;
 642:Drivers/ST7789/st7789.c **** 	}
 643:Drivers/ST7789/st7789.c **** 
 644:Drivers/ST7789/st7789.c **** 	if (deltax >= deltay) {
 2439              		.loc 1 644 0
 2440 0062 DA45     		cmp	r10, fp
 2441 0064 17DB     		blt	.L167
 2442              	.LVL294:
 645:Drivers/ST7789/st7789.c **** 		xinc1 = 0;
 646:Drivers/ST7789/st7789.c **** 		yinc2 = 0;
 647:Drivers/ST7789/st7789.c **** 		den = deltax;
ARM GAS  /tmp/cc4GmWmk.s 			page 57


 648:Drivers/ST7789/st7789.c **** 		num = deltax / 2;
 2443              		.loc 1 648 0
 2444 0066 5446     		mov	r4, r10
 2445 0068 BAF1000F 		cmp	r10, #0
 2446 006c 10DB     		blt	.L177
 2447              	.L168:
 2448 006e 44F34F04 		sbfx	r4, r4, #1, #16
 2449              	.LVL295:
 2450 0072 089B     		ldr	r3, [sp, #32]
 2451 0074 0393     		str	r3, [sp, #12]
 646:Drivers/ST7789/st7789.c **** 		den = deltax;
 2452              		.loc 1 646 0
 2453 0076 0023     		movs	r3, #0
 2454 0078 0893     		str	r3, [sp, #32]
 2455              	.LVL296:
 645:Drivers/ST7789/st7789.c **** 		xinc1 = 0;
 2456              		.loc 1 645 0
 2457 007a 0493     		str	r3, [sp, #16]
 2458              	.LVL297:
 2459              	.L169:
 649:Drivers/ST7789/st7789.c **** 		numadd = deltay;
 650:Drivers/ST7789/st7789.c **** 		numpixels = deltax;
 651:Drivers/ST7789/st7789.c **** 	}
 652:Drivers/ST7789/st7789.c **** 	else {
 653:Drivers/ST7789/st7789.c **** 		xinc2 = 0;
 654:Drivers/ST7789/st7789.c **** 		yinc1 = 0;
 655:Drivers/ST7789/st7789.c **** 		den = deltay;
 656:Drivers/ST7789/st7789.c **** 		num = deltay / 2;
 657:Drivers/ST7789/st7789.c **** 		numadd = deltax;
 658:Drivers/ST7789/st7789.c **** 		numpixels = deltay;
 659:Drivers/ST7789/st7789.c **** 	}
 660:Drivers/ST7789/st7789.c **** 
 661:Drivers/ST7789/st7789.c **** 	for (curpixel = 0; curpixel <= numpixels; curpixel++) {
 2460              		.loc 1 661 0
 2461 007c 0027     		movs	r7, #0
 2462              	.LVL298:
 2463 007e 24E0     		b	.L171
 2464              	.LVL299:
 2465              	.L174:
 631:Drivers/ST7789/st7789.c **** 		xinc2 = -1;
 2466              		.loc 1 631 0
 2467 0080 4FF0FF33 		mov	r3, #-1
 2468 0084 0893     		str	r3, [sp, #32]
 2469 0086 E8E7     		b	.L165
 2470              	.LVL300:
 2471              	.L175:
 640:Drivers/ST7789/st7789.c **** 		yinc2 = -1;
 2472              		.loc 1 640 0
 2473 0088 4FF0FF33 		mov	r3, #-1
 2474 008c 0993     		str	r3, [sp, #36]
 2475 008e E8E7     		b	.L166
 2476              	.LVL301:
 2477              	.L177:
 648:Drivers/ST7789/st7789.c **** 		numadd = deltay;
 2478              		.loc 1 648 0
 2479 0090 0AF10104 		add	r4, r10, #1
 2480 0094 EBE7     		b	.L168
ARM GAS  /tmp/cc4GmWmk.s 			page 58


 2481              	.LVL302:
 2482              	.L167:
 656:Drivers/ST7789/st7789.c **** 		numadd = deltax;
 2483              		.loc 1 656 0
 2484 0096 5C46     		mov	r4, fp
 2485 0098 BBF1000F 		cmp	fp, #0
 2486 009c 0ADB     		blt	.L178
 2487              	.L170:
 2488 009e 44F34F04 		sbfx	r4, r4, #1, #16
 2489              	.LVL303:
 2490 00a2 5346     		mov	r3, r10
 655:Drivers/ST7789/st7789.c **** 		num = deltay / 2;
 2491              		.loc 1 655 0
 2492 00a4 DA46     		mov	r10, fp
 2493              	.LVL304:
 657:Drivers/ST7789/st7789.c **** 		numpixels = deltay;
 2494              		.loc 1 657 0
 2495 00a6 9B46     		mov	fp, r3
 2496              	.LVL305:
 656:Drivers/ST7789/st7789.c **** 		numadd = deltax;
 2497              		.loc 1 656 0
 2498 00a8 099B     		ldr	r3, [sp, #36]
 2499              	.LVL306:
 2500 00aa 0493     		str	r3, [sp, #16]
 654:Drivers/ST7789/st7789.c **** 		den = deltay;
 2501              		.loc 1 654 0
 2502 00ac 0023     		movs	r3, #0
 2503 00ae 0993     		str	r3, [sp, #36]
 2504              	.LVL307:
 653:Drivers/ST7789/st7789.c **** 		yinc1 = 0;
 2505              		.loc 1 653 0
 2506 00b0 0393     		str	r3, [sp, #12]
 2507 00b2 E3E7     		b	.L169
 2508              	.LVL308:
 2509              	.L178:
 656:Drivers/ST7789/st7789.c **** 		numadd = deltax;
 2510              		.loc 1 656 0
 2511 00b4 0BF10104 		add	r4, fp, #1
 2512 00b8 F1E7     		b	.L170
 2513              	.LVL309:
 2514              	.L172:
 662:Drivers/ST7789/st7789.c **** 		ST7789_DrawLine(x, y, x3, y3, color);
 663:Drivers/ST7789/st7789.c **** 
 664:Drivers/ST7789/st7789.c **** 		num += numadd;
 665:Drivers/ST7789/st7789.c **** 		if (num >= den) {
 666:Drivers/ST7789/st7789.c **** 			num -= den;
 667:Drivers/ST7789/st7789.c **** 			x += xinc1;
 668:Drivers/ST7789/st7789.c **** 			y += yinc1;
 669:Drivers/ST7789/st7789.c **** 		}
 670:Drivers/ST7789/st7789.c **** 		x += xinc2;
 2515              		.loc 1 670 0 discriminator 2
 2516 00ba 039B     		ldr	r3, [sp, #12]
 2517 00bc 1D44     		add	r5, r5, r3
 2518              	.LVL310:
 2519 00be 2DB2     		sxth	r5, r5
 2520              	.LVL311:
 671:Drivers/ST7789/st7789.c **** 		y += yinc2;
ARM GAS  /tmp/cc4GmWmk.s 			page 59


 2521              		.loc 1 671 0 discriminator 2
 2522 00c0 049B     		ldr	r3, [sp, #16]
 2523 00c2 1E44     		add	r6, r6, r3
 2524              	.LVL312:
 2525 00c4 36B2     		sxth	r6, r6
 2526              	.LVL313:
 661:Drivers/ST7789/st7789.c **** 		ST7789_DrawLine(x, y, x3, y3, color);
 2527              		.loc 1 661 0 discriminator 2
 2528 00c6 0137     		adds	r7, r7, #1
 2529              	.LVL314:
 2530 00c8 3FB2     		sxth	r7, r7
 2531              	.LVL315:
 2532              	.L171:
 661:Drivers/ST7789/st7789.c **** 		ST7789_DrawLine(x, y, x3, y3, color);
 2533              		.loc 1 661 0 is_stmt 0 discriminator 1
 2534 00ca BA45     		cmp	r10, r7
 2535 00cc 1CDB     		blt	.L179
 662:Drivers/ST7789/st7789.c **** 		ST7789_DrawLine(x, y, x3, y3, color);
 2536              		.loc 1 662 0 is_stmt 1
 2537 00ce 1FFA85F9 		uxth	r9, r5
 2538 00d2 1FFA86F8 		uxth	r8, r6
 2539 00d6 079B     		ldr	r3, [sp, #28]
 2540 00d8 0093     		str	r3, [sp]
 2541 00da 069B     		ldr	r3, [sp, #24]
 2542 00dc 059A     		ldr	r2, [sp, #20]
 2543 00de 4146     		mov	r1, r8
 2544 00e0 4846     		mov	r0, r9
 2545 00e2 FFF7FEFF 		bl	ST7789_DrawLine
 2546              	.LVL316:
 664:Drivers/ST7789/st7789.c **** 		if (num >= den) {
 2547              		.loc 1 664 0
 2548 00e6 5C44     		add	r4, r4, fp
 2549              	.LVL317:
 2550 00e8 A3B2     		uxth	r3, r4
 2551 00ea 1CB2     		sxth	r4, r3
 2552              	.LVL318:
 665:Drivers/ST7789/st7789.c **** 			num -= den;
 2553              		.loc 1 665 0
 2554 00ec A245     		cmp	r10, r4
 2555 00ee E4DC     		bgt	.L172
 666:Drivers/ST7789/st7789.c **** 			x += xinc1;
 2556              		.loc 1 666 0
 2557 00f0 A3EB0A04 		sub	r4, r3, r10
 2558              	.LVL319:
 2559 00f4 24B2     		sxth	r4, r4
 2560              	.LVL320:
 667:Drivers/ST7789/st7789.c **** 			y += yinc1;
 2561              		.loc 1 667 0
 2562 00f6 089B     		ldr	r3, [sp, #32]
 2563 00f8 09EB0305 		add	r5, r9, r3
 2564              	.LVL321:
 2565 00fc 2DB2     		sxth	r5, r5
 2566              	.LVL322:
 668:Drivers/ST7789/st7789.c **** 		}
 2567              		.loc 1 668 0
 2568 00fe 099B     		ldr	r3, [sp, #36]
 2569 0100 08EB0306 		add	r6, r8, r3
ARM GAS  /tmp/cc4GmWmk.s 			page 60


 2570              	.LVL323:
 2571 0104 36B2     		sxth	r6, r6
 2572              	.LVL324:
 2573 0106 D8E7     		b	.L172
 2574              	.L179:
 672:Drivers/ST7789/st7789.c **** 	}
 673:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 2575              		.loc 1 673 0
 2576 0108 0122     		movs	r2, #1
 2577 010a 0421     		movs	r1, #4
 2578 010c 0248     		ldr	r0, .L180
 2579 010e FFF7FEFF 		bl	HAL_GPIO_WritePin
 2580              	.LVL325:
 674:Drivers/ST7789/st7789.c **** }
 2581              		.loc 1 674 0
 2582 0112 0BB0     		add	sp, sp, #44
 2583              	.LCFI63:
 2584              		.cfi_def_cfa_offset 36
 2585              		@ sp needed
 2586 0114 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2587              	.LVL326:
 2588              	.L181:
 2589              		.align	2
 2590              	.L180:
 2591 0118 00000258 		.word	1476526080
 2592              		.cfi_endproc
 2593              	.LFE372:
 2595              		.section	.text.ST7789_DrawFilledCircle,"ax",%progbits
 2596              		.align	1
 2597              		.global	ST7789_DrawFilledCircle
 2598              		.syntax unified
 2599              		.thumb
 2600              		.thumb_func
 2601              		.fpu fpv5-d16
 2603              	ST7789_DrawFilledCircle:
 2604              	.LFB373:
 675:Drivers/ST7789/st7789.c **** 
 676:Drivers/ST7789/st7789.c **** /** 
 677:Drivers/ST7789/st7789.c ****  * @brief Draw a Filled circle with single color
 678:Drivers/ST7789/st7789.c ****  * @param x0&y0 -> coordinate of circle center
 679:Drivers/ST7789/st7789.c ****  * @param r -> radius of circle
 680:Drivers/ST7789/st7789.c ****  * @param color -> color of circle
 681:Drivers/ST7789/st7789.c ****  * @return  none
 682:Drivers/ST7789/st7789.c ****  */
 683:Drivers/ST7789/st7789.c **** void ST7789_DrawFilledCircle(int16_t x0, int16_t y0, int16_t r, uint16_t color)
 684:Drivers/ST7789/st7789.c **** {
 2605              		.loc 1 684 0
 2606              		.cfi_startproc
 2607              		@ args = 0, pretend = 0, frame = 16
 2608              		@ frame_needed = 0, uses_anonymous_args = 0
 2609              	.LVL327:
 2610 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2611              	.LCFI64:
 2612              		.cfi_def_cfa_offset 36
 2613              		.cfi_offset 4, -36
 2614              		.cfi_offset 5, -32
 2615              		.cfi_offset 6, -28
ARM GAS  /tmp/cc4GmWmk.s 			page 61


 2616              		.cfi_offset 7, -24
 2617              		.cfi_offset 8, -20
 2618              		.cfi_offset 9, -16
 2619              		.cfi_offset 10, -12
 2620              		.cfi_offset 11, -8
 2621              		.cfi_offset 14, -4
 2622 0004 87B0     		sub	sp, sp, #28
 2623              	.LCFI65:
 2624              		.cfi_def_cfa_offset 64
 2625 0006 8046     		mov	r8, r0
 2626 0008 0F46     		mov	r7, r1
 2627 000a 1446     		mov	r4, r2
 2628 000c 0292     		str	r2, [sp, #8]
 2629 000e 9946     		mov	r9, r3
 685:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 2630              		.loc 1 685 0
 2631 0010 0022     		movs	r2, #0
 2632              	.LVL328:
 2633 0012 0421     		movs	r1, #4
 2634              	.LVL329:
 2635 0014 4848     		ldr	r0, .L188
 2636              	.LVL330:
 2637 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2638              	.LVL331:
 686:Drivers/ST7789/st7789.c **** 	int16_t f = 1 - r;
 2639              		.loc 1 686 0
 2640 001a A5B2     		uxth	r5, r4
 2641 001c C5F10104 		rsb	r4, r5, #1
 2642 0020 24B2     		sxth	r4, r4
 2643              	.LVL332:
 687:Drivers/ST7789/st7789.c **** 	int16_t ddF_x = 1;
 688:Drivers/ST7789/st7789.c **** 	int16_t ddF_y = -2 * r;
 2644              		.loc 1 688 0
 2645 0022 C5EBC532 		rsb	r2, r5, r5, lsl #15
 2646 0026 5300     		lsls	r3, r2, #1
 2647 0028 1BB2     		sxth	r3, r3
 2648 002a 0593     		str	r3, [sp, #20]
 2649              	.LVL333:
 689:Drivers/ST7789/st7789.c **** 	int16_t x = 0;
 690:Drivers/ST7789/st7789.c **** 	int16_t y = r;
 691:Drivers/ST7789/st7789.c **** 
 692:Drivers/ST7789/st7789.c **** 	ST7789_DrawPixel(x0, y0 + r, color);
 2650              		.loc 1 692 0
 2651 002c 1FFA88F8 		uxth	r8, r8
 2652 0030 BFB2     		uxth	r7, r7
 2653 0032 E919     		adds	r1, r5, r7
 2654 0034 4A46     		mov	r2, r9
 2655 0036 89B2     		uxth	r1, r1
 2656 0038 4046     		mov	r0, r8
 2657 003a FFF7FEFF 		bl	ST7789_DrawPixel
 2658              	.LVL334:
 693:Drivers/ST7789/st7789.c **** 	ST7789_DrawPixel(x0, y0 - r, color);
 2659              		.loc 1 693 0
 2660 003e 791B     		subs	r1, r7, r5
 2661 0040 4A46     		mov	r2, r9
 2662 0042 89B2     		uxth	r1, r1
 2663 0044 4046     		mov	r0, r8
ARM GAS  /tmp/cc4GmWmk.s 			page 62


 2664 0046 FFF7FEFF 		bl	ST7789_DrawPixel
 2665              	.LVL335:
 694:Drivers/ST7789/st7789.c **** 	ST7789_DrawPixel(x0 + r, y0, color);
 2666              		.loc 1 694 0
 2667 004a 05EB0806 		add	r6, r5, r8
 2668 004e B6B2     		uxth	r6, r6
 2669 0050 4A46     		mov	r2, r9
 2670 0052 3946     		mov	r1, r7
 2671 0054 3046     		mov	r0, r6
 2672 0056 FFF7FEFF 		bl	ST7789_DrawPixel
 2673              	.LVL336:
 695:Drivers/ST7789/st7789.c **** 	ST7789_DrawPixel(x0 - r, y0, color);
 2674              		.loc 1 695 0
 2675 005a A8EB0505 		sub	r5, r8, r5
 2676 005e ADB2     		uxth	r5, r5
 2677 0060 4A46     		mov	r2, r9
 2678 0062 3946     		mov	r1, r7
 2679 0064 2846     		mov	r0, r5
 2680 0066 FFF7FEFF 		bl	ST7789_DrawPixel
 2681              	.LVL337:
 696:Drivers/ST7789/st7789.c **** 	ST7789_DrawLine(x0 - r, y0, x0 + r, y0, color);
 2682              		.loc 1 696 0
 2683 006a CDF80090 		str	r9, [sp]
 2684 006e 3B46     		mov	r3, r7
 2685 0070 3246     		mov	r2, r6
 2686 0072 3946     		mov	r1, r7
 2687 0074 2846     		mov	r0, r5
 2688 0076 FFF7FEFF 		bl	ST7789_DrawLine
 2689              	.LVL338:
 689:Drivers/ST7789/st7789.c **** 	int16_t y = r;
 2690              		.loc 1 689 0
 2691 007a 4FF0000B 		mov	fp, #0
 687:Drivers/ST7789/st7789.c **** 	int16_t ddF_y = -2 * r;
 2692              		.loc 1 687 0
 2693 007e 0123     		movs	r3, #1
 2694 0080 0393     		str	r3, [sp, #12]
 697:Drivers/ST7789/st7789.c **** 
 698:Drivers/ST7789/st7789.c **** 	while (x < y) {
 2695              		.loc 1 698 0
 2696 0082 40E0     		b	.L183
 2697              	.LVL339:
 2698              	.L184:
 699:Drivers/ST7789/st7789.c **** 		if (f >= 0) {
 700:Drivers/ST7789/st7789.c **** 			y--;
 701:Drivers/ST7789/st7789.c **** 			ddF_y += 2;
 702:Drivers/ST7789/st7789.c **** 			f += ddF_y;
 703:Drivers/ST7789/st7789.c **** 		}
 704:Drivers/ST7789/st7789.c **** 		x++;
 2699              		.loc 1 704 0
 2700 0084 0BF10105 		add	r5, fp, #1
 2701 0088 ADB2     		uxth	r5, r5
 2702 008a 0FFA85FB 		sxth	fp, r5
 2703              	.LVL340:
 705:Drivers/ST7789/st7789.c **** 		ddF_x += 2;
 2704              		.loc 1 705 0
 2705 008e 039B     		ldr	r3, [sp, #12]
 2706 0090 0233     		adds	r3, r3, #2
ARM GAS  /tmp/cc4GmWmk.s 			page 63


 2707 0092 9BB2     		uxth	r3, r3
 2708 0094 1AB2     		sxth	r2, r3
 2709 0096 0392     		str	r2, [sp, #12]
 2710              	.LVL341:
 706:Drivers/ST7789/st7789.c **** 		f += ddF_x;
 2711              		.loc 1 706 0
 2712 0098 1C44     		add	r4, r4, r3
 2713              	.LVL342:
 2714 009a 24B2     		sxth	r4, r4
 2715              	.LVL343:
 707:Drivers/ST7789/st7789.c **** 
 708:Drivers/ST7789/st7789.c **** 		ST7789_DrawLine(x0 - x, y0 + y, x0 + x, y0 + y, color);
 2716              		.loc 1 708 0
 2717 009c A8EB050A 		sub	r10, r8, r5
 2718 00a0 1FFA8AFA 		uxth	r10, r10
 2719 00a4 BDF80860 		ldrh	r6, [sp, #8]
 2720 00a8 B919     		adds	r1, r7, r6
 2721 00aa 89B2     		uxth	r1, r1
 2722 00ac 08EB0503 		add	r3, r8, r5
 2723 00b0 9BB2     		uxth	r3, r3
 2724 00b2 1A46     		mov	r2, r3
 2725 00b4 CDF80090 		str	r9, [sp]
 2726 00b8 0B46     		mov	r3, r1
 2727 00ba 0492     		str	r2, [sp, #16]
 2728 00bc 5046     		mov	r0, r10
 2729 00be FFF7FEFF 		bl	ST7789_DrawLine
 2730              	.LVL344:
 709:Drivers/ST7789/st7789.c **** 		ST7789_DrawLine(x0 + x, y0 - y, x0 - x, y0 - y, color);
 2731              		.loc 1 709 0
 2732 00c2 B91B     		subs	r1, r7, r6
 2733 00c4 89B2     		uxth	r1, r1
 2734 00c6 CDF80090 		str	r9, [sp]
 2735 00ca 0B46     		mov	r3, r1
 2736 00cc 5246     		mov	r2, r10
 2737 00ce 0498     		ldr	r0, [sp, #16]
 2738 00d0 FFF7FEFF 		bl	ST7789_DrawLine
 2739              	.LVL345:
 710:Drivers/ST7789/st7789.c **** 
 711:Drivers/ST7789/st7789.c **** 		ST7789_DrawLine(x0 + y, y0 + x, x0 - y, y0 + x, color);
 2740              		.loc 1 711 0
 2741 00d4 08EB060A 		add	r10, r8, r6
 2742 00d8 1FFA8AFA 		uxth	r10, r10
 2743 00dc 7919     		adds	r1, r7, r5
 2744 00de 89B2     		uxth	r1, r1
 2745 00e0 A8EB0606 		sub	r6, r8, r6
 2746 00e4 B6B2     		uxth	r6, r6
 2747 00e6 CDF80090 		str	r9, [sp]
 2748 00ea 0B46     		mov	r3, r1
 2749 00ec 3246     		mov	r2, r6
 2750 00ee 5046     		mov	r0, r10
 2751 00f0 FFF7FEFF 		bl	ST7789_DrawLine
 2752              	.LVL346:
 712:Drivers/ST7789/st7789.c **** 		ST7789_DrawLine(x0 + y, y0 - x, x0 - y, y0 - x, color);
 2753              		.loc 1 712 0
 2754 00f4 791B     		subs	r1, r7, r5
 2755 00f6 89B2     		uxth	r1, r1
 2756 00f8 CDF80090 		str	r9, [sp]
ARM GAS  /tmp/cc4GmWmk.s 			page 64


 2757 00fc 0B46     		mov	r3, r1
 2758 00fe 3246     		mov	r2, r6
 2759 0100 5046     		mov	r0, r10
 2760 0102 FFF7FEFF 		bl	ST7789_DrawLine
 2761              	.LVL347:
 2762              	.L183:
 698:Drivers/ST7789/st7789.c **** 		if (f >= 0) {
 2763              		.loc 1 698 0
 2764 0106 029B     		ldr	r3, [sp, #8]
 2765 0108 9B45     		cmp	fp, r3
 2766 010a 0DDA     		bge	.L187
 699:Drivers/ST7789/st7789.c **** 			y--;
 2767              		.loc 1 699 0
 2768 010c 002C     		cmp	r4, #0
 2769 010e B9DB     		blt	.L184
 700:Drivers/ST7789/st7789.c **** 			ddF_y += 2;
 2770              		.loc 1 700 0
 2771 0110 029B     		ldr	r3, [sp, #8]
 2772 0112 013B     		subs	r3, r3, #1
 2773 0114 1BB2     		sxth	r3, r3
 2774 0116 0293     		str	r3, [sp, #8]
 2775              	.LVL348:
 701:Drivers/ST7789/st7789.c **** 			f += ddF_y;
 2776              		.loc 1 701 0
 2777 0118 059B     		ldr	r3, [sp, #20]
 2778 011a 0233     		adds	r3, r3, #2
 2779 011c 9BB2     		uxth	r3, r3
 2780 011e 1AB2     		sxth	r2, r3
 2781 0120 0592     		str	r2, [sp, #20]
 2782              	.LVL349:
 702:Drivers/ST7789/st7789.c **** 		}
 2783              		.loc 1 702 0
 2784 0122 1C44     		add	r4, r4, r3
 2785              	.LVL350:
 2786 0124 24B2     		sxth	r4, r4
 2787              	.LVL351:
 2788 0126 ADE7     		b	.L184
 2789              	.L187:
 713:Drivers/ST7789/st7789.c **** 	}
 714:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 2790              		.loc 1 714 0
 2791 0128 0122     		movs	r2, #1
 2792 012a 0421     		movs	r1, #4
 2793 012c 0248     		ldr	r0, .L188
 2794 012e FFF7FEFF 		bl	HAL_GPIO_WritePin
 2795              	.LVL352:
 715:Drivers/ST7789/st7789.c **** }
 2796              		.loc 1 715 0
 2797 0132 07B0     		add	sp, sp, #28
 2798              	.LCFI66:
 2799              		.cfi_def_cfa_offset 36
 2800              		@ sp needed
 2801 0134 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2802              	.LVL353:
 2803              	.L189:
 2804              		.align	2
 2805              	.L188:
ARM GAS  /tmp/cc4GmWmk.s 			page 65


 2806 0138 00000258 		.word	1476526080
 2807              		.cfi_endproc
 2808              	.LFE373:
 2810              		.section	.text.ST7789_TearEffect,"ax",%progbits
 2811              		.align	1
 2812              		.global	ST7789_TearEffect
 2813              		.syntax unified
 2814              		.thumb
 2815              		.thumb_func
 2816              		.fpu fpv5-d16
 2818              	ST7789_TearEffect:
 2819              	.LFB374:
 716:Drivers/ST7789/st7789.c **** 
 717:Drivers/ST7789/st7789.c **** 
 718:Drivers/ST7789/st7789.c **** /**
 719:Drivers/ST7789/st7789.c ****  * @brief Open/Close tearing effect line
 720:Drivers/ST7789/st7789.c ****  * @param tear -> Whether to tear
 721:Drivers/ST7789/st7789.c ****  * @return none
 722:Drivers/ST7789/st7789.c ****  */
 723:Drivers/ST7789/st7789.c **** void ST7789_TearEffect(uint8_t tear)
 724:Drivers/ST7789/st7789.c **** {
 2820              		.loc 1 724 0
 2821              		.cfi_startproc
 2822              		@ args = 0, pretend = 0, frame = 0
 2823              		@ frame_needed = 0, uses_anonymous_args = 0
 2824              	.LVL354:
 2825 0000 10B5     		push	{r4, lr}
 2826              	.LCFI67:
 2827              		.cfi_def_cfa_offset 8
 2828              		.cfi_offset 4, -8
 2829              		.cfi_offset 14, -4
 2830 0002 0446     		mov	r4, r0
 725:Drivers/ST7789/st7789.c **** 	ST7789_Select();
 2831              		.loc 1 725 0
 2832 0004 0022     		movs	r2, #0
 2833 0006 0421     		movs	r1, #4
 2834 0008 0748     		ldr	r0, .L195
 2835              	.LVL355:
 2836 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 2837              	.LVL356:
 726:Drivers/ST7789/st7789.c **** 	ST7789_WriteCommand(tear ? 0x35 /* TEON */ : 0x34 /* TEOFF */);
 2838              		.loc 1 726 0
 2839 000e 44B9     		cbnz	r4, .L194
 2840 0010 3420     		movs	r0, #52
 2841              	.L191:
 2842              		.loc 1 726 0 is_stmt 0 discriminator 4
 2843 0012 FFF7FEFF 		bl	ST7789_WriteCommand
 2844              	.LVL357:
 727:Drivers/ST7789/st7789.c **** 	ST7789_UnSelect();
 2845              		.loc 1 727 0 is_stmt 1 discriminator 4
 2846 0016 0122     		movs	r2, #1
 2847 0018 0421     		movs	r1, #4
 2848 001a 0348     		ldr	r0, .L195
 2849 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 2850              	.LVL358:
 728:Drivers/ST7789/st7789.c **** }
 2851              		.loc 1 728 0 discriminator 4
ARM GAS  /tmp/cc4GmWmk.s 			page 66


 2852 0020 10BD     		pop	{r4, pc}
 2853              	.L194:
 726:Drivers/ST7789/st7789.c **** 	ST7789_WriteCommand(tear ? 0x35 /* TEON */ : 0x34 /* TEOFF */);
 2854              		.loc 1 726 0
 2855 0022 3520     		movs	r0, #53
 2856 0024 F5E7     		b	.L191
 2857              	.L196:
 2858 0026 00BF     		.align	2
 2859              	.L195:
 2860 0028 00000258 		.word	1476526080
 2861              		.cfi_endproc
 2862              	.LFE374:
 2864              		.section	.text.ST7789_Test,"ax",%progbits
 2865              		.align	1
 2866              		.global	ST7789_Test
 2867              		.syntax unified
 2868              		.thumb
 2869              		.thumb_func
 2870              		.fpu fpv5-d16
 2872              	ST7789_Test:
 2873              	.LFB375:
 729:Drivers/ST7789/st7789.c **** 
 730:Drivers/ST7789/st7789.c **** 
 731:Drivers/ST7789/st7789.c **** /** 
 732:Drivers/ST7789/st7789.c ****  * @brief A Simple test function for ST7789
 733:Drivers/ST7789/st7789.c ****  * @param  none
 734:Drivers/ST7789/st7789.c ****  * @return  none
 735:Drivers/ST7789/st7789.c ****  */
 736:Drivers/ST7789/st7789.c **** void ST7789_Test(void)
 737:Drivers/ST7789/st7789.c **** {
 2874              		.loc 1 737 0
 2875              		.cfi_startproc
 2876              		@ args = 0, pretend = 0, frame = 0
 2877              		@ frame_needed = 0, uses_anonymous_args = 0
 2878 0000 10B5     		push	{r4, lr}
 2879              	.LCFI68:
 2880              		.cfi_def_cfa_offset 8
 2881              		.cfi_offset 4, -8
 2882              		.cfi_offset 14, -4
 2883 0002 84B0     		sub	sp, sp, #16
 2884              	.LCFI69:
 2885              		.cfi_def_cfa_offset 24
 738:Drivers/ST7789/st7789.c **** 	ST7789_Fill_Color(WHITE);
 2886              		.loc 1 738 0
 2887 0004 4FF6FF70 		movw	r0, #65535
 2888 0008 FFF7FEFF 		bl	ST7789_Fill_Color
 2889              	.LVL359:
 739:Drivers/ST7789/st7789.c **** 	osDelay(1000);
 2890              		.loc 1 739 0
 2891 000c 4FF47A70 		mov	r0, #1000
 2892 0010 FFF7FEFF 		bl	osDelay
 2893              	.LVL360:
 740:Drivers/ST7789/st7789.c **** 	ST7789_WriteString(10, 20, "Speed Test", Font_11x18, RED, WHITE);
 2894              		.loc 1 740 0
 2895 0014 0F4B     		ldr	r3, .L199
 2896 0016 4FF6FF74 		movw	r4, #65535
 2897 001a 0294     		str	r4, [sp, #8]
ARM GAS  /tmp/cc4GmWmk.s 			page 67


 2898 001c 4FF47842 		mov	r2, #63488
 2899 0020 0192     		str	r2, [sp, #4]
 2900 0022 5A68     		ldr	r2, [r3, #4]
 2901 0024 0092     		str	r2, [sp]
 2902 0026 1B68     		ldr	r3, [r3]
 2903 0028 0B4A     		ldr	r2, .L199+4
 2904 002a 1421     		movs	r1, #20
 2905 002c 0A20     		movs	r0, #10
 2906 002e FFF7FEFF 		bl	ST7789_WriteString
 2907              	.LVL361:
 741:Drivers/ST7789/st7789.c **** 	// osDelay(1000);
 742:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(CYAN);
 743:Drivers/ST7789/st7789.c ****     // osDelay(500);
 744:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(RED);
 745:Drivers/ST7789/st7789.c ****     // osDelay(500);
 746:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(BLUE);
 747:Drivers/ST7789/st7789.c ****     // osDelay(500);
 748:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(GREEN);
 749:Drivers/ST7789/st7789.c ****     // osDelay(500);
 750:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(YELLOW);
 751:Drivers/ST7789/st7789.c ****     // osDelay(500);
 752:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(BROWN);
 753:Drivers/ST7789/st7789.c ****     // osDelay(500);
 754:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(DARKBLUE);
 755:Drivers/ST7789/st7789.c ****     // osDelay(500);
 756:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(MAGENTA);
 757:Drivers/ST7789/st7789.c ****     // osDelay(500);
 758:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(LIGHTGREEN);
 759:Drivers/ST7789/st7789.c ****     // osDelay(500);
 760:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(LGRAY);
 761:Drivers/ST7789/st7789.c ****     // osDelay(500);
 762:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(LBBLUE);
 763:Drivers/ST7789/st7789.c ****     // osDelay(500);
 764:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(WHITE);
 765:Drivers/ST7789/st7789.c **** 	// osDelay(500);
 766:Drivers/ST7789/st7789.c **** 
 767:Drivers/ST7789/st7789.c **** 	// ST7789_WriteString(10, 10, "Font test.", Font_16x26, GBLUE, WHITE);
 768:Drivers/ST7789/st7789.c **** 	// ST7789_WriteString(10, 50, "Hello Steve!", Font_7x10, RED, WHITE);
 769:Drivers/ST7789/st7789.c **** 	// ST7789_WriteString(10, 75, "Hello Steve!", Font_11x18, YELLOW, WHITE);
 770:Drivers/ST7789/st7789.c **** 	// ST7789_WriteString(10, 100, "Hello Steve!", Font_16x26, MAGENTA, WHITE);
 771:Drivers/ST7789/st7789.c **** 	// osDelay(1000);
 772:Drivers/ST7789/st7789.c **** 
 773:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(RED);
 774:Drivers/ST7789/st7789.c **** 	// ST7789_WriteString(10, 10, "Rect./Line.", Font_11x18, YELLOW, BLACK);
 775:Drivers/ST7789/st7789.c **** 	// ST7789_DrawRectangle(30, 30, 100, 100, WHITE);
 776:Drivers/ST7789/st7789.c **** 	// osDelay(1000);
 777:Drivers/ST7789/st7789.c **** 
 778:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(RED);
 779:Drivers/ST7789/st7789.c **** 	// ST7789_WriteString(10, 10, "Filled Rect.", Font_11x18, YELLOW, BLACK);
 780:Drivers/ST7789/st7789.c **** 	// ST7789_DrawFilledRectangle(30, 30, 50, 50, WHITE);
 781:Drivers/ST7789/st7789.c **** 	// osDelay(1000);
 782:Drivers/ST7789/st7789.c **** 
 783:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(RED);
 784:Drivers/ST7789/st7789.c **** 	// ST7789_WriteString(10, 10, "Circle.", Font_11x18, YELLOW, BLACK);
 785:Drivers/ST7789/st7789.c **** 	// ST7789_DrawCircle(60, 60, 25, WHITE);
 786:Drivers/ST7789/st7789.c **** 	// osDelay(1000);
 787:Drivers/ST7789/st7789.c **** 
ARM GAS  /tmp/cc4GmWmk.s 			page 68


 788:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(RED);
 789:Drivers/ST7789/st7789.c **** 	// ST7789_WriteString(10, 10, "Filled Cir.", Font_11x18, YELLOW, BLACK);
 790:Drivers/ST7789/st7789.c **** 	// ST7789_DrawFilledCircle(60, 60, 25, WHITE);
 791:Drivers/ST7789/st7789.c **** 	// osDelay(1000);
 792:Drivers/ST7789/st7789.c **** 
 793:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(RED);
 794:Drivers/ST7789/st7789.c **** 	// ST7789_WriteString(10, 10, "Triangle", Font_11x18, YELLOW, BLACK);
 795:Drivers/ST7789/st7789.c **** 	// ST7789_DrawTriangle(30, 30, 30, 70, 60, 40, WHITE);
 796:Drivers/ST7789/st7789.c **** 	// osDelay(1000);
 797:Drivers/ST7789/st7789.c **** 
 798:Drivers/ST7789/st7789.c **** 	// ST7789_Fill_Color(RED);
 799:Drivers/ST7789/st7789.c **** 	// ST7789_WriteString(10, 10, "Filled Tri", Font_11x18, YELLOW, BLACK);
 800:Drivers/ST7789/st7789.c **** 	// ST7789_DrawFilledTriangle(30, 30, 30, 70, 60, 40, WHITE);
 801:Drivers/ST7789/st7789.c **** 	// osDelay(1000);
 802:Drivers/ST7789/st7789.c **** 
 803:Drivers/ST7789/st7789.c **** 	//	If FLASH cannot storage anymore datas, please delete codes below.
 804:Drivers/ST7789/st7789.c **** 	ST7789_Fill_Color(WHITE);
 2908              		.loc 1 804 0
 2909 0032 2046     		mov	r0, r4
 2910 0034 FFF7FEFF 		bl	ST7789_Fill_Color
 2911              	.LVL362:
 805:Drivers/ST7789/st7789.c **** 	ST7789_DrawImage(0, 0, 240, 240, (uint16_t *)adi1);
 2912              		.loc 1 805 0
 2913 0038 084B     		ldr	r3, .L199+8
 2914 003a 0093     		str	r3, [sp]
 2915 003c F023     		movs	r3, #240
 2916 003e 1A46     		mov	r2, r3
 2917 0040 0021     		movs	r1, #0
 2918 0042 0846     		mov	r0, r1
 2919 0044 FFF7FEFF 		bl	ST7789_DrawImage
 2920              	.LVL363:
 806:Drivers/ST7789/st7789.c **** 
 807:Drivers/ST7789/st7789.c **** 	osDelay(3000);
 2921              		.loc 1 807 0
 2922 0048 40F6B830 		movw	r0, #3000
 2923 004c FFF7FEFF 		bl	osDelay
 2924              	.LVL364:
 808:Drivers/ST7789/st7789.c **** }
 2925              		.loc 1 808 0
 2926 0050 04B0     		add	sp, sp, #16
 2927              	.LCFI70:
 2928              		.cfi_def_cfa_offset 8
 2929              		@ sp needed
 2930 0052 10BD     		pop	{r4, pc}
 2931              	.L200:
 2932              		.align	2
 2933              	.L199:
 2934 0054 00000000 		.word	Font_11x18
 2935 0058 00000000 		.word	.LC3
 2936 005c 00000000 		.word	adi1
 2937              		.cfi_endproc
 2938              	.LFE375:
 2940              		.section	.rodata
 2941              		.align	2
 2942              		.set	.LANCHOR1,. + 0
 2943              	.LC0:
 2944 0000 0C       		.byte	12
ARM GAS  /tmp/cc4GmWmk.s 			page 69


 2945 0001 0C       		.byte	12
 2946 0002 00       		.byte	0
 2947 0003 33       		.byte	51
 2948 0004 33       		.byte	51
 2949 0005 000000   		.space	3
 2950              	.LC1:
 2951 0008 D0       		.byte	-48
 2952 0009 04       		.byte	4
 2953 000a 0D       		.byte	13
 2954 000b 11       		.byte	17
 2955 000c 13       		.byte	19
 2956 000d 2B       		.byte	43
 2957 000e 3F       		.byte	63
 2958 000f 54       		.byte	84
 2959 0010 4C       		.byte	76
 2960 0011 18       		.byte	24
 2961 0012 0D       		.byte	13
 2962 0013 0B       		.byte	11
 2963 0014 1F       		.byte	31
 2964 0015 23       		.byte	35
 2965 0016 0000     		.space	2
 2966              	.LC2:
 2967 0018 D0       		.byte	-48
 2968 0019 04       		.byte	4
 2969 001a 0C       		.byte	12
 2970 001b 11       		.byte	17
 2971 001c 13       		.byte	19
 2972 001d 2C       		.byte	44
 2973 001e 3F       		.byte	63
 2974 001f 44       		.byte	68
 2975 0020 51       		.byte	81
 2976 0021 2F       		.byte	47
 2977 0022 1F       		.byte	31
 2978 0023 1F       		.byte	31
 2979 0024 20       		.byte	32
 2980 0025 23       		.byte	35
 2981              		.section	.bss.buf.18137,"aw",%nobits
 2982              		.align	2
 2983              		.set	.LANCHOR2,. + 0
 2986              	buf.18137:
 2987 0000 00000000 		.space	28
 2987      00000000 
 2987      00000000 
 2987      00000000 
 2987      00000000 
 2988              		.section	.bss.disp_buf1,"aw",%nobits
 2989              		.align	2
 2992              	disp_buf1:
 2993 0000 00000000 		.space	11520
 2993      00000000 
 2993      00000000 
 2993      00000000 
 2993      00000000 
 2994              		.section	.bss.disp_buf2,"aw",%nobits
 2995              		.align	2
 2998              	disp_buf2:
 2999 0000 00000000 		.space	11520
ARM GAS  /tmp/cc4GmWmk.s 			page 70


 2999      00000000 
 2999      00000000 
 2999      00000000 
 2999      00000000 
 3000              		.section	.bss.disp_drv,"aw",%nobits
 3001              		.align	2
 3002              		.set	.LANCHOR3,. + 0
 3005              	disp_drv:
 3006 0000 00000000 		.space	80
 3006      00000000 
 3006      00000000 
 3006      00000000 
 3006      00000000 
 3007              		.section	.bss.t_saved,"aw",%nobits
 3008              		.align	2
 3009              		.set	.LANCHOR0,. + 0
 3012              	t_saved:
 3013 0000 00000000 		.space	4
 3014              		.section	.rodata.ST7789_Test.str1.4,"aMS",%progbits,1
 3015              		.align	2
 3016              	.LC3:
 3017 0000 53706565 		.ascii	"Speed Test\000"
 3017      64205465 
 3017      737400
 3018              		.text
 3019              	.Letext0:
 3020              		.file 2 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 3021              		.file 3 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 3022              		.file 4 "Drivers/ST7789/fonts.h"
 3023              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 3024              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 3025              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 3026              		.file 8 "/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
 3027              		.file 9 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 3028              		.file 10 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 3029              		.file 11 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 3030              		.file 12 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/math.h"
 3031              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 3032              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 3033              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 3034              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 3035              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_spi.h"
 3036              		.file 18 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 3037              		.file 19 "Drivers/lvgl/lvgl/src/misc/lv_types.h"
 3038              		.file 20 "Drivers/lvgl/lvgl/src/hal/../draw/../misc/../font/../misc/lv_area.h"
 3039              		.file 21 "Drivers/lvgl/lvgl/src/hal/../draw/../misc/../font/lv_font.h"
 3040              		.file 22 "Drivers/lvgl/lvgl/src/hal/../draw/../misc/lv_color.h"
 3041              		.file 23 "Drivers/lvgl/lvgl/src/hal/../draw/../misc/lv_txt.h"
 3042              		.file 24 "Drivers/lvgl/lvgl/src/hal/../draw/../misc/lv_bidi.h"
 3043              		.file 25 "Drivers/lvgl/lvgl/src/hal/../draw/../misc/lv_style.h"
 3044              		.file 26 "Drivers/lvgl/lvgl/src/hal/../draw/lv_img_buf.h"
 3045              		.file 27 "Drivers/lvgl/lvgl/src/core/lv_obj.h"
 3046              		.file 28 "Drivers/lvgl/lvgl/src/hal/../draw/lv_draw_rect.h"
 3047              		.file 29 "Drivers/lvgl/lvgl/src/hal/../draw/lv_draw_label.h"
 3048              		.file 30 "Drivers/lvgl/lvgl/src/hal/../draw/lv_draw_img.h"
 3049              		.file 31 "Drivers/lvgl/lvgl/src/hal/../draw/lv_draw_line.h"
 3050              		.file 32 "Drivers/lvgl/lvgl/src/hal/../draw/lv_draw_arc.h"
ARM GAS  /tmp/cc4GmWmk.s 			page 71


 3051              		.file 33 "Drivers/lvgl/lvgl/src/hal/../draw/lv_draw_layer.h"
 3052              		.file 34 "Drivers/lvgl/lvgl/src/hal/../draw/lv_draw.h"
 3053              		.file 35 "Drivers/lvgl/lvgl/src/hal/../misc/lv_ll.h"
 3054              		.file 36 "Drivers/lvgl/lvgl/src/hal/lv_hal_disp.h"
 3055              		.file 37 "Drivers/lvgl/lvgl/src/core/lv_group.h"
 3056              		.file 38 "Drivers/lvgl/lvgl/src/core/lv_obj_scroll.h"
 3057              		.file 39 "Drivers/lvgl/lvgl/src/core/lv_obj_style.h"
 3058              		.file 40 "Drivers/lvgl/lvgl/src/core/lv_obj_class.h"
 3059              		.file 41 "Drivers/lvgl/lvgl/src/core/lv_event.h"
 3060              		.file 42 "Drivers/lvgl/lvgl/src/widgets/lv_arc.h"
 3061              		.file 43 "Drivers/lvgl/lvgl/src/widgets/lv_btn.h"
 3062              		.file 44 "Drivers/lvgl/lvgl/src/widgets/lv_img.h"
 3063              		.file 45 "Drivers/lvgl/lvgl/src/widgets/lv_label.h"
 3064              		.file 46 "Drivers/lvgl/lvgl/src/widgets/lv_line.h"
 3065              		.file 47 "Drivers/lvgl/lvgl/src/widgets/lv_table.h"
 3066              		.file 48 "Drivers/lvgl/lvgl/src/widgets/lv_checkbox.h"
 3067              		.file 49 "Drivers/lvgl/lvgl/src/widgets/lv_bar.h"
 3068              		.file 50 "Drivers/lvgl/lvgl/src/widgets/lv_slider.h"
 3069              		.file 51 "Drivers/lvgl/lvgl/src/widgets/lv_btnmatrix.h"
 3070              		.file 52 "Drivers/lvgl/lvgl/src/widgets/lv_dropdown.h"
 3071              		.file 53 "Drivers/lvgl/lvgl/src/widgets/lv_roller.h"
 3072              		.file 54 "Drivers/lvgl/lvgl/src/widgets/lv_textarea.h"
 3073              		.file 55 "Drivers/lvgl/lvgl/src/widgets/lv_canvas.h"
 3074              		.file 56 "Drivers/lvgl/lvgl/src/widgets/lv_switch.h"
 3075              		.file 57 "Drivers/lvgl/lvgl/src/extra/layouts/flex/lv_flex.h"
 3076              		.file 58 "Drivers/lvgl/lvgl/src/extra/layouts/grid/lv_grid.h"
 3077              		.file 59 "Drivers/lvgl/lvgl/src/extra/widgets/animimg/lv_animimg.h"
 3078              		.file 60 "Drivers/lvgl/lvgl/src/extra/widgets/calendar/lv_calendar.h"
 3079              		.file 61 "Drivers/lvgl/lvgl/src/extra/widgets/calendar/lv_calendar_header_arrow.h"
 3080              		.file 62 "Drivers/lvgl/lvgl/src/extra/widgets/calendar/lv_calendar_header_dropdown.h"
 3081              		.file 63 "Drivers/lvgl/lvgl/src/extra/widgets/chart/lv_chart.h"
 3082              		.file 64 "Drivers/lvgl/lvgl/src/extra/widgets/keyboard/lv_keyboard.h"
 3083              		.file 65 "Drivers/lvgl/lvgl/src/extra/widgets/list/lv_list.h"
 3084              		.file 66 "Drivers/lvgl/lvgl/src/extra/widgets/menu/lv_menu.h"
 3085              		.file 67 "Drivers/lvgl/lvgl/src/extra/widgets/msgbox/lv_msgbox.h"
 3086              		.file 68 "Drivers/lvgl/lvgl/src/extra/widgets/meter/lv_meter.h"
 3087              		.file 69 "Drivers/lvgl/lvgl/src/extra/widgets/spinbox/lv_spinbox.h"
 3088              		.file 70 "Drivers/lvgl/lvgl/src/extra/widgets/spinner/lv_spinner.h"
 3089              		.file 71 "Drivers/lvgl/lvgl/src/extra/widgets/tabview/lv_tabview.h"
 3090              		.file 72 "Drivers/lvgl/lvgl/src/extra/widgets/tileview/lv_tileview.h"
 3091              		.file 73 "Drivers/lvgl/lvgl/src/extra/widgets/win/lv_win.h"
 3092              		.file 74 "Drivers/lvgl/lvgl/src/extra/widgets/colorwheel/lv_colorwheel.h"
 3093              		.file 75 "Drivers/lvgl/lvgl/src/extra/widgets/led/lv_led.h"
 3094              		.file 76 "Drivers/lvgl/lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h"
 3095              		.file 77 "Drivers/lvgl/lvgl/src/extra/widgets/span/lv_span.h"
 3096              		.file 78 "Drivers/ST7789/st7789.h"
 3097              		.file 79 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
ARM GAS  /tmp/cc4GmWmk.s 			page 72


DEFINED SYMBOLS
                            *ABS*:0000000000000000 st7789.c
     /tmp/cc4GmWmk.s:17     .text.monitor_cb:0000000000000000 $t
     /tmp/cc4GmWmk.s:24     .text.monitor_cb:0000000000000000 monitor_cb
     /tmp/cc4GmWmk.s:41     .text.monitor_cb:0000000000000008 $d
     /tmp/cc4GmWmk.s:46     .text.ST7789_WriteCommand:0000000000000000 $t
     /tmp/cc4GmWmk.s:52     .text.ST7789_WriteCommand:0000000000000000 ST7789_WriteCommand
     /tmp/cc4GmWmk.s:106    .text.ST7789_WriteCommand:000000000000003c $d
     /tmp/cc4GmWmk.s:112    .text.ST7789_WriteSmallData:0000000000000000 $t
     /tmp/cc4GmWmk.s:118    .text.ST7789_WriteSmallData:0000000000000000 ST7789_WriteSmallData
     /tmp/cc4GmWmk.s:172    .text.ST7789_WriteSmallData:000000000000003c $d
     /tmp/cc4GmWmk.s:178    .text.ST7789_WriteData:0000000000000000 $t
     /tmp/cc4GmWmk.s:184    .text.ST7789_WriteData:0000000000000000 ST7789_WriteData
     /tmp/cc4GmWmk.s:256    .text.ST7789_WriteData:000000000000004c $d
     /tmp/cc4GmWmk.s:262    .text.ST7789_SetAddressWindow:0000000000000000 $t
     /tmp/cc4GmWmk.s:268    .text.ST7789_SetAddressWindow:0000000000000000 ST7789_SetAddressWindow
     /tmp/cc4GmWmk.s:357    .text.ST7789_SetAddressWindow:000000000000007c $d
     /tmp/cc4GmWmk.s:362    .text.ST7789_SetRotation:0000000000000000 $t
     /tmp/cc4GmWmk.s:369    .text.ST7789_SetRotation:0000000000000000 ST7789_SetRotation
     /tmp/cc4GmWmk.s:392    .text.ST7789_SetRotation:0000000000000012 $d
     /tmp/cc4GmWmk.s:396    .text.ST7789_SetRotation:0000000000000016 $t
     /tmp/cc4GmWmk.s:430    .text.ST7789_Fill_Color:0000000000000000 $t
     /tmp/cc4GmWmk.s:437    .text.ST7789_Fill_Color:0000000000000000 ST7789_Fill_Color
     /tmp/cc4GmWmk.s:523    .text.ST7789_Fill_Color:0000000000000054 $d
     /tmp/cc4GmWmk.s:528    .text.ST7789_Init:0000000000000000 $t
     /tmp/cc4GmWmk.s:535    .text.ST7789_Init:0000000000000000 ST7789_Init
     /tmp/cc4GmWmk.s:745    .text.ST7789_Init:0000000000000128 $d
     /tmp/cc4GmWmk.s:751    .text.Display_init:0000000000000000 $t
     /tmp/cc4GmWmk.s:758    .text.Display_init:0000000000000000 Display_init
     /tmp/cc4GmWmk.s:817    .text.Display_init:0000000000000040 $d
     /tmp/cc4GmWmk.s:2998   .bss.disp_buf2:0000000000000000 disp_buf2
     /tmp/cc4GmWmk.s:2992   .bss.disp_buf1:0000000000000000 disp_buf1
     /tmp/cc4GmWmk.s:907    .text.tft_flush:0000000000000000 tft_flush
     /tmp/cc4GmWmk.s:827    .text.ST7789_DrawPixel:0000000000000000 $t
     /tmp/cc4GmWmk.s:834    .text.ST7789_DrawPixel:0000000000000000 ST7789_DrawPixel
     /tmp/cc4GmWmk.s:895    .text.ST7789_DrawPixel:0000000000000044 $d
     /tmp/cc4GmWmk.s:900    .text.tft_flush:0000000000000000 $t
     /tmp/cc4GmWmk.s:1004   .text.ST7789_Fill:0000000000000000 $t
     /tmp/cc4GmWmk.s:1011   .text.ST7789_Fill:0000000000000000 ST7789_Fill
     /tmp/cc4GmWmk.s:1117   .text.ST7789_Fill:000000000000006c $d
     /tmp/cc4GmWmk.s:1122   .text.ST7789_DrawPixel_4px:0000000000000000 $t
     /tmp/cc4GmWmk.s:1129   .text.ST7789_DrawPixel_4px:0000000000000000 ST7789_DrawPixel_4px
     /tmp/cc4GmWmk.s:1205   .text.ST7789_DrawPixel_4px:0000000000000050 $d
     /tmp/cc4GmWmk.s:1210   .text.ST7789_DrawLine:0000000000000000 $t
     /tmp/cc4GmWmk.s:1217   .text.ST7789_DrawLine:0000000000000000 ST7789_DrawLine
     /tmp/cc4GmWmk.s:1380   .text.ST7789_DrawRectangle:0000000000000000 $t
     /tmp/cc4GmWmk.s:1387   .text.ST7789_DrawRectangle:0000000000000000 ST7789_DrawRectangle
     /tmp/cc4GmWmk.s:1470   .text.ST7789_DrawRectangle:0000000000000068 $d
     /tmp/cc4GmWmk.s:1475   .text.ST7789_DrawCircle:0000000000000000 $t
     /tmp/cc4GmWmk.s:1482   .text.ST7789_DrawCircle:0000000000000000 ST7789_DrawCircle
     /tmp/cc4GmWmk.s:1697   .text.ST7789_DrawCircle:0000000000000148 $d
     /tmp/cc4GmWmk.s:1702   .text.ST7789_DrawImage:0000000000000000 $t
     /tmp/cc4GmWmk.s:1709   .text.ST7789_DrawImage:0000000000000000 ST7789_DrawImage
     /tmp/cc4GmWmk.s:1801   .text.ST7789_DrawImage:0000000000000068 $d
     /tmp/cc4GmWmk.s:1806   .text.ST7789_InvertColors:0000000000000000 $t
     /tmp/cc4GmWmk.s:1813   .text.ST7789_InvertColors:0000000000000000 ST7789_InvertColors
     /tmp/cc4GmWmk.s:1855   .text.ST7789_InvertColors:0000000000000028 $d
ARM GAS  /tmp/cc4GmWmk.s 			page 73


     /tmp/cc4GmWmk.s:1860   .text.ST7789_WriteChar:0000000000000000 $t
     /tmp/cc4GmWmk.s:1867   .text.ST7789_WriteChar:0000000000000000 ST7789_WriteChar
     /tmp/cc4GmWmk.s:2010   .text.ST7789_WriteChar:00000000000000b4 $d
     /tmp/cc4GmWmk.s:2015   .text.ST7789_WriteString:0000000000000000 $t
     /tmp/cc4GmWmk.s:2022   .text.ST7789_WriteString:0000000000000000 ST7789_WriteString
     /tmp/cc4GmWmk.s:2147   .text.ST7789_WriteString:0000000000000080 $d
     /tmp/cc4GmWmk.s:2152   .text.ST7789_DrawFilledRectangle:0000000000000000 $t
     /tmp/cc4GmWmk.s:2159   .text.ST7789_DrawFilledRectangle:0000000000000000 ST7789_DrawFilledRectangle
     /tmp/cc4GmWmk.s:2258   .text.ST7789_DrawFilledRectangle:0000000000000074 $d
     /tmp/cc4GmWmk.s:2263   .text.ST7789_DrawTriangle:0000000000000000 $t
     /tmp/cc4GmWmk.s:2270   .text.ST7789_DrawTriangle:0000000000000000 ST7789_DrawTriangle
     /tmp/cc4GmWmk.s:2349   .text.ST7789_DrawTriangle:0000000000000060 $d
     /tmp/cc4GmWmk.s:2354   .text.ST7789_DrawFilledTriangle:0000000000000000 $t
     /tmp/cc4GmWmk.s:2361   .text.ST7789_DrawFilledTriangle:0000000000000000 ST7789_DrawFilledTriangle
     /tmp/cc4GmWmk.s:2591   .text.ST7789_DrawFilledTriangle:0000000000000118 $d
     /tmp/cc4GmWmk.s:2596   .text.ST7789_DrawFilledCircle:0000000000000000 $t
     /tmp/cc4GmWmk.s:2603   .text.ST7789_DrawFilledCircle:0000000000000000 ST7789_DrawFilledCircle
     /tmp/cc4GmWmk.s:2806   .text.ST7789_DrawFilledCircle:0000000000000138 $d
     /tmp/cc4GmWmk.s:2811   .text.ST7789_TearEffect:0000000000000000 $t
     /tmp/cc4GmWmk.s:2818   .text.ST7789_TearEffect:0000000000000000 ST7789_TearEffect
     /tmp/cc4GmWmk.s:2860   .text.ST7789_TearEffect:0000000000000028 $d
     /tmp/cc4GmWmk.s:2865   .text.ST7789_Test:0000000000000000 $t
     /tmp/cc4GmWmk.s:2872   .text.ST7789_Test:0000000000000000 ST7789_Test
     /tmp/cc4GmWmk.s:2934   .text.ST7789_Test:0000000000000054 $d
     /tmp/cc4GmWmk.s:2941   .rodata:0000000000000000 $d
     /tmp/cc4GmWmk.s:2982   .bss.buf.18137:0000000000000000 $d
     /tmp/cc4GmWmk.s:2986   .bss.buf.18137:0000000000000000 buf.18137
     /tmp/cc4GmWmk.s:2989   .bss.disp_buf1:0000000000000000 $d
     /tmp/cc4GmWmk.s:2995   .bss.disp_buf2:0000000000000000 $d
     /tmp/cc4GmWmk.s:3001   .bss.disp_drv:0000000000000000 $d
     /tmp/cc4GmWmk.s:3005   .bss.disp_drv:0000000000000000 disp_drv
     /tmp/cc4GmWmk.s:3008   .bss.t_saved:0000000000000000 $d
     /tmp/cc4GmWmk.s:3012   .bss.t_saved:0000000000000000 t_saved
     /tmp/cc4GmWmk.s:3015   .rodata.ST7789_Test.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_SPI_Transmit
hspi1
osDelay
lv_disp_draw_buf_init
lv_disp_drv_init
lv_disp_drv_register
lv_disp_flush_ready
Font_11x18
adi1
