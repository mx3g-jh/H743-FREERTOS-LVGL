ARM GAS  /tmp/ccfLLF9p.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"lv_draw_sw_gradient.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.compute_key,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	compute_key:
  24              	.LFB56:
  25              		.file 1 "Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c"
   1:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** /**
   2:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  * @file lv_draw_sw_gradient.c
   3:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *
   4:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  */
   5:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
   6:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** /*********************
   7:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *      INCLUDES
   8:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *********************/
   9:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #include "lv_draw_sw_gradient.h"
  10:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #include "../../misc/lv_gc.h"
  11:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #include "../../misc/lv_types.h"
  12:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  13:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** /*********************
  14:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *      DEFINES
  15:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *********************/
  16:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
  17:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     #define GRAD_CM(r,g,b) LV_COLOR_MAKE32(r,g,b)
  18:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     #define GRAD_CONV(t, x) t.full = lv_color_to32(x)
  19:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #else
  20:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     #define GRAD_CM(r,g,b) LV_COLOR_MAKE(r,g,b)
  21:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     #define GRAD_CONV(t, x) t = x
  22:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
  23:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  24:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #undef ALIGN
  25:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if defined(LV_ARCH_64)
  26:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     #define ALIGN(X)    (((X) + 7) & ~7)
  27:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #else
  28:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     #define ALIGN(X)    (((X) + 3) & ~3)
  29:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
  30:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  31:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if LV_GRAD_CACHE_DEF_SIZE != 0 && LV_GRAD_CACHE_DEF_SIZE < 256
  32:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     #error "LV_GRAD_CACHE_DEF_SIZE is too small"
  33:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
ARM GAS  /tmp/ccfLLF9p.s 			page 2


  34:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  35:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** /**********************
  36:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *  STATIC PROTOTYPES
  37:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  **********************/
  38:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_grad_t * next_in_cache(lv_grad_t * item);
  39:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  40:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** typedef lv_res_t (*op_cache_t)(lv_grad_t * c, void * ctx);
  41:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_res_t iterate_cache(op_cache_t func, void * ctx, lv_grad_t ** out);
  42:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static size_t get_cache_item_size(lv_grad_t * c);
  43:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_grad_t * allocate_item(const lv_grad_dsc_t * g, lv_coord_t w, lv_coord_t h);
  44:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_res_t find_oldest_item_life(lv_grad_t * c, void * ctx);
  45:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_res_t kill_oldest_item(lv_grad_t * c, void * ctx);
  46:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_res_t find_item(lv_grad_t * c, void * ctx);
  47:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static void free_item(lv_grad_t * c);
  48:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static  uint32_t compute_key(const lv_grad_dsc_t * g, lv_coord_t w, lv_coord_t h);
  49:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  50:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  51:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** /**********************
  52:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *   STATIC VARIABLE
  53:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  **********************/
  54:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static size_t    grad_cache_size = 0;
  55:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static uint8_t * grad_cache_end = 0;
  56:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  57:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** /**********************
  58:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *   STATIC FUNCTIONS
  59:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  **********************/
  60:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** union void_cast {
  61:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     const void * ptr;
  62:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     const uint32_t value;
  63:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** };
  64:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  65:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static uint32_t compute_key(const lv_grad_dsc_t * g, lv_coord_t size, lv_coord_t w)
  66:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
  26              		.loc 1 66 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  67:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     union void_cast v;
  68:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     v.ptr = g;
  69:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return (v.value ^ size ^ (w >> 1)); /*Yes, this is correct, it's like a hash that changes if th
  32              		.loc 1 69 0
  33 0000 4840     		eors	r0, r0, r1
  34              	.LVL1:
  70:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
  35              		.loc 1 70 0
  36 0002 80EA6200 		eor	r0, r0, r2, asr #1
  37 0006 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE56:
  41              		.section	.text.get_cache_item_size,"ax",%progbits
  42              		.align	1
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv5-d16
ARM GAS  /tmp/ccfLLF9p.s 			page 3


  48              	get_cache_item_size:
  49              	.LFB57:
  71:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  72:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static size_t get_cache_item_size(lv_grad_t * c)
  73:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
  50              		.loc 1 73 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.LVL2:
  74:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t s = ALIGN(sizeof(*c)) + ALIGN(c->alloc_size * sizeof(lv_color_t));
  56              		.loc 1 74 0
  57 0000 B0F90C00 		ldrsh	r0, [r0, #12]
  58              	.LVL3:
  59 0004 4000     		lsls	r0, r0, #1
  60 0006 0330     		adds	r0, r0, #3
  61 0008 20F00300 		bic	r0, r0, #3
  62              	.LVL4:
  75:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
  76:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     s += ALIGN(c->size * sizeof(lv_color32_t));
  77:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if LV_DITHER_ERROR_DIFFUSION == 1
  78:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     s += ALIGN(c->w * sizeof(lv_scolor24_t));
  79:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
  80:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
  81:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return s;
  82:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
  63              		.loc 1 82 0
  64 000c 1030     		adds	r0, r0, #16
  65              	.LVL5:
  66 000e 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE57:
  70              		.section	.text.next_in_cache,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv5-d16
  77              	next_in_cache:
  78              	.LFB58:
  83:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  84:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_grad_t * next_in_cache(lv_grad_t * item)
  85:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
  79              		.loc 1 85 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              	.LVL6:
  86:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(grad_cache_size == 0) return NULL;
  84              		.loc 1 86 0
  85 0000 0A4B     		ldr	r3, .L12
  86 0002 1B68     		ldr	r3, [r3]
  87 0004 7BB1     		cbz	r3, .L6
  87:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  88:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(item == NULL)
  88              		.loc 1 88 0
ARM GAS  /tmp/ccfLLF9p.s 			page 4


  89 0006 48B1     		cbz	r0, .L10
  85:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(grad_cache_size == 0) return NULL;
  90              		.loc 1 85 0
  91 0008 10B5     		push	{r4, lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96 000a 0446     		mov	r4, r0
  89:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return (lv_grad_t *)LV_GC_ROOT(_lv_grad_cache_mem);
  90:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  91:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t s = get_cache_item_size(item);
  97              		.loc 1 91 0
  98 000c FFF7FEFF 		bl	get_cache_item_size
  99              	.LVL7:
  92:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /*Compute the size for this cache item*/
  93:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if((uint8_t *)item + s >= grad_cache_end) return NULL;
 100              		.loc 1 93 0
 101 0010 2044     		add	r0, r0, r4
 102              	.LVL8:
 103 0012 074B     		ldr	r3, .L12+4
 104 0014 1B68     		ldr	r3, [r3]
 105 0016 9842     		cmp	r0, r3
 106 0018 03D2     		bcs	.L11
 107              	.L3:
  94:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     else return (lv_grad_t *)((uint8_t *)item + s);
  95:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 108              		.loc 1 95 0
 109 001a 10BD     		pop	{r4, pc}
 110              	.LVL9:
 111              	.L10:
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 0
 114              		.cfi_restore 4
 115              		.cfi_restore 14
  89:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 116              		.loc 1 89 0
 117 001c 054B     		ldr	r3, .L12+8
 118 001e 1868     		ldr	r0, [r3]
 119              	.LVL10:
 120 0020 7047     		bx	lr
 121              	.LVL11:
 122              	.L11:
 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 4, -8
 126              		.cfi_offset 14, -4
  93:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     else return (lv_grad_t *)((uint8_t *)item + s);
 127              		.loc 1 93 0
 128 0022 0020     		movs	r0, #0
 129 0024 F9E7     		b	.L3
 130              	.LVL12:
 131              	.L6:
 132              	.LCFI3:
 133              		.cfi_def_cfa_offset 0
 134              		.cfi_restore 4
 135              		.cfi_restore 14
ARM GAS  /tmp/ccfLLF9p.s 			page 5


  86:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 136              		.loc 1 86 0
 137 0026 0020     		movs	r0, #0
 138              	.LVL13:
 139              		.loc 1 95 0
 140 0028 7047     		bx	lr
 141              	.L13:
 142 002a 00BF     		.align	2
 143              	.L12:
 144 002c 00000000 		.word	.LANCHOR0
 145 0030 00000000 		.word	.LANCHOR1
 146 0034 00000000 		.word	_lv_grad_cache_mem
 147              		.cfi_endproc
 148              	.LFE58:
 150              		.section	.text.iterate_cache,"ax",%progbits
 151              		.align	1
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu fpv5-d16
 157              	iterate_cache:
 158              	.LFB59:
  96:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  97:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_res_t iterate_cache(op_cache_t func, void * ctx, lv_grad_t ** out)
  98:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 159              		.loc 1 98 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              	.LVL14:
 164 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 165              	.LCFI4:
 166              		.cfi_def_cfa_offset 24
 167              		.cfi_offset 3, -24
 168              		.cfi_offset 4, -20
 169              		.cfi_offset 5, -16
 170              		.cfi_offset 6, -12
 171              		.cfi_offset 7, -8
 172              		.cfi_offset 14, -4
 173 0002 0646     		mov	r6, r0
 174 0004 0D46     		mov	r5, r1
 175 0006 1746     		mov	r7, r2
  99:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_grad_t * first = next_in_cache(NULL);
 176              		.loc 1 99 0
 177 0008 0020     		movs	r0, #0
 178              	.LVL15:
 179 000a FFF7FEFF 		bl	next_in_cache
 180              	.LVL16:
 181 000e 0446     		mov	r4, r0
 182              	.LVL17:
 183              	.L15:
 100:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     while(first != NULL && first->life) {
 184              		.loc 1 100 0
 185 0010 94B1     		cbz	r4, .L19
 186              		.loc 1 100 0 is_stmt 0 discriminator 1
 187 0012 6368     		ldr	r3, [r4, #4]
 188 0014 33F04043 		bics	r3, r3, #-1073741824
ARM GAS  /tmp/ccfLLF9p.s 			page 6


 189 0018 0CD0     		beq	.L21
 101:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         if((*func)(first, ctx) == LV_RES_OK) {
 190              		.loc 1 101 0 is_stmt 1
 191 001a 2946     		mov	r1, r5
 192 001c 2046     		mov	r0, r4
 193 001e B047     		blx	r6
 194              	.LVL18:
 195 0020 0128     		cmp	r0, #1
 196 0022 04D0     		beq	.L22
 102:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             if(out != NULL) *out = first;
 103:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             return LV_RES_OK;
 104:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 105:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         first = next_in_cache(first);
 197              		.loc 1 105 0
 198 0024 2046     		mov	r0, r4
 199 0026 FFF7FEFF 		bl	next_in_cache
 200              	.LVL19:
 201 002a 0446     		mov	r4, r0
 202              	.LVL20:
 203 002c F0E7     		b	.L15
 204              	.LVL21:
 205              	.L22:
 102:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             if(out != NULL) *out = first;
 206              		.loc 1 102 0
 207 002e 27B1     		cbz	r7, .L17
 102:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             if(out != NULL) *out = first;
 208              		.loc 1 102 0 is_stmt 0 discriminator 1
 209 0030 3C60     		str	r4, [r7]
 210 0032 02E0     		b	.L17
 211              	.LVL22:
 212              	.L21:
 106:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 107:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return LV_RES_INV;
 213              		.loc 1 107 0 is_stmt 1
 214 0034 0020     		movs	r0, #0
 215              	.LVL23:
 216 0036 00E0     		b	.L17
 217              	.LVL24:
 218              	.L19:
 219 0038 0020     		movs	r0, #0
 220              	.LVL25:
 221              	.L17:
 108:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 222              		.loc 1 108 0
 223 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 224              		.cfi_endproc
 225              	.LFE59:
 227              		.section	.text.find_oldest_item_life,"ax",%progbits
 228              		.align	1
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu fpv5-d16
 234              	find_oldest_item_life:
 235              	.LFB60:
 109:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 110:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_res_t find_oldest_item_life(lv_grad_t * c, void * ctx)
ARM GAS  /tmp/ccfLLF9p.s 			page 7


 111:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 236              		.loc 1 111 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 241              	.LVL26:
 112:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t * min_life = (uint32_t *)ctx;
 113:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(c->life < *min_life) *min_life = c->life;
 242              		.loc 1 113 0
 243 0000 4368     		ldr	r3, [r0, #4]
 244 0002 C3F31D03 		ubfx	r3, r3, #0, #30
 245 0006 0A68     		ldr	r2, [r1]
 246 0008 9342     		cmp	r3, r2
 247 000a 00D2     		bcs	.L24
 248              		.loc 1 113 0 is_stmt 0 discriminator 1
 249 000c 0B60     		str	r3, [r1]
 250              	.L24:
 114:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return LV_RES_INV;
 115:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 251              		.loc 1 115 0 is_stmt 1
 252 000e 0020     		movs	r0, #0
 253              	.LVL27:
 254 0010 7047     		bx	lr
 255              		.cfi_endproc
 256              	.LFE60:
 258              		.section	.text.find_item,"ax",%progbits
 259              		.align	1
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu fpv5-d16
 265              	find_item:
 266              	.LFB63:
 116:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 117:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static void free_item(lv_grad_t * c)
 118:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 119:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t size = get_cache_item_size(c);
 120:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t next_items_size = (size_t)(grad_cache_end - (uint8_t *)c) - size;
 121:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     grad_cache_end -= size;
 122:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(next_items_size) {
 123:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         uint8_t * old = (uint8_t *)c;
 124:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         lv_memcpy(c, ((uint8_t *)c) + size, next_items_size);
 125:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         /* Then need to fix all internal pointers too */
 126:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         while((uint8_t *)c != grad_cache_end) {
 127:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             c->map = (lv_color_t *)(((uint8_t *)c->map) - size);
 128:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 129:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             c->hmap = (lv_color32_t *)(((uint8_t *)c->hmap) - size);
 130:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if LV_DITHER_ERROR_DIFFUSION == 1
 131:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             c->error_acc = (lv_scolor24_t *)(((uint8_t *)c->error_acc) - size);
 132:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 133:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 134:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             c = (lv_grad_t *)(((uint8_t *)c) + get_cache_item_size(c));
 135:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 136:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         lv_memset_00(old + next_items_size, size);
 137:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 138:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
ARM GAS  /tmp/ccfLLF9p.s 			page 8


 139:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 140:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_res_t kill_oldest_item(lv_grad_t * c, void * ctx)
 141:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 142:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t * min_life = (uint32_t *)ctx;
 143:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(c->life == *min_life) {
 144:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         /*Found, let's kill it*/
 145:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         free_item(c);
 146:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return LV_RES_OK;
 147:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 148:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return LV_RES_INV;
 149:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 150:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 151:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_res_t find_item(lv_grad_t * c, void * ctx)
 152:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 267              		.loc 1 152 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 272              	.LVL28:
 153:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t * k = (uint32_t *)ctx;
 154:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(c->key == *k) return LV_RES_OK;
 273              		.loc 1 154 0
 274 0000 0268     		ldr	r2, [r0]
 275 0002 0B68     		ldr	r3, [r1]
 276 0004 9A42     		cmp	r2, r3
 277 0006 01D0     		beq	.L28
 155:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return LV_RES_INV;
 278              		.loc 1 155 0
 279 0008 0020     		movs	r0, #0
 280              	.LVL29:
 156:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 281              		.loc 1 156 0
 282 000a 7047     		bx	lr
 283              	.LVL30:
 284              	.L28:
 154:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return LV_RES_INV;
 285              		.loc 1 154 0
 286 000c 0120     		movs	r0, #1
 287              	.LVL31:
 288 000e 7047     		bx	lr
 289              		.cfi_endproc
 290              	.LFE63:
 292              		.section	.text.allocate_item,"ax",%progbits
 293              		.align	1
 294              		.syntax unified
 295              		.thumb
 296              		.thumb_func
 297              		.fpu fpv5-d16
 299              	allocate_item:
 300              	.LFB64:
 157:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 158:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_grad_t * allocate_item(const lv_grad_dsc_t * g, lv_coord_t w, lv_coord_t h)
 159:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 301              		.loc 1 159 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccfLLF9p.s 			page 9


 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              	.LVL32:
 306 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 307              	.LCFI5:
 308              		.cfi_def_cfa_offset 28
 309              		.cfi_offset 4, -28
 310              		.cfi_offset 5, -24
 311              		.cfi_offset 6, -20
 312              		.cfi_offset 7, -16
 313              		.cfi_offset 8, -12
 314              		.cfi_offset 9, -8
 315              		.cfi_offset 14, -4
 316 0004 83B0     		sub	sp, sp, #12
 317              	.LCFI6:
 318              		.cfi_def_cfa_offset 40
 319 0006 0746     		mov	r7, r0
 320 0008 0E46     		mov	r6, r1
 160:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_coord_t size = g->dir == LV_GRAD_DIR_HOR ? w : h;
 321              		.loc 1 160 0
 322 000a 437A     		ldrb	r3, [r0, #9]	@ zero_extendqisi2
 323 000c 03F00703 		and	r3, r3, #7
 324 0010 022B     		cmp	r3, #2
 325 0012 42D0     		beq	.L43
 326 0014 9046     		mov	r8, r2
 327              	.L30:
 328              	.LVL33:
 161:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_coord_t map_size = LV_MAX(w, h); /* The map is being used horizontally (width) unless
 329              		.loc 1 161 0 discriminator 4
 330 0016 B242     		cmp	r2, r6
 331 0018 B8BF     		it	lt
 332 001a 3246     		movlt	r2, r6
 333              	.LVL34:
 334 001c 1546     		mov	r5, r2
 335              	.LVL35:
 162:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                                            no dithering is selected where it's used vertically */
 163:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 164:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t req_size = ALIGN(sizeof(lv_grad_t)) + ALIGN(map_size * sizeof(lv_color_t));
 336              		.loc 1 164 0 discriminator 4
 337 001e 5400     		lsls	r4, r2, #1
 338 0020 0334     		adds	r4, r4, #3
 339 0022 24F00304 		bic	r4, r4, #3
 340 0026 1034     		adds	r4, r4, #16
 341              	.LVL36:
 165:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 166:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     req_size += ALIGN(size * sizeof(lv_color32_t));
 167:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if LV_DITHER_ERROR_DIFFUSION == 1
 168:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     req_size += ALIGN(w * sizeof(lv_scolor24_t));
 169:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 170:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 171:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 172:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t act_size = (size_t)(grad_cache_end - LV_GC_ROOT(_lv_grad_cache_mem));
 342              		.loc 1 172 0 discriminator 4
 343 0028 384B     		ldr	r3, .L45
 344 002a D3F80090 		ldr	r9, [r3]
 345 002e 384B     		ldr	r3, .L45+4
 346 0030 1B68     		ldr	r3, [r3]
 347 0032 A9EB0303 		sub	r3, r9, r3
ARM GAS  /tmp/ccfLLF9p.s 			page 10


 348              	.LVL37:
 173:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_grad_t * item = NULL;
 174:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(req_size + act_size < grad_cache_size) {
 349              		.loc 1 174 0 discriminator 4
 350 0036 E118     		adds	r1, r4, r3
 351              	.LVL38:
 352 0038 364A     		ldr	r2, .L45+8
 353              	.LVL39:
 354 003a 1268     		ldr	r2, [r2]
 355 003c 9142     		cmp	r1, r2
 356 003e 2ED2     		bcs	.L31
 357              	.LVL40:
 175:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item = (lv_grad_t *)grad_cache_end;
 176:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->not_cached = 0;
 358              		.loc 1 176 0
 359 0040 99F80730 		ldrb	r3, [r9, #7]	@ zero_extendqisi2
 360              	.LVL41:
 361 0044 6FF3C713 		bfc	r3, #7, #1
 362 0048 89F80730 		strb	r3, [r9, #7]
 363              	.LVL42:
 364              	.L32:
 177:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 178:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     else {
 179:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         /*Need to evict items from cache until we find enough space to allocate this one */
 180:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         if(req_size <= grad_cache_size) {
 181:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             while(act_size + req_size > grad_cache_size) {
 182:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 uint32_t oldest_life = UINT32_MAX;
 183:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 iterate_cache(&find_oldest_item_life, &oldest_life, NULL);
 184:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 iterate_cache(&kill_oldest_item, &oldest_life, NULL);
 185:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 act_size = (size_t)(grad_cache_end - LV_GC_ROOT(_lv_grad_cache_mem));
 186:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             }
 187:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             item = (lv_grad_t *)grad_cache_end;
 188:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             item->not_cached = 0;
 189:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 190:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         else {
 191:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             /*The cache is too small. Allocate the item manually and free it later.*/
 192:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             item = lv_mem_alloc(req_size);
 193:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             LV_ASSERT_MALLOC(item);
 194:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             if(item == NULL) return NULL;
 195:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             item->not_cached = 1;
 196:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 197:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 198:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 199:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     item->key = compute_key(g, size, w);
 365              		.loc 1 199 0
 366 004c 3246     		mov	r2, r6
 367 004e 4146     		mov	r1, r8
 368 0050 3846     		mov	r0, r7
 369 0052 FFF7FEFF 		bl	compute_key
 370              	.LVL43:
 371 0056 C9F80000 		str	r0, [r9]
 200:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     item->life = 1;
 372              		.loc 1 200 0
 373 005a D9F80430 		ldr	r3, [r9, #4]
 374 005e 0122     		movs	r2, #1
 375 0060 62F31D03 		bfi	r3, r2, #0, #30
 376 0064 C9F80430 		str	r3, [r9, #4]
ARM GAS  /tmp/ccfLLF9p.s 			page 11


 201:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     item->filled = 0;
 377              		.loc 1 201 0
 378 0068 C3F30763 		ubfx	r3, r3, #24, #8
 379 006c 6FF38613 		bfc	r3, #6, #1
 380 0070 89F80730 		strb	r3, [r9, #7]
 202:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     item->alloc_size = map_size;
 381              		.loc 1 202 0
 382 0074 A9F80C50 		strh	r5, [r9, #12]	@ movhi
 203:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     item->size = size;
 383              		.loc 1 203 0
 384 0078 A9F80E80 		strh	r8, [r9, #14]	@ movhi
 204:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(item->not_cached) {
 385              		.loc 1 204 0
 386 007c 13F0800F 		tst	r3, #128
 387 0080 3ED1     		bne	.L44
 205:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         uint8_t * p = (uint8_t *)item;
 206:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map = (lv_color_t *)(p + ALIGN(sizeof(*item)));
 207:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 208:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->hmap = (lv_color32_t *)(p + ALIGN(sizeof(*item)) + ALIGN(map_size * sizeof(lv_color_t
 209:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if LV_DITHER_ERROR_DIFFUSION == 1
 210:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->error_acc = (lv_scolor24_t *)(p + ALIGN(sizeof(*item)) + ALIGN(size * sizeof(lv_grad_
 211:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                                             ALIGN(map_size * sizeof(lv_color_t)));
 212:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->w = w;
 213:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 214:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 215:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 216:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     else {
 217:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map = (lv_color_t *)(grad_cache_end + ALIGN(sizeof(*item)));
 388              		.loc 1 217 0
 389 0082 224A     		ldr	r2, .L45
 390 0084 1368     		ldr	r3, [r2]
 391 0086 03F11001 		add	r1, r3, #16
 392 008a C9F80810 		str	r1, [r9, #8]
 218:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 219:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->hmap = (lv_color32_t *)(grad_cache_end + ALIGN(sizeof(*item)) + ALIGN(map_size * size
 220:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if LV_DITHER_ERROR_DIFFUSION == 1
 221:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->error_acc = (lv_scolor24_t *)(grad_cache_end + ALIGN(sizeof(*item)) + ALIGN(size * si
 222:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                                             ALIGN(map_size * sizeof(lv_color_t)));
 223:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->w = w;
 224:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 225:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 226:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         grad_cache_end += req_size;
 393              		.loc 1 226 0
 394 008e 2344     		add	r3, r3, r4
 395 0090 1360     		str	r3, [r2]
 396              	.L29:
 227:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 228:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return item;
 229:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 397              		.loc 1 229 0
 398 0092 4846     		mov	r0, r9
 399 0094 03B0     		add	sp, sp, #12
 400              	.LCFI7:
 401              		.cfi_remember_state
 402              		.cfi_def_cfa_offset 28
 403              		@ sp needed
 404 0096 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
ARM GAS  /tmp/ccfLLF9p.s 			page 12


 405              	.LVL44:
 406              	.L43:
 407              	.LCFI8:
 408              		.cfi_restore_state
 160:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_coord_t map_size = LV_MAX(w, h); /* The map is being used horizontally (width) unless
 409              		.loc 1 160 0
 410 009a 8846     		mov	r8, r1
 411 009c BBE7     		b	.L30
 412              	.LVL45:
 413              	.L31:
 180:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             while(act_size + req_size > grad_cache_size) {
 414              		.loc 1 180 0
 415 009e A242     		cmp	r2, r4
 416 00a0 1ED2     		bcs	.L33
 192:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             LV_ASSERT_MALLOC(item);
 417              		.loc 1 192 0
 418 00a2 2046     		mov	r0, r4
 419              	.LVL46:
 420 00a4 FFF7FEFF 		bl	lv_mem_alloc
 421              	.LVL47:
 193:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             if(item == NULL) return NULL;
 422              		.loc 1 193 0
 423 00a8 8146     		mov	r9, r0
 424 00aa 40B3     		cbz	r0, .L37
 195:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 425              		.loc 1 195 0
 426 00ac C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 427 00ae 43F08003 		orr	r3, r3, #128
 428 00b2 C371     		strb	r3, [r0, #7]
 429 00b4 CAE7     		b	.L32
 430              	.LVL48:
 431              	.L35:
 432              	.LBB8:
 182:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 iterate_cache(&find_oldest_item_life, &oldest_life, NULL);
 433              		.loc 1 182 0
 434 00b6 0DF10809 		add	r9, sp, #8
 435 00ba 4FF0FF33 		mov	r3, #-1
 436 00be 49F8043D 		str	r3, [r9, #-4]!
 183:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 iterate_cache(&kill_oldest_item, &oldest_life, NULL);
 437              		.loc 1 183 0
 438 00c2 0022     		movs	r2, #0
 439 00c4 4946     		mov	r1, r9
 440 00c6 1448     		ldr	r0, .L45+12
 441 00c8 FFF7FEFF 		bl	iterate_cache
 442              	.LVL49:
 184:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 act_size = (size_t)(grad_cache_end - LV_GC_ROOT(_lv_grad_cache_mem));
 443              		.loc 1 184 0
 444 00cc 0022     		movs	r2, #0
 445 00ce 4946     		mov	r1, r9
 446 00d0 1248     		ldr	r0, .L45+16
 447 00d2 FFF7FEFF 		bl	iterate_cache
 448              	.LVL50:
 185:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             }
 449              		.loc 1 185 0
 450 00d6 0D4B     		ldr	r3, .L45
 451 00d8 1B68     		ldr	r3, [r3]
 452 00da 0D4A     		ldr	r2, .L45+4
ARM GAS  /tmp/ccfLLF9p.s 			page 13


 453 00dc 1268     		ldr	r2, [r2]
 454 00de 9B1A     		subs	r3, r3, r2
 455              	.LVL51:
 456              	.L33:
 457              	.LBE8:
 181:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 uint32_t oldest_life = UINT32_MAX;
 458              		.loc 1 181 0
 459 00e0 2344     		add	r3, r3, r4
 460              	.LVL52:
 461 00e2 0C4A     		ldr	r2, .L45+8
 462 00e4 1268     		ldr	r2, [r2]
 463 00e6 9342     		cmp	r3, r2
 464 00e8 E5D8     		bhi	.L35
 187:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             item->not_cached = 0;
 465              		.loc 1 187 0
 466 00ea 084B     		ldr	r3, .L45
 467 00ec D3F80090 		ldr	r9, [r3]
 468              	.LVL53:
 188:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 469              		.loc 1 188 0
 470 00f0 99F80730 		ldrb	r3, [r9, #7]	@ zero_extendqisi2
 471 00f4 6FF3C713 		bfc	r3, #7, #1
 472 00f8 89F80730 		strb	r3, [r9, #7]
 473 00fc A6E7     		b	.L32
 474              	.LVL54:
 475              	.L37:
 476 00fe FEE7     		b	.L37
 477              	.LVL55:
 478              	.L44:
 479              	.LBB9:
 206:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 480              		.loc 1 206 0
 481 0100 09F11003 		add	r3, r9, #16
 482 0104 C9F80830 		str	r3, [r9, #8]
 483              	.LBE9:
 484 0108 C3E7     		b	.L29
 485              	.L46:
 486 010a 00BF     		.align	2
 487              	.L45:
 488 010c 00000000 		.word	.LANCHOR1
 489 0110 00000000 		.word	_lv_grad_cache_mem
 490 0114 00000000 		.word	.LANCHOR0
 491 0118 00000000 		.word	find_oldest_item_life
 492 011c 00000000 		.word	kill_oldest_item
 493              		.cfi_endproc
 494              	.LFE64:
 496              		.section	.text.free_item,"ax",%progbits
 497              		.align	1
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 501              		.fpu fpv5-d16
 503              	free_item:
 504              	.LFB61:
 118:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t size = get_cache_item_size(c);
 505              		.loc 1 118 0
 506              		.cfi_startproc
ARM GAS  /tmp/ccfLLF9p.s 			page 14


 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              	.LVL56:
 510 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 511              	.LCFI9:
 512              		.cfi_def_cfa_offset 24
 513              		.cfi_offset 4, -24
 514              		.cfi_offset 5, -20
 515              		.cfi_offset 6, -16
 516              		.cfi_offset 7, -12
 517              		.cfi_offset 8, -8
 518              		.cfi_offset 14, -4
 519 0004 0746     		mov	r7, r0
 119:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t next_items_size = (size_t)(grad_cache_end - (uint8_t *)c) - size;
 520              		.loc 1 119 0
 521 0006 FFF7FEFF 		bl	get_cache_item_size
 522              	.LVL57:
 120:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     grad_cache_end -= size;
 523              		.loc 1 120 0
 524 000a 124A     		ldr	r2, .L53
 525 000c 1368     		ldr	r3, [r2]
 526 000e A3EB0708 		sub	r8, r3, r7
 527              	.LVL58:
 121:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(next_items_size) {
 528              		.loc 1 121 0
 529 0012 4642     		negs	r6, r0
 530 0014 3344     		add	r3, r3, r6
 531 0016 1360     		str	r3, [r2]
 122:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         uint8_t * old = (uint8_t *)c;
 532              		.loc 1 122 0
 533 0018 B8EB0008 		subs	r8, r8, r0
 534              	.LVL59:
 535 001c 01D1     		bne	.L52
 536              	.LVL60:
 537              	.L47:
 138:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 538              		.loc 1 138 0
 539 001e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 540              	.LVL61:
 541              	.L52:
 542 0022 0546     		mov	r5, r0
 543              	.LVL62:
 544              	.LBB10:
 124:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         /* Then need to fix all internal pointers too */
 545              		.loc 1 124 0
 546 0024 4246     		mov	r2, r8
 547 0026 3918     		adds	r1, r7, r0
 548 0028 3846     		mov	r0, r7
 549              	.LVL63:
 550 002a FFF7FEFF 		bl	lv_memcpy
 551              	.LVL64:
 126:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             c->map = (lv_color_t *)(((uint8_t *)c->map) - size);
 552              		.loc 1 126 0
 553 002e 3C46     		mov	r4, r7
 554 0030 06E0     		b	.L49
 555              	.LVL65:
 556              	.L50:
ARM GAS  /tmp/ccfLLF9p.s 			page 15


 127:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 557              		.loc 1 127 0
 558 0032 A368     		ldr	r3, [r4, #8]
 559 0034 3344     		add	r3, r3, r6
 560 0036 A360     		str	r3, [r4, #8]
 134:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 561              		.loc 1 134 0
 562 0038 2046     		mov	r0, r4
 563 003a FFF7FEFF 		bl	get_cache_item_size
 564              	.LVL66:
 565 003e 0444     		add	r4, r4, r0
 566              	.LVL67:
 567              	.L49:
 126:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             c->map = (lv_color_t *)(((uint8_t *)c->map) - size);
 568              		.loc 1 126 0
 569 0040 044B     		ldr	r3, .L53
 570 0042 1B68     		ldr	r3, [r3]
 571 0044 A342     		cmp	r3, r4
 572 0046 F4D1     		bne	.L50
 136:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 573              		.loc 1 136 0
 574 0048 2946     		mov	r1, r5
 575 004a 07EB0800 		add	r0, r7, r8
 576 004e FFF7FEFF 		bl	lv_memset_00
 577              	.LVL68:
 578              	.LBE10:
 138:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 579              		.loc 1 138 0
 580 0052 E4E7     		b	.L47
 581              	.L54:
 582              		.align	2
 583              	.L53:
 584 0054 00000000 		.word	.LANCHOR1
 585              		.cfi_endproc
 586              	.LFE61:
 588              		.section	.text.kill_oldest_item,"ax",%progbits
 589              		.align	1
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 593              		.fpu fpv5-d16
 595              	kill_oldest_item:
 596              	.LFB62:
 141:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t * min_life = (uint32_t *)ctx;
 597              		.loc 1 141 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              	.LVL69:
 602 0000 08B5     		push	{r3, lr}
 603              	.LCFI10:
 604              		.cfi_def_cfa_offset 8
 605              		.cfi_offset 3, -8
 606              		.cfi_offset 14, -4
 607              	.LVL70:
 143:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         /*Found, let's kill it*/
 608              		.loc 1 143 0
ARM GAS  /tmp/ccfLLF9p.s 			page 16


 609 0002 4368     		ldr	r3, [r0, #4]
 610 0004 C3F31D03 		ubfx	r3, r3, #0, #30
 611 0008 0A68     		ldr	r2, [r1]
 612 000a 9342     		cmp	r3, r2
 613 000c 01D0     		beq	.L59
 148:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 614              		.loc 1 148 0
 615 000e 0020     		movs	r0, #0
 616              	.LVL71:
 617              	.L56:
 149:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 618              		.loc 1 149 0
 619 0010 08BD     		pop	{r3, pc}
 620              	.LVL72:
 621              	.L59:
 145:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return LV_RES_OK;
 622              		.loc 1 145 0
 623 0012 FFF7FEFF 		bl	free_item
 624              	.LVL73:
 146:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 625              		.loc 1 146 0
 626 0016 0120     		movs	r0, #1
 627 0018 FAE7     		b	.L56
 628              		.cfi_endproc
 629              	.LFE62:
 631              		.section	.text.lv_gradient_free_cache,"ax",%progbits
 632              		.align	1
 633              		.global	lv_gradient_free_cache
 634              		.syntax unified
 635              		.thumb
 636              		.thumb_func
 637              		.fpu fpv5-d16
 639              	lv_gradient_free_cache:
 640              	.LFB65:
 230:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 231:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 232:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** /**********************
 233:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *     FUNCTIONS
 234:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  **********************/
 235:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** void lv_gradient_free_cache(void)
 236:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 641              		.loc 1 236 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645 0000 10B5     		push	{r4, lr}
 646              	.LCFI11:
 647              		.cfi_def_cfa_offset 8
 648              		.cfi_offset 4, -8
 649              		.cfi_offset 14, -4
 237:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_mem_free(LV_GC_ROOT(_lv_grad_cache_mem));
 650              		.loc 1 237 0
 651 0002 054C     		ldr	r4, .L62
 652 0004 2068     		ldr	r0, [r4]
 653 0006 FFF7FEFF 		bl	lv_mem_free
 654              	.LVL74:
 238:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     LV_GC_ROOT(_lv_grad_cache_mem) = grad_cache_end = NULL;
ARM GAS  /tmp/ccfLLF9p.s 			page 17


 655              		.loc 1 238 0
 656 000a 0023     		movs	r3, #0
 657 000c 034A     		ldr	r2, .L62+4
 658 000e 1360     		str	r3, [r2]
 659 0010 2360     		str	r3, [r4]
 239:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     grad_cache_size = 0;
 660              		.loc 1 239 0
 661 0012 034A     		ldr	r2, .L62+8
 662 0014 1360     		str	r3, [r2]
 240:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 663              		.loc 1 240 0
 664 0016 10BD     		pop	{r4, pc}
 665              	.L63:
 666              		.align	2
 667              	.L62:
 668 0018 00000000 		.word	_lv_grad_cache_mem
 669 001c 00000000 		.word	.LANCHOR1
 670 0020 00000000 		.word	.LANCHOR0
 671              		.cfi_endproc
 672              	.LFE65:
 674              		.section	.text.lv_gradient_set_cache_size,"ax",%progbits
 675              		.align	1
 676              		.global	lv_gradient_set_cache_size
 677              		.syntax unified
 678              		.thumb
 679              		.thumb_func
 680              		.fpu fpv5-d16
 682              	lv_gradient_set_cache_size:
 683              	.LFB66:
 241:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 242:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** void lv_gradient_set_cache_size(size_t max_bytes)
 243:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 684              		.loc 1 243 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              	.LVL75:
 689 0000 38B5     		push	{r3, r4, r5, lr}
 690              	.LCFI12:
 691              		.cfi_def_cfa_offset 16
 692              		.cfi_offset 3, -16
 693              		.cfi_offset 4, -12
 694              		.cfi_offset 5, -8
 695              		.cfi_offset 14, -4
 696 0002 0446     		mov	r4, r0
 244:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_mem_free(LV_GC_ROOT(_lv_grad_cache_mem));
 697              		.loc 1 244 0
 698 0004 084D     		ldr	r5, .L68
 699 0006 2868     		ldr	r0, [r5]
 700              	.LVL76:
 701 0008 FFF7FEFF 		bl	lv_mem_free
 702              	.LVL77:
 245:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     grad_cache_end = LV_GC_ROOT(_lv_grad_cache_mem) = lv_mem_alloc(max_bytes);
 703              		.loc 1 245 0
 704 000c 2046     		mov	r0, r4
 705 000e FFF7FEFF 		bl	lv_mem_alloc
 706              	.LVL78:
ARM GAS  /tmp/ccfLLF9p.s 			page 18


 707 0012 2860     		str	r0, [r5]
 708 0014 054B     		ldr	r3, .L68+4
 709 0016 1860     		str	r0, [r3]
 246:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     LV_ASSERT_MALLOC(LV_GC_ROOT(_lv_grad_cache_mem));
 710              		.loc 1 246 0
 711 0018 00B9     		cbnz	r0, .L65
 712              	.L66:
 713 001a FEE7     		b	.L66
 714              	.L65:
 247:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_memset_00(LV_GC_ROOT(_lv_grad_cache_mem), max_bytes);
 715              		.loc 1 247 0
 716 001c 2146     		mov	r1, r4
 717 001e FFF7FEFF 		bl	lv_memset_00
 718              	.LVL79:
 248:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     grad_cache_size = max_bytes;
 719              		.loc 1 248 0
 720 0022 034B     		ldr	r3, .L68+8
 721 0024 1C60     		str	r4, [r3]
 249:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 722              		.loc 1 249 0
 723 0026 38BD     		pop	{r3, r4, r5, pc}
 724              	.LVL80:
 725              	.L69:
 726              		.align	2
 727              	.L68:
 728 0028 00000000 		.word	_lv_grad_cache_mem
 729 002c 00000000 		.word	.LANCHOR1
 730 0030 00000000 		.word	.LANCHOR0
 731              		.cfi_endproc
 732              	.LFE66:
 734              		.section	.text.lv_gradient_calculate,"ax",%progbits
 735              		.align	1
 736              		.global	lv_gradient_calculate
 737              		.syntax unified
 738              		.thumb
 739              		.thumb_func
 740              		.fpu fpv5-d16
 742              	lv_gradient_calculate:
 743              	.LFB68:
 250:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 251:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** lv_grad_t * lv_gradient_get(const lv_grad_dsc_t * g, lv_coord_t w, lv_coord_t h)
 252:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 253:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /* No gradient, no cache */
 254:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(g->dir == LV_GRAD_DIR_NONE) return NULL;
 255:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 256:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /* Step 0: Check if the cache exist (else create it) */
 257:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     static bool inited = false;
 258:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(!inited) {
 259:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         lv_gradient_set_cache_size(LV_GRAD_CACHE_DEF_SIZE);
 260:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         inited = true;
 261:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 262:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 263:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /* Step 1: Search cache for the given key */
 264:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_coord_t size = g->dir == LV_GRAD_DIR_HOR ? w : h;
 265:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t key = compute_key(g, size, w);
 266:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_grad_t * item = NULL;
 267:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(iterate_cache(&find_item, &key, &item) == LV_RES_OK) {
ARM GAS  /tmp/ccfLLF9p.s 			page 19


 268:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->life++; /* Don't forget to bump the counter */
 269:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return item;
 270:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 271:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 272:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /* Step 2: Need to allocate an item for it */
 273:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     item = allocate_item(g, w, h);
 274:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(item == NULL) {
 275:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         LV_LOG_WARN("Faild to allcoate item for teh gradient");
 276:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return item;
 277:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 278:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 279:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /* Step 3: Fill it with the gradient, as expected */
 280:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 281:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     for(lv_coord_t i = 0; i < item->size; i++) {
 282:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->hmap[i] = lv_gradient_calculate(g, item->size, i);
 283:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 284:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if LV_DITHER_ERROR_DIFFUSION == 1
 285:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_memset_00(item->error_acc, w * sizeof(lv_scolor24_t));
 286:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 287:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #else
 288:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     for(lv_coord_t i = 0; i < item->size; i++) {
 289:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map[i] = lv_gradient_calculate(g, item->size, i);
 290:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 291:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 292:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 293:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return item;
 294:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 295:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 296:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** LV_ATTRIBUTE_FAST_MEM lv_grad_color_t lv_gradient_calculate(const lv_grad_dsc_t * dsc, lv_coord_t r
 297:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                                                             lv_coord_t frac)
 298:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 744              		.loc 1 298 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              	.LVL81:
 749 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 750              	.LCFI13:
 751              		.cfi_def_cfa_offset 28
 752              		.cfi_offset 4, -28
 753              		.cfi_offset 5, -24
 754              		.cfi_offset 6, -20
 755              		.cfi_offset 7, -16
 756              		.cfi_offset 8, -12
 757              		.cfi_offset 9, -8
 758              		.cfi_offset 14, -4
 299:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_grad_color_t tmp;
 300:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_color32_t one, two;
 301:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /*Clip out-of-bounds first*/
 302:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     int32_t min = (dsc->stops[0].frac * range) >> 8;
 759              		.loc 1 302 0
 760 0004 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 761 0006 01FB04F4 		mul	r4, r1, r4
 762 000a 2412     		asrs	r4, r4, #8
 763              	.LVL82:
 303:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(frac <= min) {
 764              		.loc 1 303 0
ARM GAS  /tmp/ccfLLF9p.s 			page 20


 765 000c A242     		cmp	r2, r4
 766 000e 10DD     		ble	.L81
 767 0010 8E46     		mov	lr, r1
 768 0012 9146     		mov	r9, r2
 304:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         GRAD_CONV(tmp, dsc->stops[0].color);
 305:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return tmp;
 306:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 307:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 308:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     int32_t max = (dsc->stops[dsc->stops_count - 1].frac * range) >> 8;
 769              		.loc 1 308 0
 770 0014 90F80880 		ldrb	r8, [r0, #8]	@ zero_extendqisi2
 771 0018 08F1FF37 		add	r7, r8, #-1
 772 001c 00EB8706 		add	r6, r0, r7, lsl #2
 773 0020 B678     		ldrb	r6, [r6, #2]	@ zero_extendqisi2
 774 0022 06FB01F6 		mul	r6, r6, r1
 775              	.LVL83:
 309:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(frac >= max) {
 776              		.loc 1 309 0
 777 0026 B2EB262F 		cmp	r2, r6, asr #8
 778 002a 5BDB     		blt	.L79
 310:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         GRAD_CONV(tmp, dsc->stops[dsc->stops_count - 1].color);
 779              		.loc 1 310 0
 780 002c 30F82700 		ldrh	r0, [r0, r7, lsl #2]
 781              	.LVL84:
 311:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return tmp;
 782              		.loc 1 311 0
 783 0030 00E0     		b	.L72
 784              	.LVL85:
 785              	.L81:
 304:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return tmp;
 786              		.loc 1 304 0
 787 0032 0088     		ldrh	r0, [r0]
 788              	.LVL86:
 789              	.L72:
 790              	.LVL87:
 312:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 313:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 314:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /*Find the 2 closest stop now*/
 315:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     int32_t d = 0;
 316:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     for(uint8_t i = 1; i < dsc->stops_count; i++) {
 317:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         int32_t cur = (dsc->stops[i].frac * range) >> 8;
 318:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         if(frac <= cur) {
 319:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             one.full = lv_color_to32(dsc->stops[i - 1].color);
 320:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             two.full = lv_color_to32(dsc->stops[i].color);
 321:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             min = (dsc->stops[i - 1].frac * range) >> 8;
 322:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             max = (dsc->stops[i].frac * range) >> 8;
 323:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             d = max - min;
 324:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             break;
 325:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 326:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 327:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 328:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     LV_ASSERT(d != 0);
 329:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 330:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /*Then interpolate*/
 331:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     frac -= min;
 332:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_opa_t mix = (frac * 255) / d;
 333:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_opa_t imix = 255 - mix;
ARM GAS  /tmp/ccfLLF9p.s 			page 21


 334:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 335:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_grad_color_t r = GRAD_CM(LV_UDIV255(two.ch.red * mix   + one.ch.red * imix),
 336:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                                 LV_UDIV255(two.ch.green * mix + one.ch.green * imix),
 337:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                                 LV_UDIV255(two.ch.blue * mix  + one.ch.blue * imix));
 338:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return r;
 339:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 791              		.loc 1 339 0
 792 0034 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 793              	.LVL88:
 794              	.L83:
 795              	.LBB11:
 796              	.LBB12:
 319:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             two.full = lv_color_to32(dsc->stops[i].color);
 797              		.loc 1 319 0
 798 0038 013F     		subs	r7, r7, #1
 799              	.LVL89:
 800 003a 30F82730 		ldrh	r3, [r0, r7, lsl #2]
 801              	.LVL90:
 802              	.LBB13:
 803              	.LBB14:
 804              		.file 2 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h"
   1:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /**
   2:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * @file lv_color.h
   3:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *
   4:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  */
   5:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
   6:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_H
   8:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
   9:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef __cplusplus
  10:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** extern "C" {
  11:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  12:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  13:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  14:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *      INCLUDES
  15:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  16:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_assert.h"
  18:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_math.h"
  19:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_types.h"
  20:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  21:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /*Error checking*/
  22:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  25:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  26:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  27:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  28:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  29:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  30:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #include <stdint.h>
  31:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  32:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  33:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *      DEFINES
  34:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  35:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  36:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
ARM GAS  /tmp/ccfLLF9p.s 			page 22


  37:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  38:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  39:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * Opacity percentages.
  40:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  */
  41:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** enum {
  42:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  43:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_0      = 0,
  44:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_10     = 25,
  45:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_20     = 51,
  46:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_30     = 76,
  47:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_40     = 102,
  48:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_50     = 127,
  49:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_60     = 153,
  50:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_70     = 178,
  51:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_80     = 204,
  52:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_90     = 229,
  53:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_100    = 255,
  54:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  55:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** };
  56:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  57:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  58:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  59:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  60:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  61:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  62:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  63:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  64:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  65:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  66:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  67:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  68:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  69:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  70:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  71:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  72:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  73:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  74:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  75:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  76:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  77:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** */
  78:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef _MSC_VER
  79:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  80:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  81:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  82:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  83:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if __cplusplus >= 201103L
  84:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  86:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  87:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif /*__cplusplus*/
  88:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  89:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  90:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  91:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  92:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  93:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
ARM GAS  /tmp/ccfLLF9p.s 			page 23


  94:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  95:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
  96:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  97:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
  98:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  99:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 100:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
 101:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for all existing color depths
 102:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
 103:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 104:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 105:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 106:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 107:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 108:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 109:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 110:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 111:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 112:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 113:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 114:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 115:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 116:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 117:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 118:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 119:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 120:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 121:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 122:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 123:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 124:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 125:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 126:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 127:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 128:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 129:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 130:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 134:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 136:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 139:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 140:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 143:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 144:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 145:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 146:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 148:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 149:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 150:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
ARM GAS  /tmp/ccfLLF9p.s 			page 24


 151:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 152:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 153:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 154:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 155:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 156:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 157:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 158:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 159:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 160:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 161:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 162:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 163:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 164:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 165:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 166:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 167:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 168:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 169:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
 170:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for the current color depth
 171:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
 172:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 173:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 174:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 175:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 176:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 177:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 178:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 179:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 180:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 181:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 182:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 183:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 184:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 185:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 186:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 187:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *      TYPEDEFS
 188:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 189:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 190:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 191:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 192:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     union {
 193:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 1;
 194:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 1;
 195:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 1;
 196:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 197:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color1_t;
 198:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 199:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 200:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 201:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 2;
 202:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 3;
 203:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 3;
 204:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 205:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full;
 206:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color8_t;
 207:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
ARM GAS  /tmp/ccfLLF9p.s 			page 25


 208:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 209:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 210:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 211:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 212:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green : 6;
 213:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 214:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 215:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_h : 3;
 216:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 217:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 218:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_l : 3;
 219:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 220:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 221:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t full;
 222:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color16_t;
 223:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 224:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 225:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 226:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue;
 227:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green;
 228:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red;
 229:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t alpha;
 230:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 231:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t full;
 232:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color32_t;
 233:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 234:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 235:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 236:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 237:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct {
 238:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t h;
 239:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t s;
 240:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t v;
 241:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_hsv_t;
 242:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 243:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 244:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 245:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 246:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** //! @endcond
 247:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 248:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 249:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 250:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 251:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 252:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 253:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 254:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     void * user_data;
 255:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_filter_dsc_t;
 256:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 257:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 258:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef enum {
 259:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_RED,
 260:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PINK,
 261:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 262:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 263:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 264:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE,
ARM GAS  /tmp/ccfLLF9p.s 			page 26


 265:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 266:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_CYAN,
 267:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_TEAL,
 268:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREEN,
 269:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 270:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIME,
 271:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 272:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_AMBER,
 273:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 274:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 275:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BROWN,
 276:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 277:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREY,
 278:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     _LV_PALETTE_LAST,
 279:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 280:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_palette_t;
 281:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 282:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 283:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 284:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 285:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 286:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /*In color conversations:
 287:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 288:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 289:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *         8 bit Red has 3 bits
 290:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 291:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 292:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *
 293:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 294:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 295:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *        16 bit Red has 5 bits
 296:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 297:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 298:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 299:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 300:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** {
 301:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 302:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 303:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 304:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 305:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 306:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 307:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 308:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 309:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 310:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 311:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 312:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 313:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 314:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 315:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 316:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 317:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 318:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 319:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 320:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 321:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
ARM GAS  /tmp/ccfLLF9p.s 			page 27


 322:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 323:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 324:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 325:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** }
 326:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 327:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 328:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** {
 329:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 330:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 331:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 332:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 333:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF;
 334:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 335:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 336:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 337:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 338:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 339:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 340:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 341:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 342:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 343:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 344:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 345:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 346:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 347:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 348:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 349:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** }
 350:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 351:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 352:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** {
 353:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 354:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 355:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 356:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 357:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFF;
 358:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 359:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 360:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 361:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 362:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 363:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 364:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 365:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 366:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 367:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 368:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 369:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 370:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 371:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 372:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 373:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** }
 374:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 375:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 376:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** {
 377:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 378:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
ARM GAS  /tmp/ccfLLF9p.s 			page 28


 379:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF000000;
 380:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 381:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFFFFFF;
 382:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 383:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
 384:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 385:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 386:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 387:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 388:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 389:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 390:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     /**
 391:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      * The floating point math for conversion is:
 392:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 393:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      * The faster integer math for conversion is:
 394:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 395:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 396:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 397:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 398:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 399:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 400:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 401:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           8      7        7       255
 402:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1          16     14        7       255
 403:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          32     28        7       255
 404:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          65     25        3       255
 405:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4         131     19        1       255
 406:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         263      7        0       255
 407:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 408:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 409:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 410:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           4      3        3       255
 411:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1           8      6        3       255
 412:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          16     12        3       255
 413:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          32     24        3       255
 414:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4          64     48        3       255
 415:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         129     33        1       255
 416:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       6         259      3        0       255
 417:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      */
 418:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 419:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
 420:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 805              		.loc 2 420 0
 806 003e DC0A     		lsrs	r4, r3, #11
 807              	.LVL91:
 808 0040 04EB4415 		add	r5, r4, r4, lsl #5
 809 0044 C4EBC504 		rsb	r4, r4, r5, lsl #3
 810 0048 0734     		adds	r4, r4, #7
 811 004a C4F34714 		ubfx	r4, r4, #5, #8
 812 004e 0025     		movs	r5, #0
 813              	.LVL92:
 814 0050 64F31745 		bfi	r5, r4, #16, #8
 815              	.LVL93:
 421:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 816              		.loc 2 421 0
 817 0054 C3F34514 		ubfx	r4, r3, #5, #6
 818 0058 04EBC41E 		add	lr, r4, r4, lsl #7
ARM GAS  /tmp/ccfLLF9p.s 			page 29


 819 005c 04EB4E04 		add	r4, r4, lr, lsl #1
 820 0060 0334     		adds	r4, r4, #3
 821 0062 C4F38714 		ubfx	r4, r4, #6, #8
 822 0066 64F30F25 		bfi	r5, r4, #8, #8
 422:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 823              		.loc 2 422 0
 824 006a 03F01F03 		and	r3, r3, #31
 825              	.LVL94:
 826 006e 03EB4314 		add	r4, r3, r3, lsl #5
 827 0072 C3EBC403 		rsb	r3, r3, r4, lsl #3
 828 0076 0733     		adds	r3, r3, #7
 829 0078 C3F34713 		ubfx	r3, r3, #5, #8
 830 007c 63F30705 		bfi	r5, r3, #0, #8
 831              	.LBE14:
 832              	.LBE13:
 319:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             two.full = lv_color_to32(dsc->stops[i].color);
 833              		.loc 1 319 0
 834 0080 45F07F45 		orr	r5, r5, #-16777216
 835              	.LVL95:
 836 0084 30F82C40 		ldrh	r4, [r0, ip, lsl #2]
 837              	.LVL96:
 838              	.LBB15:
 839              	.LBB16:
 420:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 840              		.loc 2 420 0
 841 0088 E30A     		lsrs	r3, r4, #11
 842 008a 03EB431C 		add	ip, r3, r3, lsl #5
 843 008e C3EBCC0C 		rsb	ip, r3, ip, lsl #3
 844 0092 0CF1070C 		add	ip, ip, #7
 845 0096 CCF3471C 		ubfx	ip, ip, #5, #8
 846 009a 0023     		movs	r3, #0
 847              	.LVL97:
 848 009c 6CF31743 		bfi	r3, ip, #16, #8
 849              	.LVL98:
 421:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 850              		.loc 2 421 0
 851 00a0 C4F3451C 		ubfx	ip, r4, #5, #6
 852 00a4 0CEBCC1E 		add	lr, ip, ip, lsl #7
 853 00a8 0CEB4E0C 		add	ip, ip, lr, lsl #1
 854 00ac 0CF1030C 		add	ip, ip, #3
 855 00b0 CCF3871C 		ubfx	ip, ip, #6, #8
 856 00b4 6CF30F23 		bfi	r3, ip, #8, #8
 857              		.loc 2 422 0
 858 00b8 04F01F04 		and	r4, r4, #31
 859              	.LVL99:
 860 00bc 04EB441C 		add	ip, r4, r4, lsl #5
 861 00c0 C4EBCC04 		rsb	r4, r4, ip, lsl #3
 862 00c4 0734     		adds	r4, r4, #7
 863 00c6 C4F34714 		ubfx	r4, r4, #5, #8
 864 00ca 64F30703 		bfi	r3, r4, #0, #8
 865              	.LBE16:
 866              	.LBE15:
 320:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             min = (dsc->stops[i - 1].frac * range) >> 8;
 867              		.loc 1 320 0
 868 00ce 43F07F43 		orr	r3, r3, #-16777216
 869              	.LVL100:
 321:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             max = (dsc->stops[i].frac * range) >> 8;
ARM GAS  /tmp/ccfLLF9p.s 			page 30


 870              		.loc 1 321 0
 871 00d2 00EB8700 		add	r0, r0, r7, lsl #2
 872              	.LVL101:
 873 00d6 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 874 00d8 04FB01F1 		mul	r1, r4, r1
 875              	.LVL102:
 876 00dc 0C12     		asrs	r4, r1, #8
 877              	.LVL103:
 323:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             break;
 878              		.loc 1 323 0
 879 00de 361B     		subs	r6, r6, r4
 880              	.LVL104:
 881              	.L75:
 882              	.LBE12:
 883              	.LBE11:
 328:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 884              		.loc 1 328 0
 885 00e0 8EB9     		cbnz	r6, .L77
 886              	.L78:
 887 00e2 FEE7     		b	.L78
 888              	.LVL105:
 889              	.L79:
 890              	.LBB18:
 316:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         int32_t cur = (dsc->stops[i].frac * range) >> 8;
 891              		.loc 1 316 0
 892 00e4 0127     		movs	r7, #1
 893              	.LVL106:
 894              	.L73:
 316:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         int32_t cur = (dsc->stops[i].frac * range) >> 8;
 895              		.loc 1 316 0 is_stmt 0 discriminator 1
 896 00e6 B845     		cmp	r8, r7
 897 00e8 0BD9     		bls	.L82
 898              	.LBB17:
 317:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         if(frac <= cur) {
 899              		.loc 1 317 0 is_stmt 1
 900 00ea BC46     		mov	ip, r7
 901 00ec 00EB8706 		add	r6, r0, r7, lsl #2
 902 00f0 B678     		ldrb	r6, [r6, #2]	@ zero_extendqisi2
 903 00f2 06FB0EF6 		mul	r6, r6, lr
 904 00f6 3612     		asrs	r6, r6, #8
 905              	.LVL107:
 318:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             one.full = lv_color_to32(dsc->stops[i - 1].color);
 906              		.loc 1 318 0
 907 00f8 B145     		cmp	r9, r6
 908 00fa 9DDD     		ble	.L83
 909              	.LBE17:
 316:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         int32_t cur = (dsc->stops[i].frac * range) >> 8;
 910              		.loc 1 316 0 discriminator 2
 911 00fc 0137     		adds	r7, r7, #1
 912              	.LVL108:
 913 00fe FFB2     		uxtb	r7, r7
 914              	.LVL109:
 915 0100 F1E7     		b	.L73
 916              	.LVL110:
 917              	.L82:
 918              	.LBE18:
 315:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     for(uint8_t i = 1; i < dsc->stops_count; i++) {
ARM GAS  /tmp/ccfLLF9p.s 			page 31


 919              		.loc 1 315 0
 920 0102 0026     		movs	r6, #0
 921 0104 ECE7     		b	.L75
 922              	.LVL111:
 923              	.L77:
 331:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_opa_t mix = (frac * 255) / d;
 924              		.loc 1 331 0
 925 0106 121B     		subs	r2, r2, r4
 926              	.LVL112:
 927 0108 12B2     		sxth	r2, r2
 928              	.LVL113:
 332:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_opa_t imix = 255 - mix;
 929              		.loc 1 332 0
 930 010a C2EB0222 		rsb	r2, r2, r2, lsl #8
 931              	.LVL114:
 932 010e 92FBF6F2 		sdiv	r2, r2, r6
 933 0112 D2B2     		uxtb	r2, r2
 934              	.LVL115:
 333:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 935              		.loc 1 333 0
 936 0114 D143     		mvns	r1, r2
 937 0116 CCB2     		uxtb	r4, r1
 938              	.LVL116:
 335:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                                 LV_UDIV255(two.ch.green * mix + one.ch.green * imix),
 939              		.loc 1 335 0
 940 0118 D9B2     		uxtb	r1, r3
 941 011a E8B2     		uxtb	r0, r5
 942 011c 04FB00F0 		mul	r0, r4, r0
 943 0120 02FB0101 		mla	r1, r2, r1, r0
 944 0124 01EB0120 		add	r0, r1, r1, lsl #8
 945 0128 01EBC011 		add	r1, r1, r0, lsl #7
 946 012c C1F38461 		ubfx	r1, r1, #26, #5
 947 0130 4FF00000 		mov	r0, #0	@ movhi
 948 0134 61F30400 		bfi	r0, r1, #0, #5
 949              	.LVL117:
 950 0138 C3F30721 		ubfx	r1, r3, #8, #8
 951 013c C5F30726 		ubfx	r6, r5, #8, #8
 952              	.LVL118:
 953 0140 06FB04F6 		mul	r6, r6, r4
 954 0144 02FB0161 		mla	r1, r2, r1, r6
 955 0148 01EB0126 		add	r6, r1, r1, lsl #8
 956 014c 01EBC611 		add	r1, r1, r6, lsl #7
 957 0150 C1F34561 		ubfx	r1, r1, #25, #6
 958 0154 61F34A10 		bfi	r0, r1, #5, #6
 959 0158 C3F30743 		ubfx	r3, r3, #16, #8
 960 015c C5F30741 		ubfx	r1, r5, #16, #8
 961 0160 01FB04F1 		mul	r1, r1, r4
 962 0164 02FB0312 		mla	r2, r2, r3, r1
 963              	.LVL119:
 964 0168 02EB0223 		add	r3, r2, r2, lsl #8
 965 016c 02EBC312 		add	r2, r2, r3, lsl #7
 966 0170 C2F38463 		ubfx	r3, r2, #26, #5
 967 0174 63F3CF20 		bfi	r0, r3, #11, #5
 338:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 968              		.loc 1 338 0
 969 0178 5CE7     		b	.L72
 970              		.cfi_endproc
ARM GAS  /tmp/ccfLLF9p.s 			page 32


 971              	.LFE68:
 973              		.section	.text.lv_gradient_get,"ax",%progbits
 974              		.align	1
 975              		.global	lv_gradient_get
 976              		.syntax unified
 977              		.thumb
 978              		.thumb_func
 979              		.fpu fpv5-d16
 981              	lv_gradient_get:
 982              	.LFB67:
 252:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /* No gradient, no cache */
 983              		.loc 1 252 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 8
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987              	.LVL120:
 254:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 988              		.loc 1 254 0
 989 0000 437A     		ldrb	r3, [r0, #9]	@ zero_extendqisi2
 990 0002 13F0070F 		tst	r3, #7
 991 0006 47D0     		beq	.L91
 252:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /* No gradient, no cache */
 992              		.loc 1 252 0
 993 0008 70B5     		push	{r4, r5, r6, lr}
 994              	.LCFI14:
 995              		.cfi_def_cfa_offset 16
 996              		.cfi_offset 4, -16
 997              		.cfi_offset 5, -12
 998              		.cfi_offset 6, -8
 999              		.cfi_offset 14, -4
 1000 000a 82B0     		sub	sp, sp, #8
 1001              	.LCFI15:
 1002              		.cfi_def_cfa_offset 24
 1003 000c 1646     		mov	r6, r2
 1004 000e 0C46     		mov	r4, r1
 1005 0010 0546     		mov	r5, r0
 258:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         lv_gradient_set_cache_size(LV_GRAD_CACHE_DEF_SIZE);
 1006              		.loc 1 258 0
 1007 0012 224B     		ldr	r3, .L100
 1008 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1009 0016 EBB1     		cbz	r3, .L97
 1010              	.LVL121:
 1011              	.L86:
 264:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t key = compute_key(g, size, w);
 1012              		.loc 1 264 0
 1013 0018 6B7A     		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 1014 001a 03F00703 		and	r3, r3, #7
 1015 001e 022B     		cmp	r3, #2
 1016 0020 1FD0     		beq	.L98
 1017 0022 3146     		mov	r1, r6
 1018              	.L87:
 1019              	.LVL122:
 265:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_grad_t * item = NULL;
 1020              		.loc 1 265 0 discriminator 4
 1021 0024 2246     		mov	r2, r4
 1022 0026 2846     		mov	r0, r5
 1023 0028 FFF7FEFF 		bl	compute_key
ARM GAS  /tmp/ccfLLF9p.s 			page 33


 1024              	.LVL123:
 1025 002c 0190     		str	r0, [sp, #4]
 266:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(iterate_cache(&find_item, &key, &item) == LV_RES_OK) {
 1026              		.loc 1 266 0 discriminator 4
 1027 002e 02AA     		add	r2, sp, #8
 1028 0030 0023     		movs	r3, #0
 1029 0032 42F8083D 		str	r3, [r2, #-8]!
 267:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->life++; /* Don't forget to bump the counter */
 1030              		.loc 1 267 0 discriminator 4
 1031 0036 01A9     		add	r1, sp, #4
 1032 0038 1948     		ldr	r0, .L100+4
 1033 003a FFF7FEFF 		bl	iterate_cache
 1034              	.LVL124:
 1035 003e 0128     		cmp	r0, #1
 1036 0040 11D0     		beq	.L99
 273:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(item == NULL) {
 1037              		.loc 1 273 0
 1038 0042 3246     		mov	r2, r6
 1039 0044 2146     		mov	r1, r4
 1040 0046 2846     		mov	r0, r5
 1041 0048 FFF7FEFF 		bl	allocate_item
 1042              	.LVL125:
 1043 004c 0090     		str	r0, [sp]
 274:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         LV_LOG_WARN("Faild to allcoate item for teh gradient");
 1044              		.loc 1 274 0
 1045 004e 90B1     		cbz	r0, .L84
 1046              	.LBB19:
 288:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map[i] = lv_gradient_calculate(g, item->size, i);
 1047              		.loc 1 288 0
 1048 0050 0024     		movs	r4, #0
 1049 0052 1BE0     		b	.L89
 1050              	.LVL126:
 1051              	.L97:
 1052              	.LBE19:
 259:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         inited = true;
 1053              		.loc 1 259 0
 1054 0054 0020     		movs	r0, #0
 1055              	.LVL127:
 1056 0056 FFF7FEFF 		bl	lv_gradient_set_cache_size
 1057              	.LVL128:
 260:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 1058              		.loc 1 260 0
 1059 005a 104B     		ldr	r3, .L100
 1060 005c 0122     		movs	r2, #1
 1061 005e 1A70     		strb	r2, [r3]
 1062 0060 DAE7     		b	.L86
 1063              	.L98:
 264:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t key = compute_key(g, size, w);
 1064              		.loc 1 264 0
 1065 0062 2146     		mov	r1, r4
 1066 0064 DEE7     		b	.L87
 1067              	.L99:
 268:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return item;
 1068              		.loc 1 268 0
 1069 0066 0098     		ldr	r0, [sp]
 1070 0068 4368     		ldr	r3, [r0, #4]
 1071 006a C3F31D02 		ubfx	r2, r3, #0, #30
ARM GAS  /tmp/ccfLLF9p.s 			page 34


 1072 006e 0132     		adds	r2, r2, #1
 1073 0070 62F31D03 		bfi	r3, r2, #0, #30
 1074 0074 4360     		str	r3, [r0, #4]
 1075              	.L84:
 294:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 1076              		.loc 1 294 0
 1077 0076 02B0     		add	sp, sp, #8
 1078              	.LCFI16:
 1079              		.cfi_remember_state
 1080              		.cfi_def_cfa_offset 16
 1081              		@ sp needed
 1082 0078 70BD     		pop	{r4, r5, r6, pc}
 1083              	.LVL129:
 1084              	.L90:
 1085              	.LCFI17:
 1086              		.cfi_restore_state
 1087              	.LBB20:
 289:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 1088              		.loc 1 289 0 discriminator 3
 1089 007a 8668     		ldr	r6, [r0, #8]
 1090 007c 2246     		mov	r2, r4
 1091 007e 2846     		mov	r0, r5
 1092 0080 FFF7FEFF 		bl	lv_gradient_calculate
 1093              	.LVL130:
 1094 0084 26F81400 		strh	r0, [r6, r4, lsl #1]	@ movhi
 288:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map[i] = lv_gradient_calculate(g, item->size, i);
 1095              		.loc 1 288 0 discriminator 3
 1096 0088 0134     		adds	r4, r4, #1
 1097              	.LVL131:
 1098 008a 24B2     		sxth	r4, r4
 1099              	.LVL132:
 1100              	.L89:
 288:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map[i] = lv_gradient_calculate(g, item->size, i);
 1101              		.loc 1 288 0 is_stmt 0 discriminator 1
 1102 008c 0098     		ldr	r0, [sp]
 1103 008e B0F90E10 		ldrsh	r1, [r0, #14]
 1104 0092 A142     		cmp	r1, r4
 1105 0094 F1DC     		bgt	.L90
 1106 0096 EEE7     		b	.L84
 1107              	.LVL133:
 1108              	.L91:
 1109              	.LCFI18:
 1110              		.cfi_def_cfa_offset 0
 1111              		.cfi_restore 4
 1112              		.cfi_restore 5
 1113              		.cfi_restore 6
 1114              		.cfi_restore 14
 1115              	.LBE20:
 254:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 1116              		.loc 1 254 0 is_stmt 1
 1117 0098 0020     		movs	r0, #0
 1118              	.LVL134:
 294:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 1119              		.loc 1 294 0
 1120 009a 7047     		bx	lr
 1121              	.L101:
 1122              		.align	2
ARM GAS  /tmp/ccfLLF9p.s 			page 35


 1123              	.L100:
 1124 009c 00000000 		.word	.LANCHOR2
 1125 00a0 00000000 		.word	find_item
 1126              		.cfi_endproc
 1127              	.LFE67:
 1129              		.section	.text.lv_gradient_cleanup,"ax",%progbits
 1130              		.align	1
 1131              		.global	lv_gradient_cleanup
 1132              		.syntax unified
 1133              		.thumb
 1134              		.thumb_func
 1135              		.fpu fpv5-d16
 1137              	lv_gradient_cleanup:
 1138              	.LFB69:
 340:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 341:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** void lv_gradient_cleanup(lv_grad_t * grad)
 342:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 1139              		.loc 1 342 0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 0
 1142              		@ frame_needed = 0, uses_anonymous_args = 0
 1143              	.LVL135:
 1144 0000 08B5     		push	{r3, lr}
 1145              	.LCFI19:
 1146              		.cfi_def_cfa_offset 8
 1147              		.cfi_offset 3, -8
 1148              		.cfi_offset 14, -4
 343:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(grad->not_cached) {
 1149              		.loc 1 343 0
 1150 0002 90F90730 		ldrsb	r3, [r0, #7]
 1151 0006 002B     		cmp	r3, #0
 1152 0008 00DB     		blt	.L105
 1153              	.LVL136:
 1154              	.L102:
 344:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         lv_mem_free(grad);
 345:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 346:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 1155              		.loc 1 346 0
 1156 000a 08BD     		pop	{r3, pc}
 1157              	.LVL137:
 1158              	.L105:
 344:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         lv_mem_free(grad);
 1159              		.loc 1 344 0
 1160 000c FFF7FEFF 		bl	lv_mem_free
 1161              	.LVL138:
 1162              		.loc 1 346 0
 1163 0010 FBE7     		b	.L102
 1164              		.cfi_endproc
 1165              	.LFE69:
 1167              		.section	.bss.grad_cache_end,"aw",%nobits
 1168              		.align	2
 1169              		.set	.LANCHOR1,. + 0
 1172              	grad_cache_end:
 1173 0000 00000000 		.space	4
 1174              		.section	.bss.grad_cache_size,"aw",%nobits
 1175              		.align	2
 1176              		.set	.LANCHOR0,. + 0
ARM GAS  /tmp/ccfLLF9p.s 			page 36


 1179              	grad_cache_size:
 1180 0000 00000000 		.space	4
 1181              		.section	.bss.inited.8119,"aw",%nobits
 1182              		.set	.LANCHOR2,. + 0
 1185              	inited.8119:
 1186 0000 00       		.space	1
 1187              		.text
 1188              	.Letext0:
 1189              		.file 3 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 1190              		.file 4 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1191              		.file 5 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_types.h"
 1192              		.file 6 "/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
 1193              		.file 7 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 1194              		.file 8 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 1195              		.file 9 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 1196              		.file 10 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_mem.h"
 1197              		.file 11 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/../font/../misc/lv_area.h"
 1198              		.file 12 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/../font/lv_font.h"
 1199              		.file 13 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_txt.h"
 1200              		.file 14 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_style.h"
 1201              		.file 15 "Drivers/lvgl/lvgl/src/draw/sw/../../core/lv_obj_pos.h"
 1202              		.file 16 "Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_gradient.h"
 1203              		.file 17 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_ll.h"
 1204              		.file 18 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_timer.h"
 1205              		.file 19 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/../draw/lv_img_buf.h"
 1206              		.file 20 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/../draw/lv_img_decoder.h"
 1207              		.file 21 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/../draw/lv_img_cache.h"
 1208              		.file 22 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/../draw/lv_draw_mask.h"
 1209              		.file 23 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_gc.h"
ARM GAS  /tmp/ccfLLF9p.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_draw_sw_gradient.c
     /tmp/ccfLLF9p.s:17     .text.compute_key:0000000000000000 $t
     /tmp/ccfLLF9p.s:23     .text.compute_key:0000000000000000 compute_key
     /tmp/ccfLLF9p.s:42     .text.get_cache_item_size:0000000000000000 $t
     /tmp/ccfLLF9p.s:48     .text.get_cache_item_size:0000000000000000 get_cache_item_size
     /tmp/ccfLLF9p.s:71     .text.next_in_cache:0000000000000000 $t
     /tmp/ccfLLF9p.s:77     .text.next_in_cache:0000000000000000 next_in_cache
     /tmp/ccfLLF9p.s:144    .text.next_in_cache:000000000000002c $d
     /tmp/ccfLLF9p.s:151    .text.iterate_cache:0000000000000000 $t
     /tmp/ccfLLF9p.s:157    .text.iterate_cache:0000000000000000 iterate_cache
     /tmp/ccfLLF9p.s:228    .text.find_oldest_item_life:0000000000000000 $t
     /tmp/ccfLLF9p.s:234    .text.find_oldest_item_life:0000000000000000 find_oldest_item_life
     /tmp/ccfLLF9p.s:259    .text.find_item:0000000000000000 $t
     /tmp/ccfLLF9p.s:265    .text.find_item:0000000000000000 find_item
     /tmp/ccfLLF9p.s:293    .text.allocate_item:0000000000000000 $t
     /tmp/ccfLLF9p.s:299    .text.allocate_item:0000000000000000 allocate_item
     /tmp/ccfLLF9p.s:488    .text.allocate_item:000000000000010c $d
     /tmp/ccfLLF9p.s:595    .text.kill_oldest_item:0000000000000000 kill_oldest_item
     /tmp/ccfLLF9p.s:497    .text.free_item:0000000000000000 $t
     /tmp/ccfLLF9p.s:503    .text.free_item:0000000000000000 free_item
     /tmp/ccfLLF9p.s:584    .text.free_item:0000000000000054 $d
     /tmp/ccfLLF9p.s:589    .text.kill_oldest_item:0000000000000000 $t
     /tmp/ccfLLF9p.s:632    .text.lv_gradient_free_cache:0000000000000000 $t
     /tmp/ccfLLF9p.s:639    .text.lv_gradient_free_cache:0000000000000000 lv_gradient_free_cache
     /tmp/ccfLLF9p.s:668    .text.lv_gradient_free_cache:0000000000000018 $d
     /tmp/ccfLLF9p.s:675    .text.lv_gradient_set_cache_size:0000000000000000 $t
     /tmp/ccfLLF9p.s:682    .text.lv_gradient_set_cache_size:0000000000000000 lv_gradient_set_cache_size
     /tmp/ccfLLF9p.s:728    .text.lv_gradient_set_cache_size:0000000000000028 $d
     /tmp/ccfLLF9p.s:735    .text.lv_gradient_calculate:0000000000000000 $t
     /tmp/ccfLLF9p.s:742    .text.lv_gradient_calculate:0000000000000000 lv_gradient_calculate
     /tmp/ccfLLF9p.s:974    .text.lv_gradient_get:0000000000000000 $t
     /tmp/ccfLLF9p.s:981    .text.lv_gradient_get:0000000000000000 lv_gradient_get
     /tmp/ccfLLF9p.s:1124   .text.lv_gradient_get:000000000000009c $d
     /tmp/ccfLLF9p.s:1130   .text.lv_gradient_cleanup:0000000000000000 $t
     /tmp/ccfLLF9p.s:1137   .text.lv_gradient_cleanup:0000000000000000 lv_gradient_cleanup
     /tmp/ccfLLF9p.s:1168   .bss.grad_cache_end:0000000000000000 $d
     /tmp/ccfLLF9p.s:1172   .bss.grad_cache_end:0000000000000000 grad_cache_end
     /tmp/ccfLLF9p.s:1175   .bss.grad_cache_size:0000000000000000 $d
     /tmp/ccfLLF9p.s:1179   .bss.grad_cache_size:0000000000000000 grad_cache_size
     /tmp/ccfLLF9p.s:1185   .bss.inited.8119:0000000000000000 inited.8119
     /tmp/ccfLLF9p.s:1186   .bss.inited.8119:0000000000000000 $d

UNDEFINED SYMBOLS
_lv_grad_cache_mem
lv_mem_alloc
lv_memcpy
lv_memset_00
lv_mem_free
