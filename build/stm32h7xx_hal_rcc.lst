ARM GAS  /tmp/ccOQTb5n.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_rcc.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_RCC_DeInit
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	HAL_RCC_DeInit:
  25              	.LFB144:
  26              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @file    stm32h7xx_hal_rcc.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (HSI 64MHz) with Flash 0 wait state,and all peripherals are off except
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       internal SRAM, Flash, JTAG and PWR
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) There is no pre-scaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) All GPIOs are in analogue mode , except the JTAG pins which
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Configure the AHB and APB buses pre-scalers
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Configure the clock kernel source(s) for peripherals which clocks are not
ARM GAS  /tmp/ccOQTb5n.s 			page 2


  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           derived from the System clock through :RCC_D1CCIPR,RCC_D2CCIP1R,RCC_D2CCIP2R
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           and RCC_D3CCIPR registers
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ==============================================================================
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       from/to registers.
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       Implemented Workaround:
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   @endverbatim
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ******************************************************************************
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @attention
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * Copyright (c) 2017 STMicroelectronics.
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * All rights reserved.
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * the root directory of this software component.
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ******************************************************************************
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #include "stm32h7xx_hal.h"
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @addtogroup STM32H7xx_HAL_Driver
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC  RCC
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief RCC HAL module driver
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccOQTb5n.s 			page 3


  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO2_CLK_ENABLE()      __HAL_RCC_GPIOC_CLK_ENABLE()
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @}
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @}
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Exported functions --------------------------------------------------------*/
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  *  @brief    Initialization and Configuration functions
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  *
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** @verbatim
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ===============================================================================
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ===============================================================================
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (HSE, HSI, LSE,CSI, LSI,HSI48, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB3, A
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****        AHB2,AHB4,APB3, APB1L, APB1H, APB2, and APB4).
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) HSI (high-speed internal), 64 MHz factory-trimmed RC used directly or through
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              the PLL as System clock source.
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) CSI is a low-power RC oscillator which can be used directly as system clock, periphera
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              clock, or PLL input.But even with frequency calibration, is less accurate than an
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              external crystal oscillator or ceramic resonator.
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              clock source.
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) HSE (high-speed external), 4 to 48 MHz crystal oscillator used directly or
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) PLL , The RCC features three independent PLLs (clocked by HSI , HSE or CSI),
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              featuring three different output clocks and able  to work either in integer or Fractio
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****            (++) A main PLL, PLL1, which is generally used to provide clocks to the CPU
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                 and to some peripherals.
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****            (++) Two dedicated PLLs, PLL2 and PLL3, which are used to generate the kernel clock for 
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) CSS (Clock security system), once enabled and if a HSE clock failure occurs
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             (HSE used directly or through PLL as System clock source), the System clock
ARM GAS  /tmp/ccOQTb5n.s 			page 4


 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              is automatically switched to HSI and an interrupt is generated if enabled.
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              The interrupt is linked to the Cortex-M NMI (Non-Mask-able Interrupt)
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              exception vector.
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) MCO1 (micro controller clock output), used to output HSI, LSE, HSE, PLL1(PLL1_Q)
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              or HSI48 clock (through a configurable pre-scaler) on PA8 pin.
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) MCO2 (micro controller clock output), used to output HSE, PLL2(PLL2_P), SYSCLK,
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              LSI, CSI, or PLL1(PLL1_P) clock (through a configurable pre-scaler) on PC9 pin.
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): CSI,HSI,
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              HSE and PLL.
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System core clock through configurable
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              pre-scaler and used to clock the CPU, memory and peripherals mapped
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              on AHB and APB bus of the 3 Domains (D1, D2, D3)* through configurable pre-scalers
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              and used to clock the peripherals mapped on these buses. You can use
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve system clock frequency.
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          -@- All the peripheral clocks are derived from the System clock (SYSCLK) except those
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              with dual clock domain where kernel source clock could be selected through
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              RCC_D1CCIPR,RCC_D2CCIP1R,RCC_D2CCIP2R and RCC_D3CCIPR registers.
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      (*) : 2 Domains (CD and SRD) for stm32h7a3xx and stm32h7b3xx family lines.
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** @endverbatim
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - HSE, PLL1, PLL2 and PLL3 OFF
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - AHB, APB Bus pre-scaler set to 1.
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - All interrupts disabled
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - Peripheral clocks
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval HAL status
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
  27              		.loc 1 189 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 38B5     		push	{r3, r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 3, -16
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t tickstart;
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Increasing the CPU frequency */
ARM GAS  /tmp/ccOQTb5n.s 			page 5


 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (FLASH_LATENCY_DEFAULT  > __HAL_FLASH_GET_LATENCY())
  38              		.loc 1 193 0
  39 0002 694B     		ldr	r3, .L32
  40 0004 1B68     		ldr	r3, [r3]
  41 0006 03F00F03 		and	r3, r3, #15
  42 000a 062B     		cmp	r3, #6
  43 000c 0ED8     		bhi	.L2
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLASH_LATENCY_DEFAULT);
  44              		.loc 1 196 0
  45 000e 664A     		ldr	r2, .L32
  46 0010 1368     		ldr	r3, [r2]
  47 0012 23F00F03 		bic	r3, r3, #15
  48 0016 43F00703 		orr	r3, r3, #7
  49 001a 1360     		str	r3, [r2]
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if (__HAL_FLASH_GET_LATENCY() != FLASH_LATENCY_DEFAULT)
  50              		.loc 1 200 0
  51 001c 1368     		ldr	r3, [r2]
  52 001e 03F00F03 		and	r3, r3, #15
  53 0022 072B     		cmp	r3, #7
  54 0024 02D0     		beq	.L2
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_ERROR;
  55              		.loc 1 202 0
  56 0026 0124     		movs	r4, #1
  57              	.L3:
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Set HSION bit */
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till HSI is ready */
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Set HSITRIM[6:0] bits to the reset value */
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SET_BIT(RCC->HSICFGR, RCC_HSICFGR_HSITRIM_6);
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset CFGR register */
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Update the SystemCoreClock and SystemD2Clock global variables */
ARM GAS  /tmp/ccOQTb5n.s 			page 6


 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemD2Clock = HSI_VALUE;
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Adapt Systick interrupt period */
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (HAL_InitTick(uwTickPrio) != HAL_OK)
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     return HAL_ERROR;
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till clock switch is ready */
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != 0U)
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset CSION, CSIKERON, HSEON, HSI48ON, HSECSSON, HSIDIV bits */
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSIKERON | RCC_CR_HSIDIV | RCC_CR_HSIDIVF | RCC_CR_CSION
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             | RCC_CR_HSI48ON | RCC_CR_CSSHSEON);
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till HSE is disabled */
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Clear PLLON bit */
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL1ON);
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till PLL is disabled */
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL2ON bit */
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL2ON);
ARM GAS  /tmp/ccOQTb5n.s 			page 7


 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till PLL2 is disabled */
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL2RDY) != 0U)
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL3 bit */
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL3ON);
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till PLL3 is disabled */
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL3RDY) != 0U)
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_HPRE)
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset D1CFGR register */
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->D1CFGR);
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset D2CFGR register */
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->D2CFGR);
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset D3CFGR register */
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->D3CFGR);
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset CDCFGR1 register */
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->CDCFGR1);
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset CDCFGR2 register */
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->CDCFGR2);
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset SRDCFGR register */
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->SRDCFGR);
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLLCKSELR register to default value */
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC->PLLCKSELR = RCC_PLLCKSELR_DIVM1_5 | RCC_PLLCKSELR_DIVM2_5 | RCC_PLLCKSELR_DIVM3_5;
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLLCFGR register to default value */
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->PLLCFGR, 0x01FF0000U);
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL1DIVR register to default value */
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->PLL1DIVR, 0x01010280U);
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL1FRACR register */
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->PLL1FRACR);
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccOQTb5n.s 			page 8


 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL2DIVR register to default value */
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->PLL2DIVR, 0x01010280U);
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL2FRACR register */
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->PLL2FRACR);
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL3DIVR register to default value */
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->PLL3DIVR, 0x01010280U);
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL3FRACR register */
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->PLL3FRACR);
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_CR_HSEEXT)
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset HSEEXT  */
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEEXT);
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif /* RCC_CR_HSEEXT */
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Disable all interrupts */
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->CIER);
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Clear all interrupts flags */
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->CICR, 0xFFFFFFFFU);
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset all RSR flags */
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SET_BIT(RCC->RSR, RCC_RSR_RMVF);
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (FLASH_LATENCY_DEFAULT  < __HAL_FLASH_GET_LATENCY())
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLASH_LATENCY_DEFAULT);
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if (__HAL_FLASH_GET_LATENCY() != FLASH_LATENCY_DEFAULT)
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_ERROR;
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return HAL_OK;
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
  58              		.loc 1 389 0
  59 0028 2046     		mov	r0, r4
  60 002a 38BD     		pop	{r3, r4, r5, pc}
  61              	.L2:
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  62              		.loc 1 209 0
  63 002c FFF7FEFF 		bl	HAL_GetTick
  64              	.LVL0:
  65 0030 0446     		mov	r4, r0
  66              	.LVL1:
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccOQTb5n.s 			page 9


  67              		.loc 1 212 0
  68 0032 5E4A     		ldr	r2, .L32+4
  69 0034 1368     		ldr	r3, [r2]
  70 0036 43F00103 		orr	r3, r3, #1
  71 003a 1360     		str	r3, [r2]
  72              	.LVL2:
  73              	.L4:
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
  74              		.loc 1 215 0
  75 003c 5B4B     		ldr	r3, .L32+4
  76 003e 1B68     		ldr	r3, [r3]
  77 0040 13F0040F 		tst	r3, #4
  78 0044 06D1     		bne	.L25
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
  79              		.loc 1 217 0
  80 0046 FFF7FEFF 		bl	HAL_GetTick
  81              	.LVL3:
  82 004a 001B     		subs	r0, r0, r4
  83 004c 0228     		cmp	r0, #2
  84 004e F5D9     		bls	.L4
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
  85              		.loc 1 219 0
  86 0050 0324     		movs	r4, #3
  87              	.LVL4:
  88 0052 E9E7     		b	.L3
  89              	.LVL5:
  90              	.L25:
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  91              		.loc 1 224 0
  92 0054 554B     		ldr	r3, .L32+4
  93 0056 5A68     		ldr	r2, [r3, #4]
  94 0058 42F08042 		orr	r2, r2, #1073741824
  95 005c 5A60     		str	r2, [r3, #4]
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  96              		.loc 1 227 0
  97 005e 0022     		movs	r2, #0
  98 0060 1A61     		str	r2, [r3, #16]
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemD2Clock = HSI_VALUE;
  99              		.loc 1 230 0
 100 0062 534B     		ldr	r3, .L32+8
 101 0064 534A     		ldr	r2, .L32+12
 102 0066 1360     		str	r3, [r2]
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 103              		.loc 1 231 0
 104 0068 534A     		ldr	r2, .L32+16
 105 006a 1360     		str	r3, [r2]
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 106              		.loc 1 234 0
 107 006c 534B     		ldr	r3, .L32+20
 108 006e 1868     		ldr	r0, [r3]
 109 0070 FFF7FEFF 		bl	HAL_InitTick
 110              	.LVL6:
 111 0074 0446     		mov	r4, r0
 112              	.LVL7:
 113 0076 08B1     		cbz	r0, .L26
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 114              		.loc 1 236 0
ARM GAS  /tmp/ccOQTb5n.s 			page 10


 115 0078 0124     		movs	r4, #1
 116 007a D5E7     		b	.L3
 117              	.L26:
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 118              		.loc 1 240 0
 119 007c FFF7FEFF 		bl	HAL_GetTick
 120              	.LVL8:
 121 0080 0546     		mov	r5, r0
 122              	.LVL9:
 123              	.L6:
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 124              		.loc 1 243 0
 125 0082 4A4B     		ldr	r3, .L32+4
 126 0084 1B69     		ldr	r3, [r3, #16]
 127 0086 13F0380F 		tst	r3, #56
 128 008a 08D0     		beq	.L27
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 129              		.loc 1 245 0
 130 008c FFF7FEFF 		bl	HAL_GetTick
 131              	.LVL10:
 132 0090 401B     		subs	r0, r0, r5
 133 0092 41F28833 		movw	r3, #5000
 134 0096 9842     		cmp	r0, r3
 135 0098 F3D9     		bls	.L6
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 136              		.loc 1 247 0
 137 009a 0324     		movs	r4, #3
 138 009c C4E7     		b	.L3
 139              	.L27:
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 140              		.loc 1 252 0
 141 009e FFF7FEFF 		bl	HAL_GetTick
 142              	.LVL11:
 143 00a2 0546     		mov	r5, r0
 144              	.LVL12:
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             | RCC_CR_HSI48ON | RCC_CR_CSSHSEON);
 145              		.loc 1 255 0
 146 00a4 414A     		ldr	r2, .L32+4
 147 00a6 1168     		ldr	r1, [r2]
 148 00a8 454B     		ldr	r3, .L32+24
 149 00aa 0B40     		ands	r3, r3, r1
 150 00ac 1360     		str	r3, [r2]
 151              	.LVL13:
 152              	.L8:
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 153              		.loc 1 259 0
 154 00ae 3F4B     		ldr	r3, .L32+4
 155 00b0 1B68     		ldr	r3, [r3]
 156 00b2 13F4003F 		tst	r3, #131072
 157 00b6 06D0     		beq	.L28
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 158              		.loc 1 261 0
 159 00b8 FFF7FEFF 		bl	HAL_GetTick
 160              	.LVL14:
 161 00bc 401B     		subs	r0, r0, r5
 162 00be 6428     		cmp	r0, #100
 163 00c0 F5D9     		bls	.L8
ARM GAS  /tmp/ccOQTb5n.s 			page 11


 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 164              		.loc 1 263 0
 165 00c2 0324     		movs	r4, #3
 166 00c4 B0E7     		b	.L3
 167              	.L28:
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 168              		.loc 1 268 0
 169 00c6 FFF7FEFF 		bl	HAL_GetTick
 170              	.LVL15:
 171 00ca 0546     		mov	r5, r0
 172              	.LVL16:
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 173              		.loc 1 271 0
 174 00cc 374A     		ldr	r2, .L32+4
 175 00ce 1368     		ldr	r3, [r2]
 176 00d0 23F08073 		bic	r3, r3, #16777216
 177 00d4 1360     		str	r3, [r2]
 178              	.LVL17:
 179              	.L10:
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 180              		.loc 1 274 0
 181 00d6 354B     		ldr	r3, .L32+4
 182 00d8 1B68     		ldr	r3, [r3]
 183 00da 13F0007F 		tst	r3, #33554432
 184 00de 06D0     		beq	.L29
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 185              		.loc 1 276 0
 186 00e0 FFF7FEFF 		bl	HAL_GetTick
 187              	.LVL18:
 188 00e4 401B     		subs	r0, r0, r5
 189 00e6 0228     		cmp	r0, #2
 190 00e8 F5D9     		bls	.L10
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 191              		.loc 1 278 0
 192 00ea 0324     		movs	r4, #3
 193 00ec 9CE7     		b	.L3
 194              	.L29:
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 195              		.loc 1 283 0
 196 00ee FFF7FEFF 		bl	HAL_GetTick
 197              	.LVL19:
 198 00f2 0546     		mov	r5, r0
 199              	.LVL20:
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 200              		.loc 1 286 0
 201 00f4 2D4A     		ldr	r2, .L32+4
 202 00f6 1368     		ldr	r3, [r2]
 203 00f8 23F08063 		bic	r3, r3, #67108864
 204 00fc 1360     		str	r3, [r2]
 205              	.LVL21:
 206              	.L12:
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 207              		.loc 1 289 0
 208 00fe 2B4B     		ldr	r3, .L32+4
 209 0100 1B68     		ldr	r3, [r3]
 210 0102 13F0006F 		tst	r3, #134217728
 211 0106 06D0     		beq	.L30
ARM GAS  /tmp/ccOQTb5n.s 			page 12


 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 212              		.loc 1 291 0
 213 0108 FFF7FEFF 		bl	HAL_GetTick
 214              	.LVL22:
 215 010c 401B     		subs	r0, r0, r5
 216 010e 0228     		cmp	r0, #2
 217 0110 F5D9     		bls	.L12
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 218              		.loc 1 293 0
 219 0112 0324     		movs	r4, #3
 220 0114 88E7     		b	.L3
 221              	.L30:
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 222              		.loc 1 298 0
 223 0116 FFF7FEFF 		bl	HAL_GetTick
 224              	.LVL23:
 225 011a 0546     		mov	r5, r0
 226              	.LVL24:
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 227              		.loc 1 301 0
 228 011c 234A     		ldr	r2, .L32+4
 229 011e 1368     		ldr	r3, [r2]
 230 0120 23F08053 		bic	r3, r3, #268435456
 231 0124 1360     		str	r3, [r2]
 232              	.LVL25:
 233              	.L14:
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 234              		.loc 1 304 0
 235 0126 214B     		ldr	r3, .L32+4
 236 0128 1B68     		ldr	r3, [r3]
 237 012a 13F0005F 		tst	r3, #536870912
 238 012e 06D0     		beq	.L31
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 239              		.loc 1 306 0
 240 0130 FFF7FEFF 		bl	HAL_GetTick
 241              	.LVL26:
 242 0134 401B     		subs	r0, r0, r5
 243 0136 0228     		cmp	r0, #2
 244 0138 F5D9     		bls	.L14
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 245              		.loc 1 308 0
 246 013a 0324     		movs	r4, #3
 247 013c 74E7     		b	.L3
 248              	.L31:
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 249              		.loc 1 314 0
 250 013e 1B4B     		ldr	r3, .L32+4
 251 0140 0022     		movs	r2, #0
 252 0142 9A61     		str	r2, [r3, #24]
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 253              		.loc 1 317 0
 254 0144 DA61     		str	r2, [r3, #28]
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
 255              		.loc 1 320 0
 256 0146 1A62     		str	r2, [r3, #32]
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 257              		.loc 1 333 0
ARM GAS  /tmp/ccOQTb5n.s 			page 13


 258 0148 1E49     		ldr	r1, .L32+28
 259 014a 9962     		str	r1, [r3, #40]
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 260              		.loc 1 336 0
 261 014c 1E49     		ldr	r1, .L32+32
 262 014e D962     		str	r1, [r3, #44]
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 263              		.loc 1 339 0
 264 0150 1E49     		ldr	r1, .L32+36
 265 0152 1963     		str	r1, [r3, #48]
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 266              		.loc 1 342 0
 267 0154 5A63     		str	r2, [r3, #52]
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 268              		.loc 1 345 0
 269 0156 9963     		str	r1, [r3, #56]
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 270              		.loc 1 348 0
 271 0158 DA63     		str	r2, [r3, #60]
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 272              		.loc 1 351 0
 273 015a 1964     		str	r1, [r3, #64]
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 274              		.loc 1 354 0
 275 015c 5A64     		str	r2, [r3, #68]
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 276              		.loc 1 362 0
 277 015e 1968     		ldr	r1, [r3]
 278 0160 21F48021 		bic	r1, r1, #262144
 279 0164 1960     		str	r1, [r3]
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 280              		.loc 1 365 0
 281 0166 1A66     		str	r2, [r3, #96]
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 282              		.loc 1 368 0
 283 0168 4FF0FF32 		mov	r2, #-1
 284 016c 9A66     		str	r2, [r3, #104]
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 285              		.loc 1 371 0
 286 016e D3F8D020 		ldr	r2, [r3, #208]
 287 0172 42F48032 		orr	r2, r2, #65536
 288 0176 C3F8D020 		str	r2, [r3, #208]
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 289              		.loc 1 374 0
 290 017a 0B4B     		ldr	r3, .L32
 291 017c 1B68     		ldr	r3, [r3]
 292 017e 03F00F03 		and	r3, r3, #15
 293 0182 072B     		cmp	r3, #7
 294 0184 7FF650AF 		bls	.L3
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 295              		.loc 1 377 0
 296 0188 074A     		ldr	r2, .L32
 297 018a 1368     		ldr	r3, [r2]
 298 018c 23F00F03 		bic	r3, r3, #15
 299 0190 43F00703 		orr	r3, r3, #7
 300 0194 1360     		str	r3, [r2]
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
ARM GAS  /tmp/ccOQTb5n.s 			page 14


 301              		.loc 1 381 0
 302 0196 1368     		ldr	r3, [r2]
 303 0198 03F00F03 		and	r3, r3, #15
 304 019c 072B     		cmp	r3, #7
 305 019e 3FF443AF 		beq	.L3
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 306              		.loc 1 383 0
 307 01a2 0124     		movs	r4, #1
 308 01a4 40E7     		b	.L3
 309              	.L33:
 310 01a6 00BF     		.align	2
 311              	.L32:
 312 01a8 00200052 		.word	1375739904
 313 01ac 00440258 		.word	1476543488
 314 01b0 0090D003 		.word	64000000
 315 01b4 00000000 		.word	SystemCoreClock
 316 01b8 00000000 		.word	SystemD2Clock
 317 01bc 00000000 		.word	uwTickPrio
 318 01c0 45EDF6FF 		.word	-594619
 319 01c4 00020202 		.word	33686016
 320 01c8 0000FF01 		.word	33488896
 321 01cc 80020101 		.word	16843392
 322              		.cfi_endproc
 323              	.LFE144:
 325              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 326              		.align	1
 327              		.weak	HAL_RCC_OscConfig
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 331              		.fpu fpv5-d16
 333              	HAL_RCC_OscConfig:
 334              	.LFB145:
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_OscInitStruct: pointer to an RCC_OscInitTypeDef structure that
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         supported by this function. User should request a transition to LSE Off
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         supported by this function. User should request a transition to HSE Off
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval HAL status
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 335              		.loc 1 406 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              	.LVL27:
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t tickstart;
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t temp1_pllckcfg, temp2_pllckcfg;
ARM GAS  /tmp/ccOQTb5n.s 			page 15


 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check Null pointer */
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (RCC_OscInitStruct == NULL)
 340              		.loc 1 411 0
 341 0000 0028     		cmp	r0, #0
 342 0002 00F04383 		beq	.L109
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t tickstart;
 343              		.loc 1 406 0
 344 0006 38B5     		push	{r3, r4, r5, lr}
 345              	.LCFI1:
 346              		.cfi_def_cfa_offset 16
 347              		.cfi_offset 3, -16
 348              		.cfi_offset 4, -12
 349              		.cfi_offset 5, -8
 350              		.cfi_offset 14, -4
 351 0008 0446     		mov	r4, r0
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     return HAL_ERROR;
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check the parameters */
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 352              		.loc 1 419 0
 353 000a 0368     		ldr	r3, [r0]
 354 000c 13F0010F 		tst	r3, #1
 355 0010 25D0     		beq	.L36
 356              	.LBB2:
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 357              		.loc 1 424 0
 358 0012 A84A     		ldr	r2, .L169
 359 0014 1369     		ldr	r3, [r2, #16]
 360 0016 03F03803 		and	r3, r3, #56
 361              	.LVL28:
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 362              		.loc 1 425 0
 363 001a 926A     		ldr	r2, [r2, #40]
 364              	.LVL29:
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pl
 365              		.loc 1 427 0
 366 001c 102B     		cmp	r3, #16
 367 001e 15D0     		beq	.L37
 368              		.loc 1 427 0 is_stmt 0 discriminator 1
 369 0020 182B     		cmp	r3, #24
 370 0022 0FD0     		beq	.L143
 371              	.LVL30:
 372              	.L38:
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OF
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
ARM GAS  /tmp/ccOQTb5n.s 			page 16


 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 373              		.loc 1 437 0 is_stmt 1
 374 0024 6368     		ldr	r3, [r4, #4]
 375              	.LVL31:
 376 0026 B3F5803F 		cmp	r3, #65536
 377 002a 3FD0     		beq	.L144
 378              		.loc 1 437 0 is_stmt 0 discriminator 2
 379 002c 002B     		cmp	r3, #0
 380 002e 53D1     		bne	.L41
 381              		.loc 1 437 0 discriminator 3
 382 0030 A04B     		ldr	r3, .L169
 383 0032 1A68     		ldr	r2, [r3]
 384 0034 22F48032 		bic	r2, r2, #65536
 385 0038 1A60     		str	r2, [r3]
 386 003a 1A68     		ldr	r2, [r3]
 387 003c 22F48022 		bic	r2, r2, #262144
 388 0040 1A60     		str	r2, [r3]
 389 0042 38E0     		b	.L40
 390              	.LVL32:
 391              	.L143:
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 392              		.loc 1 427 0 is_stmt 1 discriminator 2
 393 0044 02F00302 		and	r2, r2, #3
 394              	.LVL33:
 395 0048 022A     		cmp	r2, #2
 396 004a EBD1     		bne	.L38
 397              	.L37:
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 398              		.loc 1 429 0
 399 004c 994B     		ldr	r3, .L169
 400              	.LVL34:
 401 004e 1B68     		ldr	r3, [r3]
 402 0050 13F4003F 		tst	r3, #131072
 403 0054 03D0     		beq	.L36
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 404              		.loc 1 429 0 is_stmt 0 discriminator 1
 405 0056 6368     		ldr	r3, [r4, #4]
 406 0058 002B     		cmp	r3, #0
 407 005a 00F01983 		beq	.L145
 408              	.LVL35:
 409              	.L36:
 410              	.LBE2:
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Check the HSE State */
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSE is ready */
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
ARM GAS  /tmp/ccOQTb5n.s 			page 17


 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 411              		.loc 1 471 0 is_stmt 1
 412 005e 2368     		ldr	r3, [r4]
 413 0060 13F0020F 		tst	r3, #2
 414 0064 00F0A180 		beq	.L48
 415              	.LBB3:
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_HSICALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* When the HSI is used as system clock it will not be disabled */
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 416              		.loc 1 478 0
 417 0068 924A     		ldr	r2, .L169
 418 006a 1369     		ldr	r3, [r2, #16]
 419              	.LVL36:
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 420              		.loc 1 479 0
 421 006c 926A     		ldr	r2, [r2, #40]
 422              	.LVL37:
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pl
 423              		.loc 1 480 0
 424 006e 13F03803 		ands	r3, r3, #56
 425              	.LVL38:
 426 0072 5AD0     		beq	.L49
 427              		.loc 1 480 0 is_stmt 0 discriminator 1
 428 0074 182B     		cmp	r3, #24
 429 0076 55D0     		beq	.L146
 430              	.L50:
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* When HSI is used as system clock it will not be disabled */
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OF
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccOQTb5n.s 			page 18


 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Otherwise, only HSI division and calibration are allowed */
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI, HSIDIV2, HSIDIV4, or HSIDIV8) */
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSI is ready */
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Check the HSI State */
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 431              		.loc 1 512 0 is_stmt 1
 432 0078 E368     		ldr	r3, [r4, #12]
 433              	.LVL39:
 434 007a 002B     		cmp	r3, #0
 435 007c 00F0DE80 		beq	.L56
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI, HSIDIV2,HSIDIV4, or HSIDIV8) */
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 436              		.loc 1 515 0
 437 0080 8C49     		ldr	r1, .L169
 438 0082 0A68     		ldr	r2, [r1]
 439              	.LVL40:
 440 0084 22F01902 		bic	r2, r2, #25
 441 0088 1343     		orrs	r3, r3, r2
 442 008a 0B60     		str	r3, [r1]
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 443              		.loc 1 518 0
 444 008c FFF7FEFF 		bl	HAL_GetTick
 445              	.LVL41:
 446 0090 0546     		mov	r5, r0
 447              	.LVL42:
 448              	.L57:
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSI is ready */
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 449              		.loc 1 521 0
 450 0092 884B     		ldr	r3, .L169
ARM GAS  /tmp/ccOQTb5n.s 			page 19


 451 0094 1B68     		ldr	r3, [r3]
 452 0096 13F0040F 		tst	r3, #4
 453 009a 40F0AD80 		bne	.L147
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 454              		.loc 1 523 0
 455 009e FFF7FEFF 		bl	HAL_GetTick
 456              	.LVL43:
 457 00a2 401B     		subs	r0, r0, r5
 458 00a4 0228     		cmp	r0, #2
 459 00a6 F4D9     		bls	.L57
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 460              		.loc 1 525 0
 461 00a8 0320     		movs	r0, #3
 462 00aa F6E2     		b	.L35
 463              	.LVL44:
 464              	.L144:
 465              	.LBE3:
 466              	.LBB4:
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 467              		.loc 1 437 0 discriminator 1
 468 00ac 814A     		ldr	r2, .L169
 469 00ae 1368     		ldr	r3, [r2]
 470 00b0 43F48033 		orr	r3, r3, #65536
 471 00b4 1360     		str	r3, [r2]
 472              	.L40:
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 473              		.loc 1 440 0
 474 00b6 6368     		ldr	r3, [r4, #4]
 475 00b8 2BB3     		cbz	r3, .L43
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 476              		.loc 1 443 0
 477 00ba FFF7FEFF 		bl	HAL_GetTick
 478              	.LVL45:
 479 00be 0546     		mov	r5, r0
 480              	.LVL46:
 481              	.L44:
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 482              		.loc 1 446 0
 483 00c0 7C4B     		ldr	r3, .L169
 484 00c2 1B68     		ldr	r3, [r3]
 485 00c4 13F4003F 		tst	r3, #131072
 486 00c8 C9D1     		bne	.L36
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 487              		.loc 1 448 0
 488 00ca FFF7FEFF 		bl	HAL_GetTick
 489              	.LVL47:
 490 00ce 401B     		subs	r0, r0, r5
 491 00d0 6428     		cmp	r0, #100
 492 00d2 F5D9     		bls	.L44
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 493              		.loc 1 450 0
 494 00d4 0320     		movs	r0, #3
 495 00d6 E0E2     		b	.L35
 496              	.LVL48:
 497              	.L41:
ARM GAS  /tmp/ccOQTb5n.s 			page 20


 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 498              		.loc 1 437 0 discriminator 4
 499 00d8 B3F5A02F 		cmp	r3, #327680
 500 00dc 09D0     		beq	.L148
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 501              		.loc 1 437 0 is_stmt 0 discriminator 6
 502 00de 754B     		ldr	r3, .L169
 503 00e0 1A68     		ldr	r2, [r3]
 504 00e2 22F48032 		bic	r2, r2, #65536
 505 00e6 1A60     		str	r2, [r3]
 506 00e8 1A68     		ldr	r2, [r3]
 507 00ea 22F48022 		bic	r2, r2, #262144
 508 00ee 1A60     		str	r2, [r3]
 509 00f0 E1E7     		b	.L40
 510              	.L148:
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 511              		.loc 1 437 0 discriminator 5
 512 00f2 704B     		ldr	r3, .L169
 513 00f4 1A68     		ldr	r2, [r3]
 514 00f6 42F48022 		orr	r2, r2, #262144
 515 00fa 1A60     		str	r2, [r3]
 516 00fc 1A68     		ldr	r2, [r3]
 517 00fe 42F48032 		orr	r2, r2, #65536
 518 0102 1A60     		str	r2, [r3]
 519 0104 D7E7     		b	.L40
 520              	.L43:
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 521              		.loc 1 457 0 is_stmt 1
 522 0106 FFF7FEFF 		bl	HAL_GetTick
 523              	.LVL49:
 524 010a 0546     		mov	r5, r0
 525              	.LVL50:
 526              	.L46:
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 527              		.loc 1 460 0
 528 010c 694B     		ldr	r3, .L169
 529 010e 1B68     		ldr	r3, [r3]
 530 0110 13F4003F 		tst	r3, #131072
 531 0114 A3D0     		beq	.L36
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 532              		.loc 1 462 0
 533 0116 FFF7FEFF 		bl	HAL_GetTick
 534              	.LVL51:
 535 011a 401B     		subs	r0, r0, r5
 536 011c 6428     		cmp	r0, #100
 537 011e F5D9     		bls	.L46
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 538              		.loc 1 464 0
 539 0120 0320     		movs	r0, #3
 540 0122 BAE2     		b	.L35
 541              	.LVL52:
 542              	.L146:
 543              	.LBE4:
 544              	.LBB5:
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 545              		.loc 1 480 0 discriminator 2
 546 0124 12F0030F 		tst	r2, #3
ARM GAS  /tmp/ccOQTb5n.s 			page 21


 547 0128 A6D1     		bne	.L50
 548              	.L49:
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 549              		.loc 1 483 0
 550 012a 624B     		ldr	r3, .L169
 551              	.LVL53:
 552 012c 1B68     		ldr	r3, [r3]
 553 012e 13F0040F 		tst	r3, #4
 554 0132 03D0     		beq	.L51
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 555              		.loc 1 483 0 is_stmt 0 discriminator 1
 556 0134 E368     		ldr	r3, [r4, #12]
 557 0136 002B     		cmp	r3, #0
 558 0138 00F0AC82 		beq	.L113
 559              	.L51:
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 560              		.loc 1 491 0 is_stmt 1
 561 013c 5D4A     		ldr	r2, .L169
 562              	.LVL54:
 563 013e 1368     		ldr	r3, [r2]
 564 0140 23F01903 		bic	r3, r3, #25
 565 0144 E168     		ldr	r1, [r4, #12]
 566 0146 0B43     		orrs	r3, r3, r1
 567 0148 1360     		str	r3, [r2]
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 568              		.loc 1 494 0
 569 014a FFF7FEFF 		bl	HAL_GetTick
 570              	.LVL55:
 571 014e 0546     		mov	r5, r0
 572              	.LVL56:
 573              	.L52:
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 574              		.loc 1 497 0
 575 0150 584B     		ldr	r3, .L169
 576 0152 1B68     		ldr	r3, [r3]
 577 0154 13F0040F 		tst	r3, #4
 578 0158 06D1     		bne	.L149
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 579              		.loc 1 499 0
 580 015a FFF7FEFF 		bl	HAL_GetTick
 581              	.LVL57:
 582 015e 401B     		subs	r0, r0, r5
 583 0160 0228     		cmp	r0, #2
 584 0162 F5D9     		bls	.L52
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 585              		.loc 1 501 0
 586 0164 0320     		movs	r0, #3
 587 0166 98E2     		b	.L35
 588              	.L149:
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 589              		.loc 1 505 0
 590 0168 FFF7FEFF 		bl	HAL_GetREVID
 591              	.LVL58:
 592 016c 41F20303 		movw	r3, #4099
 593 0170 9842     		cmp	r0, r3
 594 0172 12D8     		bhi	.L54
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
ARM GAS  /tmp/ccOQTb5n.s 			page 22


 595              		.loc 1 505 0 is_stmt 0 discriminator 1
 596 0174 2269     		ldr	r2, [r4, #16]
 597 0176 402A     		cmp	r2, #64
 598 0178 07D0     		beq	.L150
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 599              		.loc 1 505 0 discriminator 4
 600 017a 4E49     		ldr	r1, .L169
 601 017c 4B68     		ldr	r3, [r1, #4]
 602 017e 23F47C33 		bic	r3, r3, #258048
 603 0182 43EA0233 		orr	r3, r3, r2, lsl #12
 604 0186 4B60     		str	r3, [r1, #4]
 605 0188 0FE0     		b	.L48
 606              	.L150:
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 607              		.loc 1 505 0 discriminator 3
 608 018a 4A4A     		ldr	r2, .L169
 609 018c 5368     		ldr	r3, [r2, #4]
 610 018e 23F47C33 		bic	r3, r3, #258048
 611 0192 43F40033 		orr	r3, r3, #131072
 612 0196 5360     		str	r3, [r2, #4]
 613 0198 07E0     		b	.L48
 614              	.L54:
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 615              		.loc 1 505 0 discriminator 2
 616 019a 464A     		ldr	r2, .L169
 617 019c 5368     		ldr	r3, [r2, #4]
 618 019e 23F0FE43 		bic	r3, r3, #2130706432
 619 01a2 2169     		ldr	r1, [r4, #16]
 620 01a4 43EA0163 		orr	r3, r3, r1, lsl #24
 621 01a8 5360     		str	r3, [r2, #4]
 622              	.LVL59:
 623              	.L48:
 624              	.LBE5:
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccOQTb5n.s 			page 23


 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*----------------------------- CSI Configuration --------------------------*/
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 625              		.loc 1 552 0 is_stmt 1
 626 01aa 2368     		ldr	r3, [r4]
 627 01ac 13F0100F 		tst	r3, #16
 628 01b0 00F08A80 		beq	.L63
 629              	.LBB6:
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_CSI(RCC_OscInitStruct->CSIState));
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_CSICALIBRATION_VALUE(RCC_OscInitStruct->CSICalibrationValue));
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* When the CSI is used as system clock it will not disabled */
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 630              		.loc 1 559 0
 631 01b4 3F4A     		ldr	r2, .L169
 632 01b6 1369     		ldr	r3, [r2, #16]
 633 01b8 03F03803 		and	r3, r3, #56
 634              	.LVL60:
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 635              		.loc 1 560 0
 636 01bc 926A     		ldr	r2, [r2, #40]
 637              	.LVL61:
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pl
 638              		.loc 1 561 0
 639 01be 082B     		cmp	r3, #8
 640 01c0 54D0     		beq	.L64
 641              		.loc 1 561 0 is_stmt 0 discriminator 1
 642 01c2 182B     		cmp	r3, #24
 643 01c4 4ED0     		beq	.L151
 644              	.LVL62:
 645              	.L65:
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* When CSI is used as system clock it will not disabled */
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Check the CSI State */
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
 646              		.loc 1 578 0 is_stmt 1
 647 01c6 E369     		ldr	r3, [r4, #28]
 648              	.LVL63:
 649 01c8 002B     		cmp	r3, #0
 650 01ca 00F0BA80 		beq	.L69
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (CSI). */
ARM GAS  /tmp/ccOQTb5n.s 			page 24


 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_CSI_ENABLE();
 651              		.loc 1 581 0
 652 01ce 394A     		ldr	r2, .L169
 653 01d0 1368     		ldr	r3, [r2]
 654 01d2 43F08003 		orr	r3, r3, #128
 655 01d6 1360     		str	r3, [r2]
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 656              		.loc 1 584 0
 657 01d8 FFF7FEFF 		bl	HAL_GetTick
 658              	.LVL64:
 659 01dc 0546     		mov	r5, r0
 660              	.LVL65:
 661              	.L70:
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till CSI is ready */
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 662              		.loc 1 587 0
 663 01de 354B     		ldr	r3, .L169
 664 01e0 1B68     		ldr	r3, [r3]
 665 01e2 13F4807F 		tst	r3, #256
 666 01e6 40F08A80 		bne	.L152
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 667              		.loc 1 589 0
 668 01ea FFF7FEFF 		bl	HAL_GetTick
 669              	.LVL66:
 670 01ee 401B     		subs	r0, r0, r5
 671 01f0 0228     		cmp	r0, #2
 672 01f2 F4D9     		bls	.L70
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 673              		.loc 1 591 0
 674 01f4 0320     		movs	r0, #3
 675 01f6 50E2     		b	.L35
 676              	.L147:
 677              	.LBE6:
 678              	.LBB7:
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 679              		.loc 1 530 0
 680 01f8 FFF7FEFF 		bl	HAL_GetREVID
 681              	.LVL67:
 682 01fc 41F20303 		movw	r3, #4099
 683 0200 9842     		cmp	r0, r3
 684 0202 12D8     		bhi	.L59
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 685              		.loc 1 530 0 is_stmt 0 discriminator 1
 686 0204 2269     		ldr	r2, [r4, #16]
 687 0206 402A     		cmp	r2, #64
 688 0208 07D0     		beq	.L153
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 689              		.loc 1 530 0 discriminator 4
 690 020a 2A49     		ldr	r1, .L169
 691 020c 4B68     		ldr	r3, [r1, #4]
 692 020e 23F47C33 		bic	r3, r3, #258048
 693 0212 43EA0233 		orr	r3, r3, r2, lsl #12
ARM GAS  /tmp/ccOQTb5n.s 			page 25


 694 0216 4B60     		str	r3, [r1, #4]
 695 0218 C7E7     		b	.L48
 696              	.L153:
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 697              		.loc 1 530 0 discriminator 3
 698 021a 264A     		ldr	r2, .L169
 699 021c 5368     		ldr	r3, [r2, #4]
 700 021e 23F47C33 		bic	r3, r3, #258048
 701 0222 43F40033 		orr	r3, r3, #131072
 702 0226 5360     		str	r3, [r2, #4]
 703 0228 BFE7     		b	.L48
 704              	.L59:
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 705              		.loc 1 530 0 discriminator 2
 706 022a 224A     		ldr	r2, .L169
 707 022c 5368     		ldr	r3, [r2, #4]
 708 022e 23F0FE43 		bic	r3, r3, #2130706432
 709 0232 2169     		ldr	r1, [r4, #16]
 710 0234 43EA0163 		orr	r3, r3, r1, lsl #24
 711 0238 5360     		str	r3, [r2, #4]
 712 023a B6E7     		b	.L48
 713              	.LVL68:
 714              	.L56:
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 715              		.loc 1 535 0 is_stmt 1
 716 023c 1D4A     		ldr	r2, .L169
 717              	.LVL69:
 718 023e 1368     		ldr	r3, [r2]
 719 0240 23F00103 		bic	r3, r3, #1
 720 0244 1360     		str	r3, [r2]
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 721              		.loc 1 538 0
 722 0246 FFF7FEFF 		bl	HAL_GetTick
 723              	.LVL70:
 724 024a 0546     		mov	r5, r0
 725              	.LVL71:
 726              	.L61:
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 727              		.loc 1 541 0
 728 024c 194B     		ldr	r3, .L169
 729 024e 1B68     		ldr	r3, [r3]
 730 0250 13F0040F 		tst	r3, #4
 731 0254 A9D0     		beq	.L48
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 732              		.loc 1 543 0
 733 0256 FFF7FEFF 		bl	HAL_GetTick
 734              	.LVL72:
 735 025a 401B     		subs	r0, r0, r5
 736 025c 0228     		cmp	r0, #2
 737 025e F5D9     		bls	.L61
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 738              		.loc 1 545 0
 739 0260 0320     		movs	r0, #3
 740 0262 1AE2     		b	.L35
 741              	.LVL73:
 742              	.L151:
 743              	.LBE7:
ARM GAS  /tmp/ccOQTb5n.s 			page 26


 744              	.LBB8:
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 745              		.loc 1 561 0 discriminator 2
 746 0264 02F00302 		and	r2, r2, #3
 747              	.LVL74:
 748 0268 012A     		cmp	r2, #1
 749 026a ACD1     		bne	.L65
 750              	.L64:
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 751              		.loc 1 564 0
 752 026c 114B     		ldr	r3, .L169
 753              	.LVL75:
 754 026e 1B68     		ldr	r3, [r3]
 755 0270 13F4807F 		tst	r3, #256
 756 0274 04D0     		beq	.L66
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 757              		.loc 1 564 0 is_stmt 0 discriminator 1
 758 0276 E369     		ldr	r3, [r4, #28]
 759 0278 802B     		cmp	r3, #128
 760 027a 01D0     		beq	.L66
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 761              		.loc 1 566 0 is_stmt 1
 762 027c 0120     		movs	r0, #1
 763 027e 0CE2     		b	.L35
 764              	.L66:
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 765              		.loc 1 572 0
 766 0280 FFF7FEFF 		bl	HAL_GetREVID
 767              	.LVL76:
 768 0284 41F20303 		movw	r3, #4099
 769 0288 9842     		cmp	r0, r3
 770 028a 15D8     		bhi	.L67
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 771              		.loc 1 572 0 is_stmt 0 discriminator 1
 772 028c 226A     		ldr	r2, [r4, #32]
 773 028e 202A     		cmp	r2, #32
 774 0290 07D0     		beq	.L154
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 775              		.loc 1 572 0 discriminator 4
 776 0292 0849     		ldr	r1, .L169
 777 0294 4B68     		ldr	r3, [r1, #4]
 778 0296 23F0F843 		bic	r3, r3, #2080374784
 779 029a 43EA8263 		orr	r3, r3, r2, lsl #26
 780 029e 4B60     		str	r3, [r1, #4]
 781 02a0 12E0     		b	.L63
 782              	.L154:
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 783              		.loc 1 572 0 discriminator 3
 784 02a2 044A     		ldr	r2, .L169
 785 02a4 5368     		ldr	r3, [r2, #4]
 786 02a6 23F0F843 		bic	r3, r3, #2080374784
 787 02aa 43F08043 		orr	r3, r3, #1073741824
 788 02ae 5360     		str	r3, [r2, #4]
 789 02b0 0AE0     		b	.L63
 790              	.L170:
 791 02b2 00BF     		.align	2
 792              	.L169:
ARM GAS  /tmp/ccOQTb5n.s 			page 27


 793 02b4 00440258 		.word	1476543488
 794              	.L67:
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 795              		.loc 1 572 0 discriminator 2
 796 02b8 9A4A     		ldr	r2, .L171
 797 02ba D368     		ldr	r3, [r2, #12]
 798 02bc 23F07C53 		bic	r3, r3, #1056964608
 799 02c0 216A     		ldr	r1, [r4, #32]
 800 02c2 43EA0163 		orr	r3, r3, r1, lsl #24
 801 02c6 D360     		str	r3, [r2, #12]
 802              	.L63:
 803              	.LBE8:
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (CSI). */
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_CSI_DISABLE();
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till CSI is disabled */
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 804              		.loc 1 618 0 is_stmt 1
 805 02c8 2368     		ldr	r3, [r4]
 806 02ca 13F0080F 		tst	r3, #8
 807 02ce 60D0     		beq	.L76
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSI State */
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 808              		.loc 1 624 0
 809 02d0 6369     		ldr	r3, [r4, #20]
 810 02d2 002B     		cmp	r3, #0
 811 02d4 49D0     		beq	.L77
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 812              		.loc 1 627 0
ARM GAS  /tmp/ccOQTb5n.s 			page 28


 813 02d6 934A     		ldr	r2, .L171
 814 02d8 536F     		ldr	r3, [r2, #116]
 815 02da 43F00103 		orr	r3, r3, #1
 816 02de 5367     		str	r3, [r2, #116]
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 817              		.loc 1 630 0
 818 02e0 FFF7FEFF 		bl	HAL_GetTick
 819              	.LVL77:
 820 02e4 0546     		mov	r5, r0
 821              	.LVL78:
 822              	.L78:
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till LSI is ready */
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 823              		.loc 1 633 0
 824 02e6 8F4B     		ldr	r3, .L171
 825 02e8 5B6F     		ldr	r3, [r3, #116]
 826 02ea 13F0020F 		tst	r3, #2
 827 02ee 50D1     		bne	.L76
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 828              		.loc 1 635 0
 829 02f0 FFF7FEFF 		bl	HAL_GetTick
 830              	.LVL79:
 831 02f4 401B     		subs	r0, r0, r5
 832 02f6 0228     		cmp	r0, #2
 833 02f8 F5D9     		bls	.L78
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 834              		.loc 1 637 0
 835 02fa 0320     		movs	r0, #3
 836 02fc CDE1     		b	.L35
 837              	.L152:
 838              	.LBB9:
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 839              		.loc 1 596 0
 840 02fe FFF7FEFF 		bl	HAL_GetREVID
 841              	.LVL80:
 842 0302 41F20303 		movw	r3, #4099
 843 0306 9842     		cmp	r0, r3
 844 0308 12D8     		bhi	.L72
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 845              		.loc 1 596 0 is_stmt 0 discriminator 1
 846 030a 226A     		ldr	r2, [r4, #32]
 847 030c 202A     		cmp	r2, #32
 848 030e 07D0     		beq	.L155
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 849              		.loc 1 596 0 discriminator 4
 850 0310 8449     		ldr	r1, .L171
 851 0312 4B68     		ldr	r3, [r1, #4]
 852 0314 23F0F843 		bic	r3, r3, #2080374784
 853 0318 43EA8263 		orr	r3, r3, r2, lsl #26
 854 031c 4B60     		str	r3, [r1, #4]
 855 031e D3E7     		b	.L63
 856              	.L155:
ARM GAS  /tmp/ccOQTb5n.s 			page 29


 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 857              		.loc 1 596 0 discriminator 3
 858 0320 804A     		ldr	r2, .L171
 859 0322 5368     		ldr	r3, [r2, #4]
 860 0324 23F0F843 		bic	r3, r3, #2080374784
 861 0328 43F08043 		orr	r3, r3, #1073741824
 862 032c 5360     		str	r3, [r2, #4]
 863 032e CBE7     		b	.L63
 864              	.L72:
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 865              		.loc 1 596 0 discriminator 2
 866 0330 7C4A     		ldr	r2, .L171
 867 0332 D368     		ldr	r3, [r2, #12]
 868 0334 23F07C53 		bic	r3, r3, #1056964608
 869 0338 216A     		ldr	r1, [r4, #32]
 870 033a 43EA0163 		orr	r3, r3, r1, lsl #24
 871 033e D360     		str	r3, [r2, #12]
 872 0340 C2E7     		b	.L63
 873              	.LVL81:
 874              	.L69:
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 875              		.loc 1 601 0 is_stmt 1
 876 0342 784A     		ldr	r2, .L171
 877 0344 1368     		ldr	r3, [r2]
 878 0346 23F08003 		bic	r3, r3, #128
 879 034a 1360     		str	r3, [r2]
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 880              		.loc 1 604 0
 881 034c FFF7FEFF 		bl	HAL_GetTick
 882              	.LVL82:
 883 0350 0546     		mov	r5, r0
 884              	.LVL83:
 885              	.L74:
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 886              		.loc 1 607 0
 887 0352 744B     		ldr	r3, .L171
 888 0354 1B68     		ldr	r3, [r3]
 889 0356 13F4807F 		tst	r3, #256
 890 035a B5D0     		beq	.L63
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 891              		.loc 1 609 0
 892 035c FFF7FEFF 		bl	HAL_GetTick
 893              	.LVL84:
 894 0360 401B     		subs	r0, r0, r5
 895 0362 0228     		cmp	r0, #2
 896 0364 F5D9     		bls	.L74
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 897              		.loc 1 611 0
 898 0366 0320     		movs	r0, #3
 899 0368 97E1     		b	.L35
 900              	.LVL85:
 901              	.L77:
 902              	.LBE9:
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
ARM GAS  /tmp/ccOQTb5n.s 			page 30


 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 903              		.loc 1 644 0
 904 036a 6E4A     		ldr	r2, .L171
 905 036c 536F     		ldr	r3, [r2, #116]
 906 036e 23F00103 		bic	r3, r3, #1
 907 0372 5367     		str	r3, [r2, #116]
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 908              		.loc 1 647 0
 909 0374 FFF7FEFF 		bl	HAL_GetTick
 910              	.LVL86:
 911 0378 0546     		mov	r5, r0
 912              	.LVL87:
 913              	.L80:
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till LSI is ready */
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 914              		.loc 1 650 0
 915 037a 6A4B     		ldr	r3, .L171
 916 037c 5B6F     		ldr	r3, [r3, #116]
 917 037e 13F0020F 		tst	r3, #2
 918 0382 06D0     		beq	.L76
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 919              		.loc 1 652 0
 920 0384 FFF7FEFF 		bl	HAL_GetTick
 921              	.LVL88:
 922 0388 401B     		subs	r0, r0, r5
 923 038a 0228     		cmp	r0, #2
 924 038c F5D9     		bls	.L80
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 925              		.loc 1 654 0
 926 038e 0320     		movs	r0, #3
 927 0390 83E1     		b	.L35
 928              	.LVL89:
 929              	.L76:
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*------------------------------ HSI48 Configuration -------------------------*/
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 930              		.loc 1 661 0
 931 0392 2368     		ldr	r3, [r4]
 932 0394 13F0200F 		tst	r3, #32
 933 0398 29D0     		beq	.L82
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the HSI48 State */
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
ARM GAS  /tmp/ccOQTb5n.s 			page 31


 934              		.loc 1 667 0
 935 039a A369     		ldr	r3, [r4, #24]
 936 039c 9BB1     		cbz	r3, .L83
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (HSI48). */
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_HSI48_ENABLE();
 937              		.loc 1 670 0
 938 039e 614A     		ldr	r2, .L171
 939 03a0 1368     		ldr	r3, [r2]
 940 03a2 43F48053 		orr	r3, r3, #4096
 941 03a6 1360     		str	r3, [r2]
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get time-out */
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 942              		.loc 1 673 0
 943 03a8 FFF7FEFF 		bl	HAL_GetTick
 944              	.LVL90:
 945 03ac 0546     		mov	r5, r0
 946              	.LVL91:
 947              	.L84:
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till HSI48 is ready */
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 948              		.loc 1 676 0
 949 03ae 5D4B     		ldr	r3, .L171
 950 03b0 1B68     		ldr	r3, [r3]
 951 03b2 13F4005F 		tst	r3, #8192
 952 03b6 1AD1     		bne	.L82
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 953              		.loc 1 678 0
 954 03b8 FFF7FEFF 		bl	HAL_GetTick
 955              	.LVL92:
 956 03bc 401B     		subs	r0, r0, r5
 957 03be 0228     		cmp	r0, #2
 958 03c0 F5D9     		bls	.L84
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 959              		.loc 1 680 0
 960 03c2 0320     		movs	r0, #3
 961 03c4 69E1     		b	.L35
 962              	.LVL93:
 963              	.L83:
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (HSI48). */
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_HSI48_DISABLE();
 964              		.loc 1 687 0
 965 03c6 574A     		ldr	r2, .L171
 966 03c8 1368     		ldr	r3, [r2]
 967 03ca 23F48053 		bic	r3, r3, #4096
 968 03ce 1360     		str	r3, [r2]
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get time-out */
ARM GAS  /tmp/ccOQTb5n.s 			page 32


 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 969              		.loc 1 690 0
 970 03d0 FFF7FEFF 		bl	HAL_GetTick
 971              	.LVL94:
 972 03d4 0546     		mov	r5, r0
 973              	.LVL95:
 974              	.L86:
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till HSI48 is ready */
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 975              		.loc 1 693 0
 976 03d6 534B     		ldr	r3, .L171
 977 03d8 1B68     		ldr	r3, [r3]
 978 03da 13F4005F 		tst	r3, #8192
 979 03de 06D0     		beq	.L82
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 980              		.loc 1 695 0
 981 03e0 FFF7FEFF 		bl	HAL_GetTick
 982              	.LVL96:
 983 03e4 401B     		subs	r0, r0, r5
 984 03e6 0228     		cmp	r0, #2
 985 03e8 F5D9     		bls	.L86
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 986              		.loc 1 697 0
 987 03ea 0320     		movs	r0, #3
 988 03ec 55E1     		b	.L35
 989              	.LVL97:
 990              	.L82:
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 991              		.loc 1 703 0
 992 03ee 2368     		ldr	r3, [r4]
 993 03f0 13F0040F 		tst	r3, #4
 994 03f4 21D1     		bne	.L156
 995              	.L88:
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Enable write access to Backup domain */
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     PWR->CR1 |= PWR_CR1_DBP;
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Wait for Backup domain Write protection disable */
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_TIMEOUT;
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
ARM GAS  /tmp/ccOQTb5n.s 			page 33


 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till LSE is ready */
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till LSE is disabled */
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check the parameters */
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 996              		.loc 1 757 0
 997 03f6 636A     		ldr	r3, [r4, #36]
 998 03f8 002B     		cmp	r3, #0
 999 03fa 00F04D81 		beq	.L127
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 1000              		.loc 1 760 0
 1001 03fe 494A     		ldr	r2, .L171
 1002 0400 1269     		ldr	r2, [r2, #16]
 1003 0402 02F03802 		and	r2, r2, #56
 1004 0406 182A     		cmp	r2, #24
 1005 0408 00F0EE80 		beq	.L100
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1006              		.loc 1 762 0
 1007 040c 022B     		cmp	r3, #2
 1008 040e 75D0     		beq	.L157
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccOQTb5n.s 			page 34


 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Check the parameters */
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLRGE_VALUE(RCC_OscInitStruct->PLL.PLLRGE));
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLVCO_VALUE(RCC_OscInitStruct->PLL.PLLVCOSEL));
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Disable the main PLL. */
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLN,
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLP,
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLQ,
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLR);
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Disable PLLFRACN . */
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLLFRACN_DISABLE();
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Configure PLL PLL1FRACN */
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Select PLL1 input reference frequency range: VCI */
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Select PLL1 output frequency range : VCO */
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable PLL System Clock output. */
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable PLL1Q Clock output. */
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable PLL1R  Clock output. */
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable PLL1FRACN . */
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLLFRACN_ENABLE();
ARM GAS  /tmp/ccOQTb5n.s 			page 35


 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable the main PLL. */
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till PLL is ready */
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Disable the main PLL. */
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1009              		.loc 1 840 0
 1010 0410 444A     		ldr	r2, .L171
 1011 0412 1368     		ldr	r3, [r2]
 1012 0414 23F08073 		bic	r3, r3, #16777216
 1013 0418 1360     		str	r3, [r2]
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1014              		.loc 1 843 0
 1015 041a FFF7FEFF 		bl	HAL_GetTick
 1016              	.LVL98:
 1017 041e 0446     		mov	r4, r0
 1018              	.LVL99:
 1019              	.L106:
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 1020              		.loc 1 846 0
 1021 0420 404B     		ldr	r3, .L171
 1022 0422 1B68     		ldr	r3, [r3]
 1023 0424 13F0007F 		tst	r3, #33554432
 1024 0428 00F0DC80 		beq	.L158
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1025              		.loc 1 848 0
 1026 042c FFF7FEFF 		bl	HAL_GetTick
 1027              	.LVL100:
 1028 0430 001B     		subs	r0, r0, r4
 1029 0432 0228     		cmp	r0, #2
 1030 0434 F4D9     		bls	.L106
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1031              		.loc 1 850 0
 1032 0436 0320     		movs	r0, #3
 1033 0438 2FE1     		b	.L35
 1034              	.LVL101:
 1035              	.L156:
ARM GAS  /tmp/ccOQTb5n.s 			page 36


 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1036              		.loc 1 709 0
 1037 043a 3B4A     		ldr	r2, .L171+4
 1038 043c 1368     		ldr	r3, [r2]
 1039 043e 43F48073 		orr	r3, r3, #256
 1040 0442 1360     		str	r3, [r2]
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1041              		.loc 1 712 0
 1042 0444 FFF7FEFF 		bl	HAL_GetTick
 1043              	.LVL102:
 1044 0448 0546     		mov	r5, r0
 1045              	.LVL103:
 1046              	.L89:
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1047              		.loc 1 714 0
 1048 044a 374B     		ldr	r3, .L171+4
 1049 044c 1B68     		ldr	r3, [r3]
 1050 044e 13F4807F 		tst	r3, #256
 1051 0452 06D1     		bne	.L159
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1052              		.loc 1 716 0
 1053 0454 FFF7FEFF 		bl	HAL_GetTick
 1054              	.LVL104:
 1055 0458 401B     		subs	r0, r0, r5
 1056 045a 6428     		cmp	r0, #100
 1057 045c F5D9     		bls	.L89
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 1058              		.loc 1 718 0
 1059 045e 0320     		movs	r0, #3
 1060 0460 1BE1     		b	.L35
 1061              	.L159:
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 1062              		.loc 1 723 0
 1063 0462 A368     		ldr	r3, [r4, #8]
 1064 0464 012B     		cmp	r3, #1
 1065 0466 0AD0     		beq	.L160
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 1066              		.loc 1 723 0 is_stmt 0 discriminator 2
 1067 0468 0BBB     		cbnz	r3, .L93
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 1068              		.loc 1 723 0 discriminator 3
 1069 046a 2E4B     		ldr	r3, .L171
 1070 046c 1A6F     		ldr	r2, [r3, #112]
 1071 046e 22F00102 		bic	r2, r2, #1
 1072 0472 1A67     		str	r2, [r3, #112]
 1073 0474 1A6F     		ldr	r2, [r3, #112]
 1074 0476 22F00402 		bic	r2, r2, #4
 1075 047a 1A67     		str	r2, [r3, #112]
 1076 047c 04E0     		b	.L92
 1077              	.L160:
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 1078              		.loc 1 723 0 discriminator 1
 1079 047e 294A     		ldr	r2, .L171
 1080 0480 136F     		ldr	r3, [r2, #112]
 1081 0482 43F00103 		orr	r3, r3, #1
 1082 0486 1367     		str	r3, [r2, #112]
 1083              	.L92:
ARM GAS  /tmp/ccOQTb5n.s 			page 37


 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1084              		.loc 1 725 0 is_stmt 1
 1085 0488 A368     		ldr	r3, [r4, #8]
 1086 048a 33B3     		cbz	r3, .L95
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1087              		.loc 1 728 0
 1088 048c FFF7FEFF 		bl	HAL_GetTick
 1089              	.LVL105:
 1090 0490 0546     		mov	r5, r0
 1091              	.LVL106:
 1092              	.L96:
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1093              		.loc 1 731 0
 1094 0492 244B     		ldr	r3, .L171
 1095 0494 1B6F     		ldr	r3, [r3, #112]
 1096 0496 13F0020F 		tst	r3, #2
 1097 049a ACD1     		bne	.L88
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1098              		.loc 1 733 0
 1099 049c FFF7FEFF 		bl	HAL_GetTick
 1100              	.LVL107:
 1101 04a0 401B     		subs	r0, r0, r5
 1102 04a2 41F28833 		movw	r3, #5000
 1103 04a6 9842     		cmp	r0, r3
 1104 04a8 F3D9     		bls	.L96
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 1105              		.loc 1 735 0
 1106 04aa 0320     		movs	r0, #3
 1107 04ac F5E0     		b	.L35
 1108              	.L93:
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 1109              		.loc 1 723 0 discriminator 4
 1110 04ae 052B     		cmp	r3, #5
 1111 04b0 09D0     		beq	.L161
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 1112              		.loc 1 723 0 is_stmt 0 discriminator 6
 1113 04b2 1C4B     		ldr	r3, .L171
 1114 04b4 1A6F     		ldr	r2, [r3, #112]
 1115 04b6 22F00102 		bic	r2, r2, #1
 1116 04ba 1A67     		str	r2, [r3, #112]
 1117 04bc 1A6F     		ldr	r2, [r3, #112]
 1118 04be 22F00402 		bic	r2, r2, #4
 1119 04c2 1A67     		str	r2, [r3, #112]
 1120 04c4 E0E7     		b	.L92
 1121              	.L161:
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 1122              		.loc 1 723 0 discriminator 5
 1123 04c6 174B     		ldr	r3, .L171
 1124 04c8 1A6F     		ldr	r2, [r3, #112]
 1125 04ca 42F00402 		orr	r2, r2, #4
 1126 04ce 1A67     		str	r2, [r3, #112]
 1127 04d0 1A6F     		ldr	r2, [r3, #112]
 1128 04d2 42F00102 		orr	r2, r2, #1
 1129 04d6 1A67     		str	r2, [r3, #112]
 1130 04d8 D6E7     		b	.L92
 1131              	.L95:
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccOQTb5n.s 			page 38


 1132              		.loc 1 742 0 is_stmt 1
 1133 04da FFF7FEFF 		bl	HAL_GetTick
 1134              	.LVL108:
 1135 04de 0546     		mov	r5, r0
 1136              	.LVL109:
 1137              	.L98:
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1138              		.loc 1 745 0
 1139 04e0 104B     		ldr	r3, .L171
 1140 04e2 1B6F     		ldr	r3, [r3, #112]
 1141 04e4 13F0020F 		tst	r3, #2
 1142 04e8 85D0     		beq	.L88
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1143              		.loc 1 747 0
 1144 04ea FFF7FEFF 		bl	HAL_GetTick
 1145              	.LVL110:
 1146 04ee 401B     		subs	r0, r0, r5
 1147 04f0 41F28833 		movw	r3, #5000
 1148 04f4 9842     		cmp	r0, r3
 1149 04f6 F3D9     		bls	.L98
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 1150              		.loc 1 749 0
 1151 04f8 0320     		movs	r0, #3
 1152 04fa CEE0     		b	.L35
 1153              	.LVL111:
 1154              	.L157:
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1155              		.loc 1 776 0
 1156 04fc 094A     		ldr	r2, .L171
 1157 04fe 1368     		ldr	r3, [r2]
 1158 0500 23F08073 		bic	r3, r3, #16777216
 1159 0504 1360     		str	r3, [r2]
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1160              		.loc 1 779 0
 1161 0506 FFF7FEFF 		bl	HAL_GetTick
 1162              	.LVL112:
 1163 050a 0546     		mov	r5, r0
 1164              	.LVL113:
 1165              	.L102:
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1166              		.loc 1 782 0
 1167 050c 054B     		ldr	r3, .L171
 1168 050e 1B68     		ldr	r3, [r3]
 1169 0510 13F0007F 		tst	r3, #33554432
 1170 0514 0AD0     		beq	.L162
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 1171              		.loc 1 784 0
 1172 0516 FFF7FEFF 		bl	HAL_GetTick
 1173              	.LVL114:
 1174 051a 401B     		subs	r0, r0, r5
 1175 051c 0228     		cmp	r0, #2
 1176 051e F5D9     		bls	.L102
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 1177              		.loc 1 786 0
 1178 0520 0320     		movs	r0, #3
 1179 0522 BAE0     		b	.L35
 1180              	.L172:
ARM GAS  /tmp/ccOQTb5n.s 			page 39


 1181              		.align	2
 1182              	.L171:
 1183 0524 00440258 		.word	1476543488
 1184 0528 00480258 		.word	1476544512
 1185              	.L162:
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 1186              		.loc 1 791 0
 1187 052c 5E4B     		ldr	r3, .L173
 1188 052e 996A     		ldr	r1, [r3, #40]
 1189 0530 5E4A     		ldr	r2, .L173+4
 1190 0532 0A40     		ands	r2, r2, r1
 1191 0534 A16A     		ldr	r1, [r4, #40]
 1192 0536 E06A     		ldr	r0, [r4, #44]
 1193 0538 41EA0011 		orr	r1, r1, r0, lsl #4
 1194 053c 0A43     		orrs	r2, r2, r1
 1195 053e 9A62     		str	r2, [r3, #40]
 1196 0540 226B     		ldr	r2, [r4, #48]
 1197 0542 013A     		subs	r2, r2, #1
 1198 0544 C2F30802 		ubfx	r2, r2, #0, #9
 1199 0548 616B     		ldr	r1, [r4, #52]
 1200 054a 0139     		subs	r1, r1, #1
 1201 054c 4902     		lsls	r1, r1, #9
 1202 054e 89B2     		uxth	r1, r1
 1203 0550 0A43     		orrs	r2, r2, r1
 1204 0552 A16B     		ldr	r1, [r4, #56]
 1205 0554 0139     		subs	r1, r1, #1
 1206 0556 0904     		lsls	r1, r1, #16
 1207 0558 01F4FE01 		and	r1, r1, #8323072
 1208 055c 0A43     		orrs	r2, r2, r1
 1209 055e E16B     		ldr	r1, [r4, #60]
 1210 0560 0139     		subs	r1, r1, #1
 1211 0562 0906     		lsls	r1, r1, #24
 1212 0564 01F0FE41 		and	r1, r1, #2130706432
 1213 0568 0A43     		orrs	r2, r2, r1
 1214 056a 1A63     		str	r2, [r3, #48]
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1215              		.loc 1 799 0
 1216 056c DA6A     		ldr	r2, [r3, #44]
 1217 056e 22F00102 		bic	r2, r2, #1
 1218 0572 DA62     		str	r2, [r3, #44]
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1219              		.loc 1 802 0
 1220 0574 596B     		ldr	r1, [r3, #52]
 1221 0576 4E4A     		ldr	r2, .L173+8
 1222 0578 0A40     		ands	r2, r2, r1
 1223 057a A16C     		ldr	r1, [r4, #72]
 1224 057c 42EAC102 		orr	r2, r2, r1, lsl #3
 1225 0580 5A63     		str	r2, [r3, #52]
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1226              		.loc 1 805 0
 1227 0582 DA6A     		ldr	r2, [r3, #44]
 1228 0584 22F00C02 		bic	r2, r2, #12
 1229 0588 216C     		ldr	r1, [r4, #64]
 1230 058a 0A43     		orrs	r2, r2, r1
 1231 058c DA62     		str	r2, [r3, #44]
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1232              		.loc 1 808 0
ARM GAS  /tmp/ccOQTb5n.s 			page 40


 1233 058e DA6A     		ldr	r2, [r3, #44]
 1234 0590 22F00202 		bic	r2, r2, #2
 1235 0594 616C     		ldr	r1, [r4, #68]
 1236 0596 0A43     		orrs	r2, r2, r1
 1237 0598 DA62     		str	r2, [r3, #44]
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1238              		.loc 1 811 0
 1239 059a DA6A     		ldr	r2, [r3, #44]
 1240 059c 42F48032 		orr	r2, r2, #65536
 1241 05a0 DA62     		str	r2, [r3, #44]
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1242              		.loc 1 814 0
 1243 05a2 DA6A     		ldr	r2, [r3, #44]
 1244 05a4 42F40032 		orr	r2, r2, #131072
 1245 05a8 DA62     		str	r2, [r3, #44]
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1246              		.loc 1 817 0
 1247 05aa DA6A     		ldr	r2, [r3, #44]
 1248 05ac 42F48022 		orr	r2, r2, #262144
 1249 05b0 DA62     		str	r2, [r3, #44]
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1250              		.loc 1 820 0
 1251 05b2 DA6A     		ldr	r2, [r3, #44]
 1252 05b4 42F00102 		orr	r2, r2, #1
 1253 05b8 DA62     		str	r2, [r3, #44]
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1254              		.loc 1 823 0
 1255 05ba 1A68     		ldr	r2, [r3]
 1256 05bc 42F08072 		orr	r2, r2, #16777216
 1257 05c0 1A60     		str	r2, [r3]
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1258              		.loc 1 826 0
 1259 05c2 FFF7FEFF 		bl	HAL_GetTick
 1260              	.LVL115:
 1261 05c6 0446     		mov	r4, r0
 1262              	.LVL116:
 1263              	.L104:
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1264              		.loc 1 829 0
 1265 05c8 374B     		ldr	r3, .L173
 1266 05ca 1B68     		ldr	r3, [r3]
 1267 05cc 13F0007F 		tst	r3, #33554432
 1268 05d0 06D1     		bne	.L163
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 1269              		.loc 1 831 0
 1270 05d2 FFF7FEFF 		bl	HAL_GetTick
 1271              	.LVL117:
 1272 05d6 001B     		subs	r0, r0, r4
 1273 05d8 0228     		cmp	r0, #2
 1274 05da F5D9     		bls	.L104
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 1275              		.loc 1 833 0
 1276 05dc 0320     		movs	r0, #3
 1277 05de 5CE0     		b	.L35
 1278              	.L163:
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
ARM GAS  /tmp/ccOQTb5n.s 			page 41


 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Do not return HAL_ERROR if request repeats the current configuration */
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       temp1_pllckcfg = RCC->PLLCKSELR;
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       temp2_pllckcfg = RCC->PLL1DIVR;
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscIni
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Check if only fractional part needs to be updated  */
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           /* Disable PLL1FRACEN */
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           __HAL_RCC_PLLFRACN_DISABLE();
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           /* Get Start Tick*/
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           tickstart = HAL_GetTick();
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           /* Wait at least 2 CK_REF (PLL input source divided by M) period to make sure next latche
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           /* Configure PLL1 PLL1FRACN */
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           /* Enable PLL1FRACEN to latch new value. */
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           __HAL_RCC_PLLFRACN_ENABLE();
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return HAL_OK;
 1279              		.loc 1 893 0
 1280 05e0 0020     		movs	r0, #0
 1281 05e2 5AE0     		b	.L35
 1282              	.L158:
 1283 05e4 0020     		movs	r0, #0
 1284 05e6 58E0     		b	.L35
 1285              	.LVL118:
 1286              	.L100:
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       temp2_pllckcfg = RCC->PLL1DIVR;
 1287              		.loc 1 858 0
 1288 05e8 2F4A     		ldr	r2, .L173
 1289 05ea 916A     		ldr	r1, [r2, #40]
 1290              	.LVL119:
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 1291              		.loc 1 859 0
 1292 05ec 106B     		ldr	r0, [r2, #48]
ARM GAS  /tmp/ccOQTb5n.s 			page 42


 1293              	.LVL120:
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1294              		.loc 1 860 0
 1295 05ee 012B     		cmp	r3, #1
 1296 05f0 54D0     		beq	.L131
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscIni
 1297              		.loc 1 861 0 discriminator 1
 1298 05f2 01F00303 		and	r3, r1, #3
 1299 05f6 A26A     		ldr	r2, [r4, #40]
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1300              		.loc 1 860 0 discriminator 1
 1301 05f8 9342     		cmp	r3, r2
 1302 05fa 01D0     		beq	.L164
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 1303              		.loc 1 868 0
 1304 05fc 0120     		movs	r0, #1
 1305              	.LVL121:
 1306 05fe 4CE0     		b	.L35
 1307              	.LVL122:
 1308              	.L164:
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 1309              		.loc 1 862 0
 1310 0600 C1F30511 		ubfx	r1, r1, #4, #6
 1311              	.LVL123:
 1312 0604 E36A     		ldr	r3, [r4, #44]
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscIni
 1313              		.loc 1 861 0
 1314 0606 9942     		cmp	r1, r3
 1315 0608 01D0     		beq	.L165
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 1316              		.loc 1 868 0
 1317 060a 0120     		movs	r0, #1
 1318              	.LVL124:
 1319 060c 45E0     		b	.L35
 1320              	.LVL125:
 1321              	.L165:
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct
 1322              		.loc 1 863 0
 1323 060e C0F30802 		ubfx	r2, r0, #0, #9
 1324 0612 236B     		ldr	r3, [r4, #48]
 1325 0614 013B     		subs	r3, r3, #1
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 1326              		.loc 1 862 0
 1327 0616 9A42     		cmp	r2, r3
 1328 0618 01D0     		beq	.L166
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 1329              		.loc 1 868 0
 1330 061a 0120     		movs	r0, #1
 1331              	.LVL126:
 1332 061c 3DE0     		b	.L35
 1333              	.LVL127:
 1334              	.L166:
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct
 1335              		.loc 1 864 0
 1336 061e C0F34622 		ubfx	r2, r0, #9, #7
 1337 0622 636B     		ldr	r3, [r4, #52]
 1338 0624 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccOQTb5n.s 			page 43


 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct
 1339              		.loc 1 863 0
 1340 0626 9A42     		cmp	r2, r3
 1341 0628 01D0     		beq	.L167
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 1342              		.loc 1 868 0
 1343 062a 0120     		movs	r0, #1
 1344              	.LVL128:
 1345 062c 35E0     		b	.L35
 1346              	.LVL129:
 1347              	.L167:
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct
 1348              		.loc 1 865 0
 1349 062e C0F30642 		ubfx	r2, r0, #16, #7
 1350 0632 A36B     		ldr	r3, [r4, #56]
 1351 0634 013B     		subs	r3, r3, #1
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct
 1352              		.loc 1 864 0
 1353 0636 9A42     		cmp	r2, r3
 1354 0638 32D1     		bne	.L136
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1355              		.loc 1 866 0
 1356 063a C0F30660 		ubfx	r0, r0, #24, #7
 1357              	.LVL130:
 1358 063e E36B     		ldr	r3, [r4, #60]
 1359 0640 013B     		subs	r3, r3, #1
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct
 1360              		.loc 1 865 0
 1361 0642 9842     		cmp	r0, r3
 1362 0644 01D0     		beq	.L168
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 1363              		.loc 1 868 0
 1364 0646 0120     		movs	r0, #1
 1365 0648 27E0     		b	.L35
 1366              	.L168:
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
 1367              		.loc 1 873 0
 1368 064a 174B     		ldr	r3, .L173
 1369 064c 5B6B     		ldr	r3, [r3, #52]
 1370 064e C3F3CC03 		ubfx	r3, r3, #3, #13
 1371              	.LVL131:
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1372              		.loc 1 874 0
 1373 0652 A26C     		ldr	r2, [r4, #72]
 1374 0654 9A42     		cmp	r2, r3
 1375 0656 25D0     		beq	.L138
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           /* Get Start Tick*/
 1376              		.loc 1 878 0
 1377 0658 134A     		ldr	r2, .L173
 1378 065a D36A     		ldr	r3, [r2, #44]
 1379              	.LVL132:
 1380 065c 23F00103 		bic	r3, r3, #1
 1381 0660 D362     		str	r3, [r2, #44]
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           /* Wait at least 2 CK_REF (PLL input source divided by M) period to make sure next latche
 1382              		.loc 1 880 0
 1383 0662 FFF7FEFF 		bl	HAL_GetTick
 1384              	.LVL133:
ARM GAS  /tmp/ccOQTb5n.s 			page 44


 1385 0666 0546     		mov	r5, r0
 1386              	.LVL134:
 1387              	.L108:
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 1388              		.loc 1 882 0 discriminator 1
 1389 0668 FFF7FEFF 		bl	HAL_GetTick
 1390              	.LVL135:
 1391 066c A842     		cmp	r0, r5
 1392 066e FBD0     		beq	.L108
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           /* Enable PLL1FRACEN to latch new value. */
 1393              		.loc 1 886 0
 1394 0670 0D4A     		ldr	r2, .L173
 1395 0672 516B     		ldr	r1, [r2, #52]
 1396 0674 0E4B     		ldr	r3, .L173+8
 1397 0676 0B40     		ands	r3, r3, r1
 1398 0678 A16C     		ldr	r1, [r4, #72]
 1399 067a 43EAC103 		orr	r3, r3, r1, lsl #3
 1400 067e 5363     		str	r3, [r2, #52]
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 1401              		.loc 1 888 0
 1402 0680 D36A     		ldr	r3, [r2, #44]
 1403 0682 43F00103 		orr	r3, r3, #1
 1404 0686 D362     		str	r3, [r2, #44]
 1405              		.loc 1 893 0
 1406 0688 0020     		movs	r0, #0
 1407 068a 06E0     		b	.L35
 1408              	.LVL136:
 1409              	.L109:
 1410              	.LCFI2:
 1411              		.cfi_def_cfa_offset 0
 1412              		.cfi_restore 3
 1413              		.cfi_restore 4
 1414              		.cfi_restore 5
 1415              		.cfi_restore 14
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 1416              		.loc 1 413 0
 1417 068c 0120     		movs	r0, #1
 1418              	.LVL137:
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 1419              		.loc 1 894 0
 1420 068e 7047     		bx	lr
 1421              	.LVL138:
 1422              	.L145:
 1423              	.LCFI3:
 1424              		.cfi_def_cfa_offset 16
 1425              		.cfi_offset 3, -16
 1426              		.cfi_offset 4, -12
 1427              		.cfi_offset 5, -8
 1428              		.cfi_offset 14, -4
 1429              	.LBB10:
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 1430              		.loc 1 431 0
 1431 0690 0120     		movs	r0, #1
 1432              	.LVL139:
 1433 0692 02E0     		b	.L35
 1434              	.LVL140:
 1435              	.L113:
ARM GAS  /tmp/ccOQTb5n.s 			page 45


 1436              	.LBE10:
 1437              	.LBB11:
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 1438              		.loc 1 485 0
 1439 0694 0120     		movs	r0, #1
 1440 0696 00E0     		b	.L35
 1441              	.LVL141:
 1442              	.L127:
 1443              	.LBE11:
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 1444              		.loc 1 893 0
 1445 0698 0020     		movs	r0, #0
 1446              	.LVL142:
 1447              	.L35:
 1448              		.loc 1 894 0
 1449 069a 38BD     		pop	{r3, r4, r5, pc}
 1450              	.LVL143:
 1451              	.L131:
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 1452              		.loc 1 868 0
 1453 069c 0120     		movs	r0, #1
 1454              	.LVL144:
 1455 069e FCE7     		b	.L35
 1456              	.LVL145:
 1457              	.L136:
 1458 06a0 0120     		movs	r0, #1
 1459              	.LVL146:
 1460 06a2 FAE7     		b	.L35
 1461              	.LVL147:
 1462              	.L138:
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 1463              		.loc 1 893 0
 1464 06a4 0020     		movs	r0, #0
 1465 06a6 F8E7     		b	.L35
 1466              	.L174:
 1467              		.align	2
 1468              	.L173:
 1469 06a8 00440258 		.word	1476543488
 1470 06ac 0CFCFFFF 		.word	-1012
 1471 06b0 0700FFFF 		.word	-65529
 1472              		.cfi_endproc
 1473              	.LFE145:
 1475              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1476              		.align	1
 1477              		.global	HAL_RCC_MCOConfig
 1478              		.syntax unified
 1479              		.thumb
 1480              		.thumb_func
 1481              		.fpu fpv5-d16
 1483              	HAL_RCC_MCOConfig:
 1484              	.LFB147:
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct: pointer to an RCC_OscInitTypeDef structure that
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
ARM GAS  /tmp/ccOQTb5n.s 			page 46


 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  FLatency: FLASH Latency, this parameter depend on device selected
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Core Clock Frequency
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         and updated by HAL_InitTick() function called within this function
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked).
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         You can use HAL_RCC_GetClockConfig() function to know which clock is
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         currently used as system clock source.
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         D1CPRE[3:0] bits to ensure that  Domain1 core clock not exceed the maximum allowed freq
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   HAL_StatusTypeDef halstatus;
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t tickstart;
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t common_system_clock;
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check Null pointer */
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (RCC_ClkInitStruct == NULL)
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     return HAL_ERROR;
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check the parameters */
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Increasing the CPU frequency */
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (FLatency > __HAL_FLASH_GET_LATENCY())
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if (__HAL_FLASH_GET_LATENCY() != FLatency)
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_ERROR;
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Increasing the BUS frequency divider */
ARM GAS  /tmp/ccOQTb5n.s 			page 47


 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- D1PCLK1/CDPCLK1 Configuration ---------------------------*/
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined (RCC_D1CFGR_D1PPRE)
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->CDCFGR1 & RCC_CDCFGR1_CDPPRE))
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_CDPCLK1(RCC_ClkInitStruct->APB3CLKDivider));
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_CDPPRE, RCC_ClkInitStruct->APB3CLKDivider);
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined (RCC_D2CFGR_D2PPRE1)
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1))
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D2CFGR_D2PPRE2)
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2))
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- D3PCLK1 Configuration ---------------------------*/
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D3CFGR_D3PPRE)
ARM GAS  /tmp/ccOQTb5n.s 			page 48


1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE))
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->SRDCFGR, RCC_SRDCFGR_SRDPPRE, (RCC_ClkInitStruct->APB4CLKDivider));
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined (RCC_D1CFGR_HPRE)
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Set the new HCLK clock divider */
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->CDCFGR1 & RCC_CDCFGR1_HPRE))
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Set the new HCLK clock divider */
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration -------------------------*/
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLK(RCC_ClkInitStruct->SYSCLKDivider));
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_D1CPRE)
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_CDCPRE, RCC_ClkInitStruct->SYSCLKDivider);
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Check the HSE ready flag */
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Check the PLL ready flag */
ARM GAS  /tmp/ccOQTb5n.s 			page 49


1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* CSI is selected as System Clock Source */
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Check the PLL ready flag */
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Check the HSI ready flag */
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Get Start Tick*/
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     tickstart = HAL_GetTick();
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_TIMEOUT;
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Decreasing the BUS frequency divider */
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_HPRE)
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Set the new HCLK clock divider */
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->CDCFGR1 & RCC_CDCFGR1_HPRE))
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Set the new HCLK clock divider */
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
ARM GAS  /tmp/ccOQTb5n.s 			page 50


1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (FLatency < __HAL_FLASH_GET_LATENCY())
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if (__HAL_FLASH_GET_LATENCY() != FLatency)
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_ERROR;
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- D1PCLK1/CDPCLK Configuration ---------------------------*/
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_D1PPRE)
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->CDCFGR1 & RCC_CDCFGR1_CDPPRE))
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_CDPCLK1(RCC_ClkInitStruct->APB3CLKDivider));
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_CDPPRE, RCC_ClkInitStruct->APB3CLKDivider);
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D2CFGR_D2PPRE1)
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1))
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined (RCC_D2CFGR_D2PPRE2)
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
ARM GAS  /tmp/ccOQTb5n.s 			page 51


1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2))
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- D3PCLK1/SRDPCLK1 Configuration ---------------------------*/
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D3CFGR_D3PPRE)
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE))
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_SRDPCLK1(RCC_ClkInitStruct->APB4CLKDivider));
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->SRDCFGR, RCC_SRDCFGR_SRDPPRE, (RCC_ClkInitStruct->APB4CLKDivider));
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_D1CPRE)
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_HPRE)
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE) >> R
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemCoreClock = SystemD2Clock;
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemCoreClock = common_system_clock;
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif /* DUAL_CORE && CORE_CM4 */
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   halstatus = HAL_InitTick(uwTickPrio);
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return halstatus;
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
ARM GAS  /tmp/ccOQTb5n.s 			page 52


1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @}
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  *
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** @verbatim
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ===============================================================================
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ===============================================================================
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     frequencies.
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** @endverbatim
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_MCOx: specifies the output direction for the clock source.
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_MCOSource: specifies the clock source to output.
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLL1QCLK:  PLL1Q clock selected as MCO1 source
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI48: HSI48 (48MHZ) selected as MCO1 source
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLL2PCLK: PLL2P clock selected as MCO2 source
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK:  PLL1P clock selected as MCO2 source
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_CSICLK:  CSI clock selected as MCO2 source
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_LSICLK:  LSI clock selected as MCO2 source
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_MCODiv: specifies the MCOx pre-scaler.
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1 up to RCC_MCODIV_15  : divider applied to MCOx clock
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 1485              		.loc 1 1287 0
 1486              		.cfi_startproc
 1487              		@ args = 0, pretend = 0, frame = 32
 1488              		@ frame_needed = 0, uses_anonymous_args = 0
 1489              	.LVL148:
 1490 0000 70B5     		push	{r4, r5, r6, lr}
 1491              	.LCFI4:
 1492              		.cfi_def_cfa_offset 16
 1493              		.cfi_offset 4, -16
 1494              		.cfi_offset 5, -12
 1495              		.cfi_offset 6, -8
 1496              		.cfi_offset 14, -4
ARM GAS  /tmp/ccOQTb5n.s 			page 53


 1497 0002 88B0     		sub	sp, sp, #32
 1498              	.LCFI5:
 1499              		.cfi_def_cfa_offset 48
 1500 0004 0C46     		mov	r4, r1
 1501 0006 1646     		mov	r6, r2
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check the parameters */
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* RCC_MCO1 */
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (RCC_MCOx == RCC_MCO1)
 1502              		.loc 1 1293 0
 1503 0008 18B3     		cbz	r0, .L179
 1504              	.LBB12:
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* MCO1 Clock Enable */
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MCO1_CLK_ENABLE();
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[3:0] bits then Select MCO1 clock source and pre-scaler */
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* MCO2 Clock Enable */
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MCO2_CLK_ENABLE();
 1505              		.loc 1 1316 0
 1506 000a 234D     		ldr	r5, .L180
 1507 000c D5F8E030 		ldr	r3, [r5, #224]
 1508 0010 43F00403 		orr	r3, r3, #4
 1509 0014 C5F8E030 		str	r3, [r5, #224]
 1510 0018 D5F8E030 		ldr	r3, [r5, #224]
 1511 001c 03F00403 		and	r3, r3, #4
 1512 0020 0293     		str	r3, [sp, #8]
 1513 0022 029B     		ldr	r3, [sp, #8]
 1514              	.LBE12:
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
 1515              		.loc 1 1319 0
 1516 0024 4FF40073 		mov	r3, #512
 1517 0028 0393     		str	r3, [sp, #12]
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1518              		.loc 1 1320 0
 1519 002a 0223     		movs	r3, #2
 1520 002c 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccOQTb5n.s 			page 54


1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1521              		.loc 1 1321 0
 1522 002e 0323     		movs	r3, #3
 1523 0030 0693     		str	r3, [sp, #24]
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1524              		.loc 1 1322 0
 1525 0032 0023     		movs	r3, #0
 1526 0034 0593     		str	r3, [sp, #20]
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1527              		.loc 1 1323 0
 1528 0036 0793     		str	r3, [sp, #28]
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1529              		.loc 1 1324 0
 1530 0038 03A9     		add	r1, sp, #12
 1531              	.LVL149:
 1532 003a 1848     		ldr	r0, .L180+4
 1533              	.LVL150:
 1534 003c FFF7FEFF 		bl	HAL_GPIO_Init
 1535              	.LVL151:
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[3:0] bits then Select MCO2 clock source and pre-scaler */
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 7U)))
 1536              		.loc 1 1327 0
 1537 0040 2B69     		ldr	r3, [r5, #16]
 1538 0042 23F07E43 		bic	r3, r3, #-33554432
 1539 0046 44EAC614 		orr	r4, r4, r6, lsl #7
 1540              	.LVL152:
 1541 004a 1C43     		orrs	r4, r4, r3
 1542 004c 2C61     		str	r4, [r5, #16]
 1543              	.L175:
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 1544              		.loc 1 1329 0
 1545 004e 08B0     		add	sp, sp, #32
 1546              	.LCFI6:
 1547              		.cfi_remember_state
 1548              		.cfi_def_cfa_offset 16
 1549              		@ sp needed
 1550 0050 70BD     		pop	{r4, r5, r6, pc}
 1551              	.LVL153:
 1552              	.L179:
 1553              	.LCFI7:
 1554              		.cfi_restore_state
 1555              	.LBB13:
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1556              		.loc 1 1298 0
 1557 0052 114D     		ldr	r5, .L180
 1558 0054 D5F8E030 		ldr	r3, [r5, #224]
 1559 0058 43F00103 		orr	r3, r3, #1
 1560 005c C5F8E030 		str	r3, [r5, #224]
 1561 0060 D5F8E030 		ldr	r3, [r5, #224]
 1562 0064 03F00103 		and	r3, r3, #1
 1563 0068 0193     		str	r3, [sp, #4]
 1564 006a 019B     		ldr	r3, [sp, #4]
 1565              	.LBE13:
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1566              		.loc 1 1301 0
ARM GAS  /tmp/ccOQTb5n.s 			page 55


 1567 006c 4FF48073 		mov	r3, #256
 1568 0070 0393     		str	r3, [sp, #12]
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1569              		.loc 1 1302 0
 1570 0072 0223     		movs	r3, #2
 1571 0074 0493     		str	r3, [sp, #16]
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1572              		.loc 1 1303 0
 1573 0076 0323     		movs	r3, #3
 1574 0078 0693     		str	r3, [sp, #24]
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1575              		.loc 1 1304 0
 1576 007a 0023     		movs	r3, #0
 1577 007c 0593     		str	r3, [sp, #20]
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1578              		.loc 1 1305 0
 1579 007e 0793     		str	r3, [sp, #28]
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1580              		.loc 1 1306 0
 1581 0080 03A9     		add	r1, sp, #12
 1582              	.LVL154:
 1583 0082 0748     		ldr	r0, .L180+8
 1584              	.LVL155:
 1585 0084 FFF7FEFF 		bl	HAL_GPIO_Init
 1586              	.LVL156:
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 1587              		.loc 1 1309 0
 1588 0088 2B69     		ldr	r3, [r5, #16]
 1589 008a 23F0FE73 		bic	r3, r3, #33292288
 1590 008e 3443     		orrs	r4, r4, r6
 1591              	.LVL157:
 1592 0090 1C43     		orrs	r4, r4, r3
 1593 0092 2C61     		str	r4, [r5, #16]
 1594 0094 DBE7     		b	.L175
 1595              	.L181:
 1596 0096 00BF     		.align	2
 1597              	.L180:
 1598 0098 00440258 		.word	1476543488
 1599 009c 00080258 		.word	1476528128
 1600 00a0 00000258 		.word	1476526080
 1601              		.cfi_endproc
 1602              	.LFE147:
 1604              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1605              		.align	1
 1606              		.global	HAL_RCC_EnableCSS
 1607              		.syntax unified
 1608              		.thumb
 1609              		.thumb_func
 1610              		.fpu fpv5-d16
 1612              	HAL_RCC_EnableCSS:
 1613              	.LFB148:
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
ARM GAS  /tmp/ccOQTb5n.s 			page 56


1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         the Cortex-M NMI (Non-Mask-able Interrupt) exception vector.
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 1614              		.loc 1 1341 0
 1615              		.cfi_startproc
 1616              		@ args = 0, pretend = 0, frame = 0
 1617              		@ frame_needed = 0, uses_anonymous_args = 0
 1618              		@ link register save eliminated.
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSHSEON) ;
 1619              		.loc 1 1342 0
 1620 0000 024A     		ldr	r2, .L183
 1621 0002 1368     		ldr	r3, [r2]
 1622 0004 43F40023 		orr	r3, r3, #524288
 1623 0008 1360     		str	r3, [r2]
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 1624              		.loc 1 1343 0
 1625 000a 7047     		bx	lr
 1626              	.L184:
 1627              		.align	2
 1628              	.L183:
 1629 000c 00440258 		.word	1476543488
 1630              		.cfi_endproc
 1631              	.LFE148:
 1633              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1634              		.align	1
 1635              		.global	HAL_RCC_DisableCSS
 1636              		.syntax unified
 1637              		.thumb
 1638              		.thumb_func
 1639              		.fpu fpv5-d16
 1641              	HAL_RCC_DisableCSS:
 1642              	.LFB149:
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 1643              		.loc 1 1350 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 1647              		@ link register save eliminated.
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_CSSHSEON);
 1648              		.loc 1 1351 0
 1649 0000 024A     		ldr	r2, .L186
 1650 0002 1368     		ldr	r3, [r2]
 1651 0004 23F40023 		bic	r3, r3, #524288
 1652 0008 1360     		str	r3, [r2]
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 1653              		.loc 1 1352 0
 1654 000a 7047     		bx	lr
 1655              	.L187:
ARM GAS  /tmp/ccOQTb5n.s 			page 57


 1656              		.align	2
 1657              	.L186:
 1658 000c 00440258 		.word	1476543488
 1659              		.cfi_endproc
 1660              	.LFE149:
 1662              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1663              		.align	1
 1664              		.global	HAL_RCC_GetSysClockFreq
 1665              		.syntax unified
 1666              		.thumb
 1667              		.thumb_func
 1668              		.fpu fpv5-d16
 1670              	HAL_RCC_GetSysClockFreq:
 1671              	.LFB150:
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         constant and the selected clock source:
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     If SYSCLK source is CSI, function returns values based on CSI_VALUE(*)
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(**)
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(***)
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on CSI_VALUE(*),
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *           HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     (*) CSI_VALUE is a constant defined in stm32h7xx_hal_conf.h file (default value
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *               4 MHz) but the real value may vary depending on the variations
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *               in voltage and temperature.
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     (**) HSI_VALUE is a constant defined in stm32h7xx_hal_conf.h file (default value
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *               64 MHz) but the real value may vary depending on the variations
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *               in voltage and temperature.
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     (***) HSE_VALUE is a constant defined in stm32h7xx_hal_conf.h file (default value
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *                have wrong result.
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         value for HSE crystal.
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         baud rate for the communication peripherals or configure other parameters.
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval SYSCLK frequency
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 1672              		.loc 1 1389 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 0
 1675              		@ frame_needed = 0, uses_anonymous_args = 0
 1676              		@ link register save eliminated.
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue;
ARM GAS  /tmp/ccOQTb5n.s 			page 58


1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   float_t fracn1, pllvco;
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t sysclockfreq;
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 1677              		.loc 1 1396 0
 1678 0000 724B     		ldr	r3, .L202
 1679 0002 1B69     		ldr	r3, [r3, #16]
 1680 0004 03F03803 		and	r3, r3, #56
 1681 0008 102B     		cmp	r3, #16
 1682 000a 00F0DB80 		beq	.L199
 1683 000e 182B     		cmp	r3, #24
 1684 0010 10D0     		beq	.L191
 1685 0012 0BB1     		cbz	r3, .L192
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         sysclockfreq = (uint32_t) HSI_VALUE;
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       break;
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       sysclockfreq = CSI_VALUE;
 1686              		.loc 1 1412 0
 1687 0014 6E48     		ldr	r0, .L202+4
 1688 0016 7047     		bx	lr
 1689              	.L192:
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1690              		.loc 1 1400 0
 1691 0018 6C4B     		ldr	r3, .L202
 1692 001a 1B68     		ldr	r3, [r3]
 1693 001c 13F0200F 		tst	r3, #32
 1694 0020 00F0D280 		beq	.L200
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 1695              		.loc 1 1402 0
 1696 0024 694B     		ldr	r3, .L202
 1697 0026 1868     		ldr	r0, [r3]
 1698 0028 C0F3C100 		ubfx	r0, r0, #3, #2
 1699 002c 694B     		ldr	r3, .L202+8
 1700 002e 23FA00F0 		lsr	r0, r3, r0
 1701              	.LVL158:
 1702 0032 7047     		bx	lr
 1703              	.LVL159:
 1704              	.L191:
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       break;
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       break;
ARM GAS  /tmp/ccOQTb5n.s 			page 59


1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       SYSCLK = PLL_VCO / PLLR
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       */
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 1705              		.loc 1 1424 0
 1706 0034 654A     		ldr	r2, .L202
 1707 0036 916A     		ldr	r1, [r2, #40]
 1708 0038 01F00301 		and	r1, r1, #3
 1709              	.LVL160:
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 1710              		.loc 1 1425 0
 1711 003c 906A     		ldr	r0, [r2, #40]
 1712 003e C0F30510 		ubfx	r0, r0, #4, #6
 1713              	.LVL161:
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 1714              		.loc 1 1426 0
 1715 0042 D36A     		ldr	r3, [r2, #44]
 1716 0044 03F00103 		and	r3, r3, #1
 1717              	.LVL162:
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 1718              		.loc 1 1427 0
 1719 0048 526B     		ldr	r2, [r2, #52]
 1720 004a C2F3CC02 		ubfx	r2, r2, #3, #13
 1721 004e 03FB02F3 		mul	r3, r3, r2
 1722              	.LVL163:
 1723 0052 07EE903A 		vmov	s15, r3	@ int
 1724 0056 F8EE677A 		vcvt.f32.u32	s15, s15
 1725              	.LVL164:
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if (pllm != 0U)
 1726              		.loc 1 1429 0
 1727 005a 0028     		cmp	r0, #0
 1728 005c 00F0B580 		beq	.L188
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         switch (pllsource)
 1729              		.loc 1 1431 0
 1730 0060 0129     		cmp	r1, #1
 1731 0062 66D0     		beq	.L194
 1732 0064 F9B1     		cbz	r1, .L195
 1733 0066 0229     		cmp	r1, #2
 1734 0068 00F08F80 		beq	.L196
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             {
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****               hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****               pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & R
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             }
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             else
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             {
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****               pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & 
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             }
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             break;
ARM GAS  /tmp/ccOQTb5n.s 			page 60


1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RC
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             break;
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RC
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             break;
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           default:
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RC
 1735              		.loc 1 1455 0
 1736 006c 07EE100A 		vmov	s14, r0	@ int
 1737 0070 F8EE476A 		vcvt.f32.u32	s13, s14
 1738 0074 9FED586A 		vldr.32	s12, .L202+12
 1739 0078 86EE267A 		vdiv.f32	s14, s12, s13
 1740 007c 534B     		ldr	r3, .L202
 1741 007e 1B6B     		ldr	r3, [r3, #48]
 1742 0080 C3F30803 		ubfx	r3, r3, #0, #9
 1743 0084 06EE903A 		vmov	s13, r3	@ int
 1744 0088 F8EE666A 		vcvt.f32.u32	s13, s13
 1745 008c 9FED536A 		vldr.32	s12, .L202+16
 1746 0090 67EE867A 		vmul.f32	s15, s15, s12
 1747              	.LVL165:
 1748 0094 76EEA77A 		vadd.f32	s15, s13, s15
 1749 0098 F7EE006A 		vmov.f32	s13, #1.0e+0
 1750 009c 77EEA67A 		vadd.f32	s15, s15, s13
 1751 00a0 27EE277A 		vmul.f32	s14, s14, s15
 1752              	.LVL166:
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             break;
 1753              		.loc 1 1456 0
 1754 00a4 61E0     		b	.L198
 1755              	.LVL167:
 1756              	.L195:
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             {
 1757              		.loc 1 1435 0
 1758 00a6 494B     		ldr	r3, .L202
 1759 00a8 1B68     		ldr	r3, [r3]
 1760 00aa 13F0200F 		tst	r3, #32
 1761 00ae 23D0     		beq	.L197
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****               pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & R
 1762              		.loc 1 1437 0
 1763 00b0 4649     		ldr	r1, .L202
 1764              	.LVL168:
 1765 00b2 0A68     		ldr	r2, [r1]
 1766 00b4 C2F3C102 		ubfx	r2, r2, #3, #2
 1767 00b8 464B     		ldr	r3, .L202+8
 1768 00ba D340     		lsrs	r3, r3, r2
 1769              	.LVL169:
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             }
 1770              		.loc 1 1438 0
 1771 00bc 07EE103A 		vmov	s14, r3	@ int
 1772 00c0 F8EE476A 		vcvt.f32.u32	s13, s14
 1773 00c4 07EE100A 		vmov	s14, r0	@ int
 1774 00c8 B8EE476A 		vcvt.f32.u32	s12, s14
 1775 00cc 86EE867A 		vdiv.f32	s14, s13, s12
 1776 00d0 0B6B     		ldr	r3, [r1, #48]
ARM GAS  /tmp/ccOQTb5n.s 			page 61


 1777              	.LVL170:
 1778 00d2 C3F30803 		ubfx	r3, r3, #0, #9
 1779 00d6 06EE903A 		vmov	s13, r3	@ int
 1780 00da F8EE666A 		vcvt.f32.u32	s13, s13
 1781 00de 9FED3F6A 		vldr.32	s12, .L202+16
 1782 00e2 67EE867A 		vmul.f32	s15, s15, s12
 1783              	.LVL171:
 1784 00e6 76EEA77A 		vadd.f32	s15, s13, s15
 1785 00ea F7EE006A 		vmov.f32	s13, #1.0e+0
 1786 00ee 77EEA67A 		vadd.f32	s15, s15, s13
 1787 00f2 27EE277A 		vmul.f32	s14, s14, s15
 1788              	.LVL172:
 1789 00f6 38E0     		b	.L198
 1790              	.LVL173:
 1791              	.L197:
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             }
 1792              		.loc 1 1442 0
 1793 00f8 07EE100A 		vmov	s14, r0	@ int
 1794 00fc F8EE476A 		vcvt.f32.u32	s13, s14
 1795 0100 9FED376A 		vldr.32	s12, .L202+20
 1796 0104 86EE267A 		vdiv.f32	s14, s12, s13
 1797 0108 304B     		ldr	r3, .L202
 1798 010a 1B6B     		ldr	r3, [r3, #48]
 1799 010c C3F30803 		ubfx	r3, r3, #0, #9
 1800 0110 06EE903A 		vmov	s13, r3	@ int
 1801 0114 F8EE666A 		vcvt.f32.u32	s13, s13
 1802 0118 9FED306A 		vldr.32	s12, .L202+16
 1803 011c 67EE867A 		vmul.f32	s15, s15, s12
 1804              	.LVL174:
 1805 0120 76EEA77A 		vadd.f32	s15, s13, s15
 1806 0124 F7EE006A 		vmov.f32	s13, #1.0e+0
 1807 0128 77EEA67A 		vadd.f32	s15, s15, s13
 1808 012c 27EE277A 		vmul.f32	s14, s14, s15
 1809              	.LVL175:
 1810 0130 1BE0     		b	.L198
 1811              	.LVL176:
 1812              	.L194:
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             break;
 1813              		.loc 1 1447 0
 1814 0132 07EE100A 		vmov	s14, r0	@ int
 1815 0136 F8EE476A 		vcvt.f32.u32	s13, s14
 1816 013a 9FED276A 		vldr.32	s12, .L202+12
 1817 013e 86EE267A 		vdiv.f32	s14, s12, s13
 1818 0142 224B     		ldr	r3, .L202
 1819 0144 1B6B     		ldr	r3, [r3, #48]
 1820 0146 C3F30803 		ubfx	r3, r3, #0, #9
 1821 014a 06EE903A 		vmov	s13, r3	@ int
 1822 014e F8EE666A 		vcvt.f32.u32	s13, s13
 1823 0152 9FED226A 		vldr.32	s12, .L202+16
 1824 0156 67EE867A 		vmul.f32	s15, s15, s12
 1825              	.LVL177:
 1826 015a 76EEA77A 		vadd.f32	s15, s13, s15
 1827 015e F7EE006A 		vmov.f32	s13, #1.0e+0
 1828 0162 77EEA67A 		vadd.f32	s15, s15, s13
 1829 0166 27EE277A 		vmul.f32	s14, s14, s15
 1830              	.LVL178:
 1831              	.L198:
ARM GAS  /tmp/ccOQTb5n.s 			page 62


1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
 1832              		.loc 1 1458 0
 1833 016a 184B     		ldr	r3, .L202
 1834 016c 1B6B     		ldr	r3, [r3, #48]
 1835 016e C3F34623 		ubfx	r3, r3, #9, #7
 1836 0172 0133     		adds	r3, r3, #1
 1837              	.LVL179:
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 1838              		.loc 1 1459 0
 1839 0174 07EE903A 		vmov	s15, r3	@ int
 1840 0178 F8EE677A 		vcvt.f32.u32	s15, s15
 1841 017c C7EE276A 		vdiv.f32	s13, s14, s15
 1842 0180 FCEEE67A 		vcvt.u32.f32	s15, s13
 1843 0184 17EE900A 		vmov	r0, s15	@ int
 1844              	.LVL180:
 1845 0188 7047     		bx	lr
 1846              	.LVL181:
 1847              	.L196:
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             break;
 1848              		.loc 1 1451 0
 1849 018a 07EE100A 		vmov	s14, r0	@ int
 1850 018e F8EE476A 		vcvt.f32.u32	s13, s14
 1851 0192 9FED146A 		vldr.32	s12, .L202+24
 1852 0196 86EE267A 		vdiv.f32	s14, s12, s13
 1853 019a 0C4B     		ldr	r3, .L202
 1854 019c 1B6B     		ldr	r3, [r3, #48]
 1855 019e C3F30803 		ubfx	r3, r3, #0, #9
 1856 01a2 06EE903A 		vmov	s13, r3	@ int
 1857 01a6 F8EE666A 		vcvt.f32.u32	s13, s13
 1858 01aa 9FED0C6A 		vldr.32	s12, .L202+16
 1859 01ae 67EE867A 		vmul.f32	s15, s15, s12
 1860              	.LVL182:
 1861 01b2 76EEA77A 		vadd.f32	s15, s13, s15
 1862 01b6 F7EE006A 		vmov.f32	s13, #1.0e+0
 1863 01ba 77EEA67A 		vadd.f32	s15, s15, s13
 1864 01be 27EE277A 		vmul.f32	s14, s14, s15
 1865              	.LVL183:
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1866              		.loc 1 1452 0
 1867 01c2 D2E7     		b	.L198
 1868              	.LVL184:
 1869              	.L199:
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       break;
 1870              		.loc 1 1416 0
 1871 01c4 0848     		ldr	r0, .L202+28
 1872 01c6 7047     		bx	lr
 1873              	.L200:
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 1874              		.loc 1 1406 0
 1875 01c8 0248     		ldr	r0, .L202+8
 1876              	.LVL185:
 1877              	.L188:
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         sysclockfreq = 0U;
ARM GAS  /tmp/ccOQTb5n.s 			page 63


1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       break;
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     default:
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       sysclockfreq = CSI_VALUE;
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       break;
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return sysclockfreq;
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 1878              		.loc 1 1473 0
 1879 01ca 7047     		bx	lr
 1880              	.L203:
 1881              		.align	2
 1882              	.L202:
 1883 01cc 00440258 		.word	1476543488
 1884 01d0 00093D00 		.word	4000000
 1885 01d4 0090D003 		.word	64000000
 1886 01d8 0024744A 		.word	1249125376
 1887 01dc 00000039 		.word	956301312
 1888 01e0 0024744C 		.word	1282679808
 1889 01e4 0024F44A 		.word	1257513984
 1890 01e8 00127A00 		.word	8000000
 1891              		.cfi_endproc
 1892              	.LFE150:
 1894              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1895              		.align	1
 1896              		.global	HAL_RCC_ClockConfig
 1897              		.syntax unified
 1898              		.thumb
 1899              		.thumb_func
 1900              		.fpu fpv5-d16
 1902              	HAL_RCC_ClockConfig:
 1903              	.LFB146:
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   HAL_StatusTypeDef halstatus;
 1904              		.loc 1 923 0
 1905              		.cfi_startproc
 1906              		@ args = 0, pretend = 0, frame = 0
 1907              		@ frame_needed = 0, uses_anonymous_args = 0
 1908              	.LVL186:
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 1909              		.loc 1 929 0
 1910 0000 0028     		cmp	r0, #0
 1911 0002 00F03681 		beq	.L225
 1912 0006 0346     		mov	r3, r0
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 1913              		.loc 1 943 0
 1914 0008 9C4A     		ldr	r2, .L240
 1915 000a 1268     		ldr	r2, [r2]
 1916 000c 02F00F02 		and	r2, r2, #15
 1917 0010 8A42     		cmp	r2, r1
 1918 0012 0CD2     		bcs	.L206
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1919              		.loc 1 946 0
 1920 0014 9948     		ldr	r0, .L240
 1921              	.LVL187:
 1922 0016 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccOQTb5n.s 			page 64


 1923 0018 22F00F02 		bic	r2, r2, #15
 1924 001c 0A43     		orrs	r2, r2, r1
 1925 001e 0260     		str	r2, [r0]
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1926              		.loc 1 950 0
 1927 0020 0268     		ldr	r2, [r0]
 1928 0022 02F00F02 		and	r2, r2, #15
 1929 0026 8A42     		cmp	r2, r1
 1930 0028 01D0     		beq	.L206
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 1931              		.loc 1 952 0
 1932 002a 0120     		movs	r0, #1
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1933              		.loc 1 1240 0
 1934 002c 7047     		bx	lr
 1935              	.L206:
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   HAL_StatusTypeDef halstatus;
 1936              		.loc 1 923 0
 1937 002e 70B5     		push	{r4, r5, r6, lr}
 1938              	.LCFI8:
 1939              		.cfi_def_cfa_offset 16
 1940              		.cfi_offset 4, -16
 1941              		.cfi_offset 5, -12
 1942              		.cfi_offset 6, -8
 1943              		.cfi_offset 14, -4
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 1944              		.loc 1 959 0
 1945 0030 1A68     		ldr	r2, [r3]
 1946 0032 12F0040F 		tst	r2, #4
 1947 0036 0CD0     		beq	.L207
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1948              		.loc 1 962 0
 1949 0038 1869     		ldr	r0, [r3, #16]
 1950 003a 914A     		ldr	r2, .L240+4
 1951 003c 9269     		ldr	r2, [r2, #24]
 1952 003e 02F07002 		and	r2, r2, #112
 1953 0042 9042     		cmp	r0, r2
 1954 0044 05D9     		bls	.L207
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 1955              		.loc 1 965 0
 1956 0046 8E4C     		ldr	r4, .L240+4
 1957 0048 A269     		ldr	r2, [r4, #24]
 1958 004a 22F07002 		bic	r2, r2, #112
 1959 004e 1043     		orrs	r0, r0, r2
 1960 0050 A061     		str	r0, [r4, #24]
 1961              	.L207:
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 1962              		.loc 1 977 0
 1963 0052 1A68     		ldr	r2, [r3]
 1964 0054 12F0080F 		tst	r2, #8
 1965 0058 0CD0     		beq	.L208
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1966              		.loc 1 980 0
 1967 005a 5869     		ldr	r0, [r3, #20]
 1968 005c 884A     		ldr	r2, .L240+4
 1969 005e D269     		ldr	r2, [r2, #28]
 1970 0060 02F07002 		and	r2, r2, #112
ARM GAS  /tmp/ccOQTb5n.s 			page 65


 1971 0064 9042     		cmp	r0, r2
 1972 0066 05D9     		bls	.L208
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 1973              		.loc 1 983 0
 1974 0068 854C     		ldr	r4, .L240+4
 1975 006a E269     		ldr	r2, [r4, #28]
 1976 006c 22F07002 		bic	r2, r2, #112
 1977 0070 1043     		orrs	r0, r0, r2
 1978 0072 E061     		str	r0, [r4, #28]
 1979              	.L208:
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 1980              		.loc 1 994 0
 1981 0074 1A68     		ldr	r2, [r3]
 1982 0076 12F0100F 		tst	r2, #16
 1983 007a 0CD0     		beq	.L209
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1984              		.loc 1 997 0
 1985 007c 9869     		ldr	r0, [r3, #24]
 1986 007e 804A     		ldr	r2, .L240+4
 1987 0080 D269     		ldr	r2, [r2, #28]
 1988 0082 02F4E062 		and	r2, r2, #1792
 1989 0086 9042     		cmp	r0, r2
 1990 0088 05D9     		bls	.L209
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 1991              		.loc 1 1000 0
 1992 008a 7D4C     		ldr	r4, .L240+4
 1993 008c E269     		ldr	r2, [r4, #28]
 1994 008e 22F4E062 		bic	r2, r2, #1792
 1995 0092 1043     		orrs	r0, r0, r2
 1996 0094 E061     		str	r0, [r4, #28]
 1997              	.L209:
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 1998              		.loc 1 1012 0
 1999 0096 1A68     		ldr	r2, [r3]
 2000 0098 12F0200F 		tst	r2, #32
 2001 009c 0CD0     		beq	.L210
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 2002              		.loc 1 1015 0
 2003 009e D869     		ldr	r0, [r3, #28]
 2004 00a0 774A     		ldr	r2, .L240+4
 2005 00a2 126A     		ldr	r2, [r2, #32]
 2006 00a4 02F07002 		and	r2, r2, #112
 2007 00a8 9042     		cmp	r0, r2
 2008 00aa 05D9     		bls	.L210
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 2009              		.loc 1 1018 0
 2010 00ac 744C     		ldr	r4, .L240+4
 2011 00ae 226A     		ldr	r2, [r4, #32]
 2012 00b0 22F07002 		bic	r2, r2, #112
 2013 00b4 1043     		orrs	r0, r0, r2
 2014 00b6 2062     		str	r0, [r4, #32]
 2015              	.L210:
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 2016              		.loc 1 1030 0
 2017 00b8 1A68     		ldr	r2, [r3]
 2018 00ba 12F0020F 		tst	r2, #2
 2019 00be 0CD0     		beq	.L211
ARM GAS  /tmp/ccOQTb5n.s 			page 66


1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 2020              		.loc 1 1033 0
 2021 00c0 D868     		ldr	r0, [r3, #12]
 2022 00c2 6F4A     		ldr	r2, .L240+4
 2023 00c4 9269     		ldr	r2, [r2, #24]
 2024 00c6 02F00F02 		and	r2, r2, #15
 2025 00ca 9042     		cmp	r0, r2
 2026 00cc 05D9     		bls	.L211
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 2027              		.loc 1 1037 0
 2028 00ce 6C4C     		ldr	r4, .L240+4
 2029 00d0 A269     		ldr	r2, [r4, #24]
 2030 00d2 22F00F02 		bic	r2, r2, #15
 2031 00d6 1043     		orrs	r0, r0, r2
 2032 00d8 A061     		str	r0, [r4, #24]
 2033              	.L211:
 2034 00da 1C46     		mov	r4, r3
 2035 00dc 0D46     		mov	r5, r1
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 2036              		.loc 1 1050 0
 2037 00de 1B68     		ldr	r3, [r3]
 2038              	.LVL188:
 2039 00e0 13F0010F 		tst	r3, #1
 2040 00e4 41D0     		beq	.L212
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
 2041              		.loc 1 1055 0
 2042 00e6 664A     		ldr	r2, .L240+4
 2043 00e8 9369     		ldr	r3, [r2, #24]
 2044 00ea 23F47063 		bic	r3, r3, #3840
 2045 00ee A168     		ldr	r1, [r4, #8]
 2046              	.LVL189:
 2047 00f0 0B43     		orrs	r3, r3, r1
 2048 00f2 9361     		str	r3, [r2, #24]
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 2049              		.loc 1 1060 0
 2050 00f4 6368     		ldr	r3, [r4, #4]
 2051 00f6 022B     		cmp	r3, #2
 2052 00f8 0AD0     		beq	.L236
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 2053              		.loc 1 1069 0
 2054 00fa 032B     		cmp	r3, #3
 2055 00fc 27D0     		beq	.L237
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 2056              		.loc 1 1078 0
 2057 00fe 012B     		cmp	r3, #1
 2058 0100 2CD0     		beq	.L238
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 2059              		.loc 1 1090 0
 2060 0102 5F4A     		ldr	r2, .L240+4
 2061 0104 1268     		ldr	r2, [r2]
 2062 0106 12F0040F 		tst	r2, #4
 2063 010a 06D1     		bne	.L214
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 2064              		.loc 1 1092 0
 2065 010c 0120     		movs	r0, #1
 2066 010e AFE0     		b	.L205
 2067              	.L236:
ARM GAS  /tmp/ccOQTb5n.s 			page 67


1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 2068              		.loc 1 1063 0
 2069 0110 1268     		ldr	r2, [r2]
 2070 0112 12F4003F 		tst	r2, #131072
 2071 0116 00F0AE80 		beq	.L239
 2072              	.L214:
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 2073              		.loc 1 1095 0
 2074 011a 5949     		ldr	r1, .L240+4
 2075 011c 0A69     		ldr	r2, [r1, #16]
 2076 011e 22F00702 		bic	r2, r2, #7
 2077 0122 1343     		orrs	r3, r3, r2
 2078 0124 0B61     		str	r3, [r1, #16]
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 2079              		.loc 1 1098 0
 2080 0126 FFF7FEFF 		bl	HAL_GetTick
 2081              	.LVL190:
 2082 012a 0646     		mov	r6, r0
 2083              	.LVL191:
 2084              	.L217:
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 2085              		.loc 1 1100 0
 2086 012c 544B     		ldr	r3, .L240+4
 2087 012e 1B69     		ldr	r3, [r3, #16]
 2088 0130 03F03803 		and	r3, r3, #56
 2089 0134 6268     		ldr	r2, [r4, #4]
 2090 0136 B3EBC20F 		cmp	r3, r2, lsl #3
 2091 013a 16D0     		beq	.L212
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 2092              		.loc 1 1102 0
 2093 013c FFF7FEFF 		bl	HAL_GetTick
 2094              	.LVL192:
 2095 0140 801B     		subs	r0, r0, r6
 2096 0142 41F28833 		movw	r3, #5000
 2097 0146 9842     		cmp	r0, r3
 2098 0148 F0D9     		bls	.L217
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 2099              		.loc 1 1104 0
 2100 014a 0320     		movs	r0, #3
 2101 014c 90E0     		b	.L205
 2102              	.LVL193:
 2103              	.L237:
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 2104              		.loc 1 1072 0
 2105 014e 4C4A     		ldr	r2, .L240+4
 2106 0150 1268     		ldr	r2, [r2]
 2107 0152 12F0007F 		tst	r2, #33554432
 2108 0156 E0D1     		bne	.L214
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 2109              		.loc 1 1074 0
 2110 0158 0120     		movs	r0, #1
 2111 015a 89E0     		b	.L205
 2112              	.L238:
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 2113              		.loc 1 1081 0
 2114 015c 484A     		ldr	r2, .L240+4
 2115 015e 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccOQTb5n.s 			page 68


 2116 0160 12F4807F 		tst	r2, #256
 2117 0164 D9D1     		bne	.L214
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 2118              		.loc 1 1083 0
 2119 0166 0120     		movs	r0, #1
 2120 0168 82E0     		b	.L205
 2121              	.L212:
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 2122              		.loc 1 1112 0
 2123 016a 2368     		ldr	r3, [r4]
 2124 016c 13F0020F 		tst	r3, #2
 2125 0170 0CD0     		beq	.L219
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 2126              		.loc 1 1115 0
 2127 0172 E268     		ldr	r2, [r4, #12]
 2128 0174 424B     		ldr	r3, .L240+4
 2129 0176 9B69     		ldr	r3, [r3, #24]
 2130 0178 03F00F03 		and	r3, r3, #15
 2131 017c 9A42     		cmp	r2, r3
 2132 017e 05D2     		bcs	.L219
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 2133              		.loc 1 1119 0
 2134 0180 3F49     		ldr	r1, .L240+4
 2135 0182 8B69     		ldr	r3, [r1, #24]
 2136 0184 23F00F03 		bic	r3, r3, #15
 2137 0188 1A43     		orrs	r2, r2, r3
 2138 018a 8A61     		str	r2, [r1, #24]
 2139              	.L219:
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 2140              		.loc 1 1132 0
 2141 018c 3B4B     		ldr	r3, .L240
 2142 018e 1B68     		ldr	r3, [r3]
 2143 0190 03F00F03 		and	r3, r3, #15
 2144 0194 AB42     		cmp	r3, r5
 2145 0196 0CD9     		bls	.L220
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 2146              		.loc 1 1135 0
 2147 0198 384A     		ldr	r2, .L240
 2148 019a 1368     		ldr	r3, [r2]
 2149 019c 23F00F03 		bic	r3, r3, #15
 2150 01a0 2B43     		orrs	r3, r3, r5
 2151 01a2 1360     		str	r3, [r2]
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 2152              		.loc 1 1139 0
 2153 01a4 1368     		ldr	r3, [r2]
 2154 01a6 03F00F03 		and	r3, r3, #15
 2155 01aa AB42     		cmp	r3, r5
 2156 01ac 01D0     		beq	.L220
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 2157              		.loc 1 1141 0
 2158 01ae 0120     		movs	r0, #1
 2159 01b0 5EE0     		b	.L205
 2160              	.L220:
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 2161              		.loc 1 1146 0
 2162 01b2 2368     		ldr	r3, [r4]
 2163 01b4 13F0040F 		tst	r3, #4
ARM GAS  /tmp/ccOQTb5n.s 			page 69


 2164 01b8 0CD0     		beq	.L221
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 2165              		.loc 1 1149 0
 2166 01ba 2269     		ldr	r2, [r4, #16]
 2167 01bc 304B     		ldr	r3, .L240+4
 2168 01be 9B69     		ldr	r3, [r3, #24]
 2169 01c0 03F07003 		and	r3, r3, #112
 2170 01c4 9A42     		cmp	r2, r3
 2171 01c6 05D2     		bcs	.L221
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 2172              		.loc 1 1152 0
 2173 01c8 2D49     		ldr	r1, .L240+4
 2174 01ca 8B69     		ldr	r3, [r1, #24]
 2175 01cc 23F07003 		bic	r3, r3, #112
 2176 01d0 1A43     		orrs	r2, r2, r3
 2177 01d2 8A61     		str	r2, [r1, #24]
 2178              	.L221:
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 2179              		.loc 1 1164 0
 2180 01d4 2368     		ldr	r3, [r4]
 2181 01d6 13F0080F 		tst	r3, #8
 2182 01da 0CD0     		beq	.L222
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 2183              		.loc 1 1167 0
 2184 01dc 6269     		ldr	r2, [r4, #20]
 2185 01de 284B     		ldr	r3, .L240+4
 2186 01e0 DB69     		ldr	r3, [r3, #28]
 2187 01e2 03F07003 		and	r3, r3, #112
 2188 01e6 9A42     		cmp	r2, r3
 2189 01e8 05D2     		bcs	.L222
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 2190              		.loc 1 1170 0
 2191 01ea 2549     		ldr	r1, .L240+4
 2192 01ec CB69     		ldr	r3, [r1, #28]
 2193 01ee 23F07003 		bic	r3, r3, #112
 2194 01f2 1A43     		orrs	r2, r2, r3
 2195 01f4 CA61     		str	r2, [r1, #28]
 2196              	.L222:
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 2197              		.loc 1 1182 0
 2198 01f6 2368     		ldr	r3, [r4]
 2199 01f8 13F0100F 		tst	r3, #16
 2200 01fc 0CD0     		beq	.L223
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 2201              		.loc 1 1185 0
 2202 01fe A269     		ldr	r2, [r4, #24]
 2203 0200 1F4B     		ldr	r3, .L240+4
 2204 0202 DB69     		ldr	r3, [r3, #28]
 2205 0204 03F4E063 		and	r3, r3, #1792
 2206 0208 9A42     		cmp	r2, r3
 2207 020a 05D2     		bcs	.L223
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 2208              		.loc 1 1188 0
 2209 020c 1C49     		ldr	r1, .L240+4
 2210 020e CB69     		ldr	r3, [r1, #28]
 2211 0210 23F4E063 		bic	r3, r3, #1792
 2212 0214 1A43     		orrs	r2, r2, r3
ARM GAS  /tmp/ccOQTb5n.s 			page 70


 2213 0216 CA61     		str	r2, [r1, #28]
 2214              	.L223:
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 2215              		.loc 1 1200 0
 2216 0218 2368     		ldr	r3, [r4]
 2217 021a 13F0200F 		tst	r3, #32
 2218 021e 0CD0     		beq	.L224
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 2219              		.loc 1 1203 0
 2220 0220 E269     		ldr	r2, [r4, #28]
 2221 0222 174B     		ldr	r3, .L240+4
 2222 0224 1B6A     		ldr	r3, [r3, #32]
 2223 0226 03F07003 		and	r3, r3, #112
 2224 022a 9A42     		cmp	r2, r3
 2225 022c 05D2     		bcs	.L224
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 2226              		.loc 1 1206 0
 2227 022e 1449     		ldr	r1, .L240+4
 2228 0230 0B6A     		ldr	r3, [r1, #32]
 2229 0232 23F07003 		bic	r3, r3, #112
 2230 0236 1A43     		orrs	r2, r2, r3
 2231 0238 0A62     		str	r2, [r1, #32]
 2232              	.L224:
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
 2233              		.loc 1 1219 0
 2234 023a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2235              	.LVL194:
 2236 023e 1049     		ldr	r1, .L240+4
 2237 0240 8B69     		ldr	r3, [r1, #24]
 2238 0242 C3F30323 		ubfx	r3, r3, #8, #4
 2239 0246 0F4A     		ldr	r2, .L240+8
 2240 0248 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2241 024a 03F01F03 		and	r3, r3, #31
 2242 024e D840     		lsrs	r0, r0, r3
 2243              	.LVL195:
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
 2244              		.loc 1 1225 0
 2245 0250 8B69     		ldr	r3, [r1, #24]
 2246 0252 03F00F03 		and	r3, r3, #15
 2247 0256 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2248 0258 03F01F03 		and	r3, r3, #31
 2249 025c 20FA03F3 		lsr	r3, r0, r3
 2250 0260 094A     		ldr	r2, .L240+12
 2251 0262 1360     		str	r3, [r2]
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif /* DUAL_CORE && CORE_CM4 */
 2252              		.loc 1 1233 0
 2253 0264 094B     		ldr	r3, .L240+16
 2254 0266 1860     		str	r0, [r3]
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 2255              		.loc 1 1237 0
 2256 0268 094B     		ldr	r3, .L240+20
 2257 026a 1868     		ldr	r0, [r3]
 2258              	.LVL196:
 2259 026c FFF7FEFF 		bl	HAL_InitTick
 2260              	.LVL197:
 2261              	.L205:
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccOQTb5n.s 			page 71


 2262              		.loc 1 1240 0
 2263 0270 70BD     		pop	{r4, r5, r6, pc}
 2264              	.LVL198:
 2265              	.L225:
 2266              	.LCFI9:
 2267              		.cfi_def_cfa_offset 0
 2268              		.cfi_restore 4
 2269              		.cfi_restore 5
 2270              		.cfi_restore 6
 2271              		.cfi_restore 14
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2272              		.loc 1 931 0
 2273 0272 0120     		movs	r0, #1
 2274              	.LVL199:
 2275 0274 7047     		bx	lr
 2276              	.LVL200:
 2277              	.L239:
 2278              	.LCFI10:
 2279              		.cfi_def_cfa_offset 16
 2280              		.cfi_offset 4, -16
 2281              		.cfi_offset 5, -12
 2282              		.cfi_offset 6, -8
 2283              		.cfi_offset 14, -4
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 2284              		.loc 1 1065 0
 2285 0276 0120     		movs	r0, #1
 2286 0278 FAE7     		b	.L205
 2287              	.L241:
 2288 027a 00BF     		.align	2
 2289              	.L240:
 2290 027c 00200052 		.word	1375739904
 2291 0280 00440258 		.word	1476543488
 2292 0284 00000000 		.word	D1CorePrescTable
 2293 0288 00000000 		.word	SystemD2Clock
 2294 028c 00000000 		.word	SystemCoreClock
 2295 0290 00000000 		.word	uwTickPrio
 2296              		.cfi_endproc
 2297              	.LFE146:
 2299              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2300              		.align	1
 2301              		.global	HAL_RCC_GetHCLKFreq
 2302              		.syntax unified
 2303              		.thumb
 2304              		.thumb_func
 2305              		.fpu fpv5-d16
 2307              	HAL_RCC_GetHCLKFreq:
 2308              	.LFB151:
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         and updated within this function
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval HCLK frequency
ARM GAS  /tmp/ccOQTb5n.s 			page 72


1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2309              		.loc 1 1486 0
 2310              		.cfi_startproc
 2311              		@ args = 0, pretend = 0, frame = 0
 2312              		@ frame_needed = 0, uses_anonymous_args = 0
 2313 0000 08B5     		push	{r3, lr}
 2314              	.LCFI11:
 2315              		.cfi_def_cfa_offset 8
 2316              		.cfi_offset 3, -8
 2317              		.cfi_offset 14, -4
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t common_system_clock;
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_D1CPRE)
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1
 2318              		.loc 1 1490 0
 2319 0002 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2320              	.LVL201:
 2321 0006 0B4A     		ldr	r2, .L244
 2322 0008 9369     		ldr	r3, [r2, #24]
 2323 000a C3F30323 		ubfx	r3, r3, #8, #4
 2324 000e 0A49     		ldr	r1, .L244+4
 2325 0010 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2326 0012 03F01F03 		and	r3, r3, #31
 2327 0016 20FA03F3 		lsr	r3, r0, r3
 2328              	.LVL202:
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_HPRE)
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC
 2329              		.loc 1 1496 0
 2330 001a 9269     		ldr	r2, [r2, #24]
 2331 001c 02F00F02 		and	r2, r2, #15
 2332 0020 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 2333 0022 00F01F00 		and	r0, r0, #31
 2334 0026 23FA00F0 		lsr	r0, r3, r0
 2335 002a 044A     		ldr	r2, .L244+8
 2336 002c 1060     		str	r0, [r2]
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE) >> R
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemCoreClock = SystemD2Clock;
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemCoreClock = common_system_clock;
 2337              		.loc 1 1504 0
 2338 002e 044A     		ldr	r2, .L244+12
 2339 0030 1360     		str	r3, [r2]
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif /* DUAL_CORE && CORE_CM4 */
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return SystemD2Clock;
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2340              		.loc 1 1508 0
ARM GAS  /tmp/ccOQTb5n.s 			page 73


 2341 0032 08BD     		pop	{r3, pc}
 2342              	.LVL203:
 2343              	.L245:
 2344              		.align	2
 2345              	.L244:
 2346 0034 00440258 		.word	1476543488
 2347 0038 00000000 		.word	D1CorePrescTable
 2348 003c 00000000 		.word	SystemD2Clock
 2349 0040 00000000 		.word	SystemCoreClock
 2350              		.cfi_endproc
 2351              	.LFE151:
 2353              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2354              		.align	1
 2355              		.global	HAL_RCC_GetPCLK1Freq
 2356              		.syntax unified
 2357              		.thumb
 2358              		.thumb_func
 2359              		.fpu fpv5-d16
 2361              	HAL_RCC_GetPCLK1Freq:
 2362              	.LFB152:
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval PCLK1 frequency
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2363              		.loc 1 1518 0
 2364              		.cfi_startproc
 2365              		@ args = 0, pretend = 0, frame = 0
 2366              		@ frame_needed = 0, uses_anonymous_args = 0
 2367 0000 08B5     		push	{r3, lr}
 2368              	.LCFI12:
 2369              		.cfi_def_cfa_offset 8
 2370              		.cfi_offset 3, -8
 2371              		.cfi_offset 14, -4
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined (RCC_D2CFGR_D2PPRE1)
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2C
 2372              		.loc 1 1521 0
 2373 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2374              	.LVL204:
 2375 0006 054B     		ldr	r3, .L248
 2376 0008 DB69     		ldr	r3, [r3, #28]
 2377 000a C3F30213 		ubfx	r3, r3, #4, #3
 2378 000e 044A     		ldr	r2, .L248+4
 2379 0010 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2380 0012 03F01F03 		and	r3, r3, #31
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_C
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2381              		.loc 1 1526 0
ARM GAS  /tmp/ccOQTb5n.s 			page 74


 2382 0016 D840     		lsrs	r0, r0, r3
 2383 0018 08BD     		pop	{r3, pc}
 2384              	.L249:
 2385 001a 00BF     		.align	2
 2386              	.L248:
 2387 001c 00440258 		.word	1476543488
 2388 0020 00000000 		.word	D1CorePrescTable
 2389              		.cfi_endproc
 2390              	.LFE152:
 2392              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2393              		.align	1
 2394              		.global	HAL_RCC_GetPCLK2Freq
 2395              		.syntax unified
 2396              		.thumb
 2397              		.thumb_func
 2398              		.fpu fpv5-d16
 2400              	HAL_RCC_GetPCLK2Freq:
 2401              	.LFB153:
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Returns the D2 PCLK2 frequency
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval PCLK1 frequency
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2402              		.loc 1 1536 0
 2403              		.cfi_startproc
 2404              		@ args = 0, pretend = 0, frame = 0
 2405              		@ frame_needed = 0, uses_anonymous_args = 0
 2406 0000 08B5     		push	{r3, lr}
 2407              	.LCFI13:
 2408              		.cfi_def_cfa_offset 8
 2409              		.cfi_offset 3, -8
 2410              		.cfi_offset 14, -4
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D2CFGR_D2PPRE2)
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2C
 2411              		.loc 1 1539 0
 2412 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2413              	.LVL205:
 2414 0006 054B     		ldr	r3, .L252
 2415 0008 DB69     		ldr	r3, [r3, #28]
 2416 000a C3F30223 		ubfx	r3, r3, #8, #3
 2417 000e 044A     		ldr	r2, .L252+4
 2418 0010 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2419 0012 03F01F03 		and	r3, r3, #31
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_C
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2420              		.loc 1 1543 0
 2421 0016 D840     		lsrs	r0, r0, r3
 2422 0018 08BD     		pop	{r3, pc}
 2423              	.L253:
ARM GAS  /tmp/ccOQTb5n.s 			page 75


 2424 001a 00BF     		.align	2
 2425              	.L252:
 2426 001c 00440258 		.word	1476543488
 2427 0020 00000000 		.word	D1CorePrescTable
 2428              		.cfi_endproc
 2429              	.LFE153:
 2431              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2432              		.align	1
 2433              		.global	HAL_RCC_GetOscConfig
 2434              		.syntax unified
 2435              		.thumb
 2436              		.thumb_func
 2437              		.fpu fpv5-d16
 2439              	HAL_RCC_GetOscConfig:
 2440              	.LFB154:
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * RCC configuration registers.
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_OscInitStruct: pointer to an RCC_OscInitTypeDef structure that
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * will be configured.
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2441              		.loc 1 1553 0
 2442              		.cfi_startproc
 2443              		@ args = 0, pretend = 0, frame = 0
 2444              		@ frame_needed = 0, uses_anonymous_args = 0
 2445              	.LVL206:
 2446 0000 10B5     		push	{r4, lr}
 2447              	.LCFI14:
 2448              		.cfi_def_cfa_offset 8
 2449              		.cfi_offset 4, -8
 2450              		.cfi_offset 14, -4
 2451 0002 0446     		mov	r4, r0
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 2452              		.loc 1 1555 0
 2453 0004 3F23     		movs	r3, #63
 2454 0006 0360     		str	r3, [r0]
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLA
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_CR_HSEEXT)
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if ((RCC->CR & (RCC_CR_HSEBYP | RCC_CR_HSEEXT)) == RCC_CR_HSEBYP)
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else if ((RCC->CR & (RCC_CR_HSEBYP | RCC_CR_HSEEXT)) == (RCC_CR_HSEBYP | RCC_CR_HSEEXT))
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS_DIGITAL;
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else if ((RCC->CR & RCC_CR_HSEON) == RCC_CR_HSEON)
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccOQTb5n.s 			page 76


1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2455              		.loc 1 1577 0
 2456 0008 514B     		ldr	r3, .L277
 2457 000a 1B68     		ldr	r3, [r3]
 2458 000c 13F4802F 		tst	r3, #262144
 2459 0010 6CD0     		beq	.L255
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2460              		.loc 1 1579 0
 2461 0012 4FF4A023 		mov	r3, #327680
 2462 0016 4360     		str	r3, [r0, #4]
 2463              	.L256:
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else if ((RCC->CR & RCC_CR_HSEON) == RCC_CR_HSEON)
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif /* RCC_CR_HSEEXT */
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the CSI configuration -----------------------------------------------*/
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_CSION) == RCC_CR_CSION)
 2464              		.loc 1 1592 0
 2465 0018 4D4B     		ldr	r3, .L277
 2466 001a 1B68     		ldr	r3, [r3]
 2467 001c 13F0800F 		tst	r3, #128
 2468 0020 70D0     		beq	.L258
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->CSIState = RCC_CSI_ON;
 2469              		.loc 1 1594 0
 2470 0022 8023     		movs	r3, #128
 2471 0024 E361     		str	r3, [r4, #28]
 2472              	.L259:
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->CSIState = RCC_CSI_OFF;
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_VER_X)
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (HAL_GetREVID() <= REV_ID_Y)
 2473              		.loc 1 1602 0
 2474 0026 FFF7FEFF 		bl	HAL_GetREVID
 2475              	.LVL207:
 2476 002a 41F20303 		movw	r3, #4099
 2477 002e 9842     		cmp	r0, r3
 2478 0030 6BD8     		bhi	.L260
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->CSICalibrationValue = (uint32_t)(READ_BIT(RCC->HSICFGR, HAL_RCC_REV_Y_CSITRI
ARM GAS  /tmp/ccOQTb5n.s 			page 77


 2479              		.loc 1 1604 0
 2480 0032 474B     		ldr	r3, .L277
 2481 0034 5B68     		ldr	r3, [r3, #4]
 2482 0036 C3F38463 		ubfx	r3, r3, #26, #5
 2483 003a 2362     		str	r3, [r4, #32]
 2484              	.L261:
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->CSICalibrationValue = (uint32_t)(READ_BIT(RCC->CSICFGR, RCC_CSICFGR_CSITRIM)
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->CSICalibrationValue = (uint32_t)(READ_BIT(RCC->CSICFGR, RCC_CSICFGR_CSITRIM) >
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif /*RCC_VER_X*/
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_HSION) == RCC_CR_HSION)
 2485              		.loc 1 1615 0
 2486 003c 444B     		ldr	r3, .L277
 2487 003e 1B68     		ldr	r3, [r3]
 2488 0040 13F0010F 		tst	r3, #1
 2489 0044 67D0     		beq	.L262
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2490              		.loc 1 1617 0
 2491 0046 0123     		movs	r3, #1
 2492 0048 E360     		str	r3, [r4, #12]
 2493              	.L263:
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_VER_X)
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (HAL_GetREVID() <= REV_ID_Y)
 2494              		.loc 1 1625 0
 2495 004a FFF7FEFF 		bl	HAL_GetREVID
 2496              	.LVL208:
 2497 004e 41F20303 		movw	r3, #4099
 2498 0052 9842     		cmp	r0, r3
 2499 0054 62D8     		bhi	.L264
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSICalibrationValue = (uint32_t)(READ_BIT(RCC->HSICFGR, HAL_RCC_REV_Y_HSITRI
 2500              		.loc 1 1627 0
 2501 0056 3E4B     		ldr	r3, .L277
 2502 0058 5B68     		ldr	r3, [r3, #4]
 2503 005a C3F30533 		ubfx	r3, r3, #12, #6
 2504 005e 2361     		str	r3, [r4, #16]
 2505              	.L265:
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSICalibrationValue = (uint32_t)(READ_BIT(RCC->HSICFGR, RCC_HSICFGR_HSITRIM)
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)(READ_BIT(RCC->HSICFGR, RCC_HSICFGR_HSITRIM) >
ARM GAS  /tmp/ccOQTb5n.s 			page 78


1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif /*RCC_VER_X*/
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_BDCR_LSEEXT)
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if ((RCC->BDCR & (RCC_BDCR_LSEBYP | RCC_BDCR_LSEEXT)) == RCC_BDCR_LSEBYP)
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else if ((RCC->BDCR & (RCC_BDCR_LSEBYP | RCC_BDCR_LSEEXT)) == (RCC_BDCR_LSEBYP | RCC_BDCR_LSEEXT)
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS_DIGITAL;
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else if ((RCC->BDCR & RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if ((RCC->BDCR & RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2506              		.loc 1 1656 0
 2507 0060 3B4B     		ldr	r3, .L277
 2508 0062 1B6F     		ldr	r3, [r3, #112]
 2509 0064 13F0040F 		tst	r3, #4
 2510 0068 5ED0     		beq	.L266
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2511              		.loc 1 1658 0
 2512 006a 0523     		movs	r3, #5
 2513 006c A360     		str	r3, [r4, #8]
 2514              	.L267:
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else if ((RCC->BDCR & RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif /* RCC_BDCR_LSEEXT */
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if ((RCC->CSR & RCC_CSR_LSION) == RCC_CSR_LSION)
 2515              		.loc 1 1671 0
 2516 006e 384B     		ldr	r3, .L277
 2517 0070 5B6F     		ldr	r3, [r3, #116]
 2518 0072 13F0010F 		tst	r3, #1
 2519 0076 62D0     		beq	.L269
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2520              		.loc 1 1673 0
 2521 0078 0123     		movs	r3, #1
 2522 007a 6361     		str	r3, [r4, #20]
 2523              	.L270:
ARM GAS  /tmp/ccOQTb5n.s 			page 79


1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the HSI48 configuration ---------------------------------------------*/
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_HSI48ON) == RCC_CR_HSI48ON)
 2524              		.loc 1 1681 0
 2525 007c 344B     		ldr	r3, .L277
 2526 007e 1B68     		ldr	r3, [r3]
 2527 0080 13F4805F 		tst	r3, #4096
 2528 0084 5ED0     		beq	.L271
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_ON;
 2529              		.loc 1 1683 0
 2530 0086 0123     		movs	r3, #1
 2531 0088 A361     		str	r3, [r4, #24]
 2532              	.L272:
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_OFF;
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_PLLON) == RCC_CR_PLLON)
 2533              		.loc 1 1691 0
 2534 008a 314B     		ldr	r3, .L277
 2535 008c 1B68     		ldr	r3, [r3]
 2536 008e 13F0807F 		tst	r3, #16777216
 2537 0092 5AD1     		bne	.L276
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2538              		.loc 1 1697 0
 2539 0094 0123     		movs	r3, #1
 2540 0096 6362     		str	r3, [r4, #36]
 2541              	.L274:
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 2542              		.loc 1 1699 0
 2543 0098 2D4B     		ldr	r3, .L277
 2544 009a 9A6A     		ldr	r2, [r3, #40]
 2545 009c 02F00302 		and	r2, r2, #3
 2546 00a0 A262     		str	r2, [r4, #40]
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_
 2547              		.loc 1 1700 0
 2548 00a2 9A6A     		ldr	r2, [r3, #40]
 2549 00a4 C2F30512 		ubfx	r2, r2, #4, #6
 2550 00a8 E262     		str	r2, [r4, #44]
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_N1) >> RCC_PLL1DIVR_N1_Pos
 2551              		.loc 1 1701 0
 2552 00aa 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccOQTb5n.s 			page 80


 2553 00ac C2F30802 		ubfx	r2, r2, #0, #9
 2554 00b0 0132     		adds	r2, r2, #1
 2555 00b2 2263     		str	r2, [r4, #48]
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos
 2556              		.loc 1 1702 0
 2557 00b4 1A6B     		ldr	r2, [r3, #48]
 2558 00b6 C2F30662 		ubfx	r2, r2, #24, #7
 2559 00ba 0132     		adds	r2, r2, #1
 2560 00bc E263     		str	r2, [r4, #60]
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos
 2561              		.loc 1 1703 0
 2562 00be 1A6B     		ldr	r2, [r3, #48]
 2563 00c0 C2F34622 		ubfx	r2, r2, #9, #7
 2564 00c4 0132     		adds	r2, r2, #1
 2565 00c6 6263     		str	r2, [r4, #52]
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos
 2566              		.loc 1 1704 0
 2567 00c8 1A6B     		ldr	r2, [r3, #48]
 2568 00ca C2F30642 		ubfx	r2, r2, #16, #7
 2569 00ce 0132     		adds	r2, r2, #1
 2570 00d0 A263     		str	r2, [r4, #56]
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLRGE = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLL1RGE));
 2571              		.loc 1 1705 0
 2572 00d2 DA6A     		ldr	r2, [r3, #44]
 2573 00d4 02F00C02 		and	r2, r2, #12
 2574 00d8 2264     		str	r2, [r4, #64]
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLVCOSEL = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLL1VCOSEL) >> RCC_PLLC
 2575              		.loc 1 1706 0
 2576 00da DA6A     		ldr	r2, [r3, #44]
 2577 00dc C2F34002 		ubfx	r2, r2, #1, #1
 2578 00e0 6264     		str	r2, [r4, #68]
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLFRACN = (uint32_t)(((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1
 2579              		.loc 1 1707 0
 2580 00e2 5B6B     		ldr	r3, [r3, #52]
 2581 00e4 C3F3CC03 		ubfx	r3, r3, #3, #13
 2582 00e8 A364     		str	r3, [r4, #72]
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2583              		.loc 1 1708 0
 2584 00ea 10BD     		pop	{r4, pc}
 2585              	.LVL209:
 2586              	.L255:
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 2587              		.loc 1 1581 0
 2588 00ec 184B     		ldr	r3, .L277
 2589 00ee 1B68     		ldr	r3, [r3]
 2590 00f0 13F4803F 		tst	r3, #65536
 2591 00f4 03D0     		beq	.L257
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2592              		.loc 1 1583 0
 2593 00f6 4FF48033 		mov	r3, #65536
 2594 00fa 4360     		str	r3, [r0, #4]
 2595 00fc 8CE7     		b	.L256
 2596              	.L257:
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2597              		.loc 1 1587 0
 2598 00fe 0023     		movs	r3, #0
 2599 0100 4360     		str	r3, [r0, #4]
ARM GAS  /tmp/ccOQTb5n.s 			page 81


 2600 0102 89E7     		b	.L256
 2601              	.L258:
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2602              		.loc 1 1598 0
 2603 0104 0023     		movs	r3, #0
 2604 0106 E361     		str	r3, [r4, #28]
 2605 0108 8DE7     		b	.L259
 2606              	.LVL210:
 2607              	.L260:
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2608              		.loc 1 1608 0
 2609 010a 114B     		ldr	r3, .L277
 2610 010c DB68     		ldr	r3, [r3, #12]
 2611 010e C3F30563 		ubfx	r3, r3, #24, #6
 2612 0112 2362     		str	r3, [r4, #32]
 2613 0114 92E7     		b	.L261
 2614              	.L262:
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2615              		.loc 1 1621 0
 2616 0116 0023     		movs	r3, #0
 2617 0118 E360     		str	r3, [r4, #12]
 2618 011a 96E7     		b	.L263
 2619              	.L264:
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2620              		.loc 1 1631 0
 2621 011c 0C4B     		ldr	r3, .L277
 2622 011e 5B68     		ldr	r3, [r3, #4]
 2623 0120 C3F30663 		ubfx	r3, r3, #24, #7
 2624 0124 2361     		str	r3, [r4, #16]
 2625 0126 9BE7     		b	.L265
 2626              	.L266:
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 2627              		.loc 1 1660 0
 2628 0128 094B     		ldr	r3, .L277
 2629 012a 1B6F     		ldr	r3, [r3, #112]
 2630 012c 13F0010F 		tst	r3, #1
 2631 0130 02D0     		beq	.L268
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2632              		.loc 1 1662 0
 2633 0132 0123     		movs	r3, #1
 2634 0134 A360     		str	r3, [r4, #8]
 2635 0136 9AE7     		b	.L267
 2636              	.L268:
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2637              		.loc 1 1666 0
 2638 0138 0023     		movs	r3, #0
 2639 013a A360     		str	r3, [r4, #8]
 2640 013c 97E7     		b	.L267
 2641              	.L269:
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2642              		.loc 1 1677 0
 2643 013e 0023     		movs	r3, #0
 2644 0140 6361     		str	r3, [r4, #20]
 2645 0142 9BE7     		b	.L270
 2646              	.L271:
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2647              		.loc 1 1687 0
ARM GAS  /tmp/ccOQTb5n.s 			page 82


 2648 0144 0023     		movs	r3, #0
 2649 0146 A361     		str	r3, [r4, #24]
 2650 0148 9FE7     		b	.L272
 2651              	.L276:
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2652              		.loc 1 1693 0
 2653 014a 0223     		movs	r3, #2
 2654 014c 6362     		str	r3, [r4, #36]
 2655 014e A3E7     		b	.L274
 2656              	.L278:
 2657              		.align	2
 2658              	.L277:
 2659 0150 00440258 		.word	1476543488
 2660              		.cfi_endproc
 2661              	.LFE154:
 2663              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2664              		.align	1
 2665              		.global	HAL_RCC_GetClockConfig
 2666              		.syntax unified
 2667              		.thumb
 2668              		.thumb_func
 2669              		.fpu fpv5-d16
 2671              	HAL_RCC_GetClockConfig:
 2672              	.LFB155:
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * RCC configuration registers.
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct: pointer to an RCC_ClkInitTypeDef structure that
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * will be configured.
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  pFLatency: Pointer on the Flash Latency.
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2673              		.loc 1 1719 0
 2674              		.cfi_startproc
 2675              		@ args = 0, pretend = 0, frame = 0
 2676              		@ frame_needed = 0, uses_anonymous_args = 0
 2677              		@ link register save eliminated.
 2678              	.LVL211:
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 
 2679              		.loc 1 1721 0
 2680 0000 3F23     		movs	r3, #63
 2681 0002 0360     		str	r3, [r0]
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                                  RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2682              		.loc 1 1725 0
 2683 0004 114B     		ldr	r3, .L280
 2684 0006 1A69     		ldr	r2, [r3, #16]
 2685 0008 02F00702 		and	r2, r2, #7
 2686 000c 4260     		str	r2, [r0, #4]
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #if defined(RCC_D1CFGR_D1CPRE)
ARM GAS  /tmp/ccOQTb5n.s 			page 83


1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the SYSCLK configuration ----------------------------------------------*/
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
 2687              		.loc 1 1729 0
 2688 000e 9A69     		ldr	r2, [r3, #24]
 2689 0010 02F47062 		and	r2, r2, #3840
 2690 0014 8260     		str	r2, [r0, #8]
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the D1HCLK configuration ----------------------------------------------*/
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
 2691              		.loc 1 1732 0
 2692 0016 9A69     		ldr	r2, [r3, #24]
 2693 0018 02F00F02 		and	r2, r2, #15
 2694 001c C260     		str	r2, [r0, #12]
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB3 configuration ----------------------------------------------*/
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
 2695              		.loc 1 1735 0
 2696 001e 9A69     		ldr	r2, [r3, #24]
 2697 0020 02F07002 		and	r2, r2, #112
 2698 0024 0261     		str	r2, [r0, #16]
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
 2699              		.loc 1 1738 0
 2700 0026 DA69     		ldr	r2, [r3, #28]
 2701 0028 02F07002 		and	r2, r2, #112
 2702 002c 4261     		str	r2, [r0, #20]
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
 2703              		.loc 1 1741 0
 2704 002e DA69     		ldr	r2, [r3, #28]
 2705 0030 02F4E062 		and	r2, r2, #1792
 2706 0034 8261     		str	r2, [r0, #24]
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB4 configuration ----------------------------------------------*/
1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
 2707              		.loc 1 1744 0
 2708 0036 1B6A     		ldr	r3, [r3, #32]
 2709 0038 03F07003 		and	r3, r3, #112
 2710 003c C361     		str	r3, [r0, #28]
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #else
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the SYSCLK configuration ----------------------------------------------*/
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE);
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the D1HCLK configuration ----------------------------------------------*/
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE);
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB3 configuration ----------------------------------------------*/
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->CDCFGR1 & RCC_CDCFGR1_CDPPRE);
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1);
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2);
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccOQTb5n.s 			page 84


1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB4 configuration ----------------------------------------------*/
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #endif
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 2711              		.loc 1 1766 0
 2712 003e 044B     		ldr	r3, .L280+4
 2713 0040 1B68     		ldr	r3, [r3]
 2714 0042 03F00F03 		and	r3, r3, #15
 2715 0046 0B60     		str	r3, [r1]
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2716              		.loc 1 1767 0
 2717 0048 7047     		bx	lr
 2718              	.L281:
 2719 004a 00BF     		.align	2
 2720              	.L280:
 2721 004c 00440258 		.word	1476543488
 2722 0050 00200052 		.word	1375739904
 2723              		.cfi_endproc
 2724              	.LFE155:
 2726              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2727              		.align	1
 2728              		.weak	HAL_RCC_CSSCallback
 2729              		.syntax unified
 2730              		.thumb
 2731              		.thumb_func
 2732              		.fpu fpv5-d16
 2734              	HAL_RCC_CSSCallback:
 2735              	.LFB157:
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if (__HAL_RCC_GET_IT(RCC_IT_CSS))
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval none
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2736              		.loc 1 1792 0
 2737              		.cfi_startproc
ARM GAS  /tmp/ccOQTb5n.s 			page 85


 2738              		@ args = 0, pretend = 0, frame = 0
 2739              		@ frame_needed = 0, uses_anonymous_args = 0
 2740              		@ link register save eliminated.
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             the HAL_RCC_CSSCallback could be implemented in the user file
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    */
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2741              		.loc 1 1796 0
 2742 0000 7047     		bx	lr
 2743              		.cfi_endproc
 2744              	.LFE157:
 2746              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2747              		.align	1
 2748              		.global	HAL_RCC_NMI_IRQHandler
 2749              		.syntax unified
 2750              		.thumb
 2751              		.thumb_func
 2752              		.fpu fpv5-d16
 2754              	HAL_RCC_NMI_IRQHandler:
 2755              	.LFB156:
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2756              		.loc 1 1775 0
 2757              		.cfi_startproc
 2758              		@ args = 0, pretend = 0, frame = 0
 2759              		@ frame_needed = 0, uses_anonymous_args = 0
 2760 0000 08B5     		push	{r3, lr}
 2761              	.LCFI15:
 2762              		.cfi_def_cfa_offset 8
 2763              		.cfi_offset 3, -8
 2764              		.cfi_offset 14, -4
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 2765              		.loc 1 1777 0
 2766 0002 064B     		ldr	r3, .L287
 2767 0004 5B6E     		ldr	r3, [r3, #100]
 2768 0006 13F4806F 		tst	r3, #1024
 2769 000a 00D1     		bne	.L286
 2770              	.L283:
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 2771              		.loc 1 1785 0
 2772 000c 08BD     		pop	{r3, pc}
 2773              	.L286:
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 2774              		.loc 1 1780 0
 2775 000e FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2776              	.LVL212:
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2777              		.loc 1 1783 0
 2778 0012 024B     		ldr	r3, .L287
 2779 0014 4FF48062 		mov	r2, #1024
 2780 0018 9A66     		str	r2, [r3, #104]
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 2781              		.loc 1 1785 0
 2782 001a F7E7     		b	.L283
 2783              	.L288:
 2784              		.align	2
 2785              	.L287:
 2786 001c 00440258 		.word	1476543488
ARM GAS  /tmp/ccOQTb5n.s 			page 86


 2787              		.cfi_endproc
 2788              	.LFE156:
 2790              		.text
 2791              	.Letext0:
 2792              		.file 2 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 2793              		.file 3 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 2794              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 2795              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 2796              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 2797              		.file 7 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 2798              		.file 8 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 2799              		.file 9 "/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
 2800              		.file 10 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 2801              		.file 11 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/math.h"
 2802              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 2803              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 2804              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 2805              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 2806              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccOQTb5n.s 			page 87


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_rcc.c
     /tmp/ccOQTb5n.s:17     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccOQTb5n.s:24     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccOQTb5n.s:312    .text.HAL_RCC_DeInit:00000000000001a8 $d
     /tmp/ccOQTb5n.s:326    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccOQTb5n.s:333    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccOQTb5n.s:793    .text.HAL_RCC_OscConfig:00000000000002b4 $d
     /tmp/ccOQTb5n.s:796    .text.HAL_RCC_OscConfig:00000000000002b8 $t
     /tmp/ccOQTb5n.s:1183   .text.HAL_RCC_OscConfig:0000000000000524 $d
     /tmp/ccOQTb5n.s:1187   .text.HAL_RCC_OscConfig:000000000000052c $t
     /tmp/ccOQTb5n.s:1469   .text.HAL_RCC_OscConfig:00000000000006a8 $d
     /tmp/ccOQTb5n.s:1476   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccOQTb5n.s:1483   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccOQTb5n.s:1598   .text.HAL_RCC_MCOConfig:0000000000000098 $d
     /tmp/ccOQTb5n.s:1605   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccOQTb5n.s:1612   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccOQTb5n.s:1629   .text.HAL_RCC_EnableCSS:000000000000000c $d
     /tmp/ccOQTb5n.s:1634   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/ccOQTb5n.s:1641   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/ccOQTb5n.s:1658   .text.HAL_RCC_DisableCSS:000000000000000c $d
     /tmp/ccOQTb5n.s:1663   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccOQTb5n.s:1670   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccOQTb5n.s:1883   .text.HAL_RCC_GetSysClockFreq:00000000000001cc $d
     /tmp/ccOQTb5n.s:1895   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccOQTb5n.s:1902   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccOQTb5n.s:2290   .text.HAL_RCC_ClockConfig:000000000000027c $d
     /tmp/ccOQTb5n.s:2300   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccOQTb5n.s:2307   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccOQTb5n.s:2346   .text.HAL_RCC_GetHCLKFreq:0000000000000034 $d
     /tmp/ccOQTb5n.s:2354   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccOQTb5n.s:2361   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccOQTb5n.s:2387   .text.HAL_RCC_GetPCLK1Freq:000000000000001c $d
     /tmp/ccOQTb5n.s:2393   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccOQTb5n.s:2400   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccOQTb5n.s:2426   .text.HAL_RCC_GetPCLK2Freq:000000000000001c $d
     /tmp/ccOQTb5n.s:2432   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccOQTb5n.s:2439   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccOQTb5n.s:2659   .text.HAL_RCC_GetOscConfig:0000000000000150 $d
     /tmp/ccOQTb5n.s:2664   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccOQTb5n.s:2671   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccOQTb5n.s:2721   .text.HAL_RCC_GetClockConfig:000000000000004c $d
     /tmp/ccOQTb5n.s:2727   .text.HAL_RCC_CSSCallback:0000000000000000 $t
     /tmp/ccOQTb5n.s:2734   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccOQTb5n.s:2747   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccOQTb5n.s:2754   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccOQTb5n.s:2786   .text.HAL_RCC_NMI_IRQHandler:000000000000001c $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
SystemD2Clock
uwTickPrio
HAL_GetREVID
HAL_GPIO_Init
D1CorePrescTable
ARM GAS  /tmp/ccOQTb5n.s 			page 88


