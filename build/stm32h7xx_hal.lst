ARM GAS  /tmp/cclQz20V.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_MspInit,"ax",%progbits
  17              		.align	1
  18              		.weak	HAL_MspInit
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	HAL_MspInit:
  25              	.LFB146:
  26              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @file    stm32h7xx_hal.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ******************************************************************************
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @attention
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * Copyright (c) 2017 STMicroelectronics.
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * All rights reserved.
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * This software is licensed under terms that can be found in the LICENSE file
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * in the root directory of this software component.
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ******************************************************************************
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   @verbatim
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ==============================================================================
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                      ##### How to use this driver #####
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ==============================================================================
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     The HAL contains two APIs' categories:
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****          (+) Common HAL APIs
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****          (+) Services HAL APIs
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   @endverbatim
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   ******************************************************************************
ARM GAS  /tmp/cclQz20V.s 			page 2


  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #include "stm32h7xx_hal.h"
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @addtogroup STM32H7xx_HAL_Driver
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL  HAL
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private define ------------------------------------------------------------*/
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  * @brief STM32H7xx HAL Driver version number V1.11.1
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    */
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_MAIN   (0x01UL) /*!< [31:24] main version */
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_SUB1   (0x0BUL) /*!< [23:16] sub1 version */
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_SUB2   (0x01UL) /*!< [15:8]  sub2 version */
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION_RC     (0x00UL) /*!< [7:0]  release candidate */
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define __STM32H7xx_HAL_VERSION         ((__STM32H7xx_HAL_VERSION_MAIN << 24)\
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                                         |(__STM32H7xx_HAL_VERSION_SUB1 << 16)\
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                                         |(__STM32H7xx_HAL_VERSION_SUB2 << 8 )\
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                                         |(__STM32H7xx_HAL_VERSION_RC))
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #define VREFBUF_TIMEOUT_VALUE     (uint32_t)10   /* 10 ms  */
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Exported variables --------------------------------------------------------*/
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @defgroup HAL_Exported_Variables HAL Exported Variables
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __IO uint32_t uwTick;
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @}
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /* Private functions ---------------------------------------------------------*/
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @addtogroup HAL_Exported_Functions
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @addtogroup HAL_Group1
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *  @brief    Initialization and de-initialization functions
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @verbatim
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
ARM GAS  /tmp/cclQz20V.s 			page 3


  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****               ##### Initialization and de-initialization functions #####
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]  This section provides functions allowing to:
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****           and the backup domain when enabled.
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) De-Initializes common part of the HAL.
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****           Tick interrupt priority.
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              handled in milliseconds basis.
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             ISR process will be blocked.
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @endverbatim
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         HAL function), it performs the following:
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           Set NVIC Group Priority to 4.
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *           "stm32h7xx_hal_msp.c" to do the global low level hardware initialization
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         to have correct HAL operation.
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL status
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t common_system_clock;
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    /* Configure Cortex-M4 Instruction cache through ART accelerator */
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_ART_CLK_ENABLE();                   /* Enable the Cortex-M4 ART Clock */
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* DUAL_CORE &&  CORE_CM4 */
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Set Interrupt Group Priority */
ARM GAS  /tmp/cclQz20V.s 			page 4


 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Update the SystemCoreClock global variable */
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(RCC_D1CFGR_D1CPRE)
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Update the SystemD2Clock global variable */
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(RCC_D1CFGR_HPRE)
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RC
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemCoreClock = SystemD2Clock;
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SystemCoreClock = common_system_clock;
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* DUAL_CORE && CORE_CM4 */
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     return HAL_ERROR;
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Init the low level hardware */
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_MspInit();
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Return function status */
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This function is optional.
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL status
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Reset of all peripherals */
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB4_FORCE_RESET();
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  __HAL_RCC_AHB4_RELEASE_RESET();
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB3_FORCE_RESET();
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB3_RELEASE_RESET();
ARM GAS  /tmp/cclQz20V.s 			page 5


 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1L_FORCE_RESET();
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1L_RELEASE_RESET();
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1H_FORCE_RESET();
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1H_RELEASE_RESET();
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_APB2_FORCE_RESET();
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_APB2_RELEASE_RESET();
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB4_FORCE_RESET();
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB4_RELEASE_RESET();
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* De-Init the low level hardware */
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_MspDeInit();
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Return function status */
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Initializes the MSP.
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_MspInit(void)
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
  27              		.loc 1 229 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    */
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
  32              		.loc 1 233 0
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE146:
  37              		.section	.text.HAL_MspDeInit,"ax",%progbits
  38              		.align	1
  39              		.weak	HAL_MspDeInit
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv5-d16
  45              	HAL_MspDeInit:
  46              	.LFB147:
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  DeInitializes the MSP.
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_MspDeInit(void)
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
  47              		.loc 1 240 0
  48              		.cfi_startproc
ARM GAS  /tmp/cclQz20V.s 			page 6


  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    */
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
  52              		.loc 1 244 0
  53 0000 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE147:
  57              		.section	.text.HAL_DeInit,"ax",%progbits
  58              		.align	1
  59              		.global	HAL_DeInit
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv5-d16
  65              	HAL_DeInit:
  66              	.LFB145:
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Reset of all peripherals */
  67              		.loc 1 188 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 10B5     		push	{r4, lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 4, -8
  75              		.cfi_offset 14, -4
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
  76              		.loc 1 190 0
  77 0002 194B     		ldr	r3, .L5
  78 0004 194A     		ldr	r2, .L5+4
  79 0006 DA67     		str	r2, [r3, #124]
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  80              		.loc 1 191 0
  81 0008 0024     		movs	r4, #0
  82 000a DC67     		str	r4, [r3, #124]
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
  83              		.loc 1 193 0
  84 000c 184A     		ldr	r2, .L5+8
  85 000e C3F88020 		str	r2, [r3, #128]
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  86              		.loc 1 194 0
  87 0012 C3F88040 		str	r4, [r3, #128]
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
  88              		.loc 1 196 0
  89 0016 40F27122 		movw	r2, #625
  90 001a C3F88420 		str	r2, [r3, #132]
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  91              		.loc 1 197 0
  92 001e C3F88440 		str	r4, [r3, #132]
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  __HAL_RCC_AHB4_RELEASE_RESET();
  93              		.loc 1 199 0
  94 0022 144A     		ldr	r2, .L5+12
  95 0024 C3F88820 		str	r2, [r3, #136]
ARM GAS  /tmp/cclQz20V.s 			page 7


 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
  96              		.loc 1 200 0
  97 0028 C3F88840 		str	r4, [r3, #136]
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB3_RELEASE_RESET();
  98              		.loc 1 202 0
  99 002c 1822     		movs	r2, #24
 100 002e C3F88C20 		str	r2, [r3, #140]
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 101              		.loc 1 203 0
 102 0032 C3F88C40 		str	r4, [r3, #140]
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1L_RELEASE_RESET();
 103              		.loc 1 205 0
 104 0036 104A     		ldr	r2, .L5+16
 105 0038 C3F89020 		str	r2, [r3, #144]
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 106              		.loc 1 206 0
 107 003c C3F89040 		str	r4, [r3, #144]
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB1H_RELEASE_RESET();
 108              		.loc 1 208 0
 109 0040 4FF49B72 		mov	r2, #310
 110 0044 C3F89420 		str	r2, [r3, #148]
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 111              		.loc 1 209 0
 112 0048 C3F89440 		str	r4, [r3, #148]
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    __HAL_RCC_APB2_RELEASE_RESET();
 113              		.loc 1 211 0
 114 004c 0B4A     		ldr	r2, .L5+20
 115 004e C3F89820 		str	r2, [r3, #152]
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 116              		.loc 1 212 0
 117 0052 C3F89840 		str	r4, [r3, #152]
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __HAL_RCC_APB4_RELEASE_RESET();
 118              		.loc 1 214 0
 119 0056 0A4A     		ldr	r2, .L5+24
 120 0058 C3F89C20 		str	r2, [r3, #156]
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 121              		.loc 1 215 0
 122 005c C3F89C40 		str	r4, [r3, #156]
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 123              		.loc 1 218 0
 124 0060 FFF7FEFF 		bl	HAL_MspDeInit
 125              	.LVL0:
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 126              		.loc 1 222 0
 127 0064 2046     		mov	r0, r4
 128 0066 10BD     		pop	{r4, pc}
 129              	.L6:
 130              		.align	2
 131              	.L5:
 132 0068 00440258 		.word	1476543488
 133 006c 31500100 		.word	86065
 134 0070 23C0000A 		.word	167821347
 135 0074 FF072803 		.word	52955135
 136 0078 FFC3FFE8 		.word	-385891329
 137 007c 3330D731 		.word	836186163
 138 0080 AADE2000 		.word	2154154
 139              		.cfi_endproc
ARM GAS  /tmp/cclQz20V.s 			page 8


 140              	.LFE145:
 142              		.section	.text.HAL_InitTick,"ax",%progbits
 143              		.align	1
 144              		.weak	HAL_InitTick
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	HAL_InitTick:
 151              	.LFB148:
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function configures the source of the time base.
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        Tick interrupt priority.
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       the SysTick interrupt must have higher priority (numerically lower)
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementation  in user file.
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param TickPriority: Tick interrupt priority.
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL status
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 152              		.loc 1 263 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              	.LVL1:
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value 
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if((uint32_t)uwTickFreq == 0UL)
 157              		.loc 1 265 0
 158 0000 104B     		ldr	r3, .L18
 159 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 160 0004 0BB9     		cbnz	r3, .L16
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     return HAL_ERROR;
 161              		.loc 1 267 0
 162 0006 0120     		movs	r0, #1
 163              	.LVL2:
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure the SysTick to have interrupt in 1ms time basis*/
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       return HAL_ERROR;
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Configure the SysTick IRQ priority */
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
ARM GAS  /tmp/cclQz20V.s 			page 9


 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     uwTickPrio = TickPriority;
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     return HAL_ERROR;
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Return function status */
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 164              		.loc 1 289 0
 165 0008 7047     		bx	lr
 166              	.LVL3:
 167              	.L16:
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value 
 168              		.loc 1 263 0
 169 000a 10B5     		push	{r4, lr}
 170              	.LCFI1:
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 4, -8
 173              		.cfi_offset 14, -4
 174 000c 0446     		mov	r4, r0
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 175              		.loc 1 271 0
 176 000e 4FF47A70 		mov	r0, #1000
 177              	.LVL4:
 178 0012 B0FBF3F3 		udiv	r3, r0, r3
 179 0016 0C4A     		ldr	r2, .L18+4
 180 0018 1068     		ldr	r0, [r2]
 181 001a B0FBF3F0 		udiv	r0, r0, r3
 182 001e FFF7FEFF 		bl	HAL_SYSTICK_Config
 183              	.LVL5:
 184 0022 68B9     		cbnz	r0, .L10
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 185              		.loc 1 277 0
 186 0024 0F2C     		cmp	r4, #15
 187 0026 01D9     		bls	.L17
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 188              		.loc 1 284 0
 189 0028 0120     		movs	r0, #1
 190 002a 0AE0     		b	.L8
 191              	.L17:
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     uwTickPrio = TickPriority;
 192              		.loc 1 279 0
 193 002c 0022     		movs	r2, #0
 194 002e 2146     		mov	r1, r4
 195 0030 4FF0FF30 		mov	r0, #-1
 196 0034 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 197              	.LVL6:
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 198              		.loc 1 280 0
 199 0038 044B     		ldr	r3, .L18+8
 200 003a 1C60     		str	r4, [r3]
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 201              		.loc 1 288 0
 202 003c 0020     		movs	r0, #0
 203 003e 00E0     		b	.L8
ARM GAS  /tmp/cclQz20V.s 			page 10


 204              	.L10:
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 205              		.loc 1 273 0
 206 0040 0120     		movs	r0, #1
 207              	.L8:
 208              		.loc 1 289 0
 209 0042 10BD     		pop	{r4, pc}
 210              	.LVL7:
 211              	.L19:
 212              		.align	2
 213              	.L18:
 214 0044 00000000 		.word	.LANCHOR0
 215 0048 00000000 		.word	SystemCoreClock
 216 004c 00000000 		.word	.LANCHOR1
 217              		.cfi_endproc
 218              	.LFE148:
 220              		.section	.text.HAL_Init,"ax",%progbits
 221              		.align	1
 222              		.global	HAL_Init
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 226              		.fpu fpv5-d16
 228              	HAL_Init:
 229              	.LFB144:
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 230              		.loc 1 135 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234 0000 10B5     		push	{r4, lr}
 235              	.LCFI2:
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 4, -8
 238              		.cfi_offset 14, -4
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 239              		.loc 1 147 0
 240 0002 0320     		movs	r0, #3
 241 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 242              	.LVL8:
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 243              		.loc 1 151 0
 244 0008 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 245              	.LVL9:
 246 000c 0F49     		ldr	r1, .L25
 247 000e 8B69     		ldr	r3, [r1, #24]
 248 0010 C3F30323 		ubfx	r3, r3, #8, #4
 249 0014 0E4A     		ldr	r2, .L25+4
 250 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 251 0018 03F01F03 		and	r3, r3, #31
 252 001c D840     		lsrs	r0, r0, r3
 253              	.LVL10:
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 254              		.loc 1 158 0
 255 001e 8B69     		ldr	r3, [r1, #24]
 256 0020 03F00F03 		and	r3, r3, #15
 257 0024 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  /tmp/cclQz20V.s 			page 11


 258 0026 03F01F03 		and	r3, r3, #31
 259 002a 20FA03F3 		lsr	r3, r0, r3
 260 002e 094A     		ldr	r2, .L25+8
 261 0030 1360     		str	r3, [r2]
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* DUAL_CORE && CORE_CM4 */
 262              		.loc 1 166 0
 263 0032 094B     		ldr	r3, .L25+12
 264 0034 1860     		str	r0, [r3]
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 265              		.loc 1 170 0
 266 0036 0F20     		movs	r0, #15
 267              	.LVL11:
 268 0038 FFF7FEFF 		bl	HAL_InitTick
 269              	.LVL12:
 270 003c 10B1     		cbz	r0, .L24
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 271              		.loc 1 172 0
 272 003e 0124     		movs	r4, #1
 273              	.L21:
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 274              		.loc 1 180 0
 275 0040 2046     		mov	r0, r4
 276 0042 10BD     		pop	{r4, pc}
 277              	.L24:
 278 0044 0446     		mov	r4, r0
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 279              		.loc 1 176 0
 280 0046 FFF7FEFF 		bl	HAL_MspInit
 281              	.LVL13:
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 282              		.loc 1 179 0
 283 004a F9E7     		b	.L21
 284              	.L26:
 285              		.align	2
 286              	.L25:
 287 004c 00440258 		.word	1476543488
 288 0050 00000000 		.word	D1CorePrescTable
 289 0054 00000000 		.word	SystemD2Clock
 290 0058 00000000 		.word	SystemCoreClock
 291              		.cfi_endproc
 292              	.LFE144:
 294              		.section	.text.HAL_IncTick,"ax",%progbits
 295              		.align	1
 296              		.weak	HAL_IncTick
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu fpv5-d16
 302              	HAL_IncTick:
 303              	.LFB149:
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @}
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @addtogroup HAL_Group2
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *  @brief    HAL Control functions
ARM GAS  /tmp/cclQz20V.s 			page 12


 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  *
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @verbatim
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****                       ##### HAL Control functions #####
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  ===============================================================================
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     [..]  This section provides functions allowing to:
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Provide a tick value in millisecond
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Provide a blocking delay in millisecond
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Suspend the time base source interrupt
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Resume the time base source interrupt
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Get the HAL API driver version
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Get the device identifier
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Get the device revision identifier
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** @endverbatim
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @{
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        used as application time base.
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       in Systick ISR.
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *      implementations in user file.
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_IncTick(void)
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 304              		.loc 1 328 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uwTick += (uint32_t)uwTickFreq;
 309              		.loc 1 329 0
 310 0000 034B     		ldr	r3, .L28
 311 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 312 0004 034A     		ldr	r2, .L28+4
 313 0006 1168     		ldr	r1, [r2]
 314 0008 0B44     		add	r3, r3, r1
 315 000a 1360     		str	r3, [r2]
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 316              		.loc 1 330 0
 317 000c 7047     		bx	lr
 318              	.L29:
 319 000e 00BF     		.align	2
 320              	.L28:
 321 0010 00000000 		.word	.LANCHOR0
 322 0014 00000000 		.word	uwTick
 323              		.cfi_endproc
 324              	.LFE149:
 326              		.section	.text.HAL_GetTick,"ax",%progbits
 327              		.align	1
ARM GAS  /tmp/cclQz20V.s 			page 13


 328              		.weak	HAL_GetTick
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 332              		.fpu fpv5-d16
 334              	HAL_GetTick:
 335              	.LFB150:
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Provides a tick value in millisecond.
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval tick value
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 336              		.loc 1 339 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return uwTick;
 341              		.loc 1 340 0
 342 0000 014B     		ldr	r3, .L31
 343 0002 1868     		ldr	r0, [r3]
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 344              		.loc 1 341 0
 345 0004 7047     		bx	lr
 346              	.L32:
 347 0006 00BF     		.align	2
 348              	.L31:
 349 0008 00000000 		.word	uwTick
 350              		.cfi_endproc
 351              	.LFE150:
 353              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 354              		.align	1
 355              		.global	HAL_GetTickPrio
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
 359              		.fpu fpv5-d16
 361              	HAL_GetTickPrio:
 362              	.LFB151:
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function returns a tick priority.
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval tick priority
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 363              		.loc 1 348 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              		@ link register save eliminated.
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return uwTickPrio;
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
ARM GAS  /tmp/cclQz20V.s 			page 14


 368              		.loc 1 350 0
 369 0000 014B     		ldr	r3, .L34
 370 0002 1868     		ldr	r0, [r3]
 371 0004 7047     		bx	lr
 372              	.L35:
 373 0006 00BF     		.align	2
 374              	.L34:
 375 0008 00000000 		.word	.LANCHOR1
 376              		.cfi_endproc
 377              	.LFE151:
 379              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 380              		.align	1
 381              		.global	HAL_SetTickFreq
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu fpv5-d16
 387              	HAL_SetTickFreq:
 388              	.LFB152:
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Set new tick Freq.
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Status
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 389              		.loc 1 357 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              	.LVL14:
 394 0000 10B5     		push	{r4, lr}
 395              	.LCFI3:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 4, -8
 398              		.cfi_offset 14, -4
 399              	.LVL15:
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if (uwTickFreq != Freq)
 400              		.loc 1 363 0
 401 0002 084B     		ldr	r3, .L40
 402 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 403 0006 8442     		cmp	r4, r0
 404 0008 09D0     		beq	.L38
 405              	.LVL16:
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Back up uwTickFreq frequency */
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     prevTickFreq = uwTickFreq;
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     uwTickFreq = Freq;
 406              		.loc 1 370 0
ARM GAS  /tmp/cclQz20V.s 			page 15


 407 000a 1870     		strb	r0, [r3]
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Apply the new tick Freq  */
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 408              		.loc 1 373 0
 409 000c 064B     		ldr	r3, .L40+4
 410 000e 1868     		ldr	r0, [r3]
 411              	.LVL17:
 412 0010 FFF7FEFF 		bl	HAL_InitTick
 413              	.LVL18:
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if (status != HAL_OK)
 414              		.loc 1 374 0
 415 0014 0346     		mov	r3, r0
 416 0016 18B1     		cbz	r0, .L37
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       /* Restore previous tick frequency */
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       uwTickFreq = prevTickFreq;
 417              		.loc 1 377 0
 418 0018 024A     		ldr	r2, .L40
 419 001a 1470     		strb	r4, [r2]
 420 001c 00E0     		b	.L37
 421              	.LVL19:
 422              	.L38:
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 423              		.loc 1 358 0
 424 001e 0023     		movs	r3, #0
 425              	.LVL20:
 426              	.L37:
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return status;
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 427              		.loc 1 382 0
 428 0020 1846     		mov	r0, r3
 429 0022 10BD     		pop	{r4, pc}
 430              	.L41:
 431              		.align	2
 432              	.L40:
 433 0024 00000000 		.word	.LANCHOR0
 434 0028 00000000 		.word	.LANCHOR1
 435              		.cfi_endproc
 436              	.LFE152:
 438              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 439              		.align	1
 440              		.global	HAL_GetTickFreq
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu fpv5-d16
 446              	HAL_GetTickFreq:
 447              	.LFB153:
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Return tick frequency.
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval tick period in Hz
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
ARM GAS  /tmp/cclQz20V.s 			page 16


 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 448              		.loc 1 389 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return uwTickFreq;
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 453              		.loc 1 391 0
 454 0000 014B     		ldr	r3, .L43
 455 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 456 0004 7047     		bx	lr
 457              	.L44:
 458 0006 00BF     		.align	2
 459              	.L43:
 460 0008 00000000 		.word	.LANCHOR0
 461              		.cfi_endproc
 462              	.LFE153:
 464              		.section	.text.HAL_Delay,"ax",%progbits
 465              		.align	1
 466              		.weak	HAL_Delay
 467              		.syntax unified
 468              		.thumb
 469              		.thumb_func
 470              		.fpu fpv5-d16
 472              	HAL_Delay:
 473              	.LFB154:
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *        on variable incremented.
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is incremented.
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 474              		.loc 1 405 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              	.LVL21:
 479 0000 38B5     		push	{r3, r4, r5, lr}
 480              	.LCFI4:
 481              		.cfi_def_cfa_offset 16
 482              		.cfi_offset 3, -16
 483              		.cfi_offset 4, -12
 484              		.cfi_offset 5, -8
 485              		.cfi_offset 14, -4
 486 0002 0446     		mov	r4, r0
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 487              		.loc 1 406 0
ARM GAS  /tmp/cclQz20V.s 			page 17


 488 0004 FFF7FEFF 		bl	HAL_GetTick
 489              	.LVL22:
 490 0008 0546     		mov	r5, r0
 491              	.LVL23:
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uint32_t wait = Delay;
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 492              		.loc 1 410 0
 493 000a B4F1FF3F 		cmp	r4, #-1
 494 000e 02D0     		beq	.L47
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 495              		.loc 1 412 0
 496 0010 044B     		ldr	r3, .L49
 497 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 498 0014 1C44     		add	r4, r4, r3
 499              	.LVL24:
 500              	.L47:
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 501              		.loc 1 415 0 discriminator 1
 502 0016 FFF7FEFF 		bl	HAL_GetTick
 503              	.LVL25:
 504 001a 401B     		subs	r0, r0, r5
 505 001c A042     		cmp	r0, r4
 506 001e FAD3     		bcc	.L47
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 507              		.loc 1 418 0
 508 0020 38BD     		pop	{r3, r4, r5, pc}
 509              	.LVL26:
 510              	.L50:
 511 0022 00BF     		.align	2
 512              	.L49:
 513 0024 00000000 		.word	.LANCHOR0
 514              		.cfi_endproc
 515              	.LFE154:
 517              		.section	.text.HAL_SuspendTick,"ax",%progbits
 518              		.align	1
 519              		.weak	HAL_SuspendTick
 520              		.syntax unified
 521              		.thumb
 522              		.thumb_func
 523              		.fpu fpv5-d16
 525              	HAL_SuspendTick:
 526              	.LFB155:
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Suspend Tick increment.
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is suspended.
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
ARM GAS  /tmp/cclQz20V.s 			page 18


 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_SuspendTick(void)
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 527              		.loc 1 431 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              		@ link register save eliminated.
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Disable SysTick Interrupt */
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 532              		.loc 1 433 0
 533 0000 024A     		ldr	r2, .L52
 534 0002 1368     		ldr	r3, [r2]
 535 0004 23F00203 		bic	r3, r3, #2
 536 0008 1360     		str	r3, [r2]
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 537              		.loc 1 434 0
 538 000a 7047     		bx	lr
 539              	.L53:
 540              		.align	2
 541              	.L52:
 542 000c 10E000E0 		.word	-536813552
 543              		.cfi_endproc
 544              	.LFE155:
 546              		.section	.text.HAL_ResumeTick,"ax",%progbits
 547              		.align	1
 548              		.weak	HAL_ResumeTick
 549              		.syntax unified
 550              		.thumb
 551              		.thumb_func
 552              		.fpu fpv5-d16
 554              	HAL_ResumeTick:
 555              	.LFB156:
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Resume Tick increment.
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       is resumed.
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *       implementations in user file.
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** __weak void HAL_ResumeTick(void)
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 556              		.loc 1 447 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560              		@ link register save eliminated.
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Enable SysTick Interrupt */
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 561              		.loc 1 449 0
 562 0000 024A     		ldr	r2, .L55
ARM GAS  /tmp/cclQz20V.s 			page 19


 563 0002 1368     		ldr	r3, [r2]
 564 0004 43F00203 		orr	r3, r3, #2
 565 0008 1360     		str	r3, [r2]
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 566              		.loc 1 450 0
 567 000a 7047     		bx	lr
 568              	.L56:
 569              		.align	2
 570              	.L55:
 571 000c 10E000E0 		.word	-536813552
 572              		.cfi_endproc
 573              	.LFE156:
 575              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 576              		.align	1
 577              		.global	HAL_GetHalVersion
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 581              		.fpu fpv5-d16
 583              	HAL_GetHalVersion:
 584              	.LFB157:
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Returns the HAL revision
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 585              		.loc 1 457 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589              		@ link register save eliminated.
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  return __STM32H7xx_HAL_VERSION;
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 590              		.loc 1 459 0
 591 0000 0048     		ldr	r0, .L58
 592 0002 7047     		bx	lr
 593              	.L59:
 594              		.align	2
 595              	.L58:
 596 0004 00010B01 		.word	17498368
 597              		.cfi_endproc
 598              	.LFE157:
 600              		.section	.text.HAL_GetREVID,"ax",%progbits
 601              		.align	1
 602              		.global	HAL_GetREVID
 603              		.syntax unified
 604              		.thumb
 605              		.thumb_func
 606              		.fpu fpv5-d16
 608              	HAL_GetREVID:
 609              	.LFB158:
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Returns the device revision identifier.
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device revision identifier
ARM GAS  /tmp/cclQz20V.s 			page 20


 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetREVID(void)
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 610              		.loc 1 466 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 0
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614              		@ link register save eliminated.
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    return((DBGMCU->IDCODE) >> 16);
 615              		.loc 1 467 0
 616 0000 014B     		ldr	r3, .L61
 617 0002 1868     		ldr	r0, [r3]
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 618              		.loc 1 468 0
 619 0004 000C     		lsrs	r0, r0, #16
 620 0006 7047     		bx	lr
 621              	.L62:
 622              		.align	2
 623              	.L61:
 624 0008 0010005C 		.word	1543507968
 625              		.cfi_endproc
 626              	.LFE158:
 628              		.section	.text.HAL_GetDEVID,"ax",%progbits
 629              		.align	1
 630              		.global	HAL_GetDEVID
 631              		.syntax unified
 632              		.thumb
 633              		.thumb_func
 634              		.fpu fpv5-d16
 636              	HAL_GetDEVID:
 637              	.LFB159:
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Returns the device identifier.
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetDEVID(void)
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 638              		.loc 1 475 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              		@ link register save eliminated.
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 643              		.loc 1 476 0
 644 0000 024B     		ldr	r3, .L64
 645 0002 1868     		ldr	r0, [r3]
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 646              		.loc 1 477 0
 647 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 648 0008 7047     		bx	lr
 649              	.L65:
 650 000a 00BF     		.align	2
 651              	.L64:
 652 000c 0010005C 		.word	1543507968
 653              		.cfi_endproc
 654              	.LFE159:
ARM GAS  /tmp/cclQz20V.s 			page 21


 656              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 657              		.align	1
 658              		.global	HAL_GetUIDw0
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 662              		.fpu fpv5-d16
 664              	HAL_GetUIDw0:
 665              	.LFB160:
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Return the first word of the unique device identifier (UID based on 96 bits)
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 666              		.loc 1 484 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return(READ_REG(*((uint32_t *)UID_BASE)));
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 671              		.loc 1 486 0
 672 0000 014B     		ldr	r3, .L67
 673 0002 1868     		ldr	r0, [r3]
 674 0004 7047     		bx	lr
 675              	.L68:
 676 0006 00BF     		.align	2
 677              	.L67:
 678 0008 00E8F11F 		.word	535947264
 679              		.cfi_endproc
 680              	.LFE160:
 682              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 683              		.align	1
 684              		.global	HAL_GetUIDw1
 685              		.syntax unified
 686              		.thumb
 687              		.thumb_func
 688              		.fpu fpv5-d16
 690              	HAL_GetUIDw1:
 691              	.LFB161:
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Return the second word of the unique device identifier (UID based on 96 bits)
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 692              		.loc 1 493 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 0
 695              		@ frame_needed = 0, uses_anonymous_args = 0
 696              		@ link register save eliminated.
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 697              		.loc 1 495 0
ARM GAS  /tmp/cclQz20V.s 			page 22


 698 0000 014B     		ldr	r3, .L70
 699 0002 1868     		ldr	r0, [r3]
 700 0004 7047     		bx	lr
 701              	.L71:
 702 0006 00BF     		.align	2
 703              	.L70:
 704 0008 04E8F11F 		.word	535947268
 705              		.cfi_endproc
 706              	.LFE161:
 708              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 709              		.align	1
 710              		.global	HAL_GetUIDw2
 711              		.syntax unified
 712              		.thumb
 713              		.thumb_func
 714              		.fpu fpv5-d16
 716              	HAL_GetUIDw2:
 717              	.LFB162:
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Return the third word of the unique device identifier (UID based on 96 bits)
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval Device identifier
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 718              		.loc 1 502 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 722              		@ link register save eliminated.
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 723              		.loc 1 504 0
 724 0000 014B     		ldr	r3, .L73
 725 0002 1868     		ldr	r0, [r3]
 726 0004 7047     		bx	lr
 727              	.L74:
 728 0006 00BF     		.align	2
 729              	.L73:
 730 0008 08E8F11F 		.word	535947272
 731              		.cfi_endproc
 732              	.LFE162:
 734              		.section	.text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig,"ax",%progbits
 735              		.align	1
 736              		.global	HAL_SYSCFG_VREFBUF_VoltageScalingConfig
 737              		.syntax unified
 738              		.thumb
 739              		.thumb_func
 740              		.fpu fpv5-d16
 742              	HAL_SYSCFG_VREFBUF_VoltageScalingConfig:
 743              	.LFB163:
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Configure the internal voltage reference buffer voltage scale.
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param VoltageScaling  specifies the output voltage to achieve
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values:
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE0: VREF_OUT1 around 2.5 V.
ARM GAS  /tmp/cclQz20V.s 			page 23


 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.8 V
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE1: VREF_OUT2 around 2.048 V.
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.4 V
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE2: VREF_OUT3 around 1.8 V.
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 2.1 V
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_VOLTAGE_SCALE3: VREF_OUT4 around 1.5 V.
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *                                                This requires VDDA equal to or higher than 1.8 V
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VREFBUF_VoltageScalingConfig(uint32_t VoltageScaling)
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 744              		.loc 1 521 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              		@ link register save eliminated.
 749              	.LVL27:
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_VOLTAGE_SCALE(VoltageScaling));
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_VRS, VoltageScaling);
 750              		.loc 1 525 0
 751 0000 034A     		ldr	r2, .L76
 752 0002 1368     		ldr	r3, [r2]
 753 0004 23F07003 		bic	r3, r3, #112
 754 0008 1843     		orrs	r0, r0, r3
 755              	.LVL28:
 756 000a 1060     		str	r0, [r2]
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 757              		.loc 1 526 0
 758 000c 7047     		bx	lr
 759              	.L77:
 760 000e 00BF     		.align	2
 761              	.L76:
 762 0010 003C0058 		.word	1476410368
 763              		.cfi_endproc
 764              	.LFE163:
 766              		.section	.text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig,"ax",%progbits
 767              		.align	1
 768              		.global	HAL_SYSCFG_VREFBUF_HighImpedanceConfig
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.fpu fpv5-d16
 774              	HAL_SYSCFG_VREFBUF_HighImpedanceConfig:
 775              	.LFB164:
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief Configure the internal voltage reference buffer high impedance mode.
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Mode  specifies the high impedance mode
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values:
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_HIGH_IMPEDANCE_DISABLE: VREF+ pin is internally connect to VREFI
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *            @arg SYSCFG_VREFBUF_HIGH_IMPEDANCE_ENABLE: VREF+ pin is high impedance.
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VREFBUF_HighImpedanceConfig(uint32_t Mode)
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
ARM GAS  /tmp/cclQz20V.s 			page 24


 776              		.loc 1 537 0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780              		@ link register save eliminated.
 781              	.LVL29:
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_HIGH_IMPEDANCE(Mode));
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_HIZ, Mode);
 782              		.loc 1 541 0
 783 0000 034A     		ldr	r2, .L79
 784 0002 1368     		ldr	r3, [r2]
 785 0004 23F00203 		bic	r3, r3, #2
 786 0008 1843     		orrs	r0, r0, r3
 787              	.LVL30:
 788 000a 1060     		str	r0, [r2]
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 789              		.loc 1 542 0
 790 000c 7047     		bx	lr
 791              	.L80:
 792 000e 00BF     		.align	2
 793              	.L79:
 794 0010 003C0058 		.word	1476410368
 795              		.cfi_endproc
 796              	.LFE164:
 798              		.section	.text.HAL_SYSCFG_VREFBUF_TrimmingConfig,"ax",%progbits
 799              		.align	1
 800              		.global	HAL_SYSCFG_VREFBUF_TrimmingConfig
 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 804              		.fpu fpv5-d16
 806              	HAL_SYSCFG_VREFBUF_TrimmingConfig:
 807              	.LFB165:
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Tune the Internal Voltage Reference buffer (VREFBUF).
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VREFBUF_TrimmingConfig(uint32_t TrimmingValue)
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 808              		.loc 1 549 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812              		@ link register save eliminated.
 813              	.LVL31:
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_VREFBUF_TRIMMING(TrimmingValue));
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(VREFBUF->CCR, VREFBUF_CCR_TRIM, TrimmingValue);
 814              		.loc 1 553 0
 815 0000 034A     		ldr	r2, .L82
 816 0002 5368     		ldr	r3, [r2, #4]
 817 0004 23F03F03 		bic	r3, r3, #63
 818 0008 1843     		orrs	r0, r0, r3
ARM GAS  /tmp/cclQz20V.s 			page 25


 819              	.LVL32:
 820 000a 5060     		str	r0, [r2, #4]
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 821              		.loc 1 554 0
 822 000c 7047     		bx	lr
 823              	.L83:
 824 000e 00BF     		.align	2
 825              	.L82:
 826 0010 003C0058 		.word	1476410368
 827              		.cfi_endproc
 828              	.LFE165:
 830              		.section	.text.HAL_SYSCFG_EnableVREFBUF,"ax",%progbits
 831              		.align	1
 832              		.global	HAL_SYSCFG_EnableVREFBUF
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 836              		.fpu fpv5-d16
 838              	HAL_SYSCFG_EnableVREFBUF:
 839              	.LFB166:
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Internal Voltage Reference buffer (VREFBUF).
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL_OK/HAL_TIMEOUT
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** HAL_StatusTypeDef HAL_SYSCFG_EnableVREFBUF(void)
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 840              		.loc 1 561 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 844 0000 10B5     		push	{r4, lr}
 845              	.LCFI5:
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 4, -8
 848              		.cfi_offset 14, -4
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   uint32_t  tickstart;
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 849              		.loc 1 564 0
 850 0002 0B4A     		ldr	r2, .L91
 851 0004 1368     		ldr	r3, [r2]
 852 0006 43F00103 		orr	r3, r3, #1
 853 000a 1360     		str	r3, [r2]
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Get Start Tick*/
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   tickstart = HAL_GetTick();
 854              		.loc 1 567 0
 855 000c FFF7FEFF 		bl	HAL_GetTick
 856              	.LVL33:
 857 0010 0446     		mov	r4, r0
 858              	.LVL34:
 859              	.L85:
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Wait for VRR bit  */
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   while(READ_BIT(VREFBUF->CSR, VREFBUF_CSR_VRR) == 0UL)
 860              		.loc 1 570 0
ARM GAS  /tmp/cclQz20V.s 			page 26


 861 0012 074B     		ldr	r3, .L91
 862 0014 1B68     		ldr	r3, [r3]
 863 0016 13F0080F 		tst	r3, #8
 864 001a 06D1     		bne	.L90
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if((HAL_GetTick() - tickstart) > VREFBUF_TIMEOUT_VALUE)
 865              		.loc 1 572 0
 866 001c FFF7FEFF 		bl	HAL_GetTick
 867              	.LVL35:
 868 0020 001B     		subs	r0, r0, r4
 869 0022 0A28     		cmp	r0, #10
 870 0024 F5D9     		bls	.L85
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       return HAL_TIMEOUT;
 871              		.loc 1 574 0
 872 0026 0320     		movs	r0, #3
 873 0028 00E0     		b	.L86
 874              	.L90:
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return HAL_OK;
 875              		.loc 1 578 0
 876 002a 0020     		movs	r0, #0
 877              	.L86:
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 878              		.loc 1 579 0
 879 002c 10BD     		pop	{r4, pc}
 880              	.LVL36:
 881              	.L92:
 882 002e 00BF     		.align	2
 883              	.L91:
 884 0030 003C0058 		.word	1476410368
 885              		.cfi_endproc
 886              	.LFE166:
 888              		.section	.text.HAL_SYSCFG_DisableVREFBUF,"ax",%progbits
 889              		.align	1
 890              		.global	HAL_SYSCFG_DisableVREFBUF
 891              		.syntax unified
 892              		.thumb
 893              		.thumb_func
 894              		.fpu fpv5-d16
 896              	HAL_SYSCFG_DisableVREFBUF:
 897              	.LFB167:
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Internal Voltage Reference buffer (VREFBUF).
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableVREFBUF(void)
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 898              		.loc 1 587 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 0, uses_anonymous_args = 0
 902              		@ link register save eliminated.
ARM GAS  /tmp/cclQz20V.s 			page 27


 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
 903              		.loc 1 588 0
 904 0000 024A     		ldr	r2, .L94
 905 0002 1368     		ldr	r3, [r2]
 906 0004 23F00103 		bic	r3, r3, #1
 907 0008 1360     		str	r3, [r2]
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 908              		.loc 1 589 0
 909 000a 7047     		bx	lr
 910              	.L95:
 911              		.align	2
 912              	.L94:
 913 000c 003C0058 		.word	1476410368
 914              		.cfi_endproc
 915              	.LFE167:
 917              		.section	.text.HAL_SYSCFG_ETHInterfaceSelect,"ax",%progbits
 918              		.align	1
 919              		.global	HAL_SYSCFG_ETHInterfaceSelect
 920              		.syntax unified
 921              		.thumb
 922              		.thumb_func
 923              		.fpu fpv5-d16
 925              	HAL_SYSCFG_ETHInterfaceSelect:
 926              	.LFB168:
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_PMCR_EPIS_SEL)
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Ethernet PHY Interface Selection either MII or RMII
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_ETHInterface: Selects the Ethernet PHY interface
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_ETH_MII : Select the Media Independent Interface
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_ETH_RMII: Select the Reduced Media Independent Interface
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_ETHInterfaceSelect(uint32_t SYSCFG_ETHInterface)
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 927              		.loc 1 601 0
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 0
 930              		@ frame_needed = 0, uses_anonymous_args = 0
 931              		@ link register save eliminated.
 932              	.LVL37:
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ETHERNET_CONFIG(SYSCFG_ETHInterface));
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->PMCR, SYSCFG_PMCR_EPIS_SEL, (uint32_t)(SYSCFG_ETHInterface));
 933              		.loc 1 605 0
 934 0000 034A     		ldr	r2, .L97
 935 0002 5368     		ldr	r3, [r2, #4]
 936 0004 23F46003 		bic	r3, r3, #14680064
 937 0008 1843     		orrs	r0, r0, r3
 938              	.LVL38:
 939 000a 5060     		str	r0, [r2, #4]
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 940              		.loc 1 606 0
 941 000c 7047     		bx	lr
 942              	.L98:
ARM GAS  /tmp/cclQz20V.s 			page 28


 943 000e 00BF     		.align	2
 944              	.L97:
 945 0010 00040058 		.word	1476396032
 946              		.cfi_endproc
 947              	.LFE168:
 949              		.section	.text.HAL_SYSCFG_AnalogSwitchConfig,"ax",%progbits
 950              		.align	1
 951              		.global	HAL_SYSCFG_AnalogSwitchConfig
 952              		.syntax unified
 953              		.thumb
 954              		.thumb_func
 955              		.fpu fpv5-d16
 957              	HAL_SYSCFG_AnalogSwitchConfig:
 958              	.LFB169:
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* SYSCFG_PMCR_EPIS_SEL */
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Analog Switch control for dual analog pads.
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_AnalogSwitch: Selects the analog pad
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one or a combination of the following values:
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA0 : Select PA0 analog switch
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA1:  Select PA1 analog switch
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC2 : Select PC2 analog switch
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC3:  Select PC3 analog switch
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_SwitchState: Open or Close the analog switch between dual pads (PXn and PXn_C)
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one or a combination of the following values:
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA0_OPEN
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA0_CLOSE
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA1_OPEN
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PA1_CLOSE
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC2_OPEN
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC2_CLOSE
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC3_OPEN
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_SWITCH_PC3_CLOSE
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_AnalogSwitchConfig(uint32_t SYSCFG_AnalogSwitch , uint32_t SYSCFG_SwitchState )
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 959              		.loc 1 631 0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 0
 962              		@ frame_needed = 0, uses_anonymous_args = 0
 963              		@ link register save eliminated.
 964              	.LVL39:
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ANALOG_SWITCH(SYSCFG_AnalogSwitch));
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_SWITCH_STATE(SYSCFG_SwitchState));
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->PMCR, (uint32_t) SYSCFG_AnalogSwitch, (uint32_t)(SYSCFG_SwitchState));
 965              		.loc 1 636 0
 966 0000 034A     		ldr	r2, .L100
 967 0002 5368     		ldr	r3, [r2, #4]
 968 0004 23EA0000 		bic	r0, r3, r0
 969              	.LVL40:
 970 0008 0843     		orrs	r0, r0, r1
 971 000a 5060     		str	r0, [r2, #4]
ARM GAS  /tmp/cclQz20V.s 			page 29


 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 972              		.loc 1 637 0
 973 000c 7047     		bx	lr
 974              	.L101:
 975 000e 00BF     		.align	2
 976              	.L100:
 977 0010 00040058 		.word	1476396032
 978              		.cfi_endproc
 979              	.LFE169:
 981              		.section	.text.HAL_SYSCFG_EnableBOOST,"ax",%progbits
 982              		.align	1
 983              		.global	HAL_SYSCFG_EnableBOOST
 984              		.syntax unified
 985              		.thumb
 986              		.thumb_func
 987              		.fpu fpv5-d16
 989              	HAL_SYSCFG_EnableBOOST:
 990              	.LFB170:
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_PMCR_BOOSTEN)
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the booster to reduce the total harmonic distortion of the analog
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         switch when the supply voltage is lower than 2.7 V.
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Activating the booster allows to guaranty the analog switch AC performance
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         when the supply voltage is below 2.7 V: in this case, the analog switch
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         performance is the same on the full voltage range
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableBOOST(void)
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 991              		.loc 1 649 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995              		@ link register save eliminated.
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  SET_BIT(SYSCFG->PMCR, SYSCFG_PMCR_BOOSTEN) ;
 996              		.loc 1 650 0
 997 0000 024A     		ldr	r2, .L103
 998 0002 5368     		ldr	r3, [r2, #4]
 999 0004 43F48073 		orr	r3, r3, #256
 1000 0008 5360     		str	r3, [r2, #4]
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1001              		.loc 1 651 0
 1002 000a 7047     		bx	lr
 1003              	.L104:
 1004              		.align	2
 1005              	.L103:
 1006 000c 00040058 		.word	1476396032
 1007              		.cfi_endproc
 1008              	.LFE170:
 1010              		.section	.text.HAL_SYSCFG_DisableBOOST,"ax",%progbits
 1011              		.align	1
 1012              		.global	HAL_SYSCFG_DisableBOOST
 1013              		.syntax unified
 1014              		.thumb
 1015              		.thumb_func
 1016              		.fpu fpv5-d16
ARM GAS  /tmp/cclQz20V.s 			page 30


 1018              	HAL_SYSCFG_DisableBOOST:
 1019              	.LFB171:
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disables the booster
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Activating the booster allows to guaranty the analog switch AC performance
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         when the supply voltage is below 2.7 V: in this case, the analog switch
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         performance is the same on the full voltage range
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableBOOST(void)
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1020              		.loc 1 661 0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 0, uses_anonymous_args = 0
 1024              		@ link register save eliminated.
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  CLEAR_BIT(SYSCFG->PMCR, SYSCFG_PMCR_BOOSTEN) ;
 1025              		.loc 1 662 0
 1026 0000 024A     		ldr	r2, .L106
 1027 0002 5368     		ldr	r3, [r2, #4]
 1028 0004 23F48073 		bic	r3, r3, #256
 1029 0008 5360     		str	r3, [r2, #4]
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1030              		.loc 1 663 0
 1031 000a 7047     		bx	lr
 1032              	.L107:
 1033              		.align	2
 1034              	.L106:
 1035 000c 00040058 		.word	1476396032
 1036              		.cfi_endproc
 1037              	.LFE171:
 1039              		.section	.text.HAL_SYSCFG_CM7BootAddConfig,"ax",%progbits
 1040              		.align	1
 1041              		.global	HAL_SYSCFG_CM7BootAddConfig
 1042              		.syntax unified
 1043              		.thumb
 1044              		.thumb_func
 1045              		.fpu fpv5-d16
 1047              	HAL_SYSCFG_CM7BootAddConfig:
 1048              	.LFB172:
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* SYSCFG_PMCR_BOOSTEN */
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined (SYSCFG_UR2_BOOT_ADD0) ||  defined (SYSCFG_UR2_BCM7_ADD0)
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  BootCM7 address 0 configuration
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootRegister :Specifies the Boot Address register (Address0 or Address1)
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR0 : Select the boot address0
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR1:  Select the boot address1
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootAddress :Specifies the CM7 Boot Address to be loaded in Address0 or Address1
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CM7BootAddConfig(uint32_t BootRegister, uint32_t BootAddress)
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1049              		.loc 1 677 0
 1050              		.cfi_startproc
ARM GAS  /tmp/cclQz20V.s 			page 31


 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 1053              		@ link register save eliminated.
 1054              	.LVL41:
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_REGISTER(BootRegister));
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_ADDRESS(BootAddress));
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if ( BootRegister == SYSCFG_BOOT_ADDR0 )
 1055              		.loc 1 681 0
 1056 0000 48B1     		cbz	r0, .L111
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM7 BOOT ADD0 */
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR2, SYSCFG_UR2_BCM7_ADD0, ((BootAddress >> 16) << SYSCFG_UR2_BCM7_ADD0_Pos)
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR2, SYSCFG_UR2_BOOT_ADD0, ((BootAddress >> 16) << SYSCFG_UR2_BOOT_ADD0_Pos)
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM7 BOOT ADD1 */
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR3, SYSCFG_UR3_BCM7_ADD1, (BootAddress >> 16));
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR3, SYSCFG_UR3_BOOT_ADD1, (BootAddress >> 16));
 1057              		.loc 1 696 0
 1058 0002 0A4A     		ldr	r2, .L112
 1059 0004 D2F80C03 		ldr	r0, [r2, #780]
 1060              	.LVL42:
 1061 0008 094B     		ldr	r3, .L112+4
 1062 000a 0340     		ands	r3, r3, r0
 1063 000c 43EA1143 		orr	r3, r3, r1, lsr #16
 1064 0010 C2F80C33 		str	r3, [r2, #780]
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1065              		.loc 1 699 0
 1066 0014 7047     		bx	lr
 1067              	.LVL43:
 1068              	.L111:
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 1069              		.loc 1 687 0
 1070 0016 0548     		ldr	r0, .L112
 1071              	.LVL44:
 1072 0018 D0F80833 		ldr	r3, [r0, #776]
 1073 001c 9BB2     		uxth	r3, r3
 1074 001e 044A     		ldr	r2, .L112+4
 1075 0020 0A40     		ands	r2, r2, r1
 1076 0022 1343     		orrs	r3, r3, r2
 1077 0024 C0F80833 		str	r3, [r0, #776]
 1078 0028 7047     		bx	lr
 1079              	.L113:
 1080 002a 00BF     		.align	2
 1081              	.L112:
 1082 002c 00040058 		.word	1476396032
 1083 0030 0000FFFF 		.word	-65536
 1084              		.cfi_endproc
ARM GAS  /tmp/cclQz20V.s 			page 32


 1085              	.LFE172:
 1087              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 1088              		.align	1
 1089              		.global	HAL_EnableCompensationCell
 1090              		.syntax unified
 1091              		.thumb
 1092              		.thumb_func
 1093              		.fpu fpv5-d16
 1095              	HAL_EnableCompensationCell:
 1096              	.LFB173:
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* SYSCFG_UR2_BOOT_ADD0 || SYSCFG_UR2_BCM7_ADD0 */
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  BootCM4 address 0 configuration
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootRegister :Specifies the Boot Address register (Address0 or Address1)
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR0 : Select the boot address0
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_BOOT_ADDR1:  Select the boot address1
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BootAddress :Specifies the CM4 Boot Address to be loaded in Address0 or Address1
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CM4BootAddConfig(uint32_t BootRegister, uint32_t BootAddress)
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_REGISTER(BootRegister));
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_BOOT_ADDRESS(BootAddress));
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if ( BootRegister == SYSCFG_BOOT_ADDR0 )
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM4 BOOT ADD0 */
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR3, SYSCFG_UR3_BCM4_ADD0, ((BootAddress >> 16)<< SYSCFG_UR3_BCM4_ADD0_Pos))
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Configure CM4 BOOT ADD1 */
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     MODIFY_REG(SYSCFG->UR4, SYSCFG_UR4_BCM4_ADD1, (BootAddress >> 16));
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the Cortex-M7 boot
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableCM7BOOT(void)
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  SET_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM7);
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disables the Cortex-M7 boot
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Disabling the boot will gate the CPU clock
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableCM7BOOT(void)
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
ARM GAS  /tmp/cclQz20V.s 			page 33


 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  CLEAR_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM7) ;
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the Cortex-M4 boot
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableCM4BOOT(void)
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  SET_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM4);
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disables the Cortex-M4 boot
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   Disabling the boot will gate the CPU clock
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableCM4BOOT(void)
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->UR1, SYSCFG_UR1_BCM4);
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         voltage ranges from 1.62 to 2.0 V and from 2.7 to 3.6 V.
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableCompensationCell(void)
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1097              		.loc 1 776 0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 0
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 1101              		@ link register save eliminated.
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_EN) ;
 1102              		.loc 1 777 0
 1103 0000 024A     		ldr	r2, .L115
 1104 0002 136A     		ldr	r3, [r2, #32]
 1105 0004 43F00103 		orr	r3, r3, #1
 1106 0008 1362     		str	r3, [r2, #32]
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1107              		.loc 1 778 0
 1108 000a 7047     		bx	lr
 1109              	.L116:
 1110              		.align	2
 1111              	.L115:
 1112 000c 00040058 		.word	1476396032
 1113              		.cfi_endproc
 1114              	.LFE173:
 1116              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 1117              		.align	1
 1118              		.global	HAL_DisableCompensationCell
 1119              		.syntax unified
 1120              		.thumb
 1121              		.thumb_func
 1122              		.fpu fpv5-d16
ARM GAS  /tmp/cclQz20V.s 			page 34


 1124              	HAL_DisableCompensationCell:
 1125              	.LFB174:
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         voltage ranges from 1.62 to 2.0 V and from 2.7 to 3.6 V.
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableCompensationCell(void)
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1126              		.loc 1 787 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130              		@ link register save eliminated.
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_EN);
 1131              		.loc 1 788 0
 1132 0000 024A     		ldr	r2, .L118
 1133 0002 136A     		ldr	r3, [r2, #32]
 1134 0004 23F00103 		bic	r3, r3, #1
 1135 0008 1362     		str	r3, [r2, #32]
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1136              		.loc 1 789 0
 1137 000a 7047     		bx	lr
 1138              	.L119:
 1139              		.align	2
 1140              	.L118:
 1141 000c 00040058 		.word	1476396032
 1142              		.cfi_endproc
 1143              	.LFE174:
 1145              		.section	.text.HAL_SYSCFG_EnableIOSpeedOptimize,"ax",%progbits
 1146              		.align	1
 1147              		.global	HAL_SYSCFG_EnableIOSpeedOptimize
 1148              		.syntax unified
 1149              		.thumb
 1150              		.thumb_func
 1151              		.fpu fpv5-d16
 1153              	HAL_SYSCFG_EnableIOSpeedOptimize:
 1154              	.LFB175:
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  To Enable optimize the I/O speed when the product voltage is low.
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   This bit is active only if PRODUCT_BELOW_25V user option bit is set. It must be
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         used only if the product supply voltage is below 2.5 V. Setting this bit when VDD is
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         higher than 2.5 V might be destructive.
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_EnableIOSpeedOptimize(void)
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1155              		.loc 1 800 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 0
 1158              		@ frame_needed = 0, uses_anonymous_args = 0
 1159              		@ link register save eliminated.
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_CCCSR_HSLV)
ARM GAS  /tmp/cclQz20V.s 			page 35


 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_HSLV);
 1160              		.loc 1 802 0
 1161 0000 024A     		ldr	r2, .L121
 1162 0002 136A     		ldr	r3, [r2, #32]
 1163 0004 43F48033 		orr	r3, r3, #65536
 1164 0008 1362     		str	r3, [r2, #32]
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(SYSCFG->CCCSR, (SYSCFG_CCCSR_HSLV0| SYSCFG_CCCSR_HSLV1 | SYSCFG_CCCSR_HSLV2  | SYSCFG_CCC
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif   /* SYSCFG_CCCSR_HSLV */
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1165              		.loc 1 806 0
 1166 000a 7047     		bx	lr
 1167              	.L122:
 1168              		.align	2
 1169              	.L121:
 1170 000c 00040058 		.word	1476396032
 1171              		.cfi_endproc
 1172              	.LFE175:
 1174              		.section	.text.HAL_SYSCFG_DisableIOSpeedOptimize,"ax",%progbits
 1175              		.align	1
 1176              		.global	HAL_SYSCFG_DisableIOSpeedOptimize
 1177              		.syntax unified
 1178              		.thumb
 1179              		.thumb_func
 1180              		.fpu fpv5-d16
 1182              	HAL_SYSCFG_DisableIOSpeedOptimize:
 1183              	.LFB176:
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  To Disable optimize the I/O speed when the product voltage is low.
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note   This bit is active only if PRODUCT_BELOW_25V user option bit is set. It must be
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         used only if the product supply voltage is below 2.5 V. Setting this bit when VDD is
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         higher than 2.5 V might be destructive.
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_DisableIOSpeedOptimize(void)
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1184              		.loc 1 816 0
 1185              		.cfi_startproc
 1186              		@ args = 0, pretend = 0, frame = 0
 1187              		@ frame_needed = 0, uses_anonymous_args = 0
 1188              		@ link register save eliminated.
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_CCCSR_HSLV)
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->CCCSR, SYSCFG_CCCSR_HSLV);
 1189              		.loc 1 818 0
 1190 0000 024A     		ldr	r2, .L124
 1191 0002 136A     		ldr	r3, [r2, #32]
 1192 0004 23F48033 		bic	r3, r3, #65536
 1193 0008 1362     		str	r3, [r2, #32]
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #else
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(SYSCFG->CCCSR, (SYSCFG_CCCSR_HSLV0| SYSCFG_CCCSR_HSLV1 | SYSCFG_CCCSR_HSLV2  | SYSCFG_C
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif   /* SYSCFG_CCCSR_HSLV */
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1194              		.loc 1 822 0
 1195 000a 7047     		bx	lr
 1196              	.L125:
 1197              		.align	2
ARM GAS  /tmp/cclQz20V.s 			page 36


 1198              	.L124:
 1199 000c 00040058 		.word	1476396032
 1200              		.cfi_endproc
 1201              	.LFE176:
 1203              		.section	.text.HAL_SYSCFG_CompensationCodeSelect,"ax",%progbits
 1204              		.align	1
 1205              		.global	HAL_SYSCFG_CompensationCodeSelect
 1206              		.syntax unified
 1207              		.thumb
 1208              		.thumb_func
 1209              		.fpu fpv5-d16
 1211              	HAL_SYSCFG_CompensationCodeSelect:
 1212              	.LFB177:
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Code selection for the I/O Compensation cell
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_CompCode: Selects the code to be applied for the I/O compensation cell
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   This parameter can be one of the following values:
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_CELL_CODE : Select Code from the cell (available in the SYSCFG_CCVR)
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg SYSCFG_REGISTER_CODE: Select Code from the SYSCFG compensation cell code register (SYSCF
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CompensationCodeSelect(uint32_t SYSCFG_CompCode)
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1213              		.loc 1 833 0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217              		@ link register save eliminated.
 1218              	.LVL45:
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_SELECT(SYSCFG_CompCode));
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->CCCSR, SYSCFG_CCCSR_CS, (uint32_t)(SYSCFG_CompCode));
 1219              		.loc 1 836 0
 1220 0000 034A     		ldr	r2, .L127
 1221 0002 136A     		ldr	r3, [r2, #32]
 1222 0004 23F00203 		bic	r3, r3, #2
 1223 0008 1843     		orrs	r0, r0, r3
 1224              	.LVL46:
 1225 000a 1062     		str	r0, [r2, #32]
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1226              		.loc 1 837 0
 1227 000c 7047     		bx	lr
 1228              	.L128:
 1229 000e 00BF     		.align	2
 1230              	.L127:
 1231 0010 00040058 		.word	1476396032
 1232              		.cfi_endproc
 1233              	.LFE177:
 1235              		.section	.text.HAL_SYSCFG_CompensationCodeConfig,"ax",%progbits
 1236              		.align	1
 1237              		.global	HAL_SYSCFG_CompensationCodeConfig
 1238              		.syntax unified
 1239              		.thumb
 1240              		.thumb_func
 1241              		.fpu fpv5-d16
 1243              	HAL_SYSCFG_CompensationCodeConfig:
ARM GAS  /tmp/cclQz20V.s 			page 37


 1244              	.LFB178:
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Code selection for the I/O Compensation cell
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_PMOSCode: PMOS compensation code
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_NMOSCode: NMOS compensation code
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_CompensationCodeConfig(uint32_t SYSCFG_PMOSCode, uint32_t SYSCFG_NMOSCode )
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1245              		.loc 1 850 0
 1246              		.cfi_startproc
 1247              		@ args = 0, pretend = 0, frame = 0
 1248              		@ frame_needed = 0, uses_anonymous_args = 0
 1249              		@ link register save eliminated.
 1250              	.LVL47:
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_PMOSCode));
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_NMOSCode));
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->CCCR, SYSCFG_CCCR_NCC|SYSCFG_CCCR_PCC, (((uint32_t)(SYSCFG_PMOSCode)<< 4)|(uin
 1251              		.loc 1 854 0
 1252 0000 044A     		ldr	r2, .L130
 1253 0002 936A     		ldr	r3, [r2, #40]
 1254 0004 23F0FF03 		bic	r3, r3, #255
 1255 0008 41EA0010 		orr	r0, r1, r0, lsl #4
 1256              	.LVL48:
 1257 000c 0343     		orrs	r3, r3, r0
 1258 000e 9362     		str	r3, [r2, #40]
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1259              		.loc 1 855 0
 1260 0010 7047     		bx	lr
 1261              	.L131:
 1262 0012 00BF     		.align	2
 1263              	.L130:
 1264 0014 00040058 		.word	1476396032
 1265              		.cfi_endproc
 1266              	.LFE178:
 1268              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 1269              		.align	1
 1270              		.global	HAL_DBGMCU_EnableDBGSleepMode
 1271              		.syntax unified
 1272              		.thumb
 1273              		.thumb_func
 1274              		.fpu fpv5-d16
 1276              	HAL_DBGMCU_EnableDBGSleepMode:
 1277              	.LFB179:
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_CCCR_NCC_MMC)
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Code selection for the I/O Compensation cell
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_PMOSCode: VDDMMC PMOS compensation code
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
ARM GAS  /tmp/cclQz20V.s 			page 38


 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  SYSCFG_NMOSCode: VDDMMC NMOS compensation code
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         This code is applied to the I/O compensation cell when the CS bit of the
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          SYSCFG_CMPCR is set
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_VDDMMC_CompensationCodeConfig(uint32_t SYSCFG_PMOSCode, uint32_t SYSCFG_NMOSCode )
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_PMOSCode));
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_CODE_CONFIG(SYSCFG_NMOSCode));
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->CCCR, (SYSCFG_CCCR_NCC_MMC | SYSCFG_CCCR_PCC_MMC), (((uint32_t)(SYSCFG_PMOSCod
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /* SYSCFG_CCCR_NCC_MMC */
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_ADC2ALT_ADC2_ROUT0)
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @brief  SYSCFG ADC2 internal input alternate connection macros
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Adc2AltRout0 This parameter can be a value of :
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *     @arg @ref SYSCFG_ADC2_ROUT0_DAC1_1   DAC1_out1 connected to ADC2 VINP[16]
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *     @arg @ref SYSCFG_ADC2_ROUT0_VBAT4    VBAT/4 connected to ADC2 VINP[16]
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_ADC2ALT_Rout0Config(uint32_t Adc2AltRout0)
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ADC2ALT_ROUT0(Adc2AltRout0));
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->ADC2ALT, SYSCFG_ADC2ALT_ADC2_ROUT0, Adc2AltRout0);
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*SYSCFG_ADC2ALT_ADC2_ROUT0*/
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(SYSCFG_ADC2ALT_ADC2_ROUT1)
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /** @brief  SYSCFG ADC2 internal input alternate connection macros
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param Adc2AltRout1  This parameter can be a value of :
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *     @arg @ref SYSCFG_ADC2_ROUT1_DAC1_2   DAC1_out2 connected to ADC2 VINP[17]
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *     @arg @ref SYSCFG_ADC2_ROUT1_VREFINT  VREFINT connected to ADC2 VINP[17]
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SYSCFG_ADC2ALT_Rout1Config(uint32_t Adc2AltRout1)
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_SYSCFG_ADC2ALT_ROUT1(Adc2AltRout1));
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(SYSCFG->ADC2ALT, SYSCFG_ADC2ALT_ADC2_ROUT1, Adc2AltRout1);
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*SYSCFG_ADC2ALT_ADC2_ROUT1*/
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1/CDomain SLEEP mode
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1278              		.loc 1 912 0
 1279              		.cfi_startproc
 1280              		@ args = 0, pretend = 0, frame = 0
 1281              		@ frame_needed = 0, uses_anonymous_args = 0
 1282              		@ link register save eliminated.
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD1);
 1283              		.loc 1 913 0
ARM GAS  /tmp/cclQz20V.s 			page 39


 1284 0000 024A     		ldr	r2, .L133
 1285 0002 5368     		ldr	r3, [r2, #4]
 1286 0004 43F00103 		orr	r3, r3, #1
 1287 0008 5360     		str	r3, [r2, #4]
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1288              		.loc 1 914 0
 1289 000a 7047     		bx	lr
 1290              	.L134:
 1291              		.align	2
 1292              	.L133:
 1293 000c 0010005C 		.word	1543507968
 1294              		.cfi_endproc
 1295              	.LFE179:
 1297              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 1298              		.align	1
 1299              		.global	HAL_DBGMCU_DisableDBGSleepMode
 1300              		.syntax unified
 1301              		.thumb
 1302              		.thumb_func
 1303              		.fpu fpv5-d16
 1305              	HAL_DBGMCU_DisableDBGSleepMode:
 1306              	.LFB180:
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain1/CDomain SLEEP mode
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1307              		.loc 1 921 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 0, uses_anonymous_args = 0
 1311              		@ link register save eliminated.
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD1);
 1312              		.loc 1 922 0
 1313 0000 024A     		ldr	r2, .L136
 1314 0002 5368     		ldr	r3, [r2, #4]
 1315 0004 23F00103 		bic	r3, r3, #1
 1316 0008 5360     		str	r3, [r2, #4]
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1317              		.loc 1 923 0
 1318 000a 7047     		bx	lr
 1319              	.L137:
 1320              		.align	2
 1321              	.L136:
 1322 000c 0010005C 		.word	1543507968
 1323              		.cfi_endproc
 1324              	.LFE180:
 1326              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 1327              		.align	1
 1328              		.global	HAL_DBGMCU_EnableDBGStopMode
 1329              		.syntax unified
 1330              		.thumb
 1331              		.thumb_func
 1332              		.fpu fpv5-d16
 1334              	HAL_DBGMCU_EnableDBGStopMode:
ARM GAS  /tmp/cclQz20V.s 			page 40


 1335              	.LFB181:
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1/CDomain STOP mode
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1336              		.loc 1 931 0
 1337              		.cfi_startproc
 1338              		@ args = 0, pretend = 0, frame = 0
 1339              		@ frame_needed = 0, uses_anonymous_args = 0
 1340              		@ link register save eliminated.
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD1);
 1341              		.loc 1 932 0
 1342 0000 024A     		ldr	r2, .L139
 1343 0002 5368     		ldr	r3, [r2, #4]
 1344 0004 43F00203 		orr	r3, r3, #2
 1345 0008 5360     		str	r3, [r2, #4]
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1346              		.loc 1 933 0
 1347 000a 7047     		bx	lr
 1348              	.L140:
 1349              		.align	2
 1350              	.L139:
 1351 000c 0010005C 		.word	1543507968
 1352              		.cfi_endproc
 1353              	.LFE181:
 1355              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 1356              		.align	1
 1357              		.global	HAL_DBGMCU_DisableDBGStopMode
 1358              		.syntax unified
 1359              		.thumb
 1360              		.thumb_func
 1361              		.fpu fpv5-d16
 1363              	HAL_DBGMCU_DisableDBGStopMode:
 1364              	.LFB182:
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain1/CDomain STOP mode
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1365              		.loc 1 940 0
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 0
 1368              		@ frame_needed = 0, uses_anonymous_args = 0
 1369              		@ link register save eliminated.
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD1);
 1370              		.loc 1 941 0
 1371 0000 024A     		ldr	r2, .L142
 1372 0002 5368     		ldr	r3, [r2, #4]
 1373 0004 23F00203 		bic	r3, r3, #2
 1374 0008 5360     		str	r3, [r2, #4]
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
ARM GAS  /tmp/cclQz20V.s 			page 41


 1375              		.loc 1 942 0
 1376 000a 7047     		bx	lr
 1377              	.L143:
 1378              		.align	2
 1379              	.L142:
 1380 000c 0010005C 		.word	1543507968
 1381              		.cfi_endproc
 1382              	.LFE182:
 1384              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 1385              		.align	1
 1386              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 1387              		.syntax unified
 1388              		.thumb
 1389              		.thumb_func
 1390              		.fpu fpv5-d16
 1392              	HAL_DBGMCU_EnableDBGStandbyMode:
 1393              	.LFB183:
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1/CDomain STANDBY mode
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1394              		.loc 1 949 0
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 0
 1397              		@ frame_needed = 0, uses_anonymous_args = 0
 1398              		@ link register save eliminated.
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD1);
 1399              		.loc 1 950 0
 1400 0000 024A     		ldr	r2, .L145
 1401 0002 5368     		ldr	r3, [r2, #4]
 1402 0004 43F00403 		orr	r3, r3, #4
 1403 0008 5360     		str	r3, [r2, #4]
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1404              		.loc 1 951 0
 1405 000a 7047     		bx	lr
 1406              	.L146:
 1407              		.align	2
 1408              	.L145:
 1409 000c 0010005C 		.word	1543507968
 1410              		.cfi_endproc
 1411              	.LFE183:
 1413              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 1414              		.align	1
 1415              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 1416              		.syntax unified
 1417              		.thumb
 1418              		.thumb_func
 1419              		.fpu fpv5-d16
 1421              	HAL_DBGMCU_DisableDBGStandbyMode:
 1422              	.LFB184:
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain1/CDomain STANDBY mode
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
ARM GAS  /tmp/cclQz20V.s 			page 42


 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1423              		.loc 1 958 0
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 0
 1426              		@ frame_needed = 0, uses_anonymous_args = 0
 1427              		@ link register save eliminated.
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD1);
 1428              		.loc 1 959 0
 1429 0000 024A     		ldr	r2, .L148
 1430 0002 5368     		ldr	r3, [r2, #4]
 1431 0004 23F00403 		bic	r3, r3, #4
 1432 0008 5360     		str	r3, [r2, #4]
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1433              		.loc 1 960 0
 1434 000a 7047     		bx	lr
 1435              	.L149:
 1436              		.align	2
 1437              	.L148:
 1438 000c 0010005C 		.word	1543507968
 1439              		.cfi_endproc
 1440              	.LFE184:
 1442              		.section	.text.HAL_SetFMCMemorySwappingConfig,"ax",%progbits
 1443              		.align	1
 1444              		.global	HAL_SetFMCMemorySwappingConfig
 1445              		.syntax unified
 1446              		.thumb
 1447              		.thumb_func
 1448              		.fpu fpv5-d16
 1450              	HAL_SetFMCMemorySwappingConfig:
 1451              	.LFB185:
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain1 SLEEP mode
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain2DBGSleepMode(void)
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD2);
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain2 SLEEP mode
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain2DBGSleepMode(void)
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEPD2);
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain2 STOP mode
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain2DBGStopMode(void)
ARM GAS  /tmp/cclQz20V.s 			page 43


 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD2);
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain2 STOP mode
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain2DBGStopMode(void)
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD2);
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain2 STANDBY mode
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain2DBGStandbyMode(void)
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD2);
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain2 STANDBY mode
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain2DBGStandbyMode(void)
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD2);
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DBGMCU_CR_DBG_STOPD3)
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain3/SRDomain STOP mode
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain3DBGStopMode(void)
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD3);
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain3/SRDomain STOP mode
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain3DBGStopMode(void)
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOPD3);
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DBGMCU_CR_DBG_STOPD3*/
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DBGMCU_CR_DBG_STANDBYD3)
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Enable the Debug Module during Domain3/SRDomain STANDBY mode
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
ARM GAS  /tmp/cclQz20V.s 			page 44


1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EnableDomain3DBGStandbyMode(void)
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD3);
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Disable the Debug Module during Domain3/SRDomain STANDBY mode
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_DisableDomain3DBGStandbyMode(void)
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBYD3);
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DBGMCU_CR_DBG_STANDBYD3*/
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Set the FMC Memory Mapping Swapping config.
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param  BankMapConfig: Defines the FMC Bank mapping configuration. This parameter can be
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             FMC_SWAPBMAP_DISABLE, FMC_SWAPBMAP_SDRAM_SRAM, FMC_SWAPBMAP_SDRAMB2
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval HAL state
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_SetFMCMemorySwappingConfig(uint32_t BankMapConfig)
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1452              		.loc 1 1065 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456              		@ link register save eliminated.
 1457              	.LVL49:
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_FMC_SWAPBMAP_MODE(BankMapConfig));
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(FMC_Bank1_R->BTCR[0], FMC_BCR1_BMAP, BankMapConfig);
 1458              		.loc 1 1068 0
 1459 0000 034A     		ldr	r2, .L151
 1460 0002 1368     		ldr	r3, [r2]
 1461 0004 23F04073 		bic	r3, r3, #50331648
 1462 0008 1843     		orrs	r0, r0, r3
 1463              	.LVL50:
 1464 000a 1060     		str	r0, [r2]
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1465              		.loc 1 1069 0
 1466 000c 7047     		bx	lr
 1467              	.L152:
 1468 000e 00BF     		.align	2
 1469              	.L151:
 1470 0010 00400052 		.word	1375748096
 1471              		.cfi_endproc
 1472              	.LFE185:
 1474              		.section	.text.HAL_GetFMCMemorySwappingConfig,"ax",%progbits
 1475              		.align	1
 1476              		.global	HAL_GetFMCMemorySwappingConfig
 1477              		.syntax unified
 1478              		.thumb
 1479              		.thumb_func
 1480              		.fpu fpv5-d16
 1482              	HAL_GetFMCMemorySwappingConfig:
 1483              	.LFB186:
ARM GAS  /tmp/cclQz20V.s 			page 45


1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Get FMC Bank mapping mode.
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval The FMC Bank mapping mode. This parameter can be
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****             FMC_SWAPBMAP_DISABLE, FMC_SWAPBMAP_SDRAM_SRAM, FMC_SWAPBMAP_SDRAMB2
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** */
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** uint32_t HAL_GetFMCMemorySwappingConfig(void)
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1484              		.loc 1 1077 0
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 0
 1487              		@ frame_needed = 0, uses_anonymous_args = 0
 1488              		@ link register save eliminated.
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   return READ_BIT(FMC_Bank1_R->BTCR[0], FMC_BCR1_BMAP);
 1489              		.loc 1 1078 0
 1490 0000 024B     		ldr	r3, .L154
 1491 0002 1868     		ldr	r0, [r3]
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1492              		.loc 1 1079 0
 1493 0004 00F04070 		and	r0, r0, #50331648
 1494 0008 7047     		bx	lr
 1495              	.L155:
 1496 000a 00BF     		.align	2
 1497              	.L154:
 1498 000c 00400052 		.word	1375748096
 1499              		.cfi_endproc
 1500              	.LFE186:
 1502              		.section	.text.HAL_EXTI_EdgeConfig,"ax",%progbits
 1503              		.align	1
 1504              		.global	HAL_EXTI_EdgeConfig
 1505              		.syntax unified
 1506              		.thumb
 1507              		.thumb_func
 1508              		.fpu fpv5-d16
 1510              	HAL_EXTI_EdgeConfig:
 1511              	.LFB187:
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line edge
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @note    No edge configuration for direct lines but for configurable lines:(EXTI_LINE0..EXTI_LI
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          EXTI_LINE49,EXTI_LINE51,EXTI_LINE82,EXTI_LINE84,EXTI_LINE85 and EXTI_LINE86.
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Edge: Specifies  EXTI line Edge used.
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values :
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_RISING_EDGE : Configurable line, with Rising edge trigger detection
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_FALLING_EDGE: Configurable line, with Falling edge trigger detection
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_EdgeConfig(uint32_t EXTI_Line , uint32_t EXTI_Edge )
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1512              		.loc 1 1094 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 0
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516              		@ link register save eliminated.
 1517              	.LVL51:
ARM GAS  /tmp/cclQz20V.s 			page 46


 1518 0000 70B4     		push	{r4, r5, r6}
 1519              	.LCFI6:
 1520              		.cfi_def_cfa_offset 12
 1521              		.cfi_offset 4, -12
 1522              		.cfi_offset 5, -8
 1523              		.cfi_offset 6, -4
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_HAL_EXTI_CONFIG_LINE(EXTI_Line));
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_EDGE_LINE(EXTI_Edge));
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Clear Rising Falling edge configuration */
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->FTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint3
 1524              		.loc 1 1100 0
 1525 0002 4309     		lsrs	r3, r0, #5
 1526 0004 5D01     		lsls	r5, r3, #5
 1527 0006 0F4C     		ldr	r4, .L160
 1528 0008 2E59     		ldr	r6, [r5, r4]
 1529 000a 00F01F00 		and	r0, r0, #31
 1530              	.LVL52:
 1531 000e 0122     		movs	r2, #1
 1532 0010 02FA00F0 		lsl	r0, r2, r0
 1533 0014 C243     		mvns	r2, r0
 1534 0016 1640     		ands	r6, r6, r2
 1535 0018 2E51     		str	r6, [r5, r4]
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   CLEAR_BIT( *(__IO uint32_t *) (((uint32_t) &(EXTI->RTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint
 1536              		.loc 1 1101 0
 1537 001a 03F13073 		add	r3, r3, #46137344
 1538 001e 5B01     		lsls	r3, r3, #5
 1539 0020 1E68     		ldr	r6, [r3]
 1540 0022 3240     		ands	r2, r2, r6
 1541 0024 1A60     		str	r2, [r3]
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Edge & EXTI_RISING_EDGE) == EXTI_RISING_EDGE)
 1542              		.loc 1 1103 0
 1543 0026 11F4801F 		tst	r1, #1048576
 1544 002a 02D0     		beq	.L157
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    SET_BIT( *(__IO uint32_t *) (((uint32_t) &(EXTI->RTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint3
 1545              		.loc 1 1105 0
 1546 002c 1A68     		ldr	r2, [r3]
 1547 002e 0243     		orrs	r2, r2, r0
 1548 0030 1A60     		str	r2, [r3]
 1549              	.L157:
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Edge & EXTI_FALLING_EDGE) == EXTI_FALLING_EDGE)
 1550              		.loc 1 1107 0
 1551 0032 11F4001F 		tst	r1, #2097152
 1552 0036 02D0     		beq	.L156
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****    SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->FTSR1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint32
 1553              		.loc 1 1109 0
 1554 0038 2B59     		ldr	r3, [r5, r4]
 1555 003a 1843     		orrs	r0, r0, r3
 1556 003c 2851     		str	r0, [r5, r4]
 1557              	.L156:
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
ARM GAS  /tmp/cclQz20V.s 			page 47


 1558              		.loc 1 1111 0
 1559 003e 70BC     		pop	{r4, r5, r6}
 1560              	.LCFI7:
 1561              		.cfi_restore 6
 1562              		.cfi_restore 5
 1563              		.cfi_restore 4
 1564              		.cfi_def_cfa_offset 0
 1565 0040 7047     		bx	lr
 1566              	.L161:
 1567 0042 00BF     		.align	2
 1568              	.L160:
 1569 0044 04000058 		.word	1476395012
 1570              		.cfi_endproc
 1571              	.LFE187:
 1573              		.section	.text.HAL_EXTI_GenerateSWInterrupt,"ax",%progbits
 1574              		.align	1
 1575              		.global	HAL_EXTI_GenerateSWInterrupt
 1576              		.syntax unified
 1577              		.thumb
 1578              		.thumb_func
 1579              		.fpu fpv5-d16
 1581              	HAL_EXTI_GenerateSWInterrupt:
 1582              	.LFB188:
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Generates a Software interrupt on selected EXTI line.
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          (EXTI_LINE0..EXTI_LINE21),EXTI_LINE49,EXTI_LINE51,EXTI_LINE82,EXTI_LINE84,EXTI_LINE85 
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1583              		.loc 1 1120 0
 1584              		.cfi_startproc
 1585              		@ args = 0, pretend = 0, frame = 0
 1586              		@ frame_needed = 0, uses_anonymous_args = 0
 1587              		@ link register save eliminated.
 1588              	.LVL53:
 1589 0000 10B4     		push	{r4}
 1590              	.LCFI8:
 1591              		.cfi_def_cfa_offset 4
 1592              		.cfi_offset 4, -4
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_HAL_EXTI_CONFIG_LINE(EXTI_Line));
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->SWIER1)) + ((EXTI_Line >> 5 ) * 0x20UL)), (uint32
 1593              		.loc 1 1124 0
 1594 0002 20F01F04 		bic	r4, r0, #31
 1595 0006 0649     		ldr	r1, .L164
 1596 0008 6358     		ldr	r3, [r4, r1]
 1597 000a 00F01F00 		and	r0, r0, #31
 1598              	.LVL54:
 1599 000e 0122     		movs	r2, #1
 1600 0010 02FA00F0 		lsl	r0, r2, r0
 1601 0014 1843     		orrs	r0, r0, r3
 1602 0016 6050     		str	r0, [r4, r1]
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
ARM GAS  /tmp/cclQz20V.s 			page 48


 1603              		.loc 1 1125 0
 1604 0018 5DF8044B 		ldr	r4, [sp], #4
 1605              	.LCFI9:
 1606              		.cfi_restore 4
 1607              		.cfi_def_cfa_offset 0
 1608 001c 7047     		bx	lr
 1609              	.L165:
 1610 001e 00BF     		.align	2
 1611              	.L164:
 1612 0020 08000058 		.word	1476395016
 1613              		.cfi_endproc
 1614              	.LFE188:
 1616              		.section	.text.HAL_EXTI_D1_ClearFlag,"ax",%progbits
 1617              		.align	1
 1618              		.global	HAL_EXTI_D1_ClearFlag
 1619              		.syntax unified
 1620              		.thumb
 1621              		.thumb_func
 1622              		.fpu fpv5-d16
 1624              	HAL_EXTI_D1_ClearFlag:
 1625              	.LFB189:
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Clears the EXTI's line pending flags for Domain D1
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D1_ClearFlag(uint32_t EXTI_Line)
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1626              		.loc 1 1135 0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 0
 1629              		@ frame_needed = 0, uses_anonymous_args = 0
 1630              		@ link register save eliminated.
 1631              	.LVL55:
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  assert_param(IS_EXTI_D1_LINE(EXTI_Line));
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  WRITE_REG(*(__IO uint32_t *) (((uint32_t) &(EXTI_D1->PR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), (uint3
 1632              		.loc 1 1138 0
 1633 0000 00F01F02 		and	r2, r0, #31
 1634 0004 4009     		lsrs	r0, r0, #5
 1635              	.LVL56:
 1636 0006 0001     		lsls	r0, r0, #4
 1637 0008 0123     		movs	r3, #1
 1638 000a 9340     		lsls	r3, r3, r2
 1639 000c 014A     		ldr	r2, .L167
 1640 000e 8350     		str	r3, [r0, r2]
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1641              		.loc 1 1140 0
 1642 0010 7047     		bx	lr
 1643              	.L168:
 1644 0012 00BF     		.align	2
 1645              	.L167:
 1646 0014 88000058 		.word	1476395144
ARM GAS  /tmp/cclQz20V.s 			page 49


 1647              		.cfi_endproc
 1648              	.LFE189:
 1650              		.section	.text.HAL_EXTI_D1_EventInputConfig,"ax",%progbits
 1651              		.align	1
 1652              		.global	HAL_EXTI_D1_EventInputConfig
 1653              		.syntax unified
 1654              		.thumb
 1655              		.thumb_func
 1656              		.fpu fpv5-d16
 1658              	HAL_EXTI_D1_EventInputConfig:
 1659              	.LFB190:
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Clears the EXTI's line pending flags for Domain D2
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D2_ClearFlag(uint32_t EXTI_Line)
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameters */
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  assert_param(IS_EXTI_D2_LINE(EXTI_Line));
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****  WRITE_REG(*(__IO uint32_t *) (((uint32_t) &(EXTI_D2->PR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), (uint3
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line for Domain D1
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Mode: Specifies which EXTI line is used as interrupt or an event.
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one or a combination of the following values :
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_IT :  Interrupt Mode selected
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_EVT : Event Mode selected
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_LineCmd controls (Enable/Disable) the EXTI line.
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D1_EventInputConfig(uint32_t EXTI_Line , uint32_t EXTI_Mode,  uint32_t EXTI_LineCmd )
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1660              		.loc 1 1170 0
 1661              		.cfi_startproc
 1662              		@ args = 0, pretend = 0, frame = 0
 1663              		@ frame_needed = 0, uses_anonymous_args = 0
 1664              		@ link register save eliminated.
 1665              	.LVL57:
 1666 0000 70B4     		push	{r4, r5, r6}
 1667              	.LCFI10:
 1668              		.cfi_def_cfa_offset 12
 1669              		.cfi_offset 4, -12
 1670              		.cfi_offset 5, -8
 1671              		.cfi_offset 6, -4
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D1_LINE(EXTI_Line));
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_MODE_LINE(EXTI_Mode));
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
ARM GAS  /tmp/cclQz20V.s 			page 50


1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_IT) == EXTI_MODE_IT)
 1672              		.loc 1 1175 0
 1673 0002 11F4803F 		tst	r1, #65536
 1674 0006 0CD0     		beq	.L170
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      if( EXTI_LineCmd == 0UL)
 1675              		.loc 1 1177 0
 1676 0008 E2B9     		cbnz	r2, .L171
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      {
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****        /* Clear EXTI line configuration */
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D1->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL))
 1677              		.loc 1 1180 0
 1678 000a 1A4B     		ldr	r3, .L176
 1679 000c 03EB5013 		add	r3, r3, r0, lsr #5
 1680 0010 1B01     		lsls	r3, r3, #4
 1681 0012 1C68     		ldr	r4, [r3]
 1682 0014 00F01F06 		and	r6, r0, #31
 1683 0018 0125     		movs	r5, #1
 1684 001a B540     		lsls	r5, r5, r6
 1685 001c 24EA0504 		bic	r4, r4, r5
 1686 0020 1C60     		str	r4, [r3]
 1687              	.L170:
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      }
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      else
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      {
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****         SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D1->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), 
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      }
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_EVT) == EXTI_MODE_EVT)
 1688              		.loc 1 1188 0
 1689 0022 11F4003F 		tst	r1, #131072
 1690 0026 0BD0     		beq	.L169
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if( EXTI_LineCmd == 0UL)
 1691              		.loc 1 1190 0
 1692 0028 C2B1     		cbz	r2, .L175
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       /* Clear EXTI line configuration */
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       CLEAR_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D1->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL))
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     else
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       SET_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D1->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), 
 1693              		.loc 1 1197 0
 1694 002a 4309     		lsrs	r3, r0, #5
 1695 002c 1B01     		lsls	r3, r3, #4
 1696 002e 124C     		ldr	r4, .L176+4
 1697 0030 1A59     		ldr	r2, [r3, r4]
 1698              	.LVL58:
 1699 0032 00F01F00 		and	r0, r0, #31
 1700              	.LVL59:
 1701 0036 0121     		movs	r1, #1
 1702              	.LVL60:
 1703 0038 01FA00F0 		lsl	r0, r1, r0
 1704 003c 1043     		orrs	r0, r0, r2
 1705 003e 1851     		str	r0, [r3, r4]
ARM GAS  /tmp/cclQz20V.s 			page 51


 1706              	.L169:
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1707              		.loc 1 1200 0
 1708 0040 70BC     		pop	{r4, r5, r6}
 1709              	.LCFI11:
 1710              		.cfi_remember_state
 1711              		.cfi_restore 6
 1712              		.cfi_restore 5
 1713              		.cfi_restore 4
 1714              		.cfi_def_cfa_offset 0
 1715 0042 7047     		bx	lr
 1716              	.LVL61:
 1717              	.L171:
 1718              	.LCFI12:
 1719              		.cfi_restore_state
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      }
 1720              		.loc 1 1184 0
 1721 0044 0B4B     		ldr	r3, .L176
 1722 0046 03EB5013 		add	r3, r3, r0, lsr #5
 1723 004a 1B01     		lsls	r3, r3, #4
 1724 004c 1C68     		ldr	r4, [r3]
 1725 004e 00F01F06 		and	r6, r0, #31
 1726 0052 0125     		movs	r5, #1
 1727 0054 B540     		lsls	r5, r5, r6
 1728 0056 2C43     		orrs	r4, r4, r5
 1729 0058 1C60     		str	r4, [r3]
 1730 005a E2E7     		b	.L170
 1731              	.L175:
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
 1732              		.loc 1 1193 0
 1733 005c 4309     		lsrs	r3, r0, #5
 1734 005e 1B01     		lsls	r3, r3, #4
 1735 0060 0549     		ldr	r1, .L176+4
 1736              	.LVL62:
 1737 0062 5A58     		ldr	r2, [r3, r1]
 1738              	.LVL63:
 1739 0064 00F01F04 		and	r4, r0, #31
 1740 0068 0120     		movs	r0, #1
 1741              	.LVL64:
 1742 006a A040     		lsls	r0, r0, r4
 1743 006c 22EA0000 		bic	r0, r2, r0
 1744 0070 5850     		str	r0, [r3, r1]
 1745 0072 E5E7     		b	.L169
 1746              	.L177:
 1747              		.align	2
 1748              	.L176:
 1749 0074 08008005 		.word	92274696
 1750 0078 84000058 		.word	1476395140
 1751              		.cfi_endproc
 1752              	.LFE190:
 1754              		.section	.text.HAL_EXTI_D3_EventInputConfig,"ax",%progbits
 1755              		.align	1
 1756              		.global	HAL_EXTI_D3_EventInputConfig
 1757              		.syntax unified
 1758              		.thumb
ARM GAS  /tmp/cclQz20V.s 			page 52


 1759              		.thumb_func
 1760              		.fpu fpv5-d16
 1762              	HAL_EXTI_D3_EventInputConfig:
 1763              	.LFB191:
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #if defined(DUAL_CORE)
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line for Domain D2
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0....EXTI_LINE87)excluding :line45, line81,line83 which are reserved
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Mode: Specifies which EXTI line is used as interrupt or an event.
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one or a combination of the following values :
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_IT :  Interrupt Mode selected
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg EXTI_MODE_EVT : Event Mode selected
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_LineCmd controls (Enable/Disable) the EXTI line.
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D2_EventInputConfig(uint32_t EXTI_Line , uint32_t EXTI_Mode,  uint32_t EXTI_LineCmd )
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D2_LINE(EXTI_Line));
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_MODE_LINE(EXTI_Mode));
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_IT) == EXTI_MODE_IT)
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if( EXTI_LineCmd == 0UL)
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Clear EXTI line configuration */
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D2->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)),(u
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     else
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****      SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI_D2->IMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), (ui
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( (EXTI_Mode & EXTI_MODE_EVT) == EXTI_MODE_EVT)
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     if( EXTI_LineCmd == 0UL)
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       /* Clear EXTI line configuration */
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       CLEAR_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D2->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL))
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     else
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     {
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****       SET_BIT(  *(__IO uint32_t *) (((uint32_t) &(EXTI_D2->EMR1)) + ((EXTI_Line >> 5 ) * 0x10UL)), 
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     }
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** #endif /*DUAL_CORE*/
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** /**
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @brief  Configure the EXTI input event line for Domain D3
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_Line: Specifies the EXTI LINE, it can be one of the following values,
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *         (EXTI_LINE0...EXTI_LINE15),(EXTI_LINE19...EXTI_LINE21),EXTI_LINE25, EXTI_LINE34,
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          EXTI_LINE35,EXTI_LINE41,(EXTI_LINE48...EXTI_LINE53)
ARM GAS  /tmp/cclQz20V.s 			page 53


1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_LineCmd controls (Enable/Disable) the EXTI line.
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @param   EXTI_ClearSrc: Specifies the clear source of D3 pending event.
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *          This parameter can be one of the following values :
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg BDMA_CH6_CLEAR : BDMA ch6 event selected as D3 domain pendclear source
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg BDMA_CH7_CLEAR : BDMA ch7 event selected as D3 domain pendclear source
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg LPTIM4_OUT_CLEAR : LPTIM4 out selected as D3 domain pendclear source
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   *   @arg LPTIM5_OUT_CLEAR : LPTIM5 out selected as D3 domain pendclear source
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   * @retval None
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   */
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** void HAL_EXTI_D3_EventInputConfig(uint32_t EXTI_Line, uint32_t EXTI_LineCmd , uint32_t EXTI_ClearSr
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** {
 1764              		.loc 1 1264 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768              		@ link register save eliminated.
 1769              	.LVL65:
 1770 0000 70B4     		push	{r4, r5, r6}
 1771              	.LCFI13:
 1772              		.cfi_def_cfa_offset 12
 1773              		.cfi_offset 4, -12
 1774              		.cfi_offset 5, -8
 1775              		.cfi_offset 6, -4
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   __IO uint32_t *pRegv;
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   /* Check the parameter */
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D3_LINE(EXTI_Line));
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   assert_param(IS_EXTI_D3_CLEAR(EXTI_ClearSrc));
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if( EXTI_LineCmd == 0UL)
 1776              		.loc 1 1271 0
 1777 0002 F9B9     		cbnz	r1, .L179
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     /* Clear EXTI line configuration */
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     CLEAR_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->D3PMR1)) + ((EXTI_Line >> 5 ) * 0x20UL)),(uin
 1778              		.loc 1 1274 0
 1779 0004 20F01F03 		bic	r3, r0, #31
 1780 0008 164D     		ldr	r5, .L185
 1781 000a 5959     		ldr	r1, [r3, r5]
 1782              	.LVL66:
 1783 000c 00F01F06 		and	r6, r0, #31
 1784 0010 0124     		movs	r4, #1
 1785 0012 B440     		lsls	r4, r4, r6
 1786 0014 21EA0401 		bic	r1, r1, r4
 1787 0018 5951     		str	r1, [r3, r5]
 1788              	.L180:
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     SET_BIT(*(__IO uint32_t *) (((uint32_t) &(EXTI->D3PMR1)) +((EXTI_Line >> 5 ) * 0x20UL)), (uint3
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   if(((EXTI_Line>>4)%2UL) == 0UL)
 1789              		.loc 1 1281 0
 1790 001a 10F0100F 		tst	r0, #16
 1791 001e 1CD0     		beq	.L184
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
ARM GAS  /tmp/cclQz20V.s 			page 54


1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     pRegv = (__IO uint32_t *) (((uint32_t) &(EXTI->D3PCR1L)) + ((EXTI_Line >> 5 ) * 0x20UL));
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   else
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   {
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****     pRegv = (__IO uint32_t *) (((uint32_t) &(EXTI->D3PCR1H)) + ((EXTI_Line >> 5 ) * 0x20UL));
 1792              		.loc 1 1287 0
 1793 0020 20F01F03 		bic	r3, r0, #31
 1794 0024 1049     		ldr	r1, .L185+4
 1795 0026 1944     		add	r1, r1, r3
 1796              	.LVL67:
 1797              	.L182:
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   MODIFY_REG(*pRegv, (uint32_t)(3UL << ((EXTI_Line*2UL) & 0x1FUL)), (uint32_t)(EXTI_ClearSrc << ((E
 1798              		.loc 1 1289 0
 1799 0028 0B68     		ldr	r3, [r1]
 1800 002a 4000     		lsls	r0, r0, #1
 1801              	.LVL68:
 1802 002c 00F01E00 		and	r0, r0, #30
 1803 0030 0324     		movs	r4, #3
 1804 0032 8440     		lsls	r4, r4, r0
 1805 0034 23EA0403 		bic	r3, r3, r4
 1806 0038 02FA00F0 		lsl	r0, r2, r0
 1807 003c 1843     		orrs	r0, r0, r3
 1808 003e 0860     		str	r0, [r1]
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** 
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c **** }
 1809              		.loc 1 1291 0
 1810 0040 70BC     		pop	{r4, r5, r6}
 1811              	.LCFI14:
 1812              		.cfi_remember_state
 1813              		.cfi_restore 6
 1814              		.cfi_restore 5
 1815              		.cfi_restore 4
 1816              		.cfi_def_cfa_offset 0
 1817 0042 7047     		bx	lr
 1818              	.LVL69:
 1819              	.L179:
 1820              	.LCFI15:
 1821              		.cfi_restore_state
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 1822              		.loc 1 1278 0
 1823 0044 20F01F03 		bic	r3, r0, #31
 1824 0048 064D     		ldr	r5, .L185
 1825 004a 5959     		ldr	r1, [r3, r5]
 1826              	.LVL70:
 1827 004c 00F01F06 		and	r6, r0, #31
 1828 0050 0124     		movs	r4, #1
 1829 0052 B440     		lsls	r4, r4, r6
 1830 0054 2143     		orrs	r1, r1, r4
 1831 0056 5951     		str	r1, [r3, r5]
 1832 0058 DFE7     		b	.L180
 1833              	.L184:
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c ****   }
 1834              		.loc 1 1283 0
 1835 005a 20F01F03 		bic	r3, r0, #31
 1836 005e 0349     		ldr	r1, .L185+8
 1837 0060 1944     		add	r1, r1, r3
ARM GAS  /tmp/cclQz20V.s 			page 55


 1838              	.LVL71:
 1839 0062 E1E7     		b	.L182
 1840              	.L186:
 1841              		.align	2
 1842              	.L185:
 1843 0064 0C000058 		.word	1476395020
 1844 0068 14000058 		.word	1476395028
 1845 006c 10000058 		.word	1476395024
 1846              		.cfi_endproc
 1847              	.LFE191:
 1849              		.global	uwTickFreq
 1850              		.global	uwTickPrio
 1851              		.comm	uwTick,4,4
 1852              		.section	.data.uwTickFreq,"aw",%progbits
 1853              		.set	.LANCHOR0,. + 0
 1856              	uwTickFreq:
 1857 0000 01       		.byte	1
 1858              		.section	.data.uwTickPrio,"aw",%progbits
 1859              		.align	2
 1860              		.set	.LANCHOR1,. + 0
 1863              	uwTickPrio:
 1864 0000 10000000 		.word	16
 1865              		.text
 1866              	.Letext0:
 1867              		.file 2 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 1868              		.file 3 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1869              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1870              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1871              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 1872              		.file 7 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 1873              		.file 8 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 1874              		.file 9 "/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
 1875              		.file 10 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 1876              		.file 11 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/math.h"
 1877              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1878              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 1879              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1880              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 1881              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
ARM GAS  /tmp/cclQz20V.s 			page 56


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal.c
     /tmp/cclQz20V.s:17     .text.HAL_MspInit:0000000000000000 $t
     /tmp/cclQz20V.s:24     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/cclQz20V.s:38     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/cclQz20V.s:45     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/cclQz20V.s:58     .text.HAL_DeInit:0000000000000000 $t
     /tmp/cclQz20V.s:65     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/cclQz20V.s:132    .text.HAL_DeInit:0000000000000068 $d
     /tmp/cclQz20V.s:143    .text.HAL_InitTick:0000000000000000 $t
     /tmp/cclQz20V.s:150    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cclQz20V.s:214    .text.HAL_InitTick:0000000000000044 $d
     /tmp/cclQz20V.s:221    .text.HAL_Init:0000000000000000 $t
     /tmp/cclQz20V.s:228    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/cclQz20V.s:287    .text.HAL_Init:000000000000004c $d
     /tmp/cclQz20V.s:295    .text.HAL_IncTick:0000000000000000 $t
     /tmp/cclQz20V.s:302    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/cclQz20V.s:321    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/cclQz20V.s:327    .text.HAL_GetTick:0000000000000000 $t
     /tmp/cclQz20V.s:334    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/cclQz20V.s:349    .text.HAL_GetTick:0000000000000008 $d
     /tmp/cclQz20V.s:354    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/cclQz20V.s:361    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/cclQz20V.s:375    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/cclQz20V.s:380    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/cclQz20V.s:387    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/cclQz20V.s:433    .text.HAL_SetTickFreq:0000000000000024 $d
     /tmp/cclQz20V.s:439    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/cclQz20V.s:446    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/cclQz20V.s:460    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/cclQz20V.s:465    .text.HAL_Delay:0000000000000000 $t
     /tmp/cclQz20V.s:472    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/cclQz20V.s:513    .text.HAL_Delay:0000000000000024 $d
     /tmp/cclQz20V.s:518    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cclQz20V.s:525    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cclQz20V.s:542    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/cclQz20V.s:547    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cclQz20V.s:554    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cclQz20V.s:571    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/cclQz20V.s:576    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/cclQz20V.s:583    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/cclQz20V.s:596    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/cclQz20V.s:601    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/cclQz20V.s:608    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/cclQz20V.s:624    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/cclQz20V.s:629    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/cclQz20V.s:636    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/cclQz20V.s:652    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/cclQz20V.s:657    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/cclQz20V.s:664    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/cclQz20V.s:678    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/cclQz20V.s:683    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/cclQz20V.s:690    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/cclQz20V.s:704    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/cclQz20V.s:709    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/cclQz20V.s:716    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
ARM GAS  /tmp/cclQz20V.s 			page 57


     /tmp/cclQz20V.s:730    .text.HAL_GetUIDw2:0000000000000008 $d
     /tmp/cclQz20V.s:735    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:0000000000000000 $t
     /tmp/cclQz20V.s:742    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:0000000000000000 HAL_SYSCFG_VREFBUF_VoltageScalingConfig
     /tmp/cclQz20V.s:762    .text.HAL_SYSCFG_VREFBUF_VoltageScalingConfig:0000000000000010 $d
     /tmp/cclQz20V.s:767    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:0000000000000000 $t
     /tmp/cclQz20V.s:774    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:0000000000000000 HAL_SYSCFG_VREFBUF_HighImpedanceConfig
     /tmp/cclQz20V.s:794    .text.HAL_SYSCFG_VREFBUF_HighImpedanceConfig:0000000000000010 $d
     /tmp/cclQz20V.s:799    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:0000000000000000 $t
     /tmp/cclQz20V.s:806    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:0000000000000000 HAL_SYSCFG_VREFBUF_TrimmingConfig
     /tmp/cclQz20V.s:826    .text.HAL_SYSCFG_VREFBUF_TrimmingConfig:0000000000000010 $d
     /tmp/cclQz20V.s:831    .text.HAL_SYSCFG_EnableVREFBUF:0000000000000000 $t
     /tmp/cclQz20V.s:838    .text.HAL_SYSCFG_EnableVREFBUF:0000000000000000 HAL_SYSCFG_EnableVREFBUF
     /tmp/cclQz20V.s:884    .text.HAL_SYSCFG_EnableVREFBUF:0000000000000030 $d
     /tmp/cclQz20V.s:889    .text.HAL_SYSCFG_DisableVREFBUF:0000000000000000 $t
     /tmp/cclQz20V.s:896    .text.HAL_SYSCFG_DisableVREFBUF:0000000000000000 HAL_SYSCFG_DisableVREFBUF
     /tmp/cclQz20V.s:913    .text.HAL_SYSCFG_DisableVREFBUF:000000000000000c $d
     /tmp/cclQz20V.s:918    .text.HAL_SYSCFG_ETHInterfaceSelect:0000000000000000 $t
     /tmp/cclQz20V.s:925    .text.HAL_SYSCFG_ETHInterfaceSelect:0000000000000000 HAL_SYSCFG_ETHInterfaceSelect
     /tmp/cclQz20V.s:945    .text.HAL_SYSCFG_ETHInterfaceSelect:0000000000000010 $d
     /tmp/cclQz20V.s:950    .text.HAL_SYSCFG_AnalogSwitchConfig:0000000000000000 $t
     /tmp/cclQz20V.s:957    .text.HAL_SYSCFG_AnalogSwitchConfig:0000000000000000 HAL_SYSCFG_AnalogSwitchConfig
     /tmp/cclQz20V.s:977    .text.HAL_SYSCFG_AnalogSwitchConfig:0000000000000010 $d
     /tmp/cclQz20V.s:982    .text.HAL_SYSCFG_EnableBOOST:0000000000000000 $t
     /tmp/cclQz20V.s:989    .text.HAL_SYSCFG_EnableBOOST:0000000000000000 HAL_SYSCFG_EnableBOOST
     /tmp/cclQz20V.s:1006   .text.HAL_SYSCFG_EnableBOOST:000000000000000c $d
     /tmp/cclQz20V.s:1011   .text.HAL_SYSCFG_DisableBOOST:0000000000000000 $t
     /tmp/cclQz20V.s:1018   .text.HAL_SYSCFG_DisableBOOST:0000000000000000 HAL_SYSCFG_DisableBOOST
     /tmp/cclQz20V.s:1035   .text.HAL_SYSCFG_DisableBOOST:000000000000000c $d
     /tmp/cclQz20V.s:1040   .text.HAL_SYSCFG_CM7BootAddConfig:0000000000000000 $t
     /tmp/cclQz20V.s:1047   .text.HAL_SYSCFG_CM7BootAddConfig:0000000000000000 HAL_SYSCFG_CM7BootAddConfig
     /tmp/cclQz20V.s:1082   .text.HAL_SYSCFG_CM7BootAddConfig:000000000000002c $d
     /tmp/cclQz20V.s:1088   .text.HAL_EnableCompensationCell:0000000000000000 $t
     /tmp/cclQz20V.s:1095   .text.HAL_EnableCompensationCell:0000000000000000 HAL_EnableCompensationCell
     /tmp/cclQz20V.s:1112   .text.HAL_EnableCompensationCell:000000000000000c $d
     /tmp/cclQz20V.s:1117   .text.HAL_DisableCompensationCell:0000000000000000 $t
     /tmp/cclQz20V.s:1124   .text.HAL_DisableCompensationCell:0000000000000000 HAL_DisableCompensationCell
     /tmp/cclQz20V.s:1141   .text.HAL_DisableCompensationCell:000000000000000c $d
     /tmp/cclQz20V.s:1146   .text.HAL_SYSCFG_EnableIOSpeedOptimize:0000000000000000 $t
     /tmp/cclQz20V.s:1153   .text.HAL_SYSCFG_EnableIOSpeedOptimize:0000000000000000 HAL_SYSCFG_EnableIOSpeedOptimize
     /tmp/cclQz20V.s:1170   .text.HAL_SYSCFG_EnableIOSpeedOptimize:000000000000000c $d
     /tmp/cclQz20V.s:1175   .text.HAL_SYSCFG_DisableIOSpeedOptimize:0000000000000000 $t
     /tmp/cclQz20V.s:1182   .text.HAL_SYSCFG_DisableIOSpeedOptimize:0000000000000000 HAL_SYSCFG_DisableIOSpeedOptimize
     /tmp/cclQz20V.s:1199   .text.HAL_SYSCFG_DisableIOSpeedOptimize:000000000000000c $d
     /tmp/cclQz20V.s:1204   .text.HAL_SYSCFG_CompensationCodeSelect:0000000000000000 $t
     /tmp/cclQz20V.s:1211   .text.HAL_SYSCFG_CompensationCodeSelect:0000000000000000 HAL_SYSCFG_CompensationCodeSelect
     /tmp/cclQz20V.s:1231   .text.HAL_SYSCFG_CompensationCodeSelect:0000000000000010 $d
     /tmp/cclQz20V.s:1236   .text.HAL_SYSCFG_CompensationCodeConfig:0000000000000000 $t
     /tmp/cclQz20V.s:1243   .text.HAL_SYSCFG_CompensationCodeConfig:0000000000000000 HAL_SYSCFG_CompensationCodeConfig
     /tmp/cclQz20V.s:1264   .text.HAL_SYSCFG_CompensationCodeConfig:0000000000000014 $d
     /tmp/cclQz20V.s:1269   .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/cclQz20V.s:1276   .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/cclQz20V.s:1293   .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/cclQz20V.s:1298   .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/cclQz20V.s:1305   .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/cclQz20V.s:1322   .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/cclQz20V.s:1327   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/cclQz20V.s:1334   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
ARM GAS  /tmp/cclQz20V.s 			page 58


     /tmp/cclQz20V.s:1351   .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/cclQz20V.s:1356   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/cclQz20V.s:1363   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/cclQz20V.s:1380   .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/cclQz20V.s:1385   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/cclQz20V.s:1392   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/cclQz20V.s:1409   .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/cclQz20V.s:1414   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/cclQz20V.s:1421   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/cclQz20V.s:1438   .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/cclQz20V.s:1443   .text.HAL_SetFMCMemorySwappingConfig:0000000000000000 $t
     /tmp/cclQz20V.s:1450   .text.HAL_SetFMCMemorySwappingConfig:0000000000000000 HAL_SetFMCMemorySwappingConfig
     /tmp/cclQz20V.s:1470   .text.HAL_SetFMCMemorySwappingConfig:0000000000000010 $d
     /tmp/cclQz20V.s:1475   .text.HAL_GetFMCMemorySwappingConfig:0000000000000000 $t
     /tmp/cclQz20V.s:1482   .text.HAL_GetFMCMemorySwappingConfig:0000000000000000 HAL_GetFMCMemorySwappingConfig
     /tmp/cclQz20V.s:1498   .text.HAL_GetFMCMemorySwappingConfig:000000000000000c $d
     /tmp/cclQz20V.s:1503   .text.HAL_EXTI_EdgeConfig:0000000000000000 $t
     /tmp/cclQz20V.s:1510   .text.HAL_EXTI_EdgeConfig:0000000000000000 HAL_EXTI_EdgeConfig
     /tmp/cclQz20V.s:1569   .text.HAL_EXTI_EdgeConfig:0000000000000044 $d
     /tmp/cclQz20V.s:1574   .text.HAL_EXTI_GenerateSWInterrupt:0000000000000000 $t
     /tmp/cclQz20V.s:1581   .text.HAL_EXTI_GenerateSWInterrupt:0000000000000000 HAL_EXTI_GenerateSWInterrupt
     /tmp/cclQz20V.s:1612   .text.HAL_EXTI_GenerateSWInterrupt:0000000000000020 $d
     /tmp/cclQz20V.s:1617   .text.HAL_EXTI_D1_ClearFlag:0000000000000000 $t
     /tmp/cclQz20V.s:1624   .text.HAL_EXTI_D1_ClearFlag:0000000000000000 HAL_EXTI_D1_ClearFlag
     /tmp/cclQz20V.s:1646   .text.HAL_EXTI_D1_ClearFlag:0000000000000014 $d
     /tmp/cclQz20V.s:1651   .text.HAL_EXTI_D1_EventInputConfig:0000000000000000 $t
     /tmp/cclQz20V.s:1658   .text.HAL_EXTI_D1_EventInputConfig:0000000000000000 HAL_EXTI_D1_EventInputConfig
     /tmp/cclQz20V.s:1749   .text.HAL_EXTI_D1_EventInputConfig:0000000000000074 $d
     /tmp/cclQz20V.s:1755   .text.HAL_EXTI_D3_EventInputConfig:0000000000000000 $t
     /tmp/cclQz20V.s:1762   .text.HAL_EXTI_D3_EventInputConfig:0000000000000000 HAL_EXTI_D3_EventInputConfig
     /tmp/cclQz20V.s:1843   .text.HAL_EXTI_D3_EventInputConfig:0000000000000064 $d
     /tmp/cclQz20V.s:1856   .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/cclQz20V.s:1863   .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/cclQz20V.s:1859   .data.uwTickPrio:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
HAL_RCC_GetSysClockFreq
D1CorePrescTable
SystemD2Clock
