ARM GAS  /tmp/ccggNwMO.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_flash_ex.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.FLASH_MassErase,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	FLASH_MassErase:
  24              	.LFB153:
  25              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @file    stm32h7xx_hal_flash_ex.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief   Extended FLASH HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          functionalities of the FLASH extension peripheral:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *           + Extended programming operations functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****  @verbatim
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****  ==============================================================================
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                    ##### Flash Extension features #####
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   ==============================================================================
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   [..] Comparing to other previous devices, the FLASH interface for STM32H7xx
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****        devices contains the following additional features
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****        (+) Capacity up to 2 Mbyte with dual bank architecture supporting read-while-write
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****            capability (RWW)
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****        (+) Dual bank memory organization
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****        (+) PCROP protection for all banks
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****        (+) Global readout protection (RDP)
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****        (+) Write protection
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****        (+) Secure access only protection
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****        (+) Bank / register swapping (when Dual-Bank)
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****        (+) Cyclic Redundancy Check (CRC)
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                         ##### How to use this driver #####
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****  ==============================================================================
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   [..] This driver provides functions to configure and program the FLASH memory
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****        of all STM32H7xx devices. It includes
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       (#) FLASH Memory Erase functions:
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and
ARM GAS  /tmp/ccggNwMO.s 			page 2


  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                 HAL_FLASH_Lock() functions
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****            (++) Erase function: Sector erase, bank erase and dual-bank mass erase
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****            (++) There are two modes of erase :
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****              (+++) Polling Mode using HAL_FLASHEx_Erase()
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****              (+++) Interrupt Mode using HAL_FLASHEx_Erase_IT()
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       (#) Option Bytes Programming functions: Use HAL_FLASHEx_OBProgram() to:
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         (++) Set/Reset the write protection per bank
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         (++) Set the Read protection Level
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         (++) Set the BOR level
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         (++) Program the user Option Bytes
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         (++) PCROP protection configuration and control per bank
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         (++) Secure area configuration and control per bank
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         (++) Core Boot address configuration
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         (++) TCM / AXI shared RAM configuration
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         (++) CPU Frequency Boost configuration
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       (#) FLASH Memory Lock and unlock per Bank: HAL_FLASHEx_Lock_Bank1(), HAL_FLASHEx_Unlock_Bank1
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           HAL_FLASHEx_Lock_Bank2() and HAL_FLASHEx_Unlock_Bank2() functions
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       (#) FLASH CRC computation function: Use HAL_FLASHEx_ComputeCRC() to:
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           (++) Enable CRC feature
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           (++) Program the desired burst size
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           (++) Define the user Flash Area on which the CRC has be computed
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           (++) Perform the CRC computation
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           (++) Disable CRC feature
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****  @endverbatim
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   ******************************************************************************
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @attention
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * Copyright (c) 2017 STMicroelectronics.
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * All rights reserved.
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * the root directory of this software component.
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   ******************************************************************************
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /* Includes ------------------------------------------------------------------*/
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #include "stm32h7xx_hal.h"
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /** @addtogroup STM32H7xx_HAL_Driver
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @{
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /** @defgroup FLASHEx  FLASHEx
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief FLASH HAL Extension module driver
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @{
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #ifdef HAL_FLASH_MODULE_ENABLED
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /* Private typedef -----------------------------------------------------------*/
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /* Private define ------------------------------------------------------------*/
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Constants
ARM GAS  /tmp/ccggNwMO.s 			page 3


  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @{
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #define FLASH_TIMEOUT_VALUE       50000U /* 50 s */
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @}
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /* Private macro -------------------------------------------------------------*/
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /* Private variables ---------------------------------------------------------*/
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /* Private function prototypes -----------------------------------------------*/
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Functions FLASHEx Private Functions
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @{
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_MassErase(uint32_t VoltageRange, uint32_t Banks);
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_EnableWRP(uint32_t WRPSector, uint32_t Banks);
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_DisableWRP(uint32_t WRPSector, uint32_t Bank);
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_GetWRP(uint32_t *WRPState, uint32_t *WRPSector, uint32_t Bank);
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_RDPConfig(uint32_t RDPLevel);
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static uint32_t FLASH_OB_GetRDP(void);
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_PCROPConfig(uint32_t PCROConfigRDP, uint32_t PCROPStartAddr, uint32_t PCROPEnd
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_GetPCROP(uint32_t *PCROPConfig, uint32_t *PCROPStartAddr,uint32_t *PCROPEndAdd
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_BOR_LevelConfig(uint32_t Level);
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static uint32_t FLASH_OB_GetBOR(void);
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_UserConfig(uint32_t UserType, uint32_t UserConfig);
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static uint32_t FLASH_OB_GetUser(void);
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_BootAddConfig(uint32_t BootOption, uint32_t BootAddress0, uint32_t BootAddress
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_GetBootAdd(uint32_t *BootAddress0, uint32_t *BootAddress1);
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_SecureAreaConfig(uint32_t SecureAreaConfig, uint32_t SecureAreaStartAddr, uint
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_GetSecureArea(uint32_t *SecureAreaConfig, uint32_t *SecureAreaStartAddr, uint3
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_CRC_AddSector(uint32_t Sector, uint32_t Bank);
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_CRC_SelectAddress(uint32_t CRCStartAddr, uint32_t CRCEndAddr, uint32_t Bank);
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_CORE)
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_CM4BootAddConfig(uint32_t BootOption, uint32_t BootAddress0, uint32_t BootAddr
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_GetCM4BootAdd(uint32_t *BootAddress0, uint32_t *BootAddress1);
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /*DUAL_CORE*/
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (FLASH_OTPBL_LOCKBL)
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_OTP_LockConfig(uint32_t OTP_Block);
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static uint32_t FLASH_OB_OTP_GetLock(void);
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_OTPBL_LOCKBL */
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (FLASH_OPTSR2_TCM_AXI_SHARED)
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_SharedRAM_Config(uint32_t SharedRamConfig);
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static uint32_t FLASH_OB_SharedRAM_GetConfig(void);
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_OPTSR2_TCM_AXI_SHARED */
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (FLASH_OPTSR2_CPUFREQ_BOOST)
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_CPUFreq_BoostConfig(uint32_t FreqBoost);
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static uint32_t FLASH_OB_CPUFreq_GetBoost(void);
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_OPTSR2_CPUFREQ_BOOST */
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @}
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /* Exported functions ---------------------------------------------------------*/
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions FLASHEx Exported Functions
ARM GAS  /tmp/ccggNwMO.s 			page 4


 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @{
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group1 Extended IO operation functions
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****  *  @brief   Extended IO operation functions
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****  *
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** @verbatim
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****  ===============================================================================
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                 ##### Extended programming operation functions #####
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****  ===============================================================================
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     [..]
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     This subsection provides a set of functions allowing to manage the Extension FLASH
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     programming operations Operations.
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** @endverbatim
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @{
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory sectors
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param[in]  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param[out]  SectorError pointer to variable  that contains the configuration
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          information on faulty sector in case of error (0xFFFFFFFF means that all
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          the sectors have been correctly erased)
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL Status
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase(FLASH_EraseInitTypeDef *pEraseInit, uint32_t *SectorError)
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t sector_index;
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Check the parameters */
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(pEraseInit->Banks));
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Process Locked */
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Reset error code */
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Wait for last operation to be completed on Bank1 */
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((pEraseInit->Banks & FLASH_BANK_1) == FLASH_BANK_1)
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if(FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_1) != HAL_OK)
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       status = HAL_ERROR;
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Wait for last operation to be completed on Bank2 */
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((pEraseInit->Banks & FLASH_BANK_2) == FLASH_BANK_2)
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if(FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_2) != HAL_OK)
ARM GAS  /tmp/ccggNwMO.s 			page 5


 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       status = HAL_ERROR;
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if(status == HAL_OK)
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if(pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Mass erase to be done */
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH_MassErase(pEraseInit->VoltageRange, pEraseInit->Banks);
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Wait for last operation to be completed on Bank 1 */
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       if((pEraseInit->Banks & FLASH_BANK_1) == FLASH_BANK_1)
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         if(FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_1) != HAL_OK)
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           status = HAL_ERROR;
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         }
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         /* if the erase operation is completed, disable the Bank1 BER Bit */
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         FLASH->CR1 &= (~FLASH_CR_BER);
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Wait for last operation to be completed on Bank 2 */
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       if((pEraseInit->Banks & FLASH_BANK_2) == FLASH_BANK_2)
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         if(FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_2) != HAL_OK)
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           status = HAL_ERROR;
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         }
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         /* if the erase operation is completed, disable the Bank2 BER Bit */
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         FLASH->CR2 &= (~FLASH_CR_BER);
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     else
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /*Initialization of SectorError variable*/
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       *SectorError = 0xFFFFFFFFU;
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Erase by sector by sector to be done*/
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       for(sector_index = pEraseInit->Sector; sector_index < (pEraseInit->NbSectors + pEraseInit->Se
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         FLASH_Erase_Sector(sector_index, pEraseInit->Banks, pEraseInit->VoltageRange);
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         if((pEraseInit->Banks & FLASH_BANK_1) == FLASH_BANK_1)
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           /* Wait for last operation to be completed */
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_1);
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           /* If the erase operation is completed, disable the SER Bit */
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           FLASH->CR1 &= (~(FLASH_CR_SER | FLASH_CR_SNB));
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         }
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         if((pEraseInit->Banks & FLASH_BANK_2) == FLASH_BANK_2)
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
ARM GAS  /tmp/ccggNwMO.s 			page 6


 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           /* Wait for last operation to be completed */
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_2);
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           /* If the erase operation is completed, disable the SER Bit */
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           FLASH->CR2 &= (~(FLASH_CR_SER | FLASH_CR_SNB));
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         }
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         if(status != HAL_OK)
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           /* In case of error, stop erase procedure and return the faulty sector */
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           *SectorError = sector_index;
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           break;
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         }
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Process Unlocked */
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   return status;
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory sectors with interrupt enabled
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL Status
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase_IT(FLASH_EraseInitTypeDef *pEraseInit)
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Check the parameters */
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(pEraseInit->Banks));
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Process Locked */
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Reset error code */
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Wait for last operation to be completed on Bank 1 */
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((pEraseInit->Banks & FLASH_BANK_1) == FLASH_BANK_1)
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if(FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_1) != HAL_OK)
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       status = HAL_ERROR;
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Wait for last operation to be completed on Bank 2 */
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((pEraseInit->Banks & FLASH_BANK_2) == FLASH_BANK_2)
ARM GAS  /tmp/ccggNwMO.s 			page 7


 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if(FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_2) != HAL_OK)
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       status = HAL_ERROR;
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if (status != HAL_OK)
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Process Unlocked */
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     __HAL_UNLOCK(&pFlash);
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   else
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if((pEraseInit->Banks & FLASH_BANK_1) == FLASH_BANK_1)
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Enable End of Operation and Error interrupts for Bank 1 */
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (FLASH_CR_OPERRIE)
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       __HAL_FLASH_ENABLE_IT_BANK1(FLASH_IT_EOP_BANK1     | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_B
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       __HAL_FLASH_ENABLE_IT_BANK1(FLASH_IT_EOP_BANK1     | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1);
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_CR_OPERRIE */
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if((pEraseInit->Banks & FLASH_BANK_2) == FLASH_BANK_2)
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Enable End of Operation and Error interrupts for Bank 2 */
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (FLASH_CR_OPERRIE)
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       __HAL_FLASH_ENABLE_IT_BANK2(FLASH_IT_EOP_BANK2     | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                                   FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2 | FLASH_IT_OPERR_B
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       __HAL_FLASH_ENABLE_IT_BANK2(FLASH_IT_EOP_BANK2     | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                                   FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2);
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_CR_OPERRIE */
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if(pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /*Mass erase to be done*/
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       if(pEraseInit->Banks == FLASH_BANK_1)
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_MASSERASE_BANK1;
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       else if(pEraseInit->Banks == FLASH_BANK_2)
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_MASSERASE_BANK2;
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       else
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_ALLBANK_MASSERASE;
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
ARM GAS  /tmp/ccggNwMO.s 			page 8


 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH_MassErase(pEraseInit->VoltageRange, pEraseInit->Banks);
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     else
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Erase by sector to be done */
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       if(pEraseInit->Banks == FLASH_BANK_1)
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_SECTERASE_BANK1;
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       else
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_SECTERASE_BANK2;
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       pFlash.ProcedureOnGoing = FLASH_PROC_SECTERASE_BANK1;
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       pFlash.NbSectorsToErase = pEraseInit->NbSectors;
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       pFlash.Sector = pEraseInit->Sector;
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       pFlash.VoltageForErase = pEraseInit->VoltageRange;
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Erase first sector and wait for IT */
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH_Erase_Sector(pEraseInit->Sector, pEraseInit->Banks, pEraseInit->VoltageRange);
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   return status;
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Program option bytes
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBProgramInitTypeDef structure that
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL Status
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OBProgram(FLASH_OBProgramInitTypeDef *pOBInit)
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   HAL_StatusTypeDef status;
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Check the parameters */
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_OPTIONBYTE(pOBInit->OptionType));
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Process Locked */
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Reset Error Code */
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if(FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_1) != HAL_OK)
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     status = HAL_ERROR;
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
ARM GAS  /tmp/ccggNwMO.s 			page 9


 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   else if(FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_2) != HAL_OK)
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     status = HAL_ERROR;
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   else
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     status = HAL_OK;
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if(status == HAL_OK)
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /*Write protection configuration*/
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if((pOBInit->OptionType & OPTIONBYTE_WRP) == OPTIONBYTE_WRP)
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       assert_param(IS_WRPSTATE(pOBInit->WRPState));
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       if(pOBInit->WRPState == OB_WRPSTATE_ENABLE)
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         /*Enable of Write protection on the selected Sector*/
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         FLASH_OB_EnableWRP(pOBInit->WRPSector,pOBInit->Banks);
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       else
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         /*Disable of Write protection on the selected Sector*/
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         FLASH_OB_DisableWRP(pOBInit->WRPSector, pOBInit->Banks);
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Read protection configuration */
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if((pOBInit->OptionType & OPTIONBYTE_RDP) != 0U)
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Configure the Read protection level */
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH_OB_RDPConfig(pOBInit->RDPLevel);
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* User Configuration */
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if((pOBInit->OptionType & OPTIONBYTE_USER) != 0U)
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Configure the user option bytes */
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH_OB_UserConfig(pOBInit->USERType, pOBInit->USERConfig);
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* PCROP Configuration */
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if((pOBInit->OptionType & OPTIONBYTE_PCROP) != 0U)
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       assert_param(IS_FLASH_BANK(pOBInit->Banks));
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /*Configure the Proprietary code readout protection */
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH_OB_PCROPConfig(pOBInit->PCROPConfig, pOBInit->PCROPStartAddr, pOBInit->PCROPEndAddr, pO
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* BOR Level configuration */
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if((pOBInit->OptionType & OPTIONBYTE_BOR) == OPTIONBYTE_BOR)
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH_OB_BOR_LevelConfig(pOBInit->BORLevel);
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
ARM GAS  /tmp/ccggNwMO.s 			page 10


 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined(DUAL_CORE)
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* CM7 Boot Address  configuration */
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if((pOBInit->OptionType & OPTIONBYTE_CM7_BOOTADD) == OPTIONBYTE_CM7_BOOTADD)
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH_OB_BootAddConfig(pOBInit->BootConfig, pOBInit->BootAddr0, pOBInit->BootAddr1);
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* CM4 Boot Address  configuration */
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if((pOBInit->OptionType & OPTIONBYTE_CM4_BOOTADD) == OPTIONBYTE_CM4_BOOTADD)
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH_OB_CM4BootAddConfig(pOBInit->CM4BootConfig, pOBInit->CM4BootAddr0, pOBInit->CM4BootAddr
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else /* Single Core*/
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Boot Address  configuration */
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if((pOBInit->OptionType & OPTIONBYTE_BOOTADD) == OPTIONBYTE_BOOTADD)
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH_OB_BootAddConfig(pOBInit->BootConfig, pOBInit->BootAddr0, pOBInit->BootAddr1);
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /*DUAL_CORE*/
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Secure area configuration */
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if((pOBInit->OptionType & OPTIONBYTE_SECURE_AREA) == OPTIONBYTE_SECURE_AREA)
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH_OB_SecureAreaConfig(pOBInit->SecureAreaConfig, pOBInit->SecureAreaStartAddr, pOBInit->S
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined(FLASH_OTPBL_LOCKBL)
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* OTP Block Lock configuration */
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if((pOBInit->OptionType & OPTIONBYTE_OTP_LOCK) == OPTIONBYTE_OTP_LOCK)
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH_OB_OTP_LockConfig(pOBInit->OTPBlockLock);
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_OTPBL_LOCKBL */
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined(FLASH_OPTSR2_TCM_AXI_SHARED)
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* TCM / AXI Shared RAM configuration */
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if((pOBInit->OptionType & OPTIONBYTE_SHARED_RAM) == OPTIONBYTE_SHARED_RAM)
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH_OB_SharedRAM_Config(pOBInit->SharedRamConfig);
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_OPTSR2_TCM_AXI_SHARED */
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined(FLASH_OPTSR2_CPUFREQ_BOOST)
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* CPU Frequency Boost configuration */
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if((pOBInit->OptionType & OPTIONBYTE_FREQ_BOOST) == OPTIONBYTE_FREQ_BOOST)
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH_OB_CPUFreq_BoostConfig(pOBInit->FreqBoostState);
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_OPTSR2_CPUFREQ_BOOST */
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Process Unlocked */
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   return status;
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
ARM GAS  /tmp/ccggNwMO.s 			page 11


 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief Get the Option byte configuration
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBProgramInitTypeDef structure that
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @note   The parameter Banks of the pOBInit structure must be set exclusively to FLASH_BANK_1 or
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         as this parameter is use to get the given Bank WRP, PCROP and secured area configuratio
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval None
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** void HAL_FLASHEx_OBGetConfig(FLASH_OBProgramInitTypeDef *pOBInit)
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   pOBInit->OptionType = (OPTIONBYTE_USER | OPTIONBYTE_RDP | OPTIONBYTE_BOR);
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Get Read protection level */
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   pOBInit->RDPLevel = FLASH_OB_GetRDP();
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Get the user option bytes */
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   pOBInit->USERConfig = FLASH_OB_GetUser();
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /*Get BOR Level*/
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   pOBInit->BORLevel = FLASH_OB_GetBOR();
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if ((pOBInit->Banks == FLASH_BANK_1) || (pOBInit->Banks == FLASH_BANK_2))
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if (pOBInit->Banks == FLASH_BANK_1)
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     pOBInit->OptionType |= (OPTIONBYTE_WRP | OPTIONBYTE_PCROP | OPTIONBYTE_SECURE_AREA);
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Get write protection on the selected area */
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH_OB_GetWRP(&(pOBInit->WRPState), &(pOBInit->WRPSector), pOBInit->Banks);
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Get the Proprietary code readout protection */
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH_OB_GetPCROP(&(pOBInit->PCROPConfig), &(pOBInit->PCROPStartAddr), &(pOBInit->PCROPEndAddr)
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /*Get Bank Secure area*/
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH_OB_GetSecureArea(&(pOBInit->SecureAreaConfig), &(pOBInit->SecureAreaStartAddr), &(pOBInit
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /*Get Boot Address*/
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   FLASH_OB_GetBootAdd(&(pOBInit->BootAddr0), &(pOBInit->BootAddr1));
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined(DUAL_CORE)
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   pOBInit->OptionType |= OPTIONBYTE_CM7_BOOTADD | OPTIONBYTE_CM4_BOOTADD;
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /*Get CM4 Boot Address*/
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   FLASH_OB_GetCM4BootAdd(&(pOBInit->CM4BootAddr0), &(pOBInit->CM4BootAddr1));
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   pOBInit->OptionType |= OPTIONBYTE_BOOTADD;
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /*DUAL_CORE*/
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (FLASH_OTPBL_LOCKBL)
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   pOBInit->OptionType |= OPTIONBYTE_OTP_LOCK;
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Get OTP Block Lock */
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   pOBInit->OTPBlockLock = FLASH_OB_OTP_GetLock();
ARM GAS  /tmp/ccggNwMO.s 			page 12


 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_OTPBL_LOCKBL */
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (FLASH_OPTSR2_TCM_AXI_SHARED)
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   pOBInit->OptionType |= OPTIONBYTE_SHARED_RAM;
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Get TCM / AXI Shared RAM */
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   pOBInit->SharedRamConfig = FLASH_OB_SharedRAM_GetConfig();
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_OPTSR2_TCM_AXI_SHARED */
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (FLASH_OPTSR2_CPUFREQ_BOOST)
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   pOBInit->OptionType |= OPTIONBYTE_FREQ_BOOST;
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Get CPU Frequency Boost */
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   pOBInit->FreqBoostState = FLASH_OB_CPUFreq_GetBoost();
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_OPTSR2_CPUFREQ_BOOST */
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Unlock the FLASH Bank1 control registers access
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL Status
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Unlock_Bank1(void)
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if(READ_BIT(FLASH->CR1, FLASH_CR_LOCK) != 0U)
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Authorize the FLASH Bank1 Registers access */
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     WRITE_REG(FLASH->KEYR1, FLASH_KEY1);
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     WRITE_REG(FLASH->KEYR1, FLASH_KEY2);
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Verify Flash Bank1 is unlocked */
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if (READ_BIT(FLASH->CR1, FLASH_CR_LOCK) != 0U)
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       return HAL_ERROR;
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   return HAL_OK;
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Locks the FLASH Bank1 control registers access
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL Status
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Lock_Bank1(void)
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Set the LOCK Bit to lock the FLASH Bank1 Registers access */
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   SET_BIT(FLASH->CR1, FLASH_CR_LOCK);
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   return HAL_OK;
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Unlock the FLASH Bank2 control registers access
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL Status
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Unlock_Bank2(void)
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
ARM GAS  /tmp/ccggNwMO.s 			page 13


 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if(READ_BIT(FLASH->CR2, FLASH_CR_LOCK) != 0U)
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Authorize the FLASH Bank2 Registers access */
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     WRITE_REG(FLASH->KEYR2, FLASH_KEY1);
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     WRITE_REG(FLASH->KEYR2, FLASH_KEY2);
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Verify Flash Bank1 is unlocked */
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if (READ_BIT(FLASH->CR2, FLASH_CR_LOCK) != 0U)
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       return HAL_ERROR;
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   return HAL_OK;
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Locks the FLASH Bank2 control registers access
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL Status
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Lock_Bank2(void)
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Set the LOCK Bit to lock the FLASH Bank2 Registers access */
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   SET_BIT(FLASH->CR2, FLASH_CR_LOCK);
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   return HAL_OK;
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /*
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Perform a CRC computation on the specified FLASH memory area
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  pCRCInit pointer to an FLASH_CRCInitTypeDef structure that
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         contains the configuration information for the CRC computation.
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @note   CRC computation uses CRC-32 (Ethernet) polynomial 0x4C11DB7
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @note   The application should avoid running a CRC on PCROP or secure-only
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         user Flash memory area since it may alter the expected CRC value.
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         A special error flag (CRC read error: CRCRDERR) can be used to
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         detect such a case.
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL Status
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** */
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_ComputeCRC(FLASH_CRCInitTypeDef *pCRCInit, uint32_t *CRC_Result)
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   HAL_StatusTypeDef status;
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t sector_index;
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Check the parameters */
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK_EXCLUSIVE(pCRCInit->Bank));
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPECRC(pCRCInit->TypeCRC));
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Wait for OB change operation to be completed */
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   status = FLASH_OB_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if (status == HAL_OK)
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if (pCRCInit->Bank == FLASH_BANK_1)
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Enable CRC feature */
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH->CR1 |= FLASH_CR_CRC_EN;
ARM GAS  /tmp/ccggNwMO.s 			page 14


 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Clear CRC flags in Status Register: CRC end of calculation and CRC read error */
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH->CCR1 |= (FLASH_CCR_CLR_CRCEND | FLASH_CCR_CLR_CRCRDERR);
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Clear current CRC result, program burst size and define memory area on which CRC has to be
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH->CRCCR1 |= FLASH_CRCCR_CLEAN_CRC | pCRCInit->BurstSize | pCRCInit->TypeCRC;
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       if (pCRCInit->TypeCRC == FLASH_CRC_SECTORS)
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         /* Clear sectors list */
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         FLASH->CRCCR1 |= FLASH_CRCCR_CLEAN_SECT;
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         /* Select CRC sectors */
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         for(sector_index = pCRCInit->Sector; sector_index < (pCRCInit->NbSectors + pCRCInit->Sector
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           FLASH_CRC_AddSector(sector_index, FLASH_BANK_1);
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         }
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       else if (pCRCInit->TypeCRC == FLASH_CRC_BANK)
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         /* Enable Bank 1 CRC select bit */
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         FLASH->CRCCR1 |= FLASH_CRCCR_ALL_BANK;
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       else
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         /* Select CRC start and end addresses */
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         FLASH_CRC_SelectAddress(pCRCInit->CRCStartAddr, pCRCInit->CRCEndAddr, FLASH_BANK_1);
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Start the CRC calculation */
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH->CRCCR1 |= FLASH_CRCCR_START_CRC;
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Wait on CRC busy flag */
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       status = FLASH_CRC_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_1);
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Return CRC result */
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       (*CRC_Result) = FLASH->CRCDATA;
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Disable CRC feature */
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH->CR1 &= (~FLASH_CR_CRC_EN);
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Clear CRC flags */
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_CRCEND_BANK1 | FLASH_FLAG_CRCRDERR_BANK1);
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     else
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Enable CRC feature */
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH->CR2 |= FLASH_CR_CRC_EN;
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Clear CRC flags in Status Register: CRC end of calculation and CRC read error */
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH->CCR2 |= (FLASH_CCR_CLR_CRCEND | FLASH_CCR_CLR_CRCRDERR);
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Clear current CRC result, program burst size and define memory area on which CRC has to be
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH->CRCCR2 |= FLASH_CRCCR_CLEAN_CRC | pCRCInit->BurstSize | pCRCInit->TypeCRC;
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       if (pCRCInit->TypeCRC == FLASH_CRC_SECTORS)
ARM GAS  /tmp/ccggNwMO.s 			page 15


 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         /* Clear sectors list */
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         FLASH->CRCCR2 |= FLASH_CRCCR_CLEAN_SECT;
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         /* Add CRC sectors */
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         for(sector_index = pCRCInit->Sector; sector_index < (pCRCInit->NbSectors + pCRCInit->Sector
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           FLASH_CRC_AddSector(sector_index, FLASH_BANK_2);
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         }
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       else if (pCRCInit->TypeCRC == FLASH_CRC_BANK)
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         /* Enable Bank 2 CRC select bit */
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         FLASH->CRCCR2 |= FLASH_CRCCR_ALL_BANK;
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       else
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         /* Select CRC start and end addresses */
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         FLASH_CRC_SelectAddress(pCRCInit->CRCStartAddr, pCRCInit->CRCEndAddr, FLASH_BANK_2);
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Start the CRC calculation */
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH->CRCCR2 |= FLASH_CRCCR_START_CRC;
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Wait on CRC busy flag */
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       status = FLASH_CRC_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_2);
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Return CRC result */
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       (*CRC_Result) = FLASH->CRCDATA;
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Disable CRC feature */
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH->CR2 &= (~FLASH_CR_CRC_EN);
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Clear CRC flags */
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_CRCEND_BANK2 | FLASH_FLAG_CRCRDERR_BANK2);
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   return status;
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @}
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @}
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /* Private functions ---------------------------------------------------------*/
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Functions
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @{
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
ARM GAS  /tmp/ccggNwMO.s 			page 16


 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Mass erase of FLASH memory
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  VoltageRange The device program/erase parallelism.
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_1 : Flash program/erase by 8 bits
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_2 : Flash program/erase by 16 bits
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_3 : Flash program/erase by 32 bits
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_4 : Flash program/erase by 64 bits
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  Banks Banks to be erased
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: Bank1 to be erased
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: Bank2 to be erased
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: Bank1 and Bank2 to be erased
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL Status
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_MassErase(uint32_t VoltageRange, uint32_t Banks)
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
  26              		.loc 1 849 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Check the parameters */
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (FLASH_CR_PSIZE)
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   UNUSED(VoltageRange);
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_CR_PSIZE */
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Flash Mass Erase */
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((Banks & FLASH_BANK_BOTH) == FLASH_BANK_BOTH)
  32              		.loc 1 860 0
  33 0000 01F00303 		and	r3, r1, #3
  34 0004 032B     		cmp	r3, #3
  35 0006 24D0     		beq	.L5
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (FLASH_CR_PSIZE)
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Reset Program/erase VoltageRange for Bank1 and Bank2 */
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CR1 &= (~FLASH_CR_PSIZE);
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CR2 &= (~FLASH_CR_PSIZE);
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Set voltage range */
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CR1 |= VoltageRange;
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CR2 |= VoltageRange;
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_CR_PSIZE */
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Set Mass Erase Bit */
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->OPTCR |= FLASH_OPTCR_MER;
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   else
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Proceed to erase Flash Bank  */
ARM GAS  /tmp/ccggNwMO.s 			page 17


 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if((Banks & FLASH_BANK_1) == FLASH_BANK_1)
  36              		.loc 1 879 0
  37 0008 11F0010F 		tst	r1, #1
  38 000c 0BD0     		beq	.L4
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (FLASH_CR_PSIZE)
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Set Program/erase VoltageRange for Bank1 */
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH->CR1 &= (~FLASH_CR_PSIZE);
  39              		.loc 1 883 0
  40 000e 1D4B     		ldr	r3, .L6
  41 0010 DA68     		ldr	r2, [r3, #12]
  42 0012 22F03002 		bic	r2, r2, #48
  43 0016 DA60     		str	r2, [r3, #12]
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH->CR1 |=  VoltageRange;
  44              		.loc 1 884 0
  45 0018 DA68     		ldr	r2, [r3, #12]
  46 001a 0243     		orrs	r2, r2, r0
  47 001c DA60     		str	r2, [r3, #12]
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_CR_PSIZE */
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Erase Bank1 */
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH->CR1 |= (FLASH_CR_BER | FLASH_CR_START);
  48              		.loc 1 888 0
  49 001e DA68     		ldr	r2, [r3, #12]
  50 0020 42F08802 		orr	r2, r2, #136
  51 0024 DA60     		str	r2, [r3, #12]
  52              	.L4:
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     if((Banks & FLASH_BANK_2) == FLASH_BANK_2)
  53              		.loc 1 892 0
  54 0026 11F0020F 		tst	r1, #2
  55 002a 11D0     		beq	.L1
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (FLASH_CR_PSIZE)
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Set Program/erase VoltageRange for Bank2 */
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH->CR2 &= (~FLASH_CR_PSIZE);
  56              		.loc 1 896 0
  57 002c 154B     		ldr	r3, .L6
  58 002e D3F80C21 		ldr	r2, [r3, #268]
  59 0032 22F03002 		bic	r2, r2, #48
  60 0036 C3F80C21 		str	r2, [r3, #268]
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH->CR2 |= VoltageRange;
  61              		.loc 1 897 0
  62 003a D3F80C21 		ldr	r2, [r3, #268]
  63 003e 1043     		orrs	r0, r0, r2
  64              	.LVL1:
  65 0040 C3F80C01 		str	r0, [r3, #268]
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_CR_PSIZE */
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       /* Erase Bank2 */
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       FLASH->CR2 |= (FLASH_CR_BER | FLASH_CR_START);
  66              		.loc 1 901 0
  67 0044 D3F80C21 		ldr	r2, [r3, #268]
  68 0048 42F08802 		orr	r2, r2, #136
  69 004c C3F80C21 		str	r2, [r3, #268]
ARM GAS  /tmp/ccggNwMO.s 			page 18


  70              	.L1:
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
  71              		.loc 1 905 0
  72 0050 7047     		bx	lr
  73              	.LVL2:
  74              	.L5:
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CR2 &= (~FLASH_CR_PSIZE);
  75              		.loc 1 864 0
  76 0052 0C4B     		ldr	r3, .L6
  77 0054 DA68     		ldr	r2, [r3, #12]
  78 0056 22F03002 		bic	r2, r2, #48
  79 005a DA60     		str	r2, [r3, #12]
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
  80              		.loc 1 865 0
  81 005c D3F80C21 		ldr	r2, [r3, #268]
  82 0060 22F03002 		bic	r2, r2, #48
  83 0064 C3F80C21 		str	r2, [r3, #268]
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CR2 |= VoltageRange;
  84              		.loc 1 868 0
  85 0068 DA68     		ldr	r2, [r3, #12]
  86 006a 0243     		orrs	r2, r2, r0
  87 006c DA60     		str	r2, [r3, #12]
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_CR_PSIZE */
  88              		.loc 1 869 0
  89 006e D3F80C21 		ldr	r2, [r3, #268]
  90 0072 1043     		orrs	r0, r0, r2
  91              	.LVL3:
  92 0074 C3F80C01 		str	r0, [r3, #268]
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
  93              		.loc 1 873 0
  94 0078 9A69     		ldr	r2, [r3, #24]
  95 007a 42F01002 		orr	r2, r2, #16
  96 007e 9A61     		str	r2, [r3, #24]
  97 0080 7047     		bx	lr
  98              	.L7:
  99 0082 00BF     		.align	2
 100              	.L6:
 101 0084 00200052 		.word	1375739904
 102              		.cfi_endproc
 103              	.LFE153:
 105              		.section	.text.FLASH_OB_EnableWRP,"ax",%progbits
 106              		.align	1
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 110              		.fpu fpv5-d16
 112              	FLASH_OB_EnableWRP:
 113              	.LFB155:
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Erase the specified FLASH memory sector
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  Sector FLASH sector to erase
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be a value of @ref FLASH_Sectors
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  Banks Banks to be erased
ARM GAS  /tmp/ccggNwMO.s 			page 19


 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: Bank1 to be erased
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: Bank2 to be erased
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: Bank1 and Bank2 to be erased
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  VoltageRange The device program/erase parallelism.
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_1 : Flash program/erase by 8 bits
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_2 : Flash program/erase by 16 bits
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_3 : Flash program/erase by 32 bits
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_4 : Flash program/erase by 64 bits
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval None
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** void FLASH_Erase_Sector(uint32_t Sector, uint32_t Banks, uint32_t VoltageRange)
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_FLASH_SECTOR(Sector));
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK_EXCLUSIVE(Banks));
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (FLASH_CR_PSIZE)
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   UNUSED(VoltageRange);
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_CR_PSIZE */
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((Banks & FLASH_BANK_1) == FLASH_BANK_1)
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (FLASH_CR_PSIZE)
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Reset Program/erase VoltageRange and Sector Number for Bank1 */
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CR1 &= ~(FLASH_CR_PSIZE | FLASH_CR_SNB);
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CR1 |= (FLASH_CR_SER | VoltageRange | (Sector << FLASH_CR_SNB_Pos) | FLASH_CR_START);
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Reset Sector Number for Bank1 */
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CR1 &= ~(FLASH_CR_SNB);
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CR1 |= (FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos) | FLASH_CR_START);
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_CR_PSIZE */
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((Banks & FLASH_BANK_2) == FLASH_BANK_2)
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (FLASH_CR_PSIZE)
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Reset Program/erase VoltageRange and Sector Number for Bank2 */
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CR2 &= ~(FLASH_CR_PSIZE | FLASH_CR_SNB);
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CR2 |= (FLASH_CR_SER | VoltageRange  | (Sector << FLASH_CR_SNB_Pos) | FLASH_CR_START);
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Reset Sector Number for Bank2 */
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CR2 &= ~(FLASH_CR_SNB);
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CR2 |= (FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos) | FLASH_CR_START);
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_CR_PSIZE */
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
ARM GAS  /tmp/ccggNwMO.s 			page 20


 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Enable the write protection of the desired bank1 or bank 2 sectors
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  WRPSector specifies the sector(s) to be write protected.
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg WRPSector:  A combination of OB_WRP_SECTOR_0 to OB_WRP_SECTOR_7 or OB_WRP_SECTO
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  Banks the specific bank to apply WRP sectors
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: enable WRP on specified bank1 sectors
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: enable WRP on specified bank2 sectors
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: enable WRP on both bank1 and bank2 specified sectors
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL FLASH State
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_EnableWRP(uint32_t WRPSector, uint32_t Banks)
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 114              		.loc 1 983 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              		@ link register save eliminated.
 119              	.LVL4:
 120 0000 10B4     		push	{r4}
 121              	.LCFI0:
 122              		.cfi_def_cfa_offset 4
 123              		.cfi_offset 4, -4
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Check the parameters */
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP_SECTOR(WRPSector));
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((Banks & FLASH_BANK_1) == FLASH_BANK_1)
 124              		.loc 1 988 0
 125 0002 11F0010F 		tst	r1, #1
 126 0006 05D0     		beq	.L9
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Enable Write Protection for bank 1 */
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->WPSN_PRG1 &= (~(WRPSector & FLASH_WPSN_WRPSN));
 127              		.loc 1 991 0
 128 0008 094A     		ldr	r2, .L12
 129 000a D36B     		ldr	r3, [r2, #60]
 130 000c C4B2     		uxtb	r4, r0
 131 000e 23EA0403 		bic	r3, r3, r4
 132 0012 D363     		str	r3, [r2, #60]
 133              	.L9:
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((Banks & FLASH_BANK_2) == FLASH_BANK_2)
 134              		.loc 1 995 0
 135 0014 11F0020F 		tst	r1, #2
 136 0018 07D0     		beq	.L8
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Enable Write Protection for bank 2 */
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->WPSN_PRG2 &= (~(WRPSector & FLASH_WPSN_WRPSN));
 137              		.loc 1 998 0
 138 001a 054A     		ldr	r2, .L12
 139 001c D2F83C31 		ldr	r3, [r2, #316]
 140 0020 C0B2     		uxtb	r0, r0
ARM GAS  /tmp/ccggNwMO.s 			page 21


 141              	.LVL5:
 142 0022 23EA0000 		bic	r0, r3, r0
 143 0026 C2F83C01 		str	r0, [r2, #316]
 144              	.L8:
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 145              		.loc 1 1001 0
 146 002a 5DF8044B 		ldr	r4, [sp], #4
 147              	.LCFI1:
 148              		.cfi_restore 4
 149              		.cfi_def_cfa_offset 0
 150 002e 7047     		bx	lr
 151              	.L13:
 152              		.align	2
 153              	.L12:
 154 0030 00200052 		.word	1375739904
 155              		.cfi_endproc
 156              	.LFE155:
 158              		.section	.text.FLASH_OB_DisableWRP,"ax",%progbits
 159              		.align	1
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv5-d16
 165              	FLASH_OB_DisableWRP:
 166              	.LFB156:
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Disable the write protection of the desired bank1 or bank 2 sectors
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  WRPSector specifies the sector(s) to disable write protection.
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg WRPSector:  A combination of FLASH_OB_WRP_SECTOR_0 to FLASH_OB_WRP_SECTOR_7 or 
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  Banks the specific bank to apply WRP sectors
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: disable WRP on specified bank1 sectors
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: disable WRP on specified bank2 sectors
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: disable WRP on both bank1 and bank2 specified sectors
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL FLASH State
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_DisableWRP(uint32_t WRPSector, uint32_t Banks)
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 167              		.loc 1 1018 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL6:
 173 0000 10B4     		push	{r4}
 174              	.LCFI2:
 175              		.cfi_def_cfa_offset 4
 176              		.cfi_offset 4, -4
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Check the parameters */
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP_SECTOR(WRPSector));
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
ARM GAS  /tmp/ccggNwMO.s 			page 22


1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((Banks & FLASH_BANK_1) == FLASH_BANK_1)
 177              		.loc 1 1023 0
 178 0002 11F0010F 		tst	r1, #1
 179 0006 04D0     		beq	.L15
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Disable Write Protection for bank 1 */
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->WPSN_PRG1 |= (WRPSector & FLASH_WPSN_WRPSN);
 180              		.loc 1 1026 0
 181 0008 084A     		ldr	r2, .L18
 182 000a D36B     		ldr	r3, [r2, #60]
 183 000c C4B2     		uxtb	r4, r0
 184 000e 2343     		orrs	r3, r3, r4
 185 0010 D363     		str	r3, [r2, #60]
 186              	.L15:
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((Banks & FLASH_BANK_2) == FLASH_BANK_2)
 187              		.loc 1 1030 0
 188 0012 11F0020F 		tst	r1, #2
 189 0016 06D0     		beq	.L14
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Disable Write Protection for bank 2 */
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->WPSN_PRG2 |= (WRPSector & FLASH_WPSN_WRPSN);
 190              		.loc 1 1033 0
 191 0018 044A     		ldr	r2, .L18
 192 001a D2F83C31 		ldr	r3, [r2, #316]
 193 001e C0B2     		uxtb	r0, r0
 194              	.LVL7:
 195 0020 1843     		orrs	r0, r0, r3
 196 0022 C2F83C01 		str	r0, [r2, #316]
 197              	.L14:
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 198              		.loc 1 1036 0
 199 0026 5DF8044B 		ldr	r4, [sp], #4
 200              	.LCFI3:
 201              		.cfi_restore 4
 202              		.cfi_def_cfa_offset 0
 203 002a 7047     		bx	lr
 204              	.L19:
 205              		.align	2
 206              	.L18:
 207 002c 00200052 		.word	1375739904
 208              		.cfi_endproc
 209              	.LFE156:
 211              		.section	.text.FLASH_OB_GetWRP,"ax",%progbits
 212              		.align	1
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv5-d16
 218              	FLASH_OB_GetWRP:
 219              	.LFB157:
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
ARM GAS  /tmp/ccggNwMO.s 			page 23


1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Get the write protection of the given bank 1 or bank 2 sectors
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  WRPState gives the write protection state on the given bank.
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          @arg WRPState: OB_WRPSTATE_DISABLE or OB_WRPSTATE_ENABLE
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  WRPSector gives the write protected sector(s) on the given bank .
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          @arg WRPSector: A combination of FLASH_OB_WRP_SECTOR_0 to FLASH_OB_WRP_SECTOR_7 or FLA
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  Bank the specific bank to apply WRP sectors
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be exclusively one of the following values:
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: Get bank1 WRP sectors
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: Get bank2 WRP sectors
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: note allowed in this functions
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL FLASH State
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_GetWRP(uint32_t *WRPState, uint32_t *WRPSector, uint32_t Bank)
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 220              		.loc 1 1057 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 225              	.LVL8:
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t regvalue = 0U;
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if(Bank == FLASH_BANK_1)
 226              		.loc 1 1060 0
 227 0000 012A     		cmp	r2, #1
 228 0002 09D0     		beq	.L26
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t regvalue = 0U;
 229              		.loc 1 1058 0
 230 0004 0023     		movs	r3, #0
 231              	.LVL9:
 232              	.L21:
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     regvalue = FLASH->WPSN_CUR1;
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if(Bank == FLASH_BANK_2)
 233              		.loc 1 1066 0
 234 0006 022A     		cmp	r2, #2
 235 0008 09D0     		beq	.L27
 236              	.L22:
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     regvalue = FLASH->WPSN_CUR2;
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   (*WRPSector) = (~regvalue) & FLASH_WPSN_WRPSN;
 237              		.loc 1 1072 0
 238 000a DB43     		mvns	r3, r3
 239              	.LVL10:
 240 000c DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccggNwMO.s 			page 24


 241              	.LVL11:
 242 000e 0B60     		str	r3, [r1]
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if(*WRPSector == 0U)
 243              		.loc 1 1074 0
 244 0010 4BB1     		cbz	r3, .L28
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     (*WRPState) = OB_WRPSTATE_DISABLE;
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   else
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     (*WRPState) = OB_WRPSTATE_ENABLE;
 245              		.loc 1 1080 0
 246 0012 0123     		movs	r3, #1
 247 0014 0360     		str	r3, [r0]
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 248              		.loc 1 1082 0
 249 0016 7047     		bx	lr
 250              	.LVL12:
 251              	.L26:
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 252              		.loc 1 1062 0
 253 0018 044B     		ldr	r3, .L29
 254 001a 9B6B     		ldr	r3, [r3, #56]
 255              	.LVL13:
 256 001c F3E7     		b	.L21
 257              	.L27:
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 258              		.loc 1 1068 0
 259 001e 034B     		ldr	r3, .L29
 260              	.LVL14:
 261 0020 D3F83831 		ldr	r3, [r3, #312]
 262              	.LVL15:
 263 0024 F1E7     		b	.L22
 264              	.LVL16:
 265              	.L28:
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 266              		.loc 1 1076 0
 267 0026 0360     		str	r3, [r0]
 268 0028 7047     		bx	lr
 269              	.L30:
 270 002a 00BF     		.align	2
 271              	.L29:
 272 002c 00200052 		.word	1375739904
 273              		.cfi_endproc
 274              	.LFE157:
 276              		.section	.text.FLASH_OB_RDPConfig,"ax",%progbits
 277              		.align	1
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 281              		.fpu fpv5-d16
 283              	FLASH_OB_RDPConfig:
 284              	.LFB158:
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
ARM GAS  /tmp/ccggNwMO.s 			page 25


1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Set the read protection level.
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @note   To configure the RDP level, the option lock bit OPTLOCK must be
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         cleared with the call of the HAL_FLASH_OB_Unlock() function.
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @note   To validate the RDP level, the option bytes must be reloaded
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         through the call of the HAL_FLASH_OB_Launch() function.
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @note   !!! Warning : When enabling OB_RDP level 2 it's no more possible
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         to go back to level 1 or 0 !!!
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  RDPLevel specifies the read protection level.
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         This parameter can be one of the following values:
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_0: No protection
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_1: Read protection of the memory
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_2: Full chip protection
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL status
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_RDPConfig(uint32_t RDPLevel)
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 285              		.loc 1 1103 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 290              	.LVL17:
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Check the parameters */
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_OB_RDP_LEVEL(RDPLevel));
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Configure the RDP level in the option bytes register */
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   MODIFY_REG(FLASH->OPTSR_PRG, FLASH_OPTSR_RDP, RDPLevel);
 291              		.loc 1 1108 0
 292 0000 034A     		ldr	r2, .L32
 293 0002 136A     		ldr	r3, [r2, #32]
 294 0004 23F47F43 		bic	r3, r3, #65280
 295 0008 1843     		orrs	r0, r0, r3
 296              	.LVL18:
 297 000a 1062     		str	r0, [r2, #32]
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 298              		.loc 1 1109 0
 299 000c 7047     		bx	lr
 300              	.L33:
 301 000e 00BF     		.align	2
 302              	.L32:
 303 0010 00200052 		.word	1375739904
 304              		.cfi_endproc
 305              	.LFE158:
 307              		.section	.text.FLASH_OB_GetRDP,"ax",%progbits
 308              		.align	1
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 312              		.fpu fpv5-d16
 314              	FLASH_OB_GetRDP:
 315              	.LFB159:
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Get the read protection level.
ARM GAS  /tmp/ccggNwMO.s 			page 26


1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval RDPLevel specifies the read protection level.
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         This return value can be one of the following values:
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_0: No protection
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_1: Read protection of the memory
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_2: Full chip protection
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static uint32_t FLASH_OB_GetRDP(void)
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 316              		.loc 1 1120 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              		@ link register save eliminated.
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t rdp_level = READ_BIT(FLASH->OPTSR_CUR, FLASH_OPTSR_RDP);
 321              		.loc 1 1121 0
 322 0000 064B     		ldr	r3, .L37
 323 0002 D869     		ldr	r0, [r3, #28]
 324 0004 00F47F40 		and	r0, r0, #65280
 325              	.LVL19:
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if ((rdp_level != OB_RDP_LEVEL_0) && (rdp_level != OB_RDP_LEVEL_2))
 326              		.loc 1 1123 0
 327 0008 B0F52A4F 		cmp	r0, #43520
 328 000c 18BF     		it	ne
 329 000e B0F54C4F 		cmpne	r0, #52224
 330 0012 00D1     		bne	.L36
 331              	.LVL20:
 332              	.L34:
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     return (OB_RDP_LEVEL_1);
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   else
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     return rdp_level;
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 333              		.loc 1 1131 0
 334 0014 7047     		bx	lr
 335              	.LVL21:
 336              	.L36:
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 337              		.loc 1 1125 0
 338 0016 4FF4AA40 		mov	r0, #21760
 339              	.LVL22:
 340 001a FBE7     		b	.L34
 341              	.L38:
 342              		.align	2
 343              	.L37:
 344 001c 00200052 		.word	1375739904
 345              		.cfi_endproc
 346              	.LFE159:
 348              		.section	.text.FLASH_OB_UserConfig,"ax",%progbits
 349              		.align	1
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 353              		.fpu fpv5-d16
ARM GAS  /tmp/ccggNwMO.s 			page 27


 355              	FLASH_OB_UserConfig:
 356              	.LFB160:
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined(DUAL_CORE)
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Program the FLASH User Option Byte.
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @note   To configure the user option bytes, the option lock bit OPTLOCK must
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         be cleared with the call of the HAL_FLASH_OB_Unlock() function.
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @note   To validate the user option bytes, the option bytes must be reloaded
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         through the call of the HAL_FLASH_OB_Launch() function.
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  UserType The FLASH User Option Bytes to be modified :
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *                   a combination of @ref FLASHEx_OB_USER_Type
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  UserConfig The FLASH User Option Bytes values:
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         IWDG1_SW(Bit4), IWDG2_SW(Bit 5), nRST_STOP_D1(Bit 6), nRST_STDY_D1(Bit 7),
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         FZ_IWDG_STOP(Bit 17), FZ_IWDG_SDBY(Bit 18), ST_RAM_SIZE(Bit[19:20]),
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         SECURITY(Bit 21), BCM4(Bit 22), BCM7(Bit 23), nRST_STOP_D2(Bit 24),
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         nRST_STDY_D2(Bit 25), IO_HSLV (Bit 29) and SWAP_BANK_OPT(Bit 31).
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL status
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Program the FLASH User Option Byte.
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @note   To configure the user option bytes, the option lock bit OPTLOCK must
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         be cleared with the call of the HAL_FLASH_OB_Unlock() function.
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @note   To validate the user option bytes, the option bytes must be reloaded
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         through the call of the HAL_FLASH_OB_Launch() function.
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  UserType The FLASH User Option Bytes to be modified :
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *                   a combination of @arg FLASHEx_OB_USER_Type
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  UserConfig The FLASH User Option Bytes values:
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         IWDG_SW(Bit4), nRST_STOP_D1(Bit 6), nRST_STDY_D1(Bit 7),
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         FZ_IWDG_STOP(Bit 17), FZ_IWDG_SDBY(Bit 18), ST_RAM_SIZE(Bit[19:20]),
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         SECURITY(Bit 21), IO_HSLV (Bit 29) and SWAP_BANK_OPT(Bit 31).
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL status
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /*DUAL_CORE*/
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_UserConfig(uint32_t UserType, uint32_t UserConfig)
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 357              		.loc 1 1176 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 362              	.LVL23:
 363 0000 10B4     		push	{r4}
 364              	.LCFI4:
 365              		.cfi_def_cfa_offset 4
 366              		.cfi_offset 4, -4
ARM GAS  /tmp/ccggNwMO.s 			page 28


 367              	.LVL24:
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t optr_reg_val = 0;
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t optr_reg_mask = 0;
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Check the parameters */
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_OB_USER_TYPE(UserType));
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((UserType & OB_USER_IWDG1_SW) != 0U)
 368              		.loc 1 1183 0
 369 0002 10F0010F 		tst	r0, #1
 370 0006 4BD0     		beq	.L49
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* IWDG_HW option byte should be modified */
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_OB_IWDG1_SOURCE(UserConfig & FLASH_OPTSR_IWDG1_SW));
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Set value and mask for IWDG_HW option byte */
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_val |= (UserConfig & FLASH_OPTSR_IWDG1_SW);
 371              		.loc 1 1189 0
 372 0008 01F01002 		and	r2, r1, #16
 373              	.LVL25:
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_mask |= FLASH_OPTSR_IWDG1_SW;
 374              		.loc 1 1190 0
 375 000c 1023     		movs	r3, #16
 376              	.LVL26:
 377              	.L40:
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined(DUAL_CORE)
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((UserType & OB_USER_IWDG2_SW) != 0U)
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* IWDG2_SW option byte should be modified */
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_OB_IWDG2_SOURCE(UserConfig & FLASH_OPTSR_IWDG2_SW));
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Set value and mask for IWDG2_SW option byte */
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_val |= (UserConfig & FLASH_OPTSR_IWDG2_SW);
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_mask |= FLASH_OPTSR_IWDG2_SW;
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /*DUAL_CORE*/
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((UserType & OB_USER_NRST_STOP_D1) != 0U)
 378              		.loc 1 1203 0
 379 000e 10F0020F 		tst	r0, #2
 380 0012 04D0     		beq	.L41
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* NRST_STOP option byte should be modified */
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_OB_STOP_D1_RESET(UserConfig & FLASH_OPTSR_NRST_STOP_D1));
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Set value and mask for NRST_STOP option byte */
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_val |= (UserConfig & FLASH_OPTSR_NRST_STOP_D1);
 381              		.loc 1 1209 0
 382 0014 01F04004 		and	r4, r1, #64
 383 0018 2243     		orrs	r2, r2, r4
 384              	.LVL27:
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_mask |= FLASH_OPTSR_NRST_STOP_D1;
 385              		.loc 1 1210 0
 386 001a 43F04003 		orr	r3, r3, #64
 387              	.LVL28:
 388              	.L41:
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
ARM GAS  /tmp/ccggNwMO.s 			page 29


1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((UserType & OB_USER_NRST_STDBY_D1) != 0U)
 389              		.loc 1 1213 0
 390 001e 10F0040F 		tst	r0, #4
 391 0022 04D0     		beq	.L42
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* NRST_STDBY option byte should be modified */
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_OB_STDBY_D1_RESET(UserConfig & FLASH_OPTSR_NRST_STBY_D1));
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Set value and mask for NRST_STDBY option byte */
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_val |= (UserConfig & FLASH_OPTSR_NRST_STBY_D1);
 392              		.loc 1 1219 0
 393 0024 01F08004 		and	r4, r1, #128
 394 0028 2243     		orrs	r2, r2, r4
 395              	.LVL29:
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_mask |= FLASH_OPTSR_NRST_STBY_D1;
 396              		.loc 1 1220 0
 397 002a 43F08003 		orr	r3, r3, #128
 398              	.LVL30:
 399              	.L42:
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((UserType & OB_USER_IWDG_STOP) != 0U)
 400              		.loc 1 1223 0
 401 002e 10F0080F 		tst	r0, #8
 402 0032 04D0     		beq	.L43
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* IWDG_STOP option byte should be modified */
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_OB_USER_IWDG_STOP(UserConfig & FLASH_OPTSR_FZ_IWDG_STOP));
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Set value and mask for IWDG_STOP option byte */
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_val |= (UserConfig & FLASH_OPTSR_FZ_IWDG_STOP);
 403              		.loc 1 1229 0
 404 0034 01F40034 		and	r4, r1, #131072
 405 0038 2243     		orrs	r2, r2, r4
 406              	.LVL31:
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_mask |= FLASH_OPTSR_FZ_IWDG_STOP;
 407              		.loc 1 1230 0
 408 003a 43F40033 		orr	r3, r3, #131072
 409              	.LVL32:
 410              	.L43:
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((UserType & OB_USER_IWDG_STDBY) != 0U)
 411              		.loc 1 1233 0
 412 003e 10F0100F 		tst	r0, #16
 413 0042 04D0     		beq	.L44
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* IWDG_STDBY option byte should be modified */
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_OB_USER_IWDG_STDBY(UserConfig & FLASH_OPTSR_FZ_IWDG_SDBY));
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Set value and mask for IWDG_STDBY option byte */
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_val |= (UserConfig & FLASH_OPTSR_FZ_IWDG_SDBY);
 414              		.loc 1 1239 0
 415 0044 01F48024 		and	r4, r1, #262144
 416 0048 2243     		orrs	r2, r2, r4
 417              	.LVL33:
ARM GAS  /tmp/ccggNwMO.s 			page 30


1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_mask |= FLASH_OPTSR_FZ_IWDG_SDBY;
 418              		.loc 1 1240 0
 419 004a 43F48023 		orr	r3, r3, #262144
 420              	.LVL34:
 421              	.L44:
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((UserType & OB_USER_ST_RAM_SIZE) != 0U)
 422              		.loc 1 1243 0
 423 004e 10F0200F 		tst	r0, #32
 424 0052 04D0     		beq	.L45
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* ST_RAM_SIZE option byte should be modified */
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_OB_USER_ST_RAM_SIZE(UserConfig & FLASH_OPTSR_ST_RAM_SIZE));
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Set value and mask for ST_RAM_SIZE option byte */
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_val |= (UserConfig & FLASH_OPTSR_ST_RAM_SIZE);
 425              		.loc 1 1249 0
 426 0054 01F4C014 		and	r4, r1, #1572864
 427 0058 2243     		orrs	r2, r2, r4
 428              	.LVL35:
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_mask |= FLASH_OPTSR_ST_RAM_SIZE;
 429              		.loc 1 1250 0
 430 005a 43F4C013 		orr	r3, r3, #1572864
 431              	.LVL36:
 432              	.L45:
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((UserType & OB_USER_SECURITY) != 0U)
 433              		.loc 1 1253 0
 434 005e 10F0400F 		tst	r0, #64
 435 0062 04D0     		beq	.L46
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* SECURITY option byte should be modified */
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_OB_USER_SECURITY(UserConfig & FLASH_OPTSR_SECURITY));
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Set value and mask for SECURITY option byte */
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_val |= (UserConfig & FLASH_OPTSR_SECURITY);
 436              		.loc 1 1259 0
 437 0064 01F40014 		and	r4, r1, #2097152
 438 0068 2243     		orrs	r2, r2, r4
 439              	.LVL37:
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_mask |= FLASH_OPTSR_SECURITY;
 440              		.loc 1 1260 0
 441 006a 43F40013 		orr	r3, r3, #2097152
 442              	.LVL38:
 443              	.L46:
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined(DUAL_CORE)
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((UserType & OB_USER_BCM4) != 0U)
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* BCM4 option byte should be modified */
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_OB_USER_BCM4(UserConfig & FLASH_OPTSR_BCM4));
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Set value and mask for BCM4 option byte */
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_val |= (UserConfig & FLASH_OPTSR_BCM4);
ARM GAS  /tmp/ccggNwMO.s 			page 31


1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_mask |= FLASH_OPTSR_BCM4;
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((UserType & OB_USER_BCM7) != 0U)
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* BCM7 option byte should be modified */
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_OB_USER_BCM7(UserConfig & FLASH_OPTSR_BCM7));
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Set value and mask for BCM7 option byte */
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_val |= (UserConfig & FLASH_OPTSR_BCM7);
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_mask |= FLASH_OPTSR_BCM7;
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_CORE */
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (FLASH_OPTSR_NRST_STOP_D2)
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((UserType & OB_USER_NRST_STOP_D2) != 0U)
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* NRST_STOP option byte should be modified */
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_OB_STOP_D2_RESET(UserConfig & FLASH_OPTSR_NRST_STOP_D2));
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Set value and mask for NRST_STOP option byte */
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_val |= (UserConfig & FLASH_OPTSR_NRST_STOP_D2);
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_mask |= FLASH_OPTSR_NRST_STOP_D2;
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((UserType & OB_USER_NRST_STDBY_D2) != 0U)
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* NRST_STDBY option byte should be modified */
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_OB_STDBY_D2_RESET(UserConfig & FLASH_OPTSR_NRST_STBY_D2));
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Set value and mask for NRST_STDBY option byte */
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_val |= (UserConfig & FLASH_OPTSR_NRST_STBY_D2);
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_mask |= FLASH_OPTSR_NRST_STBY_D2;
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_OPTSR_NRST_STOP_D2 */
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((UserType & OB_USER_SWAP_BANK) != 0U)
 444              		.loc 1 1308 0
 445 006e 10F4807F 		tst	r0, #256
 446 0072 04D0     		beq	.L47
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* SWAP_BANK_OPT option byte should be modified */
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_OB_USER_SWAP_BANK(UserConfig & FLASH_OPTSR_SWAP_BANK_OPT));
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Set value and mask for SWAP_BANK_OPT option byte */
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_val |= (UserConfig & FLASH_OPTSR_SWAP_BANK_OPT);
 447              		.loc 1 1314 0
 448 0074 01F00044 		and	r4, r1, #-2147483648
 449 0078 2243     		orrs	r2, r2, r4
 450              	.LVL39:
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_mask |= FLASH_OPTSR_SWAP_BANK_OPT;
 451              		.loc 1 1315 0
 452 007a 43F00043 		orr	r3, r3, #-2147483648
 453              	.LVL40:
 454              	.L47:
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
ARM GAS  /tmp/ccggNwMO.s 			page 32


1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((UserType & OB_USER_IOHSLV) != 0U)
 455              		.loc 1 1319 0
 456 007e 10F0800F 		tst	r0, #128
 457 0082 04D0     		beq	.L48
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* IOHSLV_OPT option byte should be modified */
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_OB_USER_IOHSLV(UserConfig & FLASH_OPTSR_IO_HSLV));
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Set value and mask for IOHSLV_OPT option byte */
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_val |= (UserConfig & FLASH_OPTSR_IO_HSLV);
 458              		.loc 1 1325 0
 459 0084 01F00051 		and	r1, r1, #536870912
 460              	.LVL41:
 461 0088 0A43     		orrs	r2, r2, r1
 462              	.LVL42:
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_mask |= FLASH_OPTSR_IO_HSLV;
 463              		.loc 1 1326 0
 464 008a 43F00053 		orr	r3, r3, #536870912
 465              	.LVL43:
 466              	.L48:
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (FLASH_OPTSR_VDDMMC_HSLV)
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((UserType & OB_USER_VDDMMC_HSLV) != 0U)
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* VDDMMC_HSLV option byte should be modified */
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_OB_USER_VDDMMC_HSLV(UserConfig & FLASH_OPTSR_VDDMMC_HSLV));
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Set value and mask for VDDMMC_HSLV option byte */
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_val |= (UserConfig & FLASH_OPTSR_VDDMMC_HSLV);
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     optr_reg_mask |= FLASH_OPTSR_VDDMMC_HSLV;
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* FLASH_OPTSR_VDDMMC_HSLV */
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Configure the option bytes register */
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   MODIFY_REG(FLASH->OPTSR_PRG, optr_reg_mask, optr_reg_val);
 467              		.loc 1 1342 0
 468 008e 0648     		ldr	r0, .L51
 469              	.LVL44:
 470 0090 016A     		ldr	r1, [r0, #32]
 471 0092 21EA0303 		bic	r3, r1, r3
 472              	.LVL45:
 473 0096 1A43     		orrs	r2, r2, r3
 474              	.LVL46:
 475 0098 0262     		str	r2, [r0, #32]
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 476              		.loc 1 1343 0
 477 009a 5DF8044B 		ldr	r4, [sp], #4
 478              	.LCFI5:
 479              		.cfi_remember_state
 480              		.cfi_restore 4
 481              		.cfi_def_cfa_offset 0
 482 009e 7047     		bx	lr
 483              	.LVL47:
 484              	.L49:
ARM GAS  /tmp/ccggNwMO.s 			page 33


 485              	.LCFI6:
 486              		.cfi_restore_state
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 487              		.loc 1 1178 0
 488 00a0 0023     		movs	r3, #0
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t optr_reg_mask = 0;
 489              		.loc 1 1177 0
 490 00a2 1A46     		mov	r2, r3
 491 00a4 B3E7     		b	.L40
 492              	.L52:
 493 00a6 00BF     		.align	2
 494              	.L51:
 495 00a8 00200052 		.word	1375739904
 496              		.cfi_endproc
 497              	.LFE160:
 499              		.section	.text.FLASH_OB_GetUser,"ax",%progbits
 500              		.align	1
 501              		.syntax unified
 502              		.thumb
 503              		.thumb_func
 504              		.fpu fpv5-d16
 506              	FLASH_OB_GetUser:
 507              	.LFB161:
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined(DUAL_CORE)
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Return the FLASH User Option Byte value.
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval The FLASH User Option Bytes values
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         IWDG1_SW(Bit4), IWDG2_SW(Bit 5), nRST_STOP_D1(Bit 6), nRST_STDY_D1(Bit 7),
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         FZ_IWDG_STOP(Bit 17), FZ_IWDG_SDBY(Bit 18), ST_RAM_SIZE(Bit[19:20]),
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         SECURITY(Bit 21), BCM4(Bit 22), BCM7(Bit 23), nRST_STOP_D2(Bit 24),
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         nRST_STDY_D2(Bit 25), IO_HSLV (Bit 29) and SWAP_BANK_OPT(Bit 31).
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Return the FLASH User Option Byte value.
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval The FLASH User Option Bytes values
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         IWDG_SW(Bit4), nRST_STOP_D1(Bit 6), nRST_STDY_D1(Bit 7),
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         FZ_IWDG_STOP(Bit 17), FZ_IWDG_SDBY(Bit 18), ST_RAM_SIZE(Bit[19:20]),
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         SECURITY(Bit 21), IO_HSLV (Bit 29) and SWAP_BANK_OPT(Bit 31).
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /*DUAL_CORE*/
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static uint32_t FLASH_OB_GetUser(void)
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 508              		.loc 1 1364 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              		@ link register save eliminated.
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t userConfig = READ_REG(FLASH->OPTSR_CUR);
 513              		.loc 1 1365 0
 514 0000 024B     		ldr	r3, .L54
 515 0002 DB69     		ldr	r3, [r3, #28]
 516              	.LVL48:
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   userConfig &= (~(FLASH_OPTSR_BOR_LEV | FLASH_OPTSR_RDP));
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   return userConfig;
ARM GAS  /tmp/ccggNwMO.s 			page 34


1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 517              		.loc 1 1369 0
 518 0004 0248     		ldr	r0, .L54+4
 519 0006 1840     		ands	r0, r0, r3
 520              	.LVL49:
 521 0008 7047     		bx	lr
 522              	.L55:
 523 000a 00BF     		.align	2
 524              	.L54:
 525 000c 00200052 		.word	1375739904
 526 0010 F300FFFF 		.word	-65293
 527              		.cfi_endproc
 528              	.LFE161:
 530              		.section	.text.FLASH_OB_PCROPConfig,"ax",%progbits
 531              		.align	1
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 535              		.fpu fpv5-d16
 537              	FLASH_OB_PCROPConfig:
 538              	.LFB162:
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Configure the Proprietary code readout protection of the desired addresses
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @note   To configure the PCROP options, the option lock bit OPTLOCK must be
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         cleared with the call of the HAL_FLASH_OB_Unlock() function.
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @note   To validate the PCROP options, the option bytes must be reloaded
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         through the call of the HAL_FLASH_OB_Launch() function.
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  PCROPConfig specifies if the PCROP area for the given Bank shall be erased or not
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         when RDP level decreased from Level 1 to Level 0, or after a bank erase with protection
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         This parameter must be a value of @arg FLASHEx_OB_PCROP_RDP enumeration
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  PCROPStartAddr specifies the start address of the Proprietary code readout protection
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be an address between begin and end of the bank
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  PCROPEndAddr specifies the end address of the Proprietary code readout protection
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be an address between PCROPStartAddr and end of the bank
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  Banks the specific bank to apply PCROP protection
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: PCROP on specified bank1 area
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: PCROP on specified bank2 area
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: PCROP on specified bank1 and bank2 area (same config will be a
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval None
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_PCROPConfig(uint32_t PCROPConfig, uint32_t PCROPStartAddr, uint32_t PCROPEndAd
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 539              		.loc 1 1398 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 544              	.LVL50:
 545 0000 30B4     		push	{r4, r5}
ARM GAS  /tmp/ccggNwMO.s 			page 35


 546              	.LCFI7:
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 4, -8
 549              		.cfi_offset 5, -4
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Check the parameters */
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_OB_PCROP_RDP(PCROPConfig));
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((Banks & FLASH_BANK_1) == FLASH_BANK_1)
 550              		.loc 1 1403 0
 551 0002 13F0010F 		tst	r3, #1
 552 0006 0AD0     		beq	.L57
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS_BANK1(PCROPStartAddr));
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS_BANK1(PCROPEndAddr));
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Configure the Proprietary code readout protection */
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->PRAR_PRG1 = ((PCROPStartAddr - FLASH_BANK1_BASE) >> 8)                                 |
 553              		.loc 1 1409 0
 554 0008 01F17844 		add	r4, r1, #-134217728
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        (((PCROPEndAddr - FLASH_BANK1_BASE) >> 8) << FLASH_PRAR_PROT_AREA_END_Pos) |
 555              		.loc 1 1410 0
 556 000c 02F17845 		add	r5, r2, #-134217728
 557 0010 2D0A     		lsrs	r5, r5, #8
 558 0012 2D04     		lsls	r5, r5, #16
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        (((PCROPEndAddr - FLASH_BANK1_BASE) >> 8) << FLASH_PRAR_PROT_AREA_END_Pos) |
 559              		.loc 1 1409 0
 560 0014 45EA1424 		orr	r4, r5, r4, lsr #8
 561              		.loc 1 1410 0
 562 0018 0443     		orrs	r4, r4, r0
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        (((PCROPEndAddr - FLASH_BANK1_BASE) >> 8) << FLASH_PRAR_PROT_AREA_END_Pos) |
 563              		.loc 1 1409 0
 564 001a 094D     		ldr	r5, .L60
 565 001c EC62     		str	r4, [r5, #44]
 566              	.L57:
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        PCROPConfig;
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((Banks & FLASH_BANK_2) == FLASH_BANK_2)
 567              		.loc 1 1415 0
 568 001e 13F0020F 		tst	r3, #2
 569 0022 0BD0     		beq	.L56
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS_BANK2(PCROPStartAddr));
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS_BANK2(PCROPEndAddr));
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Configure the Proprietary code readout protection */
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->PRAR_PRG2 = ((PCROPStartAddr - FLASH_BANK2_BASE) >> 8)                                 |
 570              		.loc 1 1421 0
 571 0024 A1F10163 		sub	r3, r1, #135266304
 572              	.LVL51:
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        (((PCROPEndAddr - FLASH_BANK2_BASE) >> 8) << FLASH_PRAR_PROT_AREA_END_Pos) |
 573              		.loc 1 1422 0
 574 0028 A2F10161 		sub	r1, r2, #135266304
 575              	.LVL52:
 576 002c 090A     		lsrs	r1, r1, #8
ARM GAS  /tmp/ccggNwMO.s 			page 36


 577 002e 0904     		lsls	r1, r1, #16
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        (((PCROPEndAddr - FLASH_BANK2_BASE) >> 8) << FLASH_PRAR_PROT_AREA_END_Pos) |
 578              		.loc 1 1421 0
 579 0030 41EA1321 		orr	r1, r1, r3, lsr #8
 580              		.loc 1 1422 0
 581 0034 0843     		orrs	r0, r0, r1
 582              	.LVL53:
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        (((PCROPEndAddr - FLASH_BANK2_BASE) >> 8) << FLASH_PRAR_PROT_AREA_END_Pos) |
 583              		.loc 1 1421 0
 584 0036 024B     		ldr	r3, .L60
 585              	.LVL54:
 586 0038 C3F82C01 		str	r0, [r3, #300]
 587              	.L56:
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        PCROPConfig;
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 588              		.loc 1 1426 0
 589 003c 30BC     		pop	{r4, r5}
 590              	.LCFI8:
 591              		.cfi_restore 5
 592              		.cfi_restore 4
 593              		.cfi_def_cfa_offset 0
 594 003e 7047     		bx	lr
 595              	.L61:
 596              		.align	2
 597              	.L60:
 598 0040 00200052 		.word	1375739904
 599              		.cfi_endproc
 600              	.LFE162:
 602              		.section	.text.FLASH_OB_GetPCROP,"ax",%progbits
 603              		.align	1
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 607              		.fpu fpv5-d16
 609              	FLASH_OB_GetPCROP:
 610              	.LFB163:
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Get the Proprietary code readout protection configuration on a given Bank
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  PCROPConfig indicates if the PCROP area for the given Bank shall be erased or not
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         when RDP level decreased from Level 1 to Level 0 or after a bank erase with protection 
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  PCROPStartAddr gives the start address of the Proprietary code readout protection of th
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  PCROPEndAddr gives the end address of the Proprietary code readout protection of the ba
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  Bank the specific bank to apply PCROP protection
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be exclusively one of the following values:
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: PCROP on specified bank1 area
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: PCROP on specified bank2 area
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: is  not allowed here
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval None
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
ARM GAS  /tmp/ccggNwMO.s 			page 37


1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_GetPCROP(uint32_t *PCROPConfig, uint32_t *PCROPStartAddr, uint32_t *PCROPEndAd
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 611              		.loc 1 1447 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 616              	.LVL55:
 617 0000 30B4     		push	{r4, r5}
 618              	.LCFI9:
 619              		.cfi_def_cfa_offset 8
 620              		.cfi_offset 4, -8
 621              		.cfi_offset 5, -4
 622              	.LVL56:
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t regvalue = 0;
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t bankBase = 0;
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if(Bank == FLASH_BANK_1)
 623              		.loc 1 1451 0
 624 0002 012B     		cmp	r3, #1
 625 0004 12D0     		beq	.L67
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 626              		.loc 1 1449 0
 627 0006 0025     		movs	r5, #0
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t regvalue = 0;
 628              		.loc 1 1448 0
 629 0008 2C46     		mov	r4, r5
 630              	.LVL57:
 631              	.L63:
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     regvalue = FLASH->PRAR_CUR1;
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     bankBase = FLASH_BANK1_BASE;
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if(Bank == FLASH_BANK_2)
 632              		.loc 1 1458 0
 633 000a 022B     		cmp	r3, #2
 634 000c 13D0     		beq	.L68
 635              	.LVL58:
 636              	.L64:
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     regvalue = FLASH->PRAR_CUR2;
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     bankBase = FLASH_BANK2_BASE;
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   (*PCROPConfig) =  (regvalue & FLASH_PRAR_DMEP);
 637              		.loc 1 1465 0
 638 000e 04F00043 		and	r3, r4, #-2147483648
 639 0012 0360     		str	r3, [r0]
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   (*PCROPStartAddr) = ((regvalue & FLASH_PRAR_PROT_AREA_START) << 8) + bankBase;
 640              		.loc 1 1467 0
 641 0014 0B4B     		ldr	r3, .L69
 642 0016 03EA0423 		and	r3, r3, r4, lsl #8
 643 001a 2B44     		add	r3, r3, r5
ARM GAS  /tmp/ccggNwMO.s 			page 38


 644 001c 0B60     		str	r3, [r1]
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   (*PCROPEndAddr) = (regvalue & FLASH_PRAR_PROT_AREA_END) >> FLASH_PRAR_PROT_AREA_END_Pos;
 645              		.loc 1 1468 0
 646 001e C4F30B44 		ubfx	r4, r4, #16, #12
 647              	.LVL59:
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   (*PCROPEndAddr) = ((*PCROPEndAddr) << 8) + bankBase;
 648              		.loc 1 1469 0
 649 0022 05EB0424 		add	r4, r5, r4, lsl #8
 650 0026 1460     		str	r4, [r2]
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 651              		.loc 1 1470 0
 652 0028 30BC     		pop	{r4, r5}
 653              	.LCFI10:
 654              		.cfi_remember_state
 655              		.cfi_restore 5
 656              		.cfi_restore 4
 657              		.cfi_def_cfa_offset 0
 658              	.LVL60:
 659 002a 7047     		bx	lr
 660              	.LVL61:
 661              	.L67:
 662              	.LCFI11:
 663              		.cfi_restore_state
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     bankBase = FLASH_BANK1_BASE;
 664              		.loc 1 1453 0
 665 002c 064C     		ldr	r4, .L69+4
 666 002e A46A     		ldr	r4, [r4, #40]
 667              	.LVL62:
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 668              		.loc 1 1454 0
 669 0030 4FF00065 		mov	r5, #134217728
 670 0034 E9E7     		b	.L63
 671              	.LVL63:
 672              	.L68:
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     bankBase = FLASH_BANK2_BASE;
 673              		.loc 1 1460 0
 674 0036 044B     		ldr	r3, .L69+4
 675              	.LVL64:
 676 0038 D3F82841 		ldr	r4, [r3, #296]
 677              	.LVL65:
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 678              		.loc 1 1461 0
 679 003c 4FF00165 		mov	r5, #135266304
 680 0040 E5E7     		b	.L64
 681              	.L70:
 682 0042 00BF     		.align	2
 683              	.L69:
 684 0044 00FF0F00 		.word	1048320
 685 0048 00200052 		.word	1375739904
 686              		.cfi_endproc
 687              	.LFE163:
 689              		.section	.text.FLASH_OB_BOR_LevelConfig,"ax",%progbits
 690              		.align	1
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 694              		.fpu fpv5-d16
ARM GAS  /tmp/ccggNwMO.s 			page 39


 696              	FLASH_OB_BOR_LevelConfig:
 697              	.LFB164:
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Set the BOR Level.
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  Level specifies the Option Bytes BOR Reset Level.
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL0: Reset level threshold is set to 1.6V
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL1: Reset level threshold is set to 2.1V
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL2: Reset level threshold is set to 2.4V
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL3: Reset level threshold is set to 2.7V
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval None
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_BOR_LevelConfig(uint32_t Level)
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 698              		.loc 1 1483 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 703              	.LVL66:
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_OB_BOR_LEVEL(Level));
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Configure BOR_LEV option byte */
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   MODIFY_REG(FLASH->OPTSR_PRG, FLASH_OPTSR_BOR_LEV, Level);
 704              		.loc 1 1487 0
 705 0000 034A     		ldr	r2, .L72
 706 0002 136A     		ldr	r3, [r2, #32]
 707 0004 23F00C03 		bic	r3, r3, #12
 708 0008 1843     		orrs	r0, r0, r3
 709              	.LVL67:
 710 000a 1062     		str	r0, [r2, #32]
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 711              		.loc 1 1488 0
 712 000c 7047     		bx	lr
 713              	.L73:
 714 000e 00BF     		.align	2
 715              	.L72:
 716 0010 00200052 		.word	1375739904
 717              		.cfi_endproc
 718              	.LFE164:
 720              		.section	.text.FLASH_OB_GetBOR,"ax",%progbits
 721              		.align	1
 722              		.syntax unified
 723              		.thumb
 724              		.thumb_func
 725              		.fpu fpv5-d16
 727              	FLASH_OB_GetBOR:
 728              	.LFB165:
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Get the BOR Level.
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval The Option Bytes BOR Reset Level.
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            This parameter can be one of the following values:
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL0: Reset level threshold is set to 1.6V
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL1: Reset level threshold is set to 2.1V
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL2: Reset level threshold is set to 2.4V
ARM GAS  /tmp/ccggNwMO.s 			page 40


1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL3: Reset level threshold is set to 2.7V
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static uint32_t FLASH_OB_GetBOR(void)
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 729              		.loc 1 1500 0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 0
 732              		@ frame_needed = 0, uses_anonymous_args = 0
 733              		@ link register save eliminated.
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   return (FLASH->OPTSR_CUR & FLASH_OPTSR_BOR_LEV);
 734              		.loc 1 1501 0
 735 0000 024B     		ldr	r3, .L75
 736 0002 D869     		ldr	r0, [r3, #28]
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 737              		.loc 1 1502 0
 738 0004 00F00C00 		and	r0, r0, #12
 739 0008 7047     		bx	lr
 740              	.L76:
 741 000a 00BF     		.align	2
 742              	.L75:
 743 000c 00200052 		.word	1375739904
 744              		.cfi_endproc
 745              	.LFE165:
 747              		.section	.text.FLASH_OB_BootAddConfig,"ax",%progbits
 748              		.align	1
 749              		.syntax unified
 750              		.thumb
 751              		.thumb_func
 752              		.fpu fpv5-d16
 754              	FLASH_OB_BootAddConfig:
 755              	.LFB166:
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Set Boot address
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  BootOption Boot address option byte to be programmed,
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *                     This parameter must be a value of @ref FLASHEx_OB_BOOT_OPTION
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                         (OB_BOOT_ADD0, OB_BOOT_ADD1 or OB_BOOT_ADD_BOTH)
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  BootAddress0 Specifies the Boot Address 0
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  BootAddress1 Specifies the Boot Address 1
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL Status
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_BootAddConfig(uint32_t BootOption, uint32_t BootAddress0, uint32_t BootAddress
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 756              		.loc 1 1515 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 0
 759              		@ frame_needed = 0, uses_anonymous_args = 0
 760              		@ link register save eliminated.
 761              	.LVL68:
 762 0000 30B4     		push	{r4, r5}
 763              	.LCFI12:
 764              		.cfi_def_cfa_offset 8
 765              		.cfi_offset 4, -8
 766              		.cfi_offset 5, -4
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Check the parameters */
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_OB_BOOT_ADD_OPTION(BootOption));
ARM GAS  /tmp/ccggNwMO.s 			page 41


1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((BootOption & OB_BOOT_ADD0) == OB_BOOT_ADD0)
 767              		.loc 1 1519 0
 768 0002 10F0010F 		tst	r0, #1
 769 0006 06D0     		beq	.L78
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Check the parameters */
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_BOOT_ADDRESS(BootAddress0));
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Configure CM7 BOOT ADD0 */
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined(DUAL_CORE)
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     MODIFY_REG(FLASH->BOOT7_PRG, FLASH_BOOT7_BCM7_ADD0, (BootAddress0 >> 16));
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else /* Single Core*/
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     MODIFY_REG(FLASH->BOOT_PRG, FLASH_BOOT_ADD0, (BootAddress0 >> 16));
 770              		.loc 1 1528 0
 771 0008 084C     		ldr	r4, .L81
 772 000a 656C     		ldr	r5, [r4, #68]
 773 000c 084B     		ldr	r3, .L81+4
 774 000e 2B40     		ands	r3, r3, r5
 775 0010 43EA1143 		orr	r3, r3, r1, lsr #16
 776 0014 6364     		str	r3, [r4, #68]
 777              	.L78:
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_CORE */
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((BootOption & OB_BOOT_ADD1) == OB_BOOT_ADD1)
 778              		.loc 1 1532 0
 779 0016 10F0020F 		tst	r0, #2
 780 001a 04D0     		beq	.L77
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Check the parameters */
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_BOOT_ADDRESS(BootAddress1));
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Configure CM7 BOOT ADD1 */
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined(DUAL_CORE)
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     MODIFY_REG(FLASH->BOOT7_PRG, FLASH_BOOT7_BCM7_ADD1, BootAddress1);
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else /* Single Core*/
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     MODIFY_REG(FLASH->BOOT_PRG, FLASH_BOOT_ADD1, BootAddress1);
 781              		.loc 1 1541 0
 782 001c 0349     		ldr	r1, .L81
 783              	.LVL69:
 784 001e 4B6C     		ldr	r3, [r1, #68]
 785 0020 9BB2     		uxth	r3, r3
 786 0022 1A43     		orrs	r2, r2, r3
 787              	.LVL70:
 788 0024 4A64     		str	r2, [r1, #68]
 789              	.L77:
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_CORE */
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 790              		.loc 1 1544 0
 791 0026 30BC     		pop	{r4, r5}
 792              	.LCFI13:
 793              		.cfi_restore 5
 794              		.cfi_restore 4
 795              		.cfi_def_cfa_offset 0
 796 0028 7047     		bx	lr
ARM GAS  /tmp/ccggNwMO.s 			page 42


 797              	.L82:
 798 002a 00BF     		.align	2
 799              	.L81:
 800 002c 00200052 		.word	1375739904
 801 0030 0000FFFF 		.word	-65536
 802              		.cfi_endproc
 803              	.LFE166:
 805              		.section	.text.FLASH_OB_GetBootAdd,"ax",%progbits
 806              		.align	1
 807              		.syntax unified
 808              		.thumb
 809              		.thumb_func
 810              		.fpu fpv5-d16
 812              	FLASH_OB_GetBootAdd:
 813              	.LFB167:
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Get Boot address
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  BootAddress0 Specifies the Boot Address 0.
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  BootAddress1 Specifies the Boot Address 1.
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL Status
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_GetBootAdd(uint32_t *BootAddress0, uint32_t *BootAddress1)
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 814              		.loc 1 1553 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 0
 817              		@ frame_needed = 0, uses_anonymous_args = 0
 818              		@ link register save eliminated.
 819              	.LVL71:
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t regvalue;
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined(DUAL_CORE)
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   regvalue = FLASH->BOOT7_CUR;
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   (*BootAddress0) = (regvalue & FLASH_BOOT7_BCM7_ADD0) << 16;
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   (*BootAddress1) = (regvalue & FLASH_BOOT7_BCM7_ADD1);
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else /* Single Core */
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   regvalue = FLASH->BOOT_CUR;
 820              		.loc 1 1562 0
 821 0000 034B     		ldr	r3, .L84
 822 0002 1A6C     		ldr	r2, [r3, #64]
 823              	.LVL72:
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   (*BootAddress0) = (regvalue & FLASH_BOOT_ADD0) << 16;
 824              		.loc 1 1564 0
 825 0004 1304     		lsls	r3, r2, #16
 826 0006 0360     		str	r3, [r0]
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   (*BootAddress1) = (regvalue & FLASH_BOOT_ADD1);
 827              		.loc 1 1565 0
 828 0008 024B     		ldr	r3, .L84+4
 829 000a 1340     		ands	r3, r3, r2
 830 000c 0B60     		str	r3, [r1]
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_CORE */
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 831              		.loc 1 1567 0
 832 000e 7047     		bx	lr
ARM GAS  /tmp/ccggNwMO.s 			page 43


 833              	.L85:
 834              		.align	2
 835              	.L84:
 836 0010 00200052 		.word	1375739904
 837 0014 0000FFFF 		.word	-65536
 838              		.cfi_endproc
 839              	.LFE167:
 841              		.section	.text.FLASH_OB_SecureAreaConfig,"ax",%progbits
 842              		.align	1
 843              		.syntax unified
 844              		.thumb
 845              		.thumb_func
 846              		.fpu fpv5-d16
 848              	FLASH_OB_SecureAreaConfig:
 849              	.LFB168:
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined(DUAL_CORE)
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Set CM4 Boot address
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  BootOption Boot address option byte to be programmed,
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *                     This parameter must be a value of @ref FLASHEx_OB_BOOT_OPTION
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                         (OB_BOOT_ADD0, OB_BOOT_ADD1 or OB_BOOT_ADD_BOTH)
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  BootAddress0 Specifies the CM4 Boot Address 0.
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  BootAddress1 Specifies the CM4 Boot Address 1.
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL Status
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_CM4BootAddConfig(uint32_t BootOption, uint32_t BootAddress0, uint32_t BootAddr
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Check the parameters */
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_OB_BOOT_ADD_OPTION(BootOption));
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((BootOption & OB_BOOT_ADD0) == OB_BOOT_ADD0)
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Check the parameters */
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_BOOT_ADDRESS(BootAddress0));
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Configure CM4 BOOT ADD0 */
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     MODIFY_REG(FLASH->BOOT4_PRG, FLASH_BOOT4_BCM4_ADD0, (BootAddress0 >> 16));
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((BootOption & OB_BOOT_ADD1) == OB_BOOT_ADD1)
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Check the parameters */
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_BOOT_ADDRESS(BootAddress1));
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Configure CM4 BOOT ADD1 */
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     MODIFY_REG(FLASH->BOOT4_PRG, FLASH_BOOT4_BCM4_ADD1, BootAddress1);
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Get CM4 Boot address
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  BootAddress0 Specifies the CM4 Boot Address 0.
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  BootAddress1 Specifies the CM4 Boot Address 1.
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval HAL Status
ARM GAS  /tmp/ccggNwMO.s 			page 44


1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_GetCM4BootAdd(uint32_t *BootAddress0, uint32_t *BootAddress1)
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t regvalue;
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   regvalue = FLASH->BOOT4_CUR;
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   (*BootAddress0) = (regvalue & FLASH_BOOT4_BCM4_ADD0) << 16;
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   (*BootAddress1) = (regvalue & FLASH_BOOT4_BCM4_ADD1);
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /*DUAL_CORE*/
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Set secure area configuration
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  SecureAreaConfig specify if the secure area will be deleted or not
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         when RDP level decreased from Level 1 to Level 0 or during a mass erase.
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  SecureAreaStartAddr Specifies the secure area start address
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  SecureAreaEndAddr Specifies the secure area end address
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  Banks the specific bank to apply Security protection
1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: Secure area on specified bank1 area
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: Secure area on specified bank2 area
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: Secure area on specified bank1 and bank2 area (same config wil
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval None
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_SecureAreaConfig(uint32_t SecureAreaConfig, uint32_t SecureAreaStartAddr, uint
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 850              		.loc 1 1637 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 855              	.LVL73:
 856 0000 30B4     		push	{r4, r5}
 857              	.LCFI14:
 858              		.cfi_def_cfa_offset 8
 859              		.cfi_offset 4, -8
 860              		.cfi_offset 5, -4
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Check the parameters */
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_OB_SECURE_RDP(SecureAreaConfig));
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((Banks & FLASH_BANK_1) == FLASH_BANK_1)
 861              		.loc 1 1642 0
 862 0002 13F0010F 		tst	r3, #1
 863 0006 0CD0     		beq	.L87
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Check the parameters */
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS_BANK1(SecureAreaStartAddr));
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS_BANK1(SecureAreaEndAddr));
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Configure the secure area */
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->SCAR_PRG1 = ((SecureAreaStartAddr - FLASH_BANK1_BASE) >> 8)                             
 864              		.loc 1 1649 0
 865 0008 01F17844 		add	r4, r1, #-134217728
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        (((SecureAreaEndAddr - FLASH_BANK1_BASE) >> 8) << FLASH_SCAR_SEC_AREA_END_Po
ARM GAS  /tmp/ccggNwMO.s 			page 45


 866              		.loc 1 1650 0
 867 000c 02F17845 		add	r5, r2, #-134217728
 868 0010 2D0A     		lsrs	r5, r5, #8
 869 0012 2D04     		lsls	r5, r5, #16
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        (((SecureAreaEndAddr - FLASH_BANK1_BASE) >> 8) << FLASH_SCAR_SEC_AREA_END_Po
 870              		.loc 1 1649 0
 871 0014 45EA1424 		orr	r4, r5, r4, lsr #8
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        (SecureAreaConfig & FLASH_SCAR_DMES);
 872              		.loc 1 1651 0
 873 0018 00F00045 		and	r5, r0, #-2147483648
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        (((SecureAreaEndAddr - FLASH_BANK1_BASE) >> 8) << FLASH_SCAR_SEC_AREA_END_Po
 874              		.loc 1 1650 0
 875 001c 2C43     		orrs	r4, r4, r5
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        (((SecureAreaEndAddr - FLASH_BANK1_BASE) >> 8) << FLASH_SCAR_SEC_AREA_END_Po
 876              		.loc 1 1649 0
 877 001e 0A4D     		ldr	r5, .L90
 878 0020 6C63     		str	r4, [r5, #52]
 879              	.L87:
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if((Banks & FLASH_BANK_2) == FLASH_BANK_2)
 880              		.loc 1 1655 0
 881 0022 13F0020F 		tst	r3, #2
 882 0026 0DD0     		beq	.L86
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Check the parameters */
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS_BANK2(SecureAreaStartAddr));
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS_BANK2(SecureAreaEndAddr));
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Configure the secure area */
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->SCAR_PRG2 = ((SecureAreaStartAddr - FLASH_BANK2_BASE) >> 8)                             
 883              		.loc 1 1662 0
 884 0028 A1F10163 		sub	r3, r1, #135266304
 885              	.LVL74:
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        (((SecureAreaEndAddr - FLASH_BANK2_BASE) >> 8) << FLASH_SCAR_SEC_AREA_END_Po
 886              		.loc 1 1663 0
 887 002c A2F10161 		sub	r1, r2, #135266304
 888              	.LVL75:
 889 0030 090A     		lsrs	r1, r1, #8
 890 0032 0904     		lsls	r1, r1, #16
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        (((SecureAreaEndAddr - FLASH_BANK2_BASE) >> 8) << FLASH_SCAR_SEC_AREA_END_Po
 891              		.loc 1 1662 0
 892 0034 41EA1321 		orr	r1, r1, r3, lsr #8
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        (SecureAreaConfig & FLASH_SCAR_DMES);
 893              		.loc 1 1664 0
 894 0038 00F00040 		and	r0, r0, #-2147483648
 895              	.LVL76:
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        (((SecureAreaEndAddr - FLASH_BANK2_BASE) >> 8) << FLASH_SCAR_SEC_AREA_END_Po
 896              		.loc 1 1663 0
 897 003c 0843     		orrs	r0, r0, r1
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                        (((SecureAreaEndAddr - FLASH_BANK2_BASE) >> 8) << FLASH_SCAR_SEC_AREA_END_Po
 898              		.loc 1 1662 0
 899 003e 024B     		ldr	r3, .L90
 900              	.LVL77:
 901 0040 C3F83401 		str	r0, [r3, #308]
 902              	.L86:
ARM GAS  /tmp/ccggNwMO.s 			page 46


1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 903              		.loc 1 1667 0
 904 0044 30BC     		pop	{r4, r5}
 905              	.LCFI15:
 906              		.cfi_restore 5
 907              		.cfi_restore 4
 908              		.cfi_def_cfa_offset 0
 909 0046 7047     		bx	lr
 910              	.L91:
 911              		.align	2
 912              	.L90:
 913 0048 00200052 		.word	1375739904
 914              		.cfi_endproc
 915              	.LFE168:
 917              		.section	.text.FLASH_OB_GetSecureArea,"ax",%progbits
 918              		.align	1
 919              		.syntax unified
 920              		.thumb
 921              		.thumb_func
 922              		.fpu fpv5-d16
 924              	FLASH_OB_GetSecureArea:
 925              	.LFB169:
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Get secure area configuration
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  SecureAreaConfig indicates if the secure area will be deleted or not
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   *         when RDP level decreased from Level 1 to Level 0 or during a mass erase.
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  SecureAreaStartAddr gives the secure area start address
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  SecureAreaEndAddr gives the secure area end address
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  Bank Specifies the Bank
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval None
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_OB_GetSecureArea(uint32_t *SecureAreaConfig, uint32_t *SecureAreaStartAddr, uint3
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 926              		.loc 1 1679 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 0
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930              		@ link register save eliminated.
 931              	.LVL78:
 932 0000 30B4     		push	{r4, r5}
 933              	.LCFI16:
 934              		.cfi_def_cfa_offset 8
 935              		.cfi_offset 4, -8
 936              		.cfi_offset 5, -4
 937              	.LVL79:
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t regvalue = 0;
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t bankBase = 0;
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Check Bank parameter value */
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if(Bank == FLASH_BANK_1)
 938              		.loc 1 1684 0
 939 0002 012B     		cmp	r3, #1
 940 0004 12D0     		beq	.L97
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
ARM GAS  /tmp/ccggNwMO.s 			page 47


 941              		.loc 1 1681 0
 942 0006 0025     		movs	r5, #0
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t regvalue = 0;
 943              		.loc 1 1680 0
 944 0008 2C46     		mov	r4, r5
 945              	.LVL80:
 946              	.L93:
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     regvalue = FLASH->SCAR_CUR1;
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     bankBase = FLASH_BANK1_BASE;
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if(Bank == FLASH_BANK_2)
 947              		.loc 1 1691 0
 948 000a 022B     		cmp	r3, #2
 949 000c 13D0     		beq	.L98
 950              	.LVL81:
 951              	.L94:
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     regvalue = FLASH->SCAR_CUR2;
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     bankBase = FLASH_BANK2_BASE;
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Get the secure area settings */
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   (*SecureAreaConfig) = (regvalue & FLASH_SCAR_DMES);
 952              		.loc 1 1699 0
 953 000e 04F00043 		and	r3, r4, #-2147483648
 954 0012 0360     		str	r3, [r0]
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   (*SecureAreaStartAddr) = ((regvalue & FLASH_SCAR_SEC_AREA_START) << 8) + bankBase;
 955              		.loc 1 1700 0
 956 0014 0B4B     		ldr	r3, .L99
 957 0016 03EA0423 		and	r3, r3, r4, lsl #8
 958 001a 2B44     		add	r3, r3, r5
 959 001c 0B60     		str	r3, [r1]
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   (*SecureAreaEndAddr) = (regvalue & FLASH_SCAR_SEC_AREA_END) >> FLASH_SCAR_SEC_AREA_END_Pos;
 960              		.loc 1 1701 0
 961 001e C4F30B44 		ubfx	r4, r4, #16, #12
 962              	.LVL82:
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   (*SecureAreaEndAddr) = ((*SecureAreaEndAddr) << 8) + bankBase;
 963              		.loc 1 1702 0
 964 0022 05EB0424 		add	r4, r5, r4, lsl #8
 965 0026 1460     		str	r4, [r2]
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 966              		.loc 1 1703 0
 967 0028 30BC     		pop	{r4, r5}
 968              	.LCFI17:
 969              		.cfi_remember_state
 970              		.cfi_restore 5
 971              		.cfi_restore 4
 972              		.cfi_def_cfa_offset 0
 973              	.LVL83:
 974 002a 7047     		bx	lr
 975              	.LVL84:
 976              	.L97:
 977              	.LCFI18:
ARM GAS  /tmp/ccggNwMO.s 			page 48


 978              		.cfi_restore_state
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     bankBase = FLASH_BANK1_BASE;
 979              		.loc 1 1686 0
 980 002c 064C     		ldr	r4, .L99+4
 981 002e 246B     		ldr	r4, [r4, #48]
 982              	.LVL85:
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 983              		.loc 1 1687 0
 984 0030 4FF00065 		mov	r5, #134217728
 985 0034 E9E7     		b	.L93
 986              	.LVL86:
 987              	.L98:
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     bankBase = FLASH_BANK2_BASE;
 988              		.loc 1 1693 0
 989 0036 044B     		ldr	r3, .L99+4
 990              	.LVL87:
 991 0038 D3F83041 		ldr	r4, [r3, #304]
 992              	.LVL88:
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 993              		.loc 1 1694 0
 994 003c 4FF00165 		mov	r5, #135266304
 995 0040 E5E7     		b	.L94
 996              	.L100:
 997 0042 00BF     		.align	2
 998              	.L99:
 999 0044 00FF0F00 		.word	1048320
 1000 0048 00200052 		.word	1375739904
 1001              		.cfi_endproc
 1002              	.LFE169:
 1004              		.section	.text.FLASH_CRC_AddSector,"ax",%progbits
 1005              		.align	1
 1006              		.syntax unified
 1007              		.thumb
 1008              		.thumb_func
 1009              		.fpu fpv5-d16
 1011              	FLASH_CRC_AddSector:
 1012              	.LFB170:
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Add a CRC sector to the list of sectors on which the CRC will be calculated
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  Sector Specifies the CRC sector number
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  Bank Specifies the Bank
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval None
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_CRC_AddSector(uint32_t Sector, uint32_t Bank)
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 1013              		.loc 1 1712 0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 0
 1016              		@ frame_needed = 0, uses_anonymous_args = 0
 1017              		@ link register save eliminated.
 1018              	.LVL89:
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Check the parameters */
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_FLASH_SECTOR(Sector));
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if (Bank == FLASH_BANK_1)
 1019              		.loc 1 1716 0
ARM GAS  /tmp/ccggNwMO.s 			page 49


 1020 0000 0129     		cmp	r1, #1
 1021 0002 0ED0     		beq	.L104
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Clear CRC sector */
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CRCCR1 &= (~FLASH_CRCCR_CRC_SECT);
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Select CRC Sector and activate ADD_SECT bit */
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CRCCR1 |= Sector | FLASH_CRCCR_ADD_SECT;
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   else
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Clear CRC sector */
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CRCCR2 &= (~FLASH_CRCCR_CRC_SECT);
 1022              		.loc 1 1728 0
 1023 0004 0C4A     		ldr	r2, .L105
 1024 0006 D2F85031 		ldr	r3, [r2, #336]
 1025 000a 23F00703 		bic	r3, r3, #7
 1026 000e C2F85031 		str	r3, [r2, #336]
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Select CRC Sector and activate ADD_SECT bit */
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CRCCR2 |= Sector | FLASH_CRCCR_ADD_SECT;
 1027              		.loc 1 1731 0
 1028 0012 D2F85031 		ldr	r3, [r2, #336]
 1029 0016 1843     		orrs	r0, r0, r3
 1030              	.LVL90:
 1031 0018 40F40070 		orr	r0, r0, #512
 1032 001c C2F85001 		str	r0, [r2, #336]
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 1033              		.loc 1 1734 0
 1034 0020 7047     		bx	lr
 1035              	.LVL91:
 1036              	.L104:
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1037              		.loc 1 1719 0
 1038 0022 054A     		ldr	r2, .L105
 1039 0024 136D     		ldr	r3, [r2, #80]
 1040 0026 23F00703 		bic	r3, r3, #7
 1041 002a 1365     		str	r3, [r2, #80]
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 1042              		.loc 1 1722 0
 1043 002c 136D     		ldr	r3, [r2, #80]
 1044 002e 1843     		orrs	r0, r0, r3
 1045              	.LVL92:
 1046 0030 40F40070 		orr	r0, r0, #512
 1047 0034 1065     		str	r0, [r2, #80]
 1048 0036 7047     		bx	lr
 1049              	.L106:
 1050              		.align	2
 1051              	.L105:
 1052 0038 00200052 		.word	1375739904
 1053              		.cfi_endproc
 1054              	.LFE170:
 1056              		.section	.text.FLASH_CRC_SelectAddress,"ax",%progbits
 1057              		.align	1
ARM GAS  /tmp/ccggNwMO.s 			page 50


 1058              		.syntax unified
 1059              		.thumb
 1060              		.thumb_func
 1061              		.fpu fpv5-d16
 1063              	FLASH_CRC_SelectAddress:
 1064              	.LFB171:
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** /**
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @brief  Select CRC start and end memory addresses on which the CRC will be calculated
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  CRCStartAddr Specifies the CRC start address
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  CRCEndAddr Specifies the CRC end address
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @param  Bank Specifies the Bank
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   * @retval None
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   */
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** static void FLASH_CRC_SelectAddress(uint32_t CRCStartAddr, uint32_t CRCEndAddr, uint32_t Bank)
1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** {
 1065              		.loc 1 1744 0
 1066              		.cfi_startproc
 1067              		@ args = 0, pretend = 0, frame = 0
 1068              		@ frame_needed = 0, uses_anonymous_args = 0
 1069              		@ link register save eliminated.
 1070              	.LVL93:
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if (Bank == FLASH_BANK_1)
 1071              		.loc 1 1745 0
 1072 0000 012A     		cmp	r2, #1
 1073 0002 05D0     		beq	.L110
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS_BANK1(CRCStartAddr));
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS_BANK1(CRCEndAddr));
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Write CRC Start and End addresses */
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CRCSADD1 = CRCStartAddr;
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CRCEADD1 = CRCEndAddr;
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined (DUAL_BANK)
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   else
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS_BANK2(CRCStartAddr));
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS_BANK2(CRCEndAddr));
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     /* Write CRC Start and End addresses */
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CRCSADD2 = CRCStartAddr;
 1074              		.loc 1 1761 0
 1075 0004 044B     		ldr	r3, .L111
 1076 0006 C3F85401 		str	r0, [r3, #340]
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CRCEADD2 = CRCEndAddr;
 1077              		.loc 1 1762 0
 1078 000a C3F85811 		str	r1, [r3, #344]
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 1079              		.loc 1 1765 0
 1080 000e 7047     		bx	lr
 1081              	.L110:
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     FLASH->CRCEADD1 = CRCEndAddr;
 1082              		.loc 1 1751 0
 1083 0010 014B     		ldr	r3, .L111
ARM GAS  /tmp/ccggNwMO.s 			page 51


 1084 0012 5865     		str	r0, [r3, #84]
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 1085              		.loc 1 1752 0
 1086 0014 9965     		str	r1, [r3, #88]
 1087 0016 7047     		bx	lr
 1088              	.L112:
 1089              		.align	2
 1090              	.L111:
 1091 0018 00200052 		.word	1375739904
 1092              		.cfi_endproc
 1093              	.LFE171:
 1095              		.section	.text.HAL_FLASHEx_OBProgram,"ax",%progbits
 1096              		.align	1
 1097              		.global	HAL_FLASHEx_OBProgram
 1098              		.syntax unified
 1099              		.thumb
 1100              		.thumb_func
 1101              		.fpu fpv5-d16
 1103              	HAL_FLASHEx_OBProgram:
 1104              	.LFB146:
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   HAL_StatusTypeDef status;
 1105              		.loc 1 415 0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 0
 1108              		@ frame_needed = 0, uses_anonymous_args = 0
 1109              	.LVL94:
 1110 0000 38B5     		push	{r3, r4, r5, lr}
 1111              	.LCFI19:
 1112              		.cfi_def_cfa_offset 16
 1113              		.cfi_offset 3, -16
 1114              		.cfi_offset 4, -12
 1115              		.cfi_offset 5, -8
 1116              		.cfi_offset 14, -4
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1117              		.loc 1 422 0
 1118 0002 354B     		ldr	r3, .L134
 1119 0004 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1120 0006 012B     		cmp	r3, #1
 1121 0008 63D0     		beq	.L123
 1122 000a 0446     		mov	r4, r0
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1123              		.loc 1 422 0 is_stmt 0 discriminator 2
 1124 000c 324B     		ldr	r3, .L134
 1125 000e 0121     		movs	r1, #1
 1126 0010 1975     		strb	r1, [r3, #20]
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1127              		.loc 1 425 0 is_stmt 1 discriminator 2
 1128 0012 0022     		movs	r2, #0
 1129 0014 9A61     		str	r2, [r3, #24]
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 1130              		.loc 1 428 0 discriminator 2
 1131 0016 4CF25030 		movw	r0, #50000
 1132              	.LVL95:
 1133 001a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1134              	.LVL96:
 1135 001e 28B1     		cbz	r0, .L127
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
ARM GAS  /tmp/ccggNwMO.s 			page 52


 1136              		.loc 1 430 0
 1137 0020 0125     		movs	r5, #1
 1138              	.L115:
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1139              		.loc 1 543 0
 1140 0022 2D4B     		ldr	r3, .L134
 1141 0024 0022     		movs	r2, #0
 1142 0026 1A75     		strb	r2, [r3, #20]
 1143              	.LVL97:
 1144              	.L114:
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1145              		.loc 1 546 0
 1146 0028 2846     		mov	r0, r5
 1147 002a 38BD     		pop	{r3, r4, r5, pc}
 1148              	.LVL98:
 1149              	.L127:
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 1150              		.loc 1 433 0
 1151 002c 0221     		movs	r1, #2
 1152 002e 4CF25030 		movw	r0, #50000
 1153 0032 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1154              	.LVL99:
 1155 0036 0546     		mov	r5, r0
 1156 0038 0028     		cmp	r0, #0
 1157 003a 48D1     		bne	.L125
 1158              	.LVL100:
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 1159              		.loc 1 446 0
 1160 003c 2368     		ldr	r3, [r4]
 1161 003e 13F0010F 		tst	r3, #1
 1162 0042 06D0     		beq	.L116
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 1163              		.loc 1 450 0
 1164 0044 6368     		ldr	r3, [r4, #4]
 1165 0046 012B     		cmp	r3, #1
 1166 0048 22D0     		beq	.L128
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 1167              		.loc 1 458 0
 1168 004a E169     		ldr	r1, [r4, #28]
 1169 004c A068     		ldr	r0, [r4, #8]
 1170 004e FFF7FEFF 		bl	FLASH_OB_DisableWRP
 1171              	.LVL101:
 1172              	.L116:
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 1173              		.loc 1 463 0
 1174 0052 2368     		ldr	r3, [r4]
 1175 0054 13F0020F 		tst	r3, #2
 1176 0058 1FD1     		bne	.L129
 1177              	.L118:
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 1178              		.loc 1 470 0
 1179 005a 2368     		ldr	r3, [r4]
 1180 005c 13F0040F 		tst	r3, #4
 1181 0060 1FD1     		bne	.L130
 1182              	.L119:
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 1183              		.loc 1 477 0
ARM GAS  /tmp/ccggNwMO.s 			page 53


 1184 0062 2368     		ldr	r3, [r4]
 1185 0064 13F0080F 		tst	r3, #8
 1186 0068 20D1     		bne	.L131
 1187              	.L120:
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 1188              		.loc 1 486 0
 1189 006a 2368     		ldr	r3, [r4]
 1190 006c 13F0100F 		tst	r3, #16
 1191 0070 23D1     		bne	.L132
 1192              	.L121:
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 1193              		.loc 1 505 0
 1194 0072 2368     		ldr	r3, [r4]
 1195 0074 13F0400F 		tst	r3, #64
 1196 0078 23D1     		bne	.L133
 1197              	.L122:
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 1198              		.loc 1 512 0
 1199 007a 2368     		ldr	r3, [r4]
 1200 007c 13F0200F 		tst	r3, #32
 1201 0080 CFD0     		beq	.L115
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 1202              		.loc 1 514 0
 1203 0082 E369     		ldr	r3, [r4, #28]
 1204 0084 226C     		ldr	r2, [r4, #64]
 1205 0086 E16B     		ldr	r1, [r4, #60]
 1206 0088 A06B     		ldr	r0, [r4, #56]
 1207 008a FFF7FEFF 		bl	FLASH_OB_SecureAreaConfig
 1208              	.LVL102:
 1209 008e C8E7     		b	.L115
 1210              	.L128:
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 1211              		.loc 1 453 0
 1212 0090 E169     		ldr	r1, [r4, #28]
 1213 0092 A068     		ldr	r0, [r4, #8]
 1214 0094 FFF7FEFF 		bl	FLASH_OB_EnableWRP
 1215              	.LVL103:
 1216 0098 DBE7     		b	.L116
 1217              	.L129:
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 1218              		.loc 1 466 0
 1219 009a E068     		ldr	r0, [r4, #12]
 1220 009c FFF7FEFF 		bl	FLASH_OB_RDPConfig
 1221              	.LVL104:
 1222 00a0 DBE7     		b	.L118
 1223              	.L130:
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 1224              		.loc 1 473 0
 1225 00a2 A169     		ldr	r1, [r4, #24]
 1226 00a4 6069     		ldr	r0, [r4, #20]
 1227 00a6 FFF7FEFF 		bl	FLASH_OB_UserConfig
 1228              	.LVL105:
 1229 00aa DAE7     		b	.L119
 1230              	.L131:
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 1231              		.loc 1 482 0
 1232 00ac E369     		ldr	r3, [r4, #28]
ARM GAS  /tmp/ccggNwMO.s 			page 54


 1233 00ae A26A     		ldr	r2, [r4, #40]
 1234 00b0 616A     		ldr	r1, [r4, #36]
 1235 00b2 206A     		ldr	r0, [r4, #32]
 1236 00b4 FFF7FEFF 		bl	FLASH_OB_PCROPConfig
 1237              	.LVL106:
 1238 00b8 D7E7     		b	.L120
 1239              	.L132:
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 1240              		.loc 1 488 0
 1241 00ba 2069     		ldr	r0, [r4, #16]
 1242 00bc FFF7FEFF 		bl	FLASH_OB_BOR_LevelConfig
 1243              	.LVL107:
 1244 00c0 D7E7     		b	.L121
 1245              	.L133:
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 1246              		.loc 1 507 0
 1247 00c2 626B     		ldr	r2, [r4, #52]
 1248 00c4 216B     		ldr	r1, [r4, #48]
 1249 00c6 E06A     		ldr	r0, [r4, #44]
 1250 00c8 FFF7FEFF 		bl	FLASH_OB_BootAddConfig
 1251              	.LVL108:
 1252 00cc D5E7     		b	.L122
 1253              	.LVL109:
 1254              	.L125:
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 1255              		.loc 1 435 0
 1256 00ce 0125     		movs	r5, #1
 1257 00d0 A7E7     		b	.L115
 1258              	.LVL110:
 1259              	.L123:
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1260              		.loc 1 422 0
 1261 00d2 0225     		movs	r5, #2
 1262 00d4 A8E7     		b	.L114
 1263              	.L135:
 1264 00d6 00BF     		.align	2
 1265              	.L134:
 1266 00d8 00000000 		.word	pFlash
 1267              		.cfi_endproc
 1268              	.LFE146:
 1270              		.section	.text.HAL_FLASHEx_OBGetConfig,"ax",%progbits
 1271              		.align	1
 1272              		.global	HAL_FLASHEx_OBGetConfig
 1273              		.syntax unified
 1274              		.thumb
 1275              		.thumb_func
 1276              		.fpu fpv5-d16
 1278              	HAL_FLASHEx_OBGetConfig:
 1279              	.LFB147:
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   pOBInit->OptionType = (OPTIONBYTE_USER | OPTIONBYTE_RDP | OPTIONBYTE_BOR);
 1280              		.loc 1 558 0
 1281              		.cfi_startproc
 1282              		@ args = 0, pretend = 0, frame = 0
 1283              		@ frame_needed = 0, uses_anonymous_args = 0
 1284              	.LVL111:
 1285 0000 10B5     		push	{r4, lr}
 1286              	.LCFI20:
ARM GAS  /tmp/ccggNwMO.s 			page 55


 1287              		.cfi_def_cfa_offset 8
 1288              		.cfi_offset 4, -8
 1289              		.cfi_offset 14, -4
 1290 0002 0446     		mov	r4, r0
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1291              		.loc 1 559 0
 1292 0004 1623     		movs	r3, #22
 1293 0006 0360     		str	r3, [r0]
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1294              		.loc 1 562 0
 1295 0008 FFF7FEFF 		bl	FLASH_OB_GetRDP
 1296              	.LVL112:
 1297 000c E060     		str	r0, [r4, #12]
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1298              		.loc 1 565 0
 1299 000e FFF7FEFF 		bl	FLASH_OB_GetUser
 1300              	.LVL113:
 1301 0012 A061     		str	r0, [r4, #24]
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1302              		.loc 1 568 0
 1303 0014 FFF7FEFF 		bl	FLASH_OB_GetBOR
 1304              	.LVL114:
 1305 0018 2061     		str	r0, [r4, #16]
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else
 1306              		.loc 1 571 0
 1307 001a E269     		ldr	r2, [r4, #28]
 1308 001c 531E     		subs	r3, r2, #1
 1309 001e 012B     		cmp	r3, #1
 1310 0020 0AD9     		bls	.L139
 1311              	.L137:
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #if defined(DUAL_CORE)
 1312              		.loc 1 589 0
 1313 0022 04F13401 		add	r1, r4, #52
 1314 0026 04F13000 		add	r0, r4, #48
 1315 002a FFF7FEFF 		bl	FLASH_OB_GetBootAdd
 1316              	.LVL115:
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /*DUAL_CORE*/
 1317              		.loc 1 596 0
 1318 002e 2368     		ldr	r3, [r4]
 1319 0030 43F04003 		orr	r3, r3, #64
 1320 0034 2360     		str	r3, [r4]
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1321              		.loc 1 619 0
 1322 0036 10BD     		pop	{r4, pc}
 1323              	.LVL116:
 1324              	.L139:
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1325              		.loc 1 576 0
 1326 0038 2368     		ldr	r3, [r4]
 1327 003a 43F02903 		orr	r3, r3, #41
 1328 003e 2146     		mov	r1, r4
 1329 0040 41F8083B 		str	r3, [r1], #8
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1330              		.loc 1 579 0
 1331 0044 201D     		adds	r0, r4, #4
 1332 0046 FFF7FEFF 		bl	FLASH_OB_GetWRP
 1333              	.LVL117:
ARM GAS  /tmp/ccggNwMO.s 			page 56


 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1334              		.loc 1 582 0
 1335 004a E369     		ldr	r3, [r4, #28]
 1336 004c 04F12802 		add	r2, r4, #40
 1337 0050 04F12401 		add	r1, r4, #36
 1338 0054 04F12000 		add	r0, r4, #32
 1339 0058 FFF7FEFF 		bl	FLASH_OB_GetPCROP
 1340              	.LVL118:
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 1341              		.loc 1 585 0
 1342 005c E369     		ldr	r3, [r4, #28]
 1343 005e 04F14002 		add	r2, r4, #64
 1344 0062 04F13C01 		add	r1, r4, #60
 1345 0066 04F13800 		add	r0, r4, #56
 1346 006a FFF7FEFF 		bl	FLASH_OB_GetSecureArea
 1347              	.LVL119:
 1348 006e D8E7     		b	.L137
 1349              		.cfi_endproc
 1350              	.LFE147:
 1352              		.section	.text.HAL_FLASHEx_Unlock_Bank1,"ax",%progbits
 1353              		.align	1
 1354              		.global	HAL_FLASHEx_Unlock_Bank1
 1355              		.syntax unified
 1356              		.thumb
 1357              		.thumb_func
 1358              		.fpu fpv5-d16
 1360              	HAL_FLASHEx_Unlock_Bank1:
 1361              	.LFB148:
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if(READ_BIT(FLASH->CR1, FLASH_CR_LOCK) != 0U)
 1362              		.loc 1 626 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 0
 1365              		@ frame_needed = 0, uses_anonymous_args = 0
 1366              		@ link register save eliminated.
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 1367              		.loc 1 627 0
 1368 0000 0A4B     		ldr	r3, .L145
 1369 0002 DB68     		ldr	r3, [r3, #12]
 1370 0004 13F0010F 		tst	r3, #1
 1371 0008 0DD0     		beq	.L142
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     WRITE_REG(FLASH->KEYR1, FLASH_KEY2);
 1372              		.loc 1 630 0
 1373 000a 084B     		ldr	r3, .L145
 1374 000c 084A     		ldr	r2, .L145+4
 1375 000e 5A60     		str	r2, [r3, #4]
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1376              		.loc 1 631 0
 1377 0010 02F18832 		add	r2, r2, #-2004318072
 1378 0014 5A60     		str	r2, [r3, #4]
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 1379              		.loc 1 634 0
 1380 0016 DB68     		ldr	r3, [r3, #12]
 1381 0018 13F0010F 		tst	r3, #1
 1382 001c 01D1     		bne	.L144
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 1383              		.loc 1 640 0
 1384 001e 0020     		movs	r0, #0
ARM GAS  /tmp/ccggNwMO.s 			page 57


 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1385              		.loc 1 641 0
 1386 0020 7047     		bx	lr
 1387              	.L144:
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 1388              		.loc 1 636 0
 1389 0022 0120     		movs	r0, #1
 1390 0024 7047     		bx	lr
 1391              	.L142:
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 1392              		.loc 1 640 0
 1393 0026 0020     		movs	r0, #0
 1394 0028 7047     		bx	lr
 1395              	.L146:
 1396 002a 00BF     		.align	2
 1397              	.L145:
 1398 002c 00200052 		.word	1375739904
 1399 0030 23016745 		.word	1164378403
 1400              		.cfi_endproc
 1401              	.LFE148:
 1403              		.section	.text.HAL_FLASHEx_Lock_Bank1,"ax",%progbits
 1404              		.align	1
 1405              		.global	HAL_FLASHEx_Lock_Bank1
 1406              		.syntax unified
 1407              		.thumb
 1408              		.thumb_func
 1409              		.fpu fpv5-d16
 1411              	HAL_FLASHEx_Lock_Bank1:
 1412              	.LFB149:
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Set the LOCK Bit to lock the FLASH Bank1 Registers access */
 1413              		.loc 1 648 0
 1414              		.cfi_startproc
 1415              		@ args = 0, pretend = 0, frame = 0
 1416              		@ frame_needed = 0, uses_anonymous_args = 0
 1417              		@ link register save eliminated.
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   return HAL_OK;
 1418              		.loc 1 650 0
 1419 0000 034A     		ldr	r2, .L148
 1420 0002 D368     		ldr	r3, [r2, #12]
 1421 0004 43F00103 		orr	r3, r3, #1
 1422 0008 D360     		str	r3, [r2, #12]
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1423              		.loc 1 652 0
 1424 000a 0020     		movs	r0, #0
 1425 000c 7047     		bx	lr
 1426              	.L149:
 1427 000e 00BF     		.align	2
 1428              	.L148:
 1429 0010 00200052 		.word	1375739904
 1430              		.cfi_endproc
 1431              	.LFE149:
 1433              		.section	.text.HAL_FLASHEx_Unlock_Bank2,"ax",%progbits
 1434              		.align	1
 1435              		.global	HAL_FLASHEx_Unlock_Bank2
 1436              		.syntax unified
 1437              		.thumb
 1438              		.thumb_func
ARM GAS  /tmp/ccggNwMO.s 			page 58


 1439              		.fpu fpv5-d16
 1441              	HAL_FLASHEx_Unlock_Bank2:
 1442              	.LFB150:
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   if(READ_BIT(FLASH->CR2, FLASH_CR_LOCK) != 0U)
 1443              		.loc 1 660 0
 1444              		.cfi_startproc
 1445              		@ args = 0, pretend = 0, frame = 0
 1446              		@ frame_needed = 0, uses_anonymous_args = 0
 1447              		@ link register save eliminated.
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 1448              		.loc 1 661 0
 1449 0000 0C4B     		ldr	r3, .L155
 1450 0002 D3F80C31 		ldr	r3, [r3, #268]
 1451 0006 13F0010F 		tst	r3, #1
 1452 000a 10D0     		beq	.L152
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     WRITE_REG(FLASH->KEYR2, FLASH_KEY2);
 1453              		.loc 1 664 0
 1454 000c 094B     		ldr	r3, .L155
 1455 000e 0A4A     		ldr	r2, .L155+4
 1456 0010 C3F80421 		str	r2, [r3, #260]
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1457              		.loc 1 665 0
 1458 0014 02F18832 		add	r2, r2, #-2004318072
 1459 0018 C3F80421 		str	r2, [r3, #260]
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 1460              		.loc 1 668 0
 1461 001c D3F80C31 		ldr	r3, [r3, #268]
 1462 0020 13F0010F 		tst	r3, #1
 1463 0024 01D1     		bne	.L154
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 1464              		.loc 1 674 0
 1465 0026 0020     		movs	r0, #0
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1466              		.loc 1 675 0
 1467 0028 7047     		bx	lr
 1468              	.L154:
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 1469              		.loc 1 670 0
 1470 002a 0120     		movs	r0, #1
 1471 002c 7047     		bx	lr
 1472              	.L152:
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** }
 1473              		.loc 1 674 0
 1474 002e 0020     		movs	r0, #0
 1475 0030 7047     		bx	lr
 1476              	.L156:
 1477 0032 00BF     		.align	2
 1478              	.L155:
 1479 0034 00200052 		.word	1375739904
 1480 0038 23016745 		.word	1164378403
 1481              		.cfi_endproc
 1482              	.LFE150:
 1484              		.section	.text.HAL_FLASHEx_Lock_Bank2,"ax",%progbits
 1485              		.align	1
 1486              		.global	HAL_FLASHEx_Lock_Bank2
 1487              		.syntax unified
 1488              		.thumb
ARM GAS  /tmp/ccggNwMO.s 			page 59


 1489              		.thumb_func
 1490              		.fpu fpv5-d16
 1492              	HAL_FLASHEx_Lock_Bank2:
 1493              	.LFB151:
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   /* Set the LOCK Bit to lock the FLASH Bank2 Registers access */
 1494              		.loc 1 682 0
 1495              		.cfi_startproc
 1496              		@ args = 0, pretend = 0, frame = 0
 1497              		@ frame_needed = 0, uses_anonymous_args = 0
 1498              		@ link register save eliminated.
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   return HAL_OK;
 1499              		.loc 1 684 0
 1500 0000 044A     		ldr	r2, .L158
 1501 0002 D2F80C31 		ldr	r3, [r2, #268]
 1502 0006 43F00103 		orr	r3, r3, #1
 1503 000a C2F80C31 		str	r3, [r2, #268]
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #endif /* DUAL_BANK */
 1504              		.loc 1 686 0
 1505 000e 0020     		movs	r0, #0
 1506 0010 7047     		bx	lr
 1507              	.L159:
 1508 0012 00BF     		.align	2
 1509              	.L158:
 1510 0014 00200052 		.word	1375739904
 1511              		.cfi_endproc
 1512              	.LFE151:
 1514              		.section	.text.HAL_FLASHEx_ComputeCRC,"ax",%progbits
 1515              		.align	1
 1516              		.global	HAL_FLASHEx_ComputeCRC
 1517              		.syntax unified
 1518              		.thumb
 1519              		.thumb_func
 1520              		.fpu fpv5-d16
 1522              	HAL_FLASHEx_ComputeCRC:
 1523              	.LFB152:
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   HAL_StatusTypeDef status;
 1524              		.loc 1 701 0
 1525              		.cfi_startproc
 1526              		@ args = 0, pretend = 0, frame = 0
 1527              		@ frame_needed = 0, uses_anonymous_args = 0
 1528              	.LVL120:
 1529 0000 70B5     		push	{r4, r5, r6, lr}
 1530              	.LCFI21:
 1531              		.cfi_def_cfa_offset 16
 1532              		.cfi_offset 4, -16
 1533              		.cfi_offset 5, -12
 1534              		.cfi_offset 6, -8
 1535              		.cfi_offset 14, -4
 1536 0002 0446     		mov	r4, r0
 1537 0004 0E46     		mov	r6, r1
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1538              		.loc 1 710 0
 1539 0006 4CF25030 		movw	r0, #50000
 1540              	.LVL121:
 1541 000a FFF7FEFF 		bl	FLASH_OB_WaitForLastOperation
 1542              	.LVL122:
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
ARM GAS  /tmp/ccggNwMO.s 			page 60


 1543              		.loc 1 712 0
 1544 000e 0346     		mov	r3, r0
 1545 0010 0028     		cmp	r0, #0
 1546 0012 40F09E80 		bne	.L161
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 1547              		.loc 1 714 0
 1548 0016 A368     		ldr	r3, [r4, #8]
 1549 0018 012B     		cmp	r3, #1
 1550 001a 25D0     		beq	.L174
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1551              		.loc 1 766 0
 1552 001c 514B     		ldr	r3, .L177
 1553 001e D3F80C21 		ldr	r2, [r3, #268]
 1554 0022 42F40042 		orr	r2, r2, #32768
 1555 0026 C3F80C21 		str	r2, [r3, #268]
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1556              		.loc 1 769 0
 1557 002a D3F81421 		ldr	r2, [r3, #276]
 1558 002e 42F0C052 		orr	r2, r2, #402653184
 1559 0032 C3F81421 		str	r2, [r3, #276]
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1560              		.loc 1 772 0
 1561 0036 D3F85021 		ldr	r2, [r3, #336]
 1562 003a 6168     		ldr	r1, [r4, #4]
 1563 003c 2068     		ldr	r0, [r4]
 1564              	.LVL123:
 1565 003e 0143     		orrs	r1, r1, r0
 1566 0040 0A43     		orrs	r2, r2, r1
 1567 0042 42F40032 		orr	r2, r2, #131072
 1568 0046 C3F85021 		str	r2, [r3, #336]
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 1569              		.loc 1 774 0
 1570 004a 2368     		ldr	r3, [r4]
 1571 004c B3F5807F 		cmp	r3, #256
 1572 0050 53D0     		beq	.L175
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 1573              		.loc 1 785 0
 1574 0052 454A     		ldr	r2, .L177+4
 1575 0054 9342     		cmp	r3, r2
 1576 0056 7ED1     		bne	.L172
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 1577              		.loc 1 788 0
 1578 0058 424A     		ldr	r2, .L177
 1579 005a D2F85031 		ldr	r3, [r2, #336]
 1580 005e 43F48003 		orr	r3, r3, #4194304
 1581 0062 C2F85031 		str	r3, [r2, #336]
 1582 0066 5BE0     		b	.L171
 1583              	.LVL124:
 1584              	.L174:
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1585              		.loc 1 717 0
 1586 0068 3E4B     		ldr	r3, .L177
 1587 006a DA68     		ldr	r2, [r3, #12]
 1588 006c 42F40042 		orr	r2, r2, #32768
 1589 0070 DA60     		str	r2, [r3, #12]
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1590              		.loc 1 720 0
ARM GAS  /tmp/ccggNwMO.s 			page 61


 1591 0072 5A69     		ldr	r2, [r3, #20]
 1592 0074 42F0C052 		orr	r2, r2, #402653184
 1593 0078 5A61     		str	r2, [r3, #20]
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1594              		.loc 1 723 0
 1595 007a 1A6D     		ldr	r2, [r3, #80]
 1596 007c 6168     		ldr	r1, [r4, #4]
 1597 007e 2068     		ldr	r0, [r4]
 1598              	.LVL125:
 1599 0080 0143     		orrs	r1, r1, r0
 1600 0082 0A43     		orrs	r2, r2, r1
 1601 0084 42F40032 		orr	r2, r2, #131072
 1602 0088 1A65     		str	r2, [r3, #80]
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 1603              		.loc 1 725 0
 1604 008a 2368     		ldr	r3, [r4]
 1605 008c B3F5807F 		cmp	r3, #256
 1606 0090 1CD0     		beq	.L176
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 1607              		.loc 1 736 0
 1608 0092 354A     		ldr	r2, .L177+4
 1609 0094 9342     		cmp	r3, r2
 1610 0096 2AD1     		bne	.L167
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 1611              		.loc 1 739 0
 1612 0098 324A     		ldr	r2, .L177
 1613 009a 136D     		ldr	r3, [r2, #80]
 1614 009c 43F48003 		orr	r3, r3, #4194304
 1615 00a0 1365     		str	r3, [r2, #80]
 1616              	.L166:
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1617              		.loc 1 748 0
 1618 00a2 304C     		ldr	r4, .L177
 1619              	.LVL126:
 1620 00a4 236D     		ldr	r3, [r4, #80]
 1621 00a6 43F48033 		orr	r3, r3, #65536
 1622 00aa 2365     		str	r3, [r4, #80]
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1623              		.loc 1 751 0
 1624 00ac 0121     		movs	r1, #1
 1625 00ae 4CF25030 		movw	r0, #50000
 1626 00b2 FFF7FEFF 		bl	FLASH_CRC_WaitForLastOperation
 1627              	.LVL127:
 1628 00b6 0346     		mov	r3, r0
 1629              	.LVL128:
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1630              		.loc 1 754 0
 1631 00b8 E26D     		ldr	r2, [r4, #92]
 1632 00ba 3260     		str	r2, [r6]
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1633              		.loc 1 757 0
 1634 00bc E268     		ldr	r2, [r4, #12]
 1635 00be 22F40042 		bic	r2, r2, #32768
 1636 00c2 E260     		str	r2, [r4, #12]
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 1637              		.loc 1 760 0
 1638 00c4 4FF0C052 		mov	r2, #402653184
ARM GAS  /tmp/ccggNwMO.s 			page 62


 1639 00c8 6261     		str	r2, [r4, #20]
 1640 00ca 42E0     		b	.L161
 1641              	.LVL129:
 1642              	.L176:
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1643              		.loc 1 728 0
 1644 00cc 254A     		ldr	r2, .L177
 1645 00ce 136D     		ldr	r3, [r2, #80]
 1646 00d0 43F48063 		orr	r3, r3, #1024
 1647 00d4 1365     		str	r3, [r2, #80]
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
 1648              		.loc 1 731 0
 1649 00d6 E568     		ldr	r5, [r4, #12]
 1650              	.LVL130:
 1651              	.L164:
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
 1652              		.loc 1 731 0 is_stmt 0 discriminator 1
 1653 00d8 2369     		ldr	r3, [r4, #16]
 1654 00da E268     		ldr	r2, [r4, #12]
 1655 00dc 1344     		add	r3, r3, r2
 1656 00de AB42     		cmp	r3, r5
 1657 00e0 DFD9     		bls	.L166
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         }
 1658              		.loc 1 733 0 is_stmt 1 discriminator 3
 1659 00e2 0121     		movs	r1, #1
 1660 00e4 2846     		mov	r0, r5
 1661 00e6 FFF7FEFF 		bl	FLASH_CRC_AddSector
 1662              	.LVL131:
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
 1663              		.loc 1 731 0 discriminator 3
 1664 00ea 0135     		adds	r5, r5, #1
 1665              	.LVL132:
 1666 00ec F4E7     		b	.L164
 1667              	.LVL133:
 1668              	.L167:
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 1669              		.loc 1 744 0
 1670 00ee 0122     		movs	r2, #1
 1671 00f0 A169     		ldr	r1, [r4, #24]
 1672 00f2 6069     		ldr	r0, [r4, #20]
 1673 00f4 FFF7FEFF 		bl	FLASH_CRC_SelectAddress
 1674              	.LVL134:
 1675 00f8 D3E7     		b	.L166
 1676              	.L175:
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1677              		.loc 1 777 0
 1678 00fa 1A4A     		ldr	r2, .L177
 1679 00fc D2F85031 		ldr	r3, [r2, #336]
 1680 0100 43F48063 		orr	r3, r3, #1024
 1681 0104 C2F85031 		str	r3, [r2, #336]
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
 1682              		.loc 1 780 0
 1683 0108 E568     		ldr	r5, [r4, #12]
 1684              	.LVL135:
 1685 010a 04E0     		b	.L169
 1686              	.L170:
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         }
ARM GAS  /tmp/ccggNwMO.s 			page 63


 1687              		.loc 1 782 0 discriminator 3
 1688 010c 0221     		movs	r1, #2
 1689 010e 2846     		mov	r0, r5
 1690 0110 FFF7FEFF 		bl	FLASH_CRC_AddSector
 1691              	.LVL136:
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
 1692              		.loc 1 780 0 discriminator 3
 1693 0114 0135     		adds	r5, r5, #1
 1694              	.LVL137:
 1695              	.L169:
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
 1696              		.loc 1 780 0 is_stmt 0 discriminator 1
 1697 0116 2369     		ldr	r3, [r4, #16]
 1698 0118 E268     		ldr	r2, [r4, #12]
 1699 011a 1344     		add	r3, r3, r2
 1700 011c AB42     		cmp	r3, r5
 1701 011e F5D8     		bhi	.L170
 1702              	.LVL138:
 1703              	.L171:
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1704              		.loc 1 797 0 is_stmt 1
 1705 0120 104C     		ldr	r4, .L177
 1706              	.LVL139:
 1707 0122 D4F85031 		ldr	r3, [r4, #336]
 1708 0126 43F48033 		orr	r3, r3, #65536
 1709 012a C4F85031 		str	r3, [r4, #336]
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1710              		.loc 1 800 0
 1711 012e 0221     		movs	r1, #2
 1712 0130 4CF25030 		movw	r0, #50000
 1713 0134 FFF7FEFF 		bl	FLASH_CRC_WaitForLastOperation
 1714              	.LVL140:
 1715 0138 0346     		mov	r3, r0
 1716              	.LVL141:
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1717              		.loc 1 803 0
 1718 013a E26D     		ldr	r2, [r4, #92]
 1719 013c 3260     		str	r2, [r6]
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1720              		.loc 1 806 0
 1721 013e D4F80C21 		ldr	r2, [r4, #268]
 1722 0142 22F40042 		bic	r2, r2, #32768
 1723 0146 C4F80C21 		str	r2, [r4, #268]
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 1724              		.loc 1 809 0
 1725 014a 4FF0C052 		mov	r2, #402653184
 1726 014e C4F81421 		str	r2, [r4, #276]
 1727              	.LVL142:
 1728              	.L161:
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1729              		.loc 1 815 0
 1730 0152 1846     		mov	r0, r3
 1731 0154 70BD     		pop	{r4, r5, r6, pc}
 1732              	.LVL143:
 1733              	.L172:
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 1734              		.loc 1 793 0
ARM GAS  /tmp/ccggNwMO.s 			page 64


 1735 0156 0222     		movs	r2, #2
 1736 0158 A169     		ldr	r1, [r4, #24]
 1737 015a 6069     		ldr	r0, [r4, #20]
 1738 015c FFF7FEFF 		bl	FLASH_CRC_SelectAddress
 1739              	.LVL144:
 1740 0160 DEE7     		b	.L171
 1741              	.L178:
 1742 0162 00BF     		.align	2
 1743              	.L177:
 1744 0164 00200052 		.word	1375739904
 1745 0168 00014000 		.word	4194560
 1746              		.cfi_endproc
 1747              	.LFE152:
 1749              		.section	.text.FLASH_Erase_Sector,"ax",%progbits
 1750              		.align	1
 1751              		.global	FLASH_Erase_Sector
 1752              		.syntax unified
 1753              		.thumb
 1754              		.thumb_func
 1755              		.fpu fpv5-d16
 1757              	FLASH_Erase_Sector:
 1758              	.LFB154:
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   assert_param(IS_FLASH_SECTOR(Sector));
 1759              		.loc 1 926 0
 1760              		.cfi_startproc
 1761              		@ args = 0, pretend = 0, frame = 0
 1762              		@ frame_needed = 0, uses_anonymous_args = 0
 1763              		@ link register save eliminated.
 1764              	.LVL145:
 1765 0000 30B4     		push	{r4, r5}
 1766              	.LCFI22:
 1767              		.cfi_def_cfa_offset 8
 1768              		.cfi_offset 4, -8
 1769              		.cfi_offset 5, -4
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 1770              		.loc 1 935 0
 1771 0002 11F0010F 		tst	r1, #1
 1772 0006 0BD0     		beq	.L180
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1773              		.loc 1 939 0
 1774 0008 104C     		ldr	r4, .L183
 1775 000a E368     		ldr	r3, [r4, #12]
 1776 000c 23F4E663 		bic	r3, r3, #1840
 1777 0010 E360     		str	r3, [r4, #12]
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else
 1778              		.loc 1 941 0
 1779 0012 E368     		ldr	r3, [r4, #12]
 1780 0014 42EA0025 		orr	r5, r2, r0, lsl #8
 1781 0018 2B43     		orrs	r3, r3, r5
 1782 001a 43F08403 		orr	r3, r3, #132
 1783 001e E360     		str	r3, [r4, #12]
 1784              	.L180:
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 1785              		.loc 1 951 0
 1786 0020 11F0020F 		tst	r1, #2
 1787 0024 0FD0     		beq	.L179
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
ARM GAS  /tmp/ccggNwMO.s 			page 65


 1788              		.loc 1 955 0
 1789 0026 0949     		ldr	r1, .L183
 1790              	.LVL146:
 1791 0028 D1F80C31 		ldr	r3, [r1, #268]
 1792 002c 23F4E663 		bic	r3, r3, #1840
 1793 0030 C1F80C31 		str	r3, [r1, #268]
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** #else
 1794              		.loc 1 957 0
 1795 0034 D1F80C31 		ldr	r3, [r1, #268]
 1796 0038 42EA0022 		orr	r2, r2, r0, lsl #8
 1797              	.LVL147:
 1798 003c 1A43     		orrs	r2, r2, r3
 1799 003e 42F08402 		orr	r2, r2, #132
 1800 0042 C1F80C21 		str	r2, [r1, #268]
 1801              	.L179:
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1802              		.loc 1 966 0
 1803 0046 30BC     		pop	{r4, r5}
 1804              	.LCFI23:
 1805              		.cfi_restore 5
 1806              		.cfi_restore 4
 1807              		.cfi_def_cfa_offset 0
 1808 0048 7047     		bx	lr
 1809              	.L184:
 1810 004a 00BF     		.align	2
 1811              	.L183:
 1812 004c 00200052 		.word	1375739904
 1813              		.cfi_endproc
 1814              	.LFE154:
 1816              		.section	.text.HAL_FLASHEx_Erase,"ax",%progbits
 1817              		.align	1
 1818              		.global	HAL_FLASHEx_Erase
 1819              		.syntax unified
 1820              		.thumb
 1821              		.thumb_func
 1822              		.fpu fpv5-d16
 1824              	HAL_FLASHEx_Erase:
 1825              	.LFB144:
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1826              		.loc 1 177 0
 1827              		.cfi_startproc
 1828              		@ args = 0, pretend = 0, frame = 0
 1829              		@ frame_needed = 0, uses_anonymous_args = 0
 1830              	.LVL148:
 1831 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1832              	.LCFI24:
 1833              		.cfi_def_cfa_offset 24
 1834              		.cfi_offset 3, -24
 1835              		.cfi_offset 4, -20
 1836              		.cfi_offset 5, -16
 1837              		.cfi_offset 6, -12
 1838              		.cfi_offset 7, -8
 1839              		.cfi_offset 14, -4
 1840              	.LVL149:
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1841              		.loc 1 186 0
 1842 0002 474B     		ldr	r3, .L212
ARM GAS  /tmp/ccggNwMO.s 			page 66


 1843 0004 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1844 0006 012B     		cmp	r3, #1
 1845 0008 00F08880 		beq	.L199
 1846 000c 0F46     		mov	r7, r1
 1847 000e 0446     		mov	r4, r0
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1848              		.loc 1 186 0 is_stmt 0 discriminator 2
 1849 0010 434B     		ldr	r3, .L212
 1850 0012 0122     		movs	r2, #1
 1851 0014 1A75     		strb	r2, [r3, #20]
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1852              		.loc 1 189 0 is_stmt 1 discriminator 2
 1853 0016 0022     		movs	r2, #0
 1854 0018 9A61     		str	r2, [r3, #24]
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 1855              		.loc 1 192 0 discriminator 2
 1856 001a 4368     		ldr	r3, [r0, #4]
 1857 001c 13F0010F 		tst	r3, #1
 1858 0020 0DD1     		bne	.L206
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   uint32_t sector_index;
 1859              		.loc 1 178 0
 1860 0022 0026     		movs	r6, #0
 1861              	.LVL150:
 1862              	.L187:
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 1863              		.loc 1 202 0
 1864 0024 6368     		ldr	r3, [r4, #4]
 1865 0026 13F0020F 		tst	r3, #2
 1866 002a 12D1     		bne	.L207
 1867              	.L188:
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 1868              		.loc 1 211 0
 1869 002c CEB9     		cbnz	r6, .L189
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 1870              		.loc 1 213 0
 1871 002e 2368     		ldr	r3, [r4]
 1872 0030 012B     		cmp	r3, #1
 1873 0032 1BD0     		beq	.L208
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1874              		.loc 1 244 0
 1875 0034 4FF0FF33 		mov	r3, #-1
 1876 0038 3B60     		str	r3, [r7]
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 1877              		.loc 1 247 0
 1878 003a A568     		ldr	r5, [r4, #8]
 1879              	.LVL151:
 1880 003c 4CE0     		b	.L194
 1881              	.LVL152:
 1882              	.L206:
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 1883              		.loc 1 194 0
 1884 003e 0121     		movs	r1, #1
 1885              	.LVL153:
 1886 0040 4CF25030 		movw	r0, #50000
 1887              	.LVL154:
 1888 0044 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1889              	.LVL155:
ARM GAS  /tmp/ccggNwMO.s 			page 67


 1890 0048 0646     		mov	r6, r0
 1891 004a 0028     		cmp	r0, #0
 1892 004c EAD0     		beq	.L187
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 1893              		.loc 1 196 0
 1894 004e 0126     		movs	r6, #1
 1895 0050 E8E7     		b	.L187
 1896              	.LVL156:
 1897              	.L207:
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 1898              		.loc 1 204 0
 1899 0052 0221     		movs	r1, #2
 1900 0054 4CF25030 		movw	r0, #50000
 1901 0058 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1902              	.LVL157:
 1903 005c 0028     		cmp	r0, #0
 1904 005e E5D0     		beq	.L188
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 1905              		.loc 1 206 0
 1906 0060 0126     		movs	r6, #1
 1907              	.LVL158:
 1908              	.L189:
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1909              		.loc 1 281 0
 1910 0062 2F4B     		ldr	r3, .L212
 1911 0064 0022     		movs	r2, #0
 1912 0066 1A75     		strb	r2, [r3, #20]
 1913              	.LVL159:
 1914              	.L186:
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1915              		.loc 1 284 0
 1916 0068 3046     		mov	r0, r6
 1917 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1918              	.LVL160:
 1919              	.L208:
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1920              		.loc 1 216 0
 1921 006c 6168     		ldr	r1, [r4, #4]
 1922 006e 2069     		ldr	r0, [r4, #16]
 1923 0070 FFF7FEFF 		bl	FLASH_MassErase
 1924              	.LVL161:
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 1925              		.loc 1 219 0
 1926 0074 6368     		ldr	r3, [r4, #4]
 1927 0076 13F0010F 		tst	r3, #1
 1928 007a 12D1     		bne	.L209
 1929              	.L191:
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 1930              		.loc 1 230 0
 1931 007c 6368     		ldr	r3, [r4, #4]
 1932 007e 13F0020F 		tst	r3, #2
 1933 0082 EED0     		beq	.L189
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
 1934              		.loc 1 232 0
 1935 0084 0221     		movs	r1, #2
 1936 0086 4CF25030 		movw	r0, #50000
 1937 008a FFF7FEFF 		bl	FLASH_WaitForLastOperation
ARM GAS  /tmp/ccggNwMO.s 			page 68


 1938              	.LVL162:
 1939 008e 00B1     		cbz	r0, .L193
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         }
 1940              		.loc 1 234 0
 1941 0090 0126     		movs	r6, #1
 1942              	.LVL163:
 1943              	.L193:
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 1944              		.loc 1 237 0
 1945 0092 244A     		ldr	r2, .L212+4
 1946 0094 D2F80C31 		ldr	r3, [r2, #268]
 1947 0098 23F00803 		bic	r3, r3, #8
 1948 009c C2F80C31 		str	r3, [r2, #268]
 1949 00a0 DFE7     		b	.L189
 1950              	.L209:
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
 1951              		.loc 1 221 0
 1952 00a2 0121     		movs	r1, #1
 1953 00a4 4CF25030 		movw	r0, #50000
 1954 00a8 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1955              	.LVL164:
 1956 00ac 00B1     		cbz	r0, .L192
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         }
 1957              		.loc 1 223 0
 1958 00ae 0126     		movs	r6, #1
 1959              	.LVL165:
 1960              	.L192:
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 1961              		.loc 1 226 0
 1962 00b0 1C4A     		ldr	r2, .L212+4
 1963 00b2 D368     		ldr	r3, [r2, #12]
 1964 00b4 23F00803 		bic	r3, r3, #8
 1965 00b8 D360     		str	r3, [r2, #12]
 1966 00ba DFE7     		b	.L191
 1967              	.LVL166:
 1968              	.L211:
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1969              		.loc 1 254 0
 1970 00bc 0121     		movs	r1, #1
 1971 00be 4CF25030 		movw	r0, #50000
 1972 00c2 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1973              	.LVL167:
 1974 00c6 0646     		mov	r6, r0
 1975              	.LVL168:
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         }
 1976              		.loc 1 257 0
 1977 00c8 164A     		ldr	r2, .L212+4
 1978 00ca D168     		ldr	r1, [r2, #12]
 1979 00cc 164B     		ldr	r3, .L212+8
 1980 00ce 0B40     		ands	r3, r3, r1
 1981 00d0 D360     		str	r3, [r2, #12]
 1982 00d2 0FE0     		b	.L195
 1983              	.L196:
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
 1984              		.loc 1 270 0
 1985 00d4 06BB     		cbnz	r6, .L210
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
ARM GAS  /tmp/ccggNwMO.s 			page 69


 1986              		.loc 1 247 0 discriminator 2
 1987 00d6 0135     		adds	r5, r5, #1
 1988              	.LVL169:
 1989              	.L194:
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 1990              		.loc 1 247 0 is_stmt 0 discriminator 1
 1991 00d8 E368     		ldr	r3, [r4, #12]
 1992 00da A268     		ldr	r2, [r4, #8]
 1993 00dc 1344     		add	r3, r3, r2
 1994 00de AB42     		cmp	r3, r5
 1995 00e0 BFD9     		bls	.L189
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 1996              		.loc 1 249 0 is_stmt 1
 1997 00e2 2269     		ldr	r2, [r4, #16]
 1998 00e4 6168     		ldr	r1, [r4, #4]
 1999 00e6 2846     		mov	r0, r5
 2000 00e8 FFF7FEFF 		bl	FLASH_Erase_Sector
 2001              	.LVL170:
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
 2002              		.loc 1 251 0
 2003 00ec 6368     		ldr	r3, [r4, #4]
 2004 00ee 13F0010F 		tst	r3, #1
 2005 00f2 E3D1     		bne	.L211
 2006              	.L195:
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         {
 2007              		.loc 1 260 0
 2008 00f4 6368     		ldr	r3, [r4, #4]
 2009 00f6 13F0020F 		tst	r3, #2
 2010 00fa EBD0     		beq	.L196
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 2011              		.loc 1 263 0
 2012 00fc 0221     		movs	r1, #2
 2013 00fe 4CF25030 		movw	r0, #50000
 2014 0102 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2015              	.LVL171:
 2016 0106 0646     		mov	r6, r0
 2017              	.LVL172:
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         }
 2018              		.loc 1 266 0
 2019 0108 064A     		ldr	r2, .L212+4
 2020 010a D2F80C11 		ldr	r1, [r2, #268]
 2021 010e 064B     		ldr	r3, .L212+8
 2022 0110 0B40     		ands	r3, r3, r1
 2023 0112 C2F80C31 		str	r3, [r2, #268]
 2024 0116 DDE7     		b	.L196
 2025              	.L210:
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****           break;
 2026              		.loc 1 273 0
 2027 0118 3D60     		str	r5, [r7]
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****         }
 2028              		.loc 1 274 0
 2029 011a A2E7     		b	.L189
 2030              	.LVL173:
 2031              	.L199:
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 2032              		.loc 1 186 0
 2033 011c 0226     		movs	r6, #2
ARM GAS  /tmp/ccggNwMO.s 			page 70


 2034 011e A3E7     		b	.L186
 2035              	.L213:
 2036              		.align	2
 2037              	.L212:
 2038 0120 00000000 		.word	pFlash
 2039 0124 00200052 		.word	1375739904
 2040 0128 FBF8FFFF 		.word	-1797
 2041              		.cfi_endproc
 2042              	.LFE144:
 2044              		.section	.text.HAL_FLASHEx_Erase_IT,"ax",%progbits
 2045              		.align	1
 2046              		.global	HAL_FLASHEx_Erase_IT
 2047              		.syntax unified
 2048              		.thumb
 2049              		.thumb_func
 2050              		.fpu fpv5-d16
 2052              	HAL_FLASHEx_Erase_IT:
 2053              	.LFB145:
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 2054              		.loc 1 294 0
 2055              		.cfi_startproc
 2056              		@ args = 0, pretend = 0, frame = 0
 2057              		@ frame_needed = 0, uses_anonymous_args = 0
 2058              	.LVL174:
 2059 0000 38B5     		push	{r3, r4, r5, lr}
 2060              	.LCFI25:
 2061              		.cfi_def_cfa_offset 16
 2062              		.cfi_offset 3, -16
 2063              		.cfi_offset 4, -12
 2064              		.cfi_offset 5, -8
 2065              		.cfi_offset 14, -4
 2066              	.LVL175:
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 2067              		.loc 1 302 0
 2068 0002 374B     		ldr	r3, .L239
 2069 0004 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 2070 0006 012B     		cmp	r3, #1
 2071 0008 68D0     		beq	.L228
 2072 000a 0446     		mov	r4, r0
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 2073              		.loc 1 302 0 is_stmt 0 discriminator 2
 2074 000c 344B     		ldr	r3, .L239
 2075 000e 0122     		movs	r2, #1
 2076 0010 1A75     		strb	r2, [r3, #20]
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 2077              		.loc 1 305 0 is_stmt 1 discriminator 2
 2078 0012 0022     		movs	r2, #0
 2079 0014 9A61     		str	r2, [r3, #24]
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 2080              		.loc 1 308 0 discriminator 2
 2081 0016 4368     		ldr	r3, [r0, #4]
 2082 0018 13F0010F 		tst	r3, #1
 2083 001c 2FD1     		bne	.L233
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 2084              		.loc 1 295 0
 2085 001e 0025     		movs	r5, #0
 2086              	.LVL176:
ARM GAS  /tmp/ccggNwMO.s 			page 71


 2087              	.L216:
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 2088              		.loc 1 318 0
 2089 0020 6368     		ldr	r3, [r4, #4]
 2090 0022 13F0020F 		tst	r3, #2
 2091 0026 34D1     		bne	.L234
 2092              	.L217:
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   {
 2093              		.loc 1 327 0
 2094 0028 002D     		cmp	r5, #0
 2095 002a 3AD1     		bne	.L218
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 2096              		.loc 1 334 0
 2097 002c 6368     		ldr	r3, [r4, #4]
 2098 002e 13F0010F 		tst	r3, #1
 2099 0032 04D0     		beq	.L220
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_B
 2100              		.loc 1 338 0
 2101 0034 2B4A     		ldr	r2, .L239+4
 2102 0036 D368     		ldr	r3, [r2, #12]
 2103 0038 43F4DE03 		orr	r3, r3, #7274496
 2104 003c D360     		str	r3, [r2, #12]
 2105              	.L220:
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 2106              		.loc 1 346 0
 2107 003e 6368     		ldr	r3, [r4, #4]
 2108 0040 13F0020F 		tst	r3, #2
 2109 0044 06D0     		beq	.L221
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****                                   FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2 | FLASH_IT_OPERR_B
 2110              		.loc 1 350 0
 2111 0046 274A     		ldr	r2, .L239+4
 2112 0048 D2F80C31 		ldr	r3, [r2, #268]
 2113 004c 43F4DE03 		orr	r3, r3, #7274496
 2114 0050 C2F80C31 		str	r3, [r2, #268]
 2115              	.L221:
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 2116              		.loc 1 359 0
 2117 0054 2368     		ldr	r3, [r4]
 2118 0056 012B     		cmp	r3, #1
 2119 0058 28D0     		beq	.L235
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 2120              		.loc 1 383 0
 2121 005a 6368     		ldr	r3, [r4, #4]
 2122 005c 012B     		cmp	r3, #1
 2123 005e 39D0     		beq	.L236
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 2124              		.loc 1 389 0
 2125 0060 1F4B     		ldr	r3, .L239
 2126 0062 0422     		movs	r2, #4
 2127 0064 1A70     		strb	r2, [r3]
 2128              	.L227:
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       pFlash.Sector = pEraseInit->Sector;
 2129              		.loc 1 395 0
 2130 0066 E268     		ldr	r2, [r4, #12]
 2131 0068 1D4B     		ldr	r3, .L239
 2132 006a 5A60     		str	r2, [r3, #4]
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       pFlash.VoltageForErase = pEraseInit->VoltageRange;
ARM GAS  /tmp/ccggNwMO.s 			page 72


 2133              		.loc 1 396 0
 2134 006c A268     		ldr	r2, [r4, #8]
 2135 006e DA60     		str	r2, [r3, #12]
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 2136              		.loc 1 397 0
 2137 0070 2269     		ldr	r2, [r4, #16]
 2138 0072 9A60     		str	r2, [r3, #8]
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 2139              		.loc 1 400 0
 2140 0074 6168     		ldr	r1, [r4, #4]
 2141 0076 A068     		ldr	r0, [r4, #8]
 2142 0078 FFF7FEFF 		bl	FLASH_Erase_Sector
 2143              	.LVL177:
 2144 007c 14E0     		b	.L215
 2145              	.LVL178:
 2146              	.L233:
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 2147              		.loc 1 310 0
 2148 007e 0121     		movs	r1, #1
 2149 0080 4CF25030 		movw	r0, #50000
 2150              	.LVL179:
 2151 0084 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2152              	.LVL180:
 2153 0088 0546     		mov	r5, r0
 2154 008a 0028     		cmp	r0, #0
 2155 008c C8D0     		beq	.L216
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 2156              		.loc 1 312 0
 2157 008e 0125     		movs	r5, #1
 2158 0090 C6E7     		b	.L216
 2159              	.LVL181:
 2160              	.L234:
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     {
 2161              		.loc 1 320 0
 2162 0092 0221     		movs	r1, #2
 2163 0094 4CF25030 		movw	r0, #50000
 2164 0098 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2165              	.LVL182:
 2166 009c 0028     		cmp	r0, #0
 2167 009e C3D0     		beq	.L217
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 2168              		.loc 1 322 0
 2169 00a0 0125     		movs	r5, #1
 2170              	.LVL183:
 2171              	.L218:
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****   }
 2172              		.loc 1 330 0
 2173 00a2 0F4B     		ldr	r3, .L239
 2174 00a4 0022     		movs	r2, #0
 2175 00a6 1A75     		strb	r2, [r3, #20]
 2176              	.LVL184:
 2177              	.L215:
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 2178              		.loc 1 405 0
 2179 00a8 2846     		mov	r0, r5
 2180 00aa 38BD     		pop	{r3, r4, r5, pc}
 2181              	.LVL185:
ARM GAS  /tmp/ccggNwMO.s 			page 73


 2182              	.L235:
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 2183              		.loc 1 362 0
 2184 00ac 6168     		ldr	r1, [r4, #4]
 2185 00ae 0129     		cmp	r1, #1
 2186 00b0 08D0     		beq	.L237
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       {
 2187              		.loc 1 367 0
 2188 00b2 0229     		cmp	r1, #2
 2189 00b4 0AD0     		beq	.L238
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 2190              		.loc 1 374 0
 2191 00b6 0A4B     		ldr	r3, .L239
 2192 00b8 0722     		movs	r2, #7
 2193 00ba 1A70     		strb	r2, [r3]
 2194              	.L224:
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****     }
 2195              		.loc 1 377 0
 2196 00bc 2069     		ldr	r0, [r4, #16]
 2197 00be FFF7FEFF 		bl	FLASH_MassErase
 2198              	.LVL186:
 2199 00c2 F1E7     		b	.L215
 2200              	.L237:
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 2201              		.loc 1 364 0
 2202 00c4 064B     		ldr	r3, .L239
 2203 00c6 0222     		movs	r2, #2
 2204 00c8 1A70     		strb	r2, [r3]
 2205 00ca F7E7     		b	.L224
 2206              	.L238:
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 2207              		.loc 1 369 0
 2208 00cc 044B     		ldr	r3, .L239
 2209 00ce 0522     		movs	r2, #5
 2210 00d0 1A70     		strb	r2, [r3]
 2211 00d2 F3E7     		b	.L224
 2212              	.L236:
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c ****       }
 2213              		.loc 1 385 0
 2214 00d4 024B     		ldr	r3, .L239
 2215 00d6 0122     		movs	r2, #1
 2216 00d8 1A70     		strb	r2, [r3]
 2217 00da C4E7     		b	.L227
 2218              	.LVL187:
 2219              	.L228:
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c **** 
 2220              		.loc 1 302 0
 2221 00dc 0225     		movs	r5, #2
 2222 00de E3E7     		b	.L215
 2223              	.L240:
 2224              		.align	2
 2225              	.L239:
 2226 00e0 00000000 		.word	pFlash
 2227 00e4 00200052 		.word	1375739904
 2228              		.cfi_endproc
 2229              	.LFE145:
 2231              		.text
ARM GAS  /tmp/ccggNwMO.s 			page 74


 2232              	.Letext0:
 2233              		.file 2 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 2234              		.file 3 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 2235              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 2236              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 2237              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 2238              		.file 7 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 2239              		.file 8 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 2240              		.file 9 "/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
 2241              		.file 10 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 2242              		.file 11 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/math.h"
 2243              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 2244              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 2245              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash_ex.h"
 2246              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccggNwMO.s 			page 75


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_flash_ex.c
     /tmp/ccggNwMO.s:17     .text.FLASH_MassErase:0000000000000000 $t
     /tmp/ccggNwMO.s:23     .text.FLASH_MassErase:0000000000000000 FLASH_MassErase
     /tmp/ccggNwMO.s:101    .text.FLASH_MassErase:0000000000000084 $d
     /tmp/ccggNwMO.s:106    .text.FLASH_OB_EnableWRP:0000000000000000 $t
     /tmp/ccggNwMO.s:112    .text.FLASH_OB_EnableWRP:0000000000000000 FLASH_OB_EnableWRP
     /tmp/ccggNwMO.s:154    .text.FLASH_OB_EnableWRP:0000000000000030 $d
     /tmp/ccggNwMO.s:159    .text.FLASH_OB_DisableWRP:0000000000000000 $t
     /tmp/ccggNwMO.s:165    .text.FLASH_OB_DisableWRP:0000000000000000 FLASH_OB_DisableWRP
     /tmp/ccggNwMO.s:207    .text.FLASH_OB_DisableWRP:000000000000002c $d
     /tmp/ccggNwMO.s:212    .text.FLASH_OB_GetWRP:0000000000000000 $t
     /tmp/ccggNwMO.s:218    .text.FLASH_OB_GetWRP:0000000000000000 FLASH_OB_GetWRP
     /tmp/ccggNwMO.s:272    .text.FLASH_OB_GetWRP:000000000000002c $d
     /tmp/ccggNwMO.s:277    .text.FLASH_OB_RDPConfig:0000000000000000 $t
     /tmp/ccggNwMO.s:283    .text.FLASH_OB_RDPConfig:0000000000000000 FLASH_OB_RDPConfig
     /tmp/ccggNwMO.s:303    .text.FLASH_OB_RDPConfig:0000000000000010 $d
     /tmp/ccggNwMO.s:308    .text.FLASH_OB_GetRDP:0000000000000000 $t
     /tmp/ccggNwMO.s:314    .text.FLASH_OB_GetRDP:0000000000000000 FLASH_OB_GetRDP
     /tmp/ccggNwMO.s:344    .text.FLASH_OB_GetRDP:000000000000001c $d
     /tmp/ccggNwMO.s:349    .text.FLASH_OB_UserConfig:0000000000000000 $t
     /tmp/ccggNwMO.s:355    .text.FLASH_OB_UserConfig:0000000000000000 FLASH_OB_UserConfig
     /tmp/ccggNwMO.s:495    .text.FLASH_OB_UserConfig:00000000000000a8 $d
     /tmp/ccggNwMO.s:500    .text.FLASH_OB_GetUser:0000000000000000 $t
     /tmp/ccggNwMO.s:506    .text.FLASH_OB_GetUser:0000000000000000 FLASH_OB_GetUser
     /tmp/ccggNwMO.s:525    .text.FLASH_OB_GetUser:000000000000000c $d
     /tmp/ccggNwMO.s:531    .text.FLASH_OB_PCROPConfig:0000000000000000 $t
     /tmp/ccggNwMO.s:537    .text.FLASH_OB_PCROPConfig:0000000000000000 FLASH_OB_PCROPConfig
     /tmp/ccggNwMO.s:598    .text.FLASH_OB_PCROPConfig:0000000000000040 $d
     /tmp/ccggNwMO.s:603    .text.FLASH_OB_GetPCROP:0000000000000000 $t
     /tmp/ccggNwMO.s:609    .text.FLASH_OB_GetPCROP:0000000000000000 FLASH_OB_GetPCROP
     /tmp/ccggNwMO.s:684    .text.FLASH_OB_GetPCROP:0000000000000044 $d
     /tmp/ccggNwMO.s:690    .text.FLASH_OB_BOR_LevelConfig:0000000000000000 $t
     /tmp/ccggNwMO.s:696    .text.FLASH_OB_BOR_LevelConfig:0000000000000000 FLASH_OB_BOR_LevelConfig
     /tmp/ccggNwMO.s:716    .text.FLASH_OB_BOR_LevelConfig:0000000000000010 $d
     /tmp/ccggNwMO.s:721    .text.FLASH_OB_GetBOR:0000000000000000 $t
     /tmp/ccggNwMO.s:727    .text.FLASH_OB_GetBOR:0000000000000000 FLASH_OB_GetBOR
     /tmp/ccggNwMO.s:743    .text.FLASH_OB_GetBOR:000000000000000c $d
     /tmp/ccggNwMO.s:748    .text.FLASH_OB_BootAddConfig:0000000000000000 $t
     /tmp/ccggNwMO.s:754    .text.FLASH_OB_BootAddConfig:0000000000000000 FLASH_OB_BootAddConfig
     /tmp/ccggNwMO.s:800    .text.FLASH_OB_BootAddConfig:000000000000002c $d
     /tmp/ccggNwMO.s:806    .text.FLASH_OB_GetBootAdd:0000000000000000 $t
     /tmp/ccggNwMO.s:812    .text.FLASH_OB_GetBootAdd:0000000000000000 FLASH_OB_GetBootAdd
     /tmp/ccggNwMO.s:836    .text.FLASH_OB_GetBootAdd:0000000000000010 $d
     /tmp/ccggNwMO.s:842    .text.FLASH_OB_SecureAreaConfig:0000000000000000 $t
     /tmp/ccggNwMO.s:848    .text.FLASH_OB_SecureAreaConfig:0000000000000000 FLASH_OB_SecureAreaConfig
     /tmp/ccggNwMO.s:913    .text.FLASH_OB_SecureAreaConfig:0000000000000048 $d
     /tmp/ccggNwMO.s:918    .text.FLASH_OB_GetSecureArea:0000000000000000 $t
     /tmp/ccggNwMO.s:924    .text.FLASH_OB_GetSecureArea:0000000000000000 FLASH_OB_GetSecureArea
     /tmp/ccggNwMO.s:999    .text.FLASH_OB_GetSecureArea:0000000000000044 $d
     /tmp/ccggNwMO.s:1005   .text.FLASH_CRC_AddSector:0000000000000000 $t
     /tmp/ccggNwMO.s:1011   .text.FLASH_CRC_AddSector:0000000000000000 FLASH_CRC_AddSector
     /tmp/ccggNwMO.s:1052   .text.FLASH_CRC_AddSector:0000000000000038 $d
     /tmp/ccggNwMO.s:1057   .text.FLASH_CRC_SelectAddress:0000000000000000 $t
     /tmp/ccggNwMO.s:1063   .text.FLASH_CRC_SelectAddress:0000000000000000 FLASH_CRC_SelectAddress
     /tmp/ccggNwMO.s:1091   .text.FLASH_CRC_SelectAddress:0000000000000018 $d
     /tmp/ccggNwMO.s:1096   .text.HAL_FLASHEx_OBProgram:0000000000000000 $t
ARM GAS  /tmp/ccggNwMO.s 			page 76


     /tmp/ccggNwMO.s:1103   .text.HAL_FLASHEx_OBProgram:0000000000000000 HAL_FLASHEx_OBProgram
     /tmp/ccggNwMO.s:1266   .text.HAL_FLASHEx_OBProgram:00000000000000d8 $d
     /tmp/ccggNwMO.s:1271   .text.HAL_FLASHEx_OBGetConfig:0000000000000000 $t
     /tmp/ccggNwMO.s:1278   .text.HAL_FLASHEx_OBGetConfig:0000000000000000 HAL_FLASHEx_OBGetConfig
     /tmp/ccggNwMO.s:1353   .text.HAL_FLASHEx_Unlock_Bank1:0000000000000000 $t
     /tmp/ccggNwMO.s:1360   .text.HAL_FLASHEx_Unlock_Bank1:0000000000000000 HAL_FLASHEx_Unlock_Bank1
     /tmp/ccggNwMO.s:1398   .text.HAL_FLASHEx_Unlock_Bank1:000000000000002c $d
     /tmp/ccggNwMO.s:1404   .text.HAL_FLASHEx_Lock_Bank1:0000000000000000 $t
     /tmp/ccggNwMO.s:1411   .text.HAL_FLASHEx_Lock_Bank1:0000000000000000 HAL_FLASHEx_Lock_Bank1
     /tmp/ccggNwMO.s:1429   .text.HAL_FLASHEx_Lock_Bank1:0000000000000010 $d
     /tmp/ccggNwMO.s:1434   .text.HAL_FLASHEx_Unlock_Bank2:0000000000000000 $t
     /tmp/ccggNwMO.s:1441   .text.HAL_FLASHEx_Unlock_Bank2:0000000000000000 HAL_FLASHEx_Unlock_Bank2
     /tmp/ccggNwMO.s:1479   .text.HAL_FLASHEx_Unlock_Bank2:0000000000000034 $d
     /tmp/ccggNwMO.s:1485   .text.HAL_FLASHEx_Lock_Bank2:0000000000000000 $t
     /tmp/ccggNwMO.s:1492   .text.HAL_FLASHEx_Lock_Bank2:0000000000000000 HAL_FLASHEx_Lock_Bank2
     /tmp/ccggNwMO.s:1510   .text.HAL_FLASHEx_Lock_Bank2:0000000000000014 $d
     /tmp/ccggNwMO.s:1515   .text.HAL_FLASHEx_ComputeCRC:0000000000000000 $t
     /tmp/ccggNwMO.s:1522   .text.HAL_FLASHEx_ComputeCRC:0000000000000000 HAL_FLASHEx_ComputeCRC
     /tmp/ccggNwMO.s:1744   .text.HAL_FLASHEx_ComputeCRC:0000000000000164 $d
     /tmp/ccggNwMO.s:1750   .text.FLASH_Erase_Sector:0000000000000000 $t
     /tmp/ccggNwMO.s:1757   .text.FLASH_Erase_Sector:0000000000000000 FLASH_Erase_Sector
     /tmp/ccggNwMO.s:1812   .text.FLASH_Erase_Sector:000000000000004c $d
     /tmp/ccggNwMO.s:1817   .text.HAL_FLASHEx_Erase:0000000000000000 $t
     /tmp/ccggNwMO.s:1824   .text.HAL_FLASHEx_Erase:0000000000000000 HAL_FLASHEx_Erase
     /tmp/ccggNwMO.s:2038   .text.HAL_FLASHEx_Erase:0000000000000120 $d
     /tmp/ccggNwMO.s:2045   .text.HAL_FLASHEx_Erase_IT:0000000000000000 $t
     /tmp/ccggNwMO.s:2052   .text.HAL_FLASHEx_Erase_IT:0000000000000000 HAL_FLASHEx_Erase_IT
     /tmp/ccggNwMO.s:2226   .text.HAL_FLASHEx_Erase_IT:00000000000000e0 $d

UNDEFINED SYMBOLS
FLASH_WaitForLastOperation
pFlash
FLASH_OB_WaitForLastOperation
FLASH_CRC_WaitForLastOperation
