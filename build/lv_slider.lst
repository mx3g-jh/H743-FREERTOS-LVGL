ARM GAS  /tmp/ccr4ruP3.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"lv_slider.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.is_slider_horizontal,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	is_slider_horizontal:
  24              	.LFB180:
  25              		.file 1 "Drivers/lvgl/lvgl/src/widgets/lv_slider.c"
   1:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** /**
   2:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  * @file lv_slider.c
   3:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  *
   4:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  */
   5:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
   6:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** /*********************
   7:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  *      INCLUDES
   8:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  *********************/
   9:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** #include "lv_slider.h"
  10:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** #if LV_USE_SLIDER != 0
  11:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
  12:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** #include "../misc/lv_assert.h"
  13:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** #include "../core/lv_group.h"
  14:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** #include "../core/lv_indev.h"
  15:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** #include "../draw/lv_draw.h"
  16:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** #include "../misc/lv_math.h"
  17:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** #include "../core/lv_disp.h"
  18:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** #include "lv_img.h"
  19:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
  20:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** /*********************
  21:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  *      DEFINES
  22:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  *********************/
  23:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** #define MY_CLASS &lv_slider_class
  24:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
  25:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** #define LV_SLIDER_KNOB_COORD(is_rtl, area) (is_rtl ? area.x1 : area.x2)
  26:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
  27:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** /**********************
  28:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  *      TYPEDEFS
  29:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  **********************/
  30:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
  31:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** /**********************
  32:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  *  STATIC PROTOTYPES
  33:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  **********************/
ARM GAS  /tmp/ccr4ruP3.s 			page 2


  34:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** static void lv_slider_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj);
  35:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** static void lv_slider_event(const lv_obj_class_t * class_p, lv_event_t * e);
  36:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** static void position_knob(lv_obj_t * obj, lv_area_t * knob_area, const lv_coord_t knob_size, const 
  37:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** static void draw_knob(lv_event_t * e);
  38:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** static bool is_slider_horizontal(lv_obj_t * obj);
  39:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
  40:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** /**********************
  41:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  *  STATIC VARIABLES
  42:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  **********************/
  43:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** const lv_obj_class_t lv_slider_class = {
  44:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     .constructor_cb = lv_slider_constructor,
  45:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     .event_cb = lv_slider_event,
  46:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     .editable = LV_OBJ_CLASS_EDITABLE_TRUE,
  47:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     .group_def = LV_OBJ_CLASS_GROUP_DEF_TRUE,
  48:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     .instance_size = sizeof(lv_slider_t),
  49:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     .base_class = &lv_bar_class
  50:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** };
  51:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
  52:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** /**********************
  53:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  *      MACROS
  54:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  **********************/
  55:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
  56:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** /**********************
  57:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  *   GLOBAL FUNCTIONS
  58:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  **********************/
  59:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
  60:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** lv_obj_t * lv_slider_create(lv_obj_t * parent)
  61:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** {
  62:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     LV_LOG_INFO("begin");
  63:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_obj_t * obj = lv_obj_class_create_obj(MY_CLASS, parent);
  64:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_obj_class_init_obj(obj);
  65:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     return obj;
  66:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** }
  67:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
  68:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** bool lv_slider_is_dragged(const lv_obj_t * obj)
  69:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** {
  70:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
  71:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
  72:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
  73:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     return slider->dragging ? true : false;
  74:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** }
  75:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
  76:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** /**********************
  77:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  *   STATIC FUNCTIONS
  78:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****  **********************/
  79:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
  80:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** static void lv_slider_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)
  81:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** {
  82:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     LV_UNUSED(class_p);
  83:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
  84:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
  85:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     /*Initialize the allocated 'slider'*/
  86:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     slider->value_to_set = NULL;
  87:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     slider->dragging = 0U;
  88:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     slider->left_knob_focus = 0U;
  89:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
  90:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_obj_clear_flag(obj, LV_OBJ_FLAG_SCROLL_CHAIN);
ARM GAS  /tmp/ccr4ruP3.s 			page 3


  91:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_obj_clear_flag(obj, LV_OBJ_FLAG_SCROLLABLE);
  92:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_obj_set_ext_click_area(obj, LV_DPX(8));
  93:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** }
  94:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
  95:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** static void lv_slider_event(const lv_obj_class_t * class_p, lv_event_t * e)
  96:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** {
  97:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     LV_UNUSED(class_p);
  98:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
  99:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_res_t res;
 100:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 101:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     /*Call the ancestor's event handler*/
 102:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     res = lv_obj_event_base(MY_CLASS, e);
 103:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     if(res != LV_RES_OK) return;
 104:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 105:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_event_code_t code = lv_event_get_code(e);
 106:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_obj_t * obj = lv_event_get_target(e);
 107:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
 108:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_slider_mode_t type = lv_slider_get_mode(obj);
 109:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 110:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     /*Advanced hit testing: react only on dragging the knob(s)*/
 111:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     if(code == LV_EVENT_HIT_TEST) {
 112:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_hit_test_info_t * info = lv_event_get_param(e);
 113:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_coord_t ext_click_area = obj->spec_attr ? obj->spec_attr->ext_click_pad : 0;
 114:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 115:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         /*Ordinary slider: was the knob area hit?*/
 116:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_area_t a;
 117:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_area_copy(&a, &slider->right_knob_area);
 118:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_area_increase(&a, ext_click_area, ext_click_area);
 119:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         info->res = _lv_area_is_point_on(&a, info->point, 0);
 120:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 121:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         /*There's still a chance that there is a hit if there is another knob*/
 122:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if((info->res == false) && (type == LV_SLIDER_MODE_RANGE)) {
 123:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             lv_area_copy(&a, &slider->left_knob_area);
 124:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             lv_area_increase(&a, ext_click_area, ext_click_area);
 125:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             info->res = _lv_area_is_point_on(&a, info->point, 0);
 126:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 127:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 128:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     else if(code == LV_EVENT_PRESSED) {
 129:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_obj_invalidate(obj);
 130:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 131:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_point_t p;
 132:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         slider->dragging = true;
 133:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(type == LV_SLIDER_MODE_NORMAL || type == LV_SLIDER_MODE_SYMMETRICAL) {
 134:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             slider->value_to_set = &slider->bar.cur_value;
 135:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 136:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         else if(type == LV_SLIDER_MODE_RANGE) {
 137:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             lv_indev_get_point(lv_indev_get_act(), &p);
 138:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             bool hor = lv_obj_get_width(obj) >= lv_obj_get_height(obj);
 139:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             lv_base_dir_t base_dir = lv_obj_get_style_base_dir(obj, LV_PART_MAIN);
 140:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 141:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             lv_coord_t dist_left, dist_right;
 142:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             if(hor) {
 143:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 if((base_dir != LV_BASE_DIR_RTL && p.x > slider->right_knob_area.x2) || (base_dir =
 144:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                                                                                          p.x < slid
 145:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.cur_value;
 146:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 }
 147:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 else if((base_dir != LV_BASE_DIR_RTL && p.x < slider->left_knob_area.x1) || (base_d
ARM GAS  /tmp/ccr4ruP3.s 			page 4


 148:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                                                                                              p.x > 
 149:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.start_value;
 150:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 }
 151:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 else {
 152:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     /*Calculate the distance from each knob*/
 153:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     dist_left = LV_ABS((slider->left_knob_area.x1 + (slider->left_knob_area.x2 - sl
 154:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     dist_right = LV_ABS((slider->right_knob_area.x1 + (slider->right_knob_area.x2 -
 155:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 156:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     /*Use whichever one is closer*/
 157:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     if(dist_right < dist_left) {
 158:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                         slider->value_to_set = &slider->bar.cur_value;
 159:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 0;
 160:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     }
 161:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     else {
 162:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                         slider->value_to_set = &slider->bar.start_value;
 163:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 1;
 164:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     }
 165:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 }
 166:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             }
 167:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             else {
 168:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 if(p.y < slider->right_knob_area.y1) {
 169:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.cur_value;
 170:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 }
 171:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 else if(p.y > slider->left_knob_area.y2) {
 172:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.start_value;
 173:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 }
 174:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 else {
 175:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     /*Calculate the distance from each knob*/
 176:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     dist_left = LV_ABS((slider->left_knob_area.y1 + (slider->left_knob_area.y2 - sl
 177:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     dist_right = LV_ABS((slider->right_knob_area.y1 + (slider->right_knob_area.y2 -
 178:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 179:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     /*Use whichever one is closer*/
 180:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     if(dist_right < dist_left) {
 181:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                         slider->value_to_set = &slider->bar.cur_value;
 182:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 0;
 183:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     }
 184:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     else {
 185:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                         slider->value_to_set = &slider->bar.start_value;
 186:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 1;
 187:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     }
 188:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 }
 189:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             }
 190:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 191:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 192:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     else if(code == LV_EVENT_PRESSING && slider->value_to_set != NULL) {
 193:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_indev_t * indev = lv_indev_get_act();
 194:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(lv_indev_get_type(indev) != LV_INDEV_TYPE_POINTER) return;
 195:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 196:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_point_t p;
 197:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_indev_get_point(indev, &p);
 198:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         int32_t new_value = 0;
 199:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 200:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         const int32_t range = slider->bar.max_value - slider->bar.min_value;
 201:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(is_slider_horizontal(obj)) {
 202:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             const lv_coord_t bg_left = lv_obj_get_style_pad_left(obj, LV_PART_MAIN);
 203:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             const lv_coord_t bg_right = lv_obj_get_style_pad_right(obj, LV_PART_MAIN);
 204:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             const lv_coord_t w = lv_obj_get_width(obj);
ARM GAS  /tmp/ccr4ruP3.s 			page 5


 205:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             const lv_coord_t indic_w = w - bg_left - bg_right;
 206:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 207:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             if(lv_obj_get_style_base_dir(obj, LV_PART_MAIN) == LV_BASE_DIR_RTL) {
 208:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 /*Make the point relative to the indicator*/
 209:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 new_value = (obj->coords.x2 - bg_right) - p.x;
 210:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             }
 211:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             else {
 212:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 /*Make the point relative to the indicator*/
 213:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 new_value = p.x - (obj->coords.x1 + bg_left);
 214:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             }
 215:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             new_value = (new_value * range + indic_w / 2) / indic_w;
 216:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 217:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 218:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         else {
 219:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             const lv_coord_t bg_top = lv_obj_get_style_pad_top(obj, LV_PART_MAIN);
 220:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             const lv_coord_t bg_bottom = lv_obj_get_style_pad_bottom(obj, LV_PART_MAIN);
 221:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             const lv_coord_t h = lv_obj_get_height(obj);
 222:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             const lv_coord_t indic_h = h - bg_bottom - bg_top;
 223:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 224:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             /*Make the point relative to the indicator*/
 225:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             new_value = p.y - (obj->coords.y2 + bg_bottom);
 226:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             new_value = (-new_value * range + indic_h / 2) / indic_h;
 227:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 228:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 229:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 230:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         int32_t real_max_value = slider->bar.max_value;
 231:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         int32_t real_min_value = slider->bar.min_value;
 232:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         /*Figure out the min. and max. for this mode*/
 233:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(slider->value_to_set == &slider->bar.start_value) {
 234:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             real_max_value = slider->bar.cur_value;
 235:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 236:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         else {
 237:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             real_min_value = slider->bar.start_value;
 238:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 239:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 240:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         new_value = LV_CLAMP(real_min_value, new_value, real_max_value);
 241:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(*slider->value_to_set != new_value) {
 242:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             if(slider->value_to_set == &slider->bar.start_value) {
 243:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 lv_bar_set_start_value(obj, new_value, LV_ANIM_ON);
 244:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             }
 245:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             else {
 246:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 lv_bar_set_value(obj, new_value, LV_ANIM_ON);
 247:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             }
 248:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             res = lv_event_send(obj, LV_EVENT_VALUE_CHANGED, NULL);
 249:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             if(res != LV_RES_OK) return;
 250:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 251:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 252:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 253:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     else if(code == LV_EVENT_RELEASED || code == LV_EVENT_PRESS_LOST) {
 254:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         slider->dragging = false;
 255:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         slider->value_to_set = NULL;
 256:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 257:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_obj_invalidate(obj);
 258:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 259:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         /*Leave edit mode if released. (No need to wait for LONG_PRESS)*/
 260:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_group_t * g   = lv_obj_get_group(obj);
 261:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         bool editing     = lv_group_get_editing(g);
ARM GAS  /tmp/ccr4ruP3.s 			page 6


 262:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 263:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER) {
 264:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             if(editing) {
 265:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 if(lv_slider_get_mode(obj) == LV_SLIDER_MODE_RANGE) {
 266:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     if(slider->left_knob_focus == 0) slider->left_knob_focus = 1;
 267:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     else {
 268:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 0;
 269:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                         lv_group_set_editing(g, false);
 270:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     }
 271:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 }
 272:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 else {
 273:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     lv_group_set_editing(g, false);
 274:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 }
 275:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             }
 276:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 277:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 278:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 279:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     else if(code == LV_EVENT_FOCUSED) {
 280:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 281:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER || indev_type == LV_INDEV_TYPE_KEYPAD) {
 282:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             slider->left_knob_focus = 0;
 283:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 284:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 285:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     else if(code == LV_EVENT_SIZE_CHANGED) {
 286:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_obj_refresh_ext_draw_size(obj);
 287:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 288:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     else if(code == LV_EVENT_REFR_EXT_DRAW_SIZE) {
 289:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_coord_t knob_left = lv_obj_get_style_pad_left(obj, LV_PART_KNOB);
 290:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_coord_t knob_right = lv_obj_get_style_pad_right(obj, LV_PART_KNOB);
 291:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_coord_t knob_top = lv_obj_get_style_pad_top(obj, LV_PART_KNOB);
 292:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_coord_t knob_bottom = lv_obj_get_style_pad_bottom(obj, LV_PART_KNOB);
 293:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 294:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         /*The smaller size is the knob diameter*/
 295:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_coord_t zoom = lv_obj_get_style_transform_zoom(obj, LV_PART_KNOB);
 296:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_coord_t trans_w = lv_obj_get_style_transform_width(obj, LV_PART_KNOB);
 297:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_coord_t trans_h = lv_obj_get_style_transform_height(obj, LV_PART_KNOB);
 298:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_coord_t knob_size = LV_MIN(lv_obj_get_width(obj) + 2 * trans_w, lv_obj_get_height(obj) +
 299:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_size = (knob_size * zoom) >> 8;
 300:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_size += LV_MAX(LV_MAX(knob_left, knob_right), LV_MAX(knob_bottom, knob_top));
 301:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_size += 2;         /*For rounding error*/
 302:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_size += lv_obj_calculate_ext_draw_size(obj, LV_PART_KNOB);
 303:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 304:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         /*Indic. size is handled by bar*/
 305:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_coord_t * s = lv_event_get_param(e);
 306:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         *s  = LV_MAX(*s, knob_size);
 307:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 308:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 309:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     else if(code == LV_EVENT_KEY) {
 310:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         char c = *((char *)lv_event_get_param(e));
 311:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 312:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(c == LV_KEY_RIGHT || c == LV_KEY_UP) {
 313:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             if(!slider->left_knob_focus) lv_slider_set_value(obj, lv_slider_get_value(obj) + 1, LV_
 314:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             else lv_slider_set_left_value(obj, lv_slider_get_left_value(obj) + 1, LV_ANIM_ON);
 315:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 316:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         else if(c == LV_KEY_LEFT || c == LV_KEY_DOWN) {
 317:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             if(!slider->left_knob_focus) lv_slider_set_value(obj, lv_slider_get_value(obj) - 1, LV_
 318:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             else lv_slider_set_left_value(obj, lv_slider_get_left_value(obj) - 1, LV_ANIM_ON);
ARM GAS  /tmp/ccr4ruP3.s 			page 7


 319:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 320:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         else {
 321:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             return;
 322:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 323:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 324:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         res = lv_event_send(obj, LV_EVENT_VALUE_CHANGED, NULL);
 325:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(res != LV_RES_OK) return;
 326:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 327:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     else if(code == LV_EVENT_DRAW_MAIN) {
 328:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         draw_knob(e);
 329:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 330:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** }
 331:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 332:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** static void draw_knob(lv_event_t * e)
 333:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** {
 334:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_obj_t * obj = lv_event_get_target(e);
 335:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
 336:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_draw_ctx_t * draw_ctx = lv_event_get_draw_ctx(e);
 337:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 338:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     const bool is_rtl = LV_BASE_DIR_RTL == lv_obj_get_style_base_dir(obj, LV_PART_MAIN);
 339:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     const bool is_horizontal = is_slider_horizontal(obj);
 340:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 341:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_area_t knob_area;
 342:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_coord_t knob_size;
 343:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     bool is_symmetrical = false;
 344:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     if(slider->bar.mode == LV_BAR_MODE_SYMMETRICAL && slider->bar.min_value < 0 &&
 345:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****        slider->bar.max_value > 0) is_symmetrical = true;
 346:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 347:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     if(is_horizontal) {
 348:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_size = lv_obj_get_height(obj);
 349:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(is_symmetrical && slider->bar.cur_value < 0) knob_area.x1 = slider->bar.indic_area.x1;
 350:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         else knob_area.x1 = LV_SLIDER_KNOB_COORD(is_rtl, slider->bar.indic_area);
 351:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 352:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     else {
 353:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_size = lv_obj_get_width(obj);
 354:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(is_symmetrical && slider->bar.cur_value < 0) knob_area.y1 = slider->bar.indic_area.y2;
 355:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         else knob_area.y1 = slider->bar.indic_area.y1;
 356:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 357:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 358:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_draw_rect_dsc_t knob_rect_dsc;
 359:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_draw_rect_dsc_init(&knob_rect_dsc);
 360:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_obj_init_draw_rect_dsc(obj, LV_PART_KNOB, &knob_rect_dsc);
 361:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     /* Update knob area with knob style */
 362:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     position_knob(obj, &knob_area, knob_size, is_horizontal);
 363:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     /* Update right knob area with calculated knob area */
 364:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_area_copy(&slider->right_knob_area, &knob_area);
 365:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 366:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_obj_draw_part_dsc_t part_draw_dsc;
 367:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_obj_draw_dsc_init(&part_draw_dsc, draw_ctx);
 368:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.part = LV_PART_KNOB;
 369:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.class_p = MY_CLASS;
 370:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.type = LV_SLIDER_DRAW_PART_KNOB;
 371:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.id = 0;
 372:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.draw_area = &slider->right_knob_area;
 373:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.rect_dsc = &knob_rect_dsc;
 374:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 375:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     if(lv_slider_get_mode(obj) != LV_SLIDER_MODE_RANGE) {
ARM GAS  /tmp/ccr4ruP3.s 			page 8


 376:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_draw_dsc);
 377:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_draw_rect(draw_ctx, &knob_rect_dsc, &slider->right_knob_area);
 378:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_draw_dsc);
 379:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 380:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     else {
 381:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         /*Save the draw part_draw_dsc. because it can be modified in the event*/
 382:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_draw_rect_dsc_t knob_rect_dsc_tmp;
 383:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_memcpy(&knob_rect_dsc_tmp, &knob_rect_dsc, sizeof(lv_draw_rect_dsc_t));
 384:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         /* Draw the right knob */
 385:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_draw_dsc);
 386:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_draw_rect(draw_ctx, &knob_rect_dsc, &slider->right_knob_area);
 387:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_draw_dsc);
 388:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 389:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         /*Calculate the second knob area*/
 390:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(is_horizontal) {
 391:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             /*use !is_rtl to get the other knob*/
 392:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             knob_area.x1 = LV_SLIDER_KNOB_COORD(!is_rtl, slider->bar.indic_area);
 393:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 394:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         else {
 395:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             knob_area.y1 = slider->bar.indic_area.y2;
 396:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 397:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         position_knob(obj, &knob_area, knob_size, is_horizontal);
 398:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_area_copy(&slider->left_knob_area, &knob_area);
 399:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 400:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_memcpy(&knob_rect_dsc, &knob_rect_dsc_tmp, sizeof(lv_draw_rect_dsc_t));
 401:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.type = LV_SLIDER_DRAW_PART_KNOB_LEFT;
 402:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.draw_area = &slider->left_knob_area;
 403:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.rect_dsc = &knob_rect_dsc;
 404:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.id = 1;
 405:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 406:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_draw_dsc);
 407:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_draw_rect(draw_ctx, &knob_rect_dsc, &slider->left_knob_area);
 408:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_draw_dsc);
 409:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 410:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** }
 411:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 412:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** static void position_knob(lv_obj_t * obj, lv_area_t * knob_area, const lv_coord_t knob_size, const 
 413:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** {
 414:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     if(hor) {
 415:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_area->x1 -= (knob_size >> 1);
 416:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_area->x2 = knob_area->x1 + knob_size - 1;
 417:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_area->y1 = obj->coords.y1;
 418:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_area->y2 = obj->coords.y2;
 419:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 420:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     else {
 421:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_area->y1 -= (knob_size >> 1);
 422:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_area->y2 = knob_area->y1 + knob_size - 1;
 423:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_area->x1 = obj->coords.x1;
 424:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_area->x2 = obj->coords.x2;
 425:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 426:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 427:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_coord_t knob_left = lv_obj_get_style_pad_left(obj, LV_PART_KNOB);
 428:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_coord_t knob_right = lv_obj_get_style_pad_right(obj, LV_PART_KNOB);
 429:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_coord_t knob_top = lv_obj_get_style_pad_top(obj, LV_PART_KNOB);
 430:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_coord_t knob_bottom = lv_obj_get_style_pad_bottom(obj, LV_PART_KNOB);
 431:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 432:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_coord_t transf_w = lv_obj_get_style_transform_width(obj, LV_PART_KNOB);
ARM GAS  /tmp/ccr4ruP3.s 			page 9


 433:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_coord_t transf_h = lv_obj_get_style_transform_height(obj, LV_PART_KNOB);
 434:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 435:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     /*Apply the paddings on the knob area*/
 436:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     knob_area->x1 -= knob_left + transf_w;
 437:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     knob_area->x2 += knob_right + transf_w;
 438:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     knob_area->y1 -= knob_top + transf_h;
 439:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     knob_area->y2 += knob_bottom + transf_h;
 440:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** }
 441:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 442:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** static bool is_slider_horizontal(lv_obj_t * obj)
 443:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** {
  26              		.loc 1 443 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 38B5     		push	{r3, r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 3, -16
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 0546     		mov	r5, r0
 444:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     return lv_obj_get_width(obj) >= lv_obj_get_height(obj);
  39              		.loc 1 444 0
  40 0004 FFF7FEFF 		bl	lv_obj_get_width
  41              	.LVL1:
  42 0008 0446     		mov	r4, r0
  43 000a 2846     		mov	r0, r5
  44 000c FFF7FEFF 		bl	lv_obj_get_height
  45              	.LVL2:
 445:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** }
  46              		.loc 1 445 0
  47 0010 8442     		cmp	r4, r0
  48 0012 B4BF     		ite	lt
  49 0014 0020     		movlt	r0, #0
  50 0016 0120     		movge	r0, #1
  51 0018 38BD     		pop	{r3, r4, r5, pc}
  52              		.cfi_endproc
  53              	.LFE180:
  55              		.section	.text.position_knob,"ax",%progbits
  56              		.align	1
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu fpv5-d16
  62              	position_knob:
  63              	.LFB179:
 413:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     if(hor) {
  64              		.loc 1 413 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              	.LVL3:
  69 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  70              	.LCFI1:
ARM GAS  /tmp/ccr4ruP3.s 			page 10


  71              		.cfi_def_cfa_offset 32
  72              		.cfi_offset 4, -32
  73              		.cfi_offset 5, -28
  74              		.cfi_offset 6, -24
  75              		.cfi_offset 7, -20
  76              		.cfi_offset 8, -16
  77              		.cfi_offset 9, -12
  78              		.cfi_offset 10, -8
  79              		.cfi_offset 14, -4
  80 0004 0646     		mov	r6, r0
  81 0006 0C46     		mov	r4, r1
 414:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_area->x1 -= (knob_size >> 1);
  82              		.loc 1 414 0
  83 0008 002B     		cmp	r3, #0
  84 000a 53D1     		bne	.L7
 421:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_area->y2 = knob_area->y1 + knob_size - 1;
  85              		.loc 1 421 0
  86 000c 4B88     		ldrh	r3, [r1, #2]
  87              	.LVL4:
  88 000e A3EB6203 		sub	r3, r3, r2, asr #1
  89 0012 9BB2     		uxth	r3, r3
  90 0014 4B80     		strh	r3, [r1, #2]	@ movhi
 422:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_area->x1 = obj->coords.x1;
  91              		.loc 1 422 0
  92 0016 1344     		add	r3, r3, r2
  93 0018 9BB2     		uxth	r3, r3
  94 001a 013B     		subs	r3, r3, #1
  95 001c CB80     		strh	r3, [r1, #6]	@ movhi
 423:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_area->x2 = obj->coords.x2;
  96              		.loc 1 423 0
  97 001e B0F91430 		ldrsh	r3, [r0, #20]
  98 0022 0B80     		strh	r3, [r1]	@ movhi
 424:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
  99              		.loc 1 424 0
 100 0024 B0F91830 		ldrsh	r3, [r0, #24]
 101 0028 8B80     		strh	r3, [r1, #4]	@ movhi
 102              	.L5:
 103              	.LVL5:
 104              	.LBB83:
 105              	.LBB84:
 106              		.file 2 "Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h"
   1:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_width(const struct _lv_obj_t * obj, uint32_t part)
   2:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
   3:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_WIDTH);
   4:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
   5:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
   6:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
   7:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_min_width(const struct _lv_obj_t * obj, uint32_t part)
   8:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
   9:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MIN_WIDTH);
  10:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  11:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  12:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  13:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_max_width(const struct _lv_obj_t * obj, uint32_t part)
  14:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  15:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MAX_WIDTH);
  16:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
ARM GAS  /tmp/ccr4ruP3.s 			page 11


  17:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  18:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  19:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_height(const struct _lv_obj_t * obj, uint32_t part)
  20:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  21:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_HEIGHT);
  22:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  23:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  24:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  25:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_min_height(const struct _lv_obj_t * obj, uint32_t part)
  26:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  27:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MIN_HEIGHT);
  28:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  29:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  30:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  31:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_max_height(const struct _lv_obj_t * obj, uint32_t part)
  32:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  33:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MAX_HEIGHT);
  34:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  35:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  36:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  37:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_x(const struct _lv_obj_t * obj, uint32_t part)
  38:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  39:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_X);
  40:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  41:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  42:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  43:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_y(const struct _lv_obj_t * obj, uint32_t part)
  44:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  45:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_Y);
  46:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  47:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  48:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  49:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_align_t lv_obj_get_style_align(const struct _lv_obj_t * obj, uint32_t part)
  50:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  51:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ALIGN);
  52:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_align_t)v.num;
  53:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  54:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  55:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_width(const struct _lv_obj_t * obj, uint32_t pa
  56:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  57:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_WIDTH);
  58:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  59:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  60:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  61:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_height(const struct _lv_obj_t * obj, uint32_t p
  62:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  63:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_HEIGHT);
  64:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  65:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  66:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  67:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_translate_x(const struct _lv_obj_t * obj, uint32_t part)
  68:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  69:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSLATE_X);
  70:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  71:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  72:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  73:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_translate_y(const struct _lv_obj_t * obj, uint32_t part)
ARM GAS  /tmp/ccr4ruP3.s 			page 12


  74:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  75:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSLATE_Y);
  76:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  77:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  78:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  79:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_zoom(const struct _lv_obj_t * obj, uint32_t par
  80:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  81:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_ZOOM);
  82:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  83:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  84:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  85:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_angle(const struct _lv_obj_t * obj, uint32_t pa
  86:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  87:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_ANGLE);
  88:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  89:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  90:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  91:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_pivot_x(const struct _lv_obj_t * obj, uint32_t 
  92:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  93:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_PIVOT_X);
  94:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  95:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  96:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  97:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_pivot_y(const struct _lv_obj_t * obj, uint32_t 
  98:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  99:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_PIVOT_Y);
 100:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 101:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 102:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 103:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_top(const struct _lv_obj_t * obj, uint32_t part)
 104:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 105:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_TOP);
 106:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 107:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 108:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 109:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_bottom(const struct _lv_obj_t * obj, uint32_t part)
 110:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 111:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_BOTTOM);
 112:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 113:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 114:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 115:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_left(const struct _lv_obj_t * obj, uint32_t part)
 116:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 117:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_LEFT);
 107              		.loc 2 117 0
 108 002a 1222     		movs	r2, #18
 109              	.LVL6:
 110 002c 4FF44031 		mov	r1, #196608
 111              	.LVL7:
 112 0030 3046     		mov	r0, r6
 113              	.LVL8:
 114 0032 FFF7FEFF 		bl	lv_obj_get_style_prop
 115              	.LVL9:
 116 0036 8146     		mov	r9, r0
 117              	.LVL10:
 118              	.LBE84:
 119              	.LBE83:
ARM GAS  /tmp/ccr4ruP3.s 			page 13


 120              	.LBB85:
 121              	.LBB86:
 118:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 119:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 120:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 121:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_right(const struct _lv_obj_t * obj, uint32_t part)
 122:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 123:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_RIGHT);
 122              		.loc 2 123 0
 123 0038 1322     		movs	r2, #19
 124 003a 4FF44031 		mov	r1, #196608
 125 003e 3046     		mov	r0, r6
 126 0040 FFF7FEFF 		bl	lv_obj_get_style_prop
 127              	.LVL11:
 128 0044 8246     		mov	r10, r0
 129              	.LVL12:
 130              	.LBE86:
 131              	.LBE85:
 132              	.LBB87:
 133              	.LBB88:
 105:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 134              		.loc 2 105 0
 135 0046 1022     		movs	r2, #16
 136 0048 4FF44031 		mov	r1, #196608
 137 004c 3046     		mov	r0, r6
 138 004e FFF7FEFF 		bl	lv_obj_get_style_prop
 139              	.LVL13:
 140 0052 0746     		mov	r7, r0
 141              	.LVL14:
 142              	.LBE88:
 143              	.LBE87:
 144              	.LBB89:
 145              	.LBB90:
 111:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 146              		.loc 2 111 0
 147 0054 1122     		movs	r2, #17
 148 0056 4FF44031 		mov	r1, #196608
 149 005a 3046     		mov	r0, r6
 150 005c FFF7FEFF 		bl	lv_obj_get_style_prop
 151              	.LVL15:
 152 0060 8046     		mov	r8, r0
 153              	.LVL16:
 154              	.LBE90:
 155              	.LBE89:
 156              	.LBB91:
 157              	.LBB92:
  57:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 158              		.loc 2 57 0
 159 0062 6822     		movs	r2, #104
 160 0064 4FF44031 		mov	r1, #196608
 161 0068 3046     		mov	r0, r6
 162 006a FFF7FEFF 		bl	lv_obj_get_style_prop
 163              	.LVL17:
 164 006e 0546     		mov	r5, r0
 165              	.LVL18:
 166              	.LBE92:
 167              	.LBE91:
ARM GAS  /tmp/ccr4ruP3.s 			page 14


 168              	.LBB93:
 169              	.LBB94:
  63:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 170              		.loc 2 63 0
 171 0070 6922     		movs	r2, #105
 172 0072 4FF44031 		mov	r1, #196608
 173 0076 3046     		mov	r0, r6
 174 0078 FFF7FEFF 		bl	lv_obj_get_style_prop
 175              	.LVL19:
 176              	.LBE94:
 177              	.LBE93:
 436:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     knob_area->x2 += knob_right + transf_w;
 178              		.loc 1 436 0
 179 007c ABB2     		uxth	r3, r5
 180              	.LVL20:
 181 007e 9944     		add	r9, r9, r3
 182              	.LVL21:
 183 0080 1FFA89F9 		uxth	r9, r9
 184 0084 2288     		ldrh	r2, [r4]
 185 0086 A2EB0909 		sub	r9, r2, r9
 186 008a A4F80090 		strh	r9, [r4]	@ movhi
 187              	.LVL22:
 437:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     knob_area->y1 -= knob_top + transf_h;
 188              		.loc 1 437 0
 189 008e 5344     		add	r3, r3, r10
 190 0090 A288     		ldrh	r2, [r4, #4]
 191 0092 12FA83F3 		uxtah	r3, r2, r3
 192 0096 A380     		strh	r3, [r4, #4]	@ movhi
 438:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     knob_area->y2 += knob_bottom + transf_h;
 193              		.loc 1 438 0
 194 0098 80B2     		uxth	r0, r0
 195              	.LVL23:
 196 009a 0744     		add	r7, r7, r0
 197              	.LVL24:
 198 009c BFB2     		uxth	r7, r7
 199 009e 6388     		ldrh	r3, [r4, #2]
 200 00a0 DF1B     		subs	r7, r3, r7
 201 00a2 6780     		strh	r7, [r4, #2]	@ movhi
 202              	.LVL25:
 439:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** }
 203              		.loc 1 439 0
 204 00a4 4044     		add	r0, r0, r8
 205 00a6 B4F80680 		ldrh	r8, [r4, #6]
 206              	.LVL26:
 207 00aa 18FA80F0 		uxtah	r0, r8, r0
 208 00ae E080     		strh	r0, [r4, #6]	@ movhi
 440:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 209              		.loc 1 440 0
 210 00b0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 211              	.LVL27:
 212              	.L7:
 415:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_area->x2 = knob_area->x1 + knob_size - 1;
 213              		.loc 1 415 0
 214 00b4 0B88     		ldrh	r3, [r1]
 215              	.LVL28:
 216 00b6 A3EB6203 		sub	r3, r3, r2, asr #1
 217 00ba 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccr4ruP3.s 			page 15


 218 00bc 0B80     		strh	r3, [r1]	@ movhi
 416:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_area->y1 = obj->coords.y1;
 219              		.loc 1 416 0
 220 00be 1344     		add	r3, r3, r2
 221 00c0 9BB2     		uxth	r3, r3
 222 00c2 013B     		subs	r3, r3, #1
 223 00c4 8B80     		strh	r3, [r1, #4]	@ movhi
 417:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_area->y2 = obj->coords.y2;
 224              		.loc 1 417 0
 225 00c6 B0F91630 		ldrsh	r3, [r0, #22]
 226 00ca 4B80     		strh	r3, [r1, #2]	@ movhi
 418:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 227              		.loc 1 418 0
 228 00cc B0F91A30 		ldrsh	r3, [r0, #26]
 229 00d0 CB80     		strh	r3, [r1, #6]	@ movhi
 230 00d2 AAE7     		b	.L5
 231              		.cfi_endproc
 232              	.LFE179:
 234              		.section	.text.draw_knob,"ax",%progbits
 235              		.align	1
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu fpv5-d16
 241              	draw_knob:
 242              	.LFB178:
 333:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_obj_t * obj = lv_event_get_target(e);
 243              		.loc 1 333 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 192
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              	.LVL29:
 248 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 249              	.LCFI2:
 250              		.cfi_def_cfa_offset 32
 251              		.cfi_offset 4, -32
 252              		.cfi_offset 5, -28
 253              		.cfi_offset 6, -24
 254              		.cfi_offset 7, -20
 255              		.cfi_offset 8, -16
 256              		.cfi_offset 9, -12
 257              		.cfi_offset 10, -8
 258              		.cfi_offset 14, -4
 259 0004 B0B0     		sub	sp, sp, #192
 260              	.LCFI3:
 261              		.cfi_def_cfa_offset 224
 262 0006 0546     		mov	r5, r0
 334:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
 263              		.loc 1 334 0
 264 0008 FFF7FEFF 		bl	lv_event_get_target
 265              	.LVL30:
 266 000c 0446     		mov	r4, r0
 267              	.LVL31:
 336:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 268              		.loc 1 336 0
 269 000e 2846     		mov	r0, r5
 270              	.LVL32:
ARM GAS  /tmp/ccr4ruP3.s 			page 16


 271 0010 FFF7FEFF 		bl	lv_event_get_draw_ctx
 272              	.LVL33:
 273 0014 0746     		mov	r7, r0
 274              	.LVL34:
 275              	.LBB95:
 276              	.LBB96:
 124:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 125:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 126:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 127:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_row(const struct _lv_obj_t * obj, uint32_t part)
 128:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 129:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_ROW);
 130:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 131:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 132:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 133:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_column(const struct _lv_obj_t * obj, uint32_t part)
 134:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 135:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_COLUMN);
 136:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 137:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 138:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 139:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_color(const struct _lv_obj_t * obj, uint32_t part)
 140:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 141:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_COLOR);
 142:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 143:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 144:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 145:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_color_filtered(const struct _lv_obj_t * obj, uint32_t 
 146:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 147:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 148:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 149:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 150:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 151:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_opa(const struct _lv_obj_t * obj, uint32_t part)
 152:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 153:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_OPA);
 154:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 155:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 156:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 157:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_grad_color(const struct _lv_obj_t * obj, uint32_t part
 158:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 159:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_COLOR);
 160:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 161:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 162:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 163:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_grad_color_filtered(const struct _lv_obj_t * obj, uint
 164:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 165:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 166:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 167:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 168:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 169:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_grad_dir_t lv_obj_get_style_bg_grad_dir(const struct _lv_obj_t * obj, uint32_t par
 170:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 171:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_DIR);
 172:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_grad_dir_t)v.num;
 173:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 174:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
ARM GAS  /tmp/ccr4ruP3.s 			page 17


 175:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_bg_main_stop(const struct _lv_obj_t * obj, uint32_t part)
 176:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 177:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_MAIN_STOP);
 178:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 179:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 180:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 181:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_bg_grad_stop(const struct _lv_obj_t * obj, uint32_t part)
 182:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 183:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_STOP);
 184:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 185:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 186:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 187:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const lv_grad_dsc_t * lv_obj_get_style_bg_grad(const struct _lv_obj_t * obj, uint32_t
 188:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 189:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD);
 190:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const lv_grad_dsc_t *)v.ptr;
 191:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 192:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 193:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_dither_mode_t lv_obj_get_style_bg_dither_mode(const struct _lv_obj_t * obj, uint32
 194:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 195:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_DITHER_MODE);
 196:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_dither_mode_t)v.num;
 197:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 198:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 199:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const void * lv_obj_get_style_bg_img_src(const struct _lv_obj_t * obj, uint32_t part)
 200:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 201:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_SRC);
 202:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const void *)v.ptr;
 203:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 204:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 205:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_img_opa(const struct _lv_obj_t * obj, uint32_t part)
 206:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 207:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_OPA);
 208:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 209:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 210:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 211:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_img_recolor(const struct _lv_obj_t * obj, uint32_t par
 212:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 213:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_RECOLOR);
 214:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 215:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 216:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 217:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_img_recolor_filtered(const struct _lv_obj_t * obj, uin
 218:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 219:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 220:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 221:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 222:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 223:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_img_recolor_opa(const struct _lv_obj_t * obj, uint32_t p
 224:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 225:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_RECOLOR_OPA);
 226:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 227:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 228:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 229:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_bg_img_tiled(const struct _lv_obj_t * obj, uint32_t part)
 230:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 231:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_TILED);
ARM GAS  /tmp/ccr4ruP3.s 			page 18


 232:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (bool)v.num;
 233:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 234:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 235:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_border_color(const struct _lv_obj_t * obj, uint32_t part)
 236:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 237:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_COLOR);
 238:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 239:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 240:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 241:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_border_color_filtered(const struct _lv_obj_t * obj, uint3
 242:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 243:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 244:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 245:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 246:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 247:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_border_opa(const struct _lv_obj_t * obj, uint32_t part)
 248:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 249:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_OPA);
 250:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 251:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 252:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 253:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_border_width(const struct _lv_obj_t * obj, uint32_t part)
 254:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 255:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_WIDTH);
 256:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 257:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 258:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 259:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_border_side_t lv_obj_get_style_border_side(const struct _lv_obj_t * obj, uint32_t 
 260:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 261:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_SIDE);
 262:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_border_side_t)v.num;
 263:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 264:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 265:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_border_post(const struct _lv_obj_t * obj, uint32_t part)
 266:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 267:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_POST);
 268:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (bool)v.num;
 269:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 270:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 271:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_outline_width(const struct _lv_obj_t * obj, uint32_t part
 272:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 273:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_WIDTH);
 274:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 275:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 276:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 277:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_outline_color(const struct _lv_obj_t * obj, uint32_t part
 278:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 279:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_COLOR);
 280:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 281:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 282:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 283:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_outline_color_filtered(const struct _lv_obj_t * obj, uint
 284:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 285:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 286:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 287:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 288:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
ARM GAS  /tmp/ccr4ruP3.s 			page 19


 289:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_outline_opa(const struct _lv_obj_t * obj, uint32_t part)
 290:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 291:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_OPA);
 292:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 293:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 294:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 295:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_outline_pad(const struct _lv_obj_t * obj, uint32_t part)
 296:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 297:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_PAD);
 298:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 299:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 300:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 301:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_width(const struct _lv_obj_t * obj, uint32_t part)
 302:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 303:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_WIDTH);
 304:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 305:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 306:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 307:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_ofs_x(const struct _lv_obj_t * obj, uint32_t part)
 308:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 309:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_OFS_X);
 310:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 311:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 312:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 313:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_ofs_y(const struct _lv_obj_t * obj, uint32_t part)
 314:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 315:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_OFS_Y);
 316:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 317:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 318:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 319:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_spread(const struct _lv_obj_t * obj, uint32_t part
 320:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 321:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_SPREAD);
 322:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 323:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 324:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 325:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_shadow_color(const struct _lv_obj_t * obj, uint32_t part)
 326:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 327:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_COLOR);
 328:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 329:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 330:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 331:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_shadow_color_filtered(const struct _lv_obj_t * obj, uint3
 332:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 333:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 334:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 335:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 336:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 337:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_shadow_opa(const struct _lv_obj_t * obj, uint32_t part)
 338:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 339:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_OPA);
 340:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 341:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 342:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 343:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_img_opa(const struct _lv_obj_t * obj, uint32_t part)
 344:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 345:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_IMG_OPA);
ARM GAS  /tmp/ccr4ruP3.s 			page 20


 346:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 347:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 348:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 349:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_img_recolor(const struct _lv_obj_t * obj, uint32_t part)
 350:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 351:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_IMG_RECOLOR);
 352:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 353:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 354:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 355:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_img_recolor_filtered(const struct _lv_obj_t * obj, uint32
 356:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 357:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 358:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 359:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 360:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 361:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_img_recolor_opa(const struct _lv_obj_t * obj, uint32_t part
 362:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 363:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_IMG_RECOLOR_OPA);
 364:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 365:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 366:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 367:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_line_width(const struct _lv_obj_t * obj, uint32_t part)
 368:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 369:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_WIDTH);
 370:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 371:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 372:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 373:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_line_dash_width(const struct _lv_obj_t * obj, uint32_t pa
 374:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 375:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_DASH_WIDTH);
 376:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 377:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 378:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 379:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_line_dash_gap(const struct _lv_obj_t * obj, uint32_t part
 380:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 381:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_DASH_GAP);
 382:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 383:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 384:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 385:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_line_rounded(const struct _lv_obj_t * obj, uint32_t part)
 386:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 387:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_ROUNDED);
 388:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (bool)v.num;
 389:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 390:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 391:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_line_color(const struct _lv_obj_t * obj, uint32_t part)
 392:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 393:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_COLOR);
 394:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 395:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 396:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 397:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_line_color_filtered(const struct _lv_obj_t * obj, uint32_
 398:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 399:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 400:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 401:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 402:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
ARM GAS  /tmp/ccr4ruP3.s 			page 21


 403:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_line_opa(const struct _lv_obj_t * obj, uint32_t part)
 404:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 405:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_OPA);
 406:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 407:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 408:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 409:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_arc_width(const struct _lv_obj_t * obj, uint32_t part)
 410:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 411:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_WIDTH);
 412:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 413:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 414:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 415:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_arc_rounded(const struct _lv_obj_t * obj, uint32_t part)
 416:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 417:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_ROUNDED);
 418:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (bool)v.num;
 419:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 420:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 421:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_arc_color(const struct _lv_obj_t * obj, uint32_t part)
 422:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 423:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_COLOR);
 424:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 425:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 426:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 427:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_arc_color_filtered(const struct _lv_obj_t * obj, uint32_t
 428:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 429:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 430:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 431:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 432:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 433:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_arc_opa(const struct _lv_obj_t * obj, uint32_t part)
 434:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 435:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_OPA);
 436:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 437:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 438:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 439:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const void * lv_obj_get_style_arc_img_src(const struct _lv_obj_t * obj, uint32_t part
 440:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 441:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_IMG_SRC);
 442:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const void *)v.ptr;
 443:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 444:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 445:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_text_color(const struct _lv_obj_t * obj, uint32_t part)
 446:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 447:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_COLOR);
 448:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 449:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 450:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 451:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_text_color_filtered(const struct _lv_obj_t * obj, uint32_
 452:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 453:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 454:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 455:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 456:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 457:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_text_opa(const struct _lv_obj_t * obj, uint32_t part)
 458:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 459:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_OPA);
ARM GAS  /tmp/ccr4ruP3.s 			page 22


 460:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 461:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 462:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 463:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const lv_font_t * lv_obj_get_style_text_font(const struct _lv_obj_t * obj, uint32_t p
 464:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 465:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_FONT);
 466:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const lv_font_t *)v.ptr;
 467:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 468:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 469:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_text_letter_space(const struct _lv_obj_t * obj, uint32_t 
 470:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 471:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_LETTER_SPACE);
 472:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 473:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 474:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 475:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_text_line_space(const struct _lv_obj_t * obj, uint32_t pa
 476:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 477:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_LINE_SPACE);
 478:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 479:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 480:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 481:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_text_decor_t lv_obj_get_style_text_decor(const struct _lv_obj_t * obj, uint32_t pa
 482:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 483:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_DECOR);
 484:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_text_decor_t)v.num;
 485:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 486:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 487:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_text_align_t lv_obj_get_style_text_align(const struct _lv_obj_t * obj, uint32_t pa
 488:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 489:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_ALIGN);
 490:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_text_align_t)v.num;
 491:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 492:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 493:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_radius(const struct _lv_obj_t * obj, uint32_t part)
 494:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 495:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_RADIUS);
 496:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 497:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 498:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 499:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_clip_corner(const struct _lv_obj_t * obj, uint32_t part)
 500:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 501:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_CLIP_CORNER);
 502:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (bool)v.num;
 503:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 504:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 505:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_opa(const struct _lv_obj_t * obj, uint32_t part)
 506:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 507:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OPA);
 508:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 509:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 510:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 511:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const lv_color_filter_dsc_t * lv_obj_get_style_color_filter_dsc(const struct _lv_obj_
 512:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 513:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_COLOR_FILTER_DSC);
 514:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const lv_color_filter_dsc_t *)v.ptr;
 515:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 516:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
ARM GAS  /tmp/ccr4ruP3.s 			page 23


 517:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_color_filter_opa(const struct _lv_obj_t * obj, uint32_t par
 518:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 519:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_COLOR_FILTER_OPA);
 520:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 521:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 522:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 523:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const lv_anim_t * lv_obj_get_style_anim(const struct _lv_obj_t * obj, uint32_t part)
 524:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 525:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ANIM);
 526:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const lv_anim_t *)v.ptr;
 527:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 528:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 529:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline uint32_t lv_obj_get_style_anim_time(const struct _lv_obj_t * obj, uint32_t part)
 530:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 531:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ANIM_TIME);
 532:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (uint32_t)v.num;
 533:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 534:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 535:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline uint32_t lv_obj_get_style_anim_speed(const struct _lv_obj_t * obj, uint32_t part)
 536:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 537:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ANIM_SPEED);
 538:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (uint32_t)v.num;
 539:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 540:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 541:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const lv_style_transition_dsc_t * lv_obj_get_style_transition(const struct _lv_obj_t 
 542:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 543:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSITION);
 544:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const lv_style_transition_dsc_t *)v.ptr;
 545:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 546:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 547:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_blend_mode_t lv_obj_get_style_blend_mode(const struct _lv_obj_t * obj, uint32_t pa
 548:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 549:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BLEND_MODE);
 550:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_blend_mode_t)v.num;
 551:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 552:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 553:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline uint16_t lv_obj_get_style_layout(const struct _lv_obj_t * obj, uint32_t part)
 554:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 555:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LAYOUT);
 556:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (uint16_t)v.num;
 557:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 558:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 559:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_base_dir_t lv_obj_get_style_base_dir(const struct _lv_obj_t * obj, uint32_t part)
 560:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 561:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BASE_DIR);
 277              		.loc 2 561 0
 278 0016 1622     		movs	r2, #22
 279 0018 0021     		movs	r1, #0
 280 001a 2046     		mov	r0, r4
 281              	.LVL35:
 282 001c FFF7FEFF 		bl	lv_obj_get_style_prop
 283              	.LVL36:
 562:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_base_dir_t)v.num;
 284              		.loc 2 562 0
 285 0020 5FFA80F8 		uxtb	r8, r0
 286              	.LVL37:
 287              	.LBE96:
ARM GAS  /tmp/ccr4ruP3.s 			page 24


 288              	.LBE95:
 339:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 289              		.loc 1 339 0
 290 0024 2046     		mov	r0, r4
 291 0026 FFF7FEFF 		bl	is_slider_horizontal
 292              	.LVL38:
 293 002a 0646     		mov	r6, r0
 294              	.LVL39:
 344:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****        slider->bar.max_value > 0) is_symmetrical = true;
 295              		.loc 1 344 0
 296 002c 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 297 0030 03F00303 		and	r3, r3, #3
 298 0034 012B     		cmp	r3, #1
 299 0036 5BD0     		beq	.L28
 343:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     if(slider->bar.mode == LV_BAR_MODE_SYMMETRICAL && slider->bar.min_value < 0 &&
 300              		.loc 1 343 0
 301 0038 0025     		movs	r5, #0
 302              	.LVL40:
 303              	.L9:
 347:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_size = lv_obj_get_height(obj);
 304              		.loc 1 347 0
 305 003a 002E     		cmp	r6, #0
 306 003c 6CD0     		beq	.L10
 348:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(is_symmetrical && slider->bar.cur_value < 0) knob_area.x1 = slider->bar.indic_area.x1;
 307              		.loc 1 348 0
 308 003e 2046     		mov	r0, r4
 309 0040 FFF7FEFF 		bl	lv_obj_get_height
 310              	.LVL41:
 311 0044 8246     		mov	r10, r0
 312              	.LVL42:
 349:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         else knob_area.x1 = LV_SLIDER_KNOB_COORD(is_rtl, slider->bar.indic_area);
 313              		.loc 1 349 0
 314 0046 15B1     		cbz	r5, .L11
 349:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         else knob_area.x1 = LV_SLIDER_KNOB_COORD(is_rtl, slider->bar.indic_area);
 315              		.loc 1 349 0 is_stmt 0 discriminator 1
 316 0048 636A     		ldr	r3, [r4, #36]
 317 004a 002B     		cmp	r3, #0
 318 004c 5CDB     		blt	.L29
 319              	.L11:
 350:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 320              		.loc 1 350 0 is_stmt 1
 321 004e B8F1010F 		cmp	r8, #1
 322 0052 5ED0     		beq	.L30
 350:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 323              		.loc 1 350 0 is_stmt 0 discriminator 2
 324 0054 B4F93830 		ldrsh	r3, [r4, #56]
 325              	.L14:
 350:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 326              		.loc 1 350 0 discriminator 4
 327 0058 ADF8B830 		strh	r3, [sp, #184]	@ movhi
 328              	.L12:
 359:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_obj_init_draw_rect_dsc(obj, LV_PART_KNOB, &knob_rect_dsc);
 329              		.loc 1 359 0 is_stmt 1
 330 005c 20AD     		add	r5, sp, #128
 331              	.LVL43:
 332 005e 2846     		mov	r0, r5
 333 0060 FFF7FEFF 		bl	lv_draw_rect_dsc_init
ARM GAS  /tmp/ccr4ruP3.s 			page 25


 334              	.LVL44:
 360:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     /* Update knob area with knob style */
 335              		.loc 1 360 0
 336 0064 2A46     		mov	r2, r5
 337 0066 4FF44031 		mov	r1, #196608
 338 006a 2046     		mov	r0, r4
 339 006c FFF7FEFF 		bl	lv_obj_init_draw_rect_dsc
 340              	.LVL45:
 362:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     /* Update right knob area with calculated knob area */
 341              		.loc 1 362 0
 342 0070 3346     		mov	r3, r6
 343 0072 5246     		mov	r2, r10
 344 0074 2EA9     		add	r1, sp, #184
 345 0076 2046     		mov	r0, r4
 346 0078 FFF7FEFF 		bl	position_knob
 347              	.LVL46:
 364:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 348              		.loc 1 364 0
 349 007c 04F16809 		add	r9, r4, #104
 350              	.LVL47:
 351              	.LBB97:
 352              	.LBB98:
 353              		.file 3 "Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h"
   1:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** /**
   2:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  * @file lv_area.h
   3:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  *
   4:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  */
   5:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** 
   6:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** #ifndef LV_AREA_H
   7:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** #define LV_AREA_H
   8:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** 
   9:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** #ifdef __cplusplus
  10:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** extern "C" {
  11:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** #endif
  12:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** 
  13:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** /*********************
  14:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  *      INCLUDES
  15:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  *********************/
  16:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** #include <stdbool.h>
  18:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** #include <stdint.h>
  19:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** 
  20:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** /*********************
  21:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  *      DEFINES
  22:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  *********************/
  23:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** 
  24:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  25:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** typedef int32_t lv_coord_t;
  26:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** #else
  27:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** typedef int16_t lv_coord_t;
  28:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** #endif
  29:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** 
  30:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** /**********************
  31:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  *      TYPEDEFS
  32:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  **********************/
  33:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** 
  34:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** /**
ARM GAS  /tmp/ccr4ruP3.s 			page 26


  35:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  * Represents a point on the screen.
  36:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  */
  37:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** typedef struct {
  38:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     lv_coord_t x;
  39:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     lv_coord_t y;
  40:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** } lv_point_t;
  41:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** 
  42:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** /** Represents an area of the screen.*/
  43:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** typedef struct {
  44:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     lv_coord_t x1;
  45:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     lv_coord_t y1;
  46:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     lv_coord_t x2;
  47:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     lv_coord_t y2;
  48:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** } lv_area_t;
  49:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** 
  50:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** /** Alignments*/
  51:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** enum {
  52:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  55:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  56:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_CENTER,
  62:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** 
  63:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** };
  76:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** 
  78:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** enum {
  79:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** };
  88:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** 
  89:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** typedef uint8_t lv_dir_t;
  90:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** 
  91:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** /**********************
ARM GAS  /tmp/ccr4ruP3.s 			page 27


  92:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  * GLOBAL PROTOTYPES
  93:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  **********************/
  94:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** 
  95:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** /**
  96:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  * Initialize an area
  97:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  * @param area_p pointer to an area
  98:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  * @param x1 left coordinate of the area
  99:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  * @param y1 top coordinate of the area
 100:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  * @param x2 right coordinate of the area
 101:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 102:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  */
 103:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** 
 105:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** /**
 106:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  * Copy an area
 107:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  * @param dest pointer to the destination area
 108:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  * @param src pointer to the source area
 109:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****  */
 110:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 111:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h **** {
 112:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     dest->x1 = src->x1;
 354              		.loc 3 112 0
 355 0080 BDF9B830 		ldrsh	r3, [sp, #184]
 356 0084 A4F86830 		strh	r3, [r4, #104]	@ movhi
 113:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 357              		.loc 3 113 0
 358 0088 BDF9BA30 		ldrsh	r3, [sp, #186]
 359 008c A4F86A30 		strh	r3, [r4, #106]	@ movhi
 114:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 360              		.loc 3 114 0
 361 0090 BDF9BC30 		ldrsh	r3, [sp, #188]
 362 0094 A4F86C30 		strh	r3, [r4, #108]	@ movhi
 115:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 363              		.loc 3 115 0
 364 0098 BDF9BE30 		ldrsh	r3, [sp, #190]
 365 009c A4F86E30 		strh	r3, [r4, #110]	@ movhi
 366              	.LVL48:
 367              	.LBE98:
 368              	.LBE97:
 367:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.part = LV_PART_KNOB;
 369              		.loc 1 367 0
 370 00a0 3946     		mov	r1, r7
 371 00a2 0EA8     		add	r0, sp, #56
 372 00a4 FFF7FEFF 		bl	lv_obj_draw_dsc_init
 373              	.LVL49:
 368:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.class_p = MY_CLASS;
 374              		.loc 1 368 0
 375 00a8 4FF44033 		mov	r3, #196608
 376 00ac 1B93     		str	r3, [sp, #108]
 369:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.type = LV_SLIDER_DRAW_PART_KNOB;
 377              		.loc 1 369 0
 378 00ae 4F4B     		ldr	r3, .L35
 379 00b0 0F93     		str	r3, [sp, #60]
 370:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.id = 0;
 380              		.loc 1 370 0
 381 00b2 0023     		movs	r3, #0
 382 00b4 1093     		str	r3, [sp, #64]
ARM GAS  /tmp/ccr4ruP3.s 			page 28


 371:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.draw_area = &slider->right_knob_area;
 383              		.loc 1 371 0
 384 00b6 1C93     		str	r3, [sp, #112]
 372:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.rect_dsc = &knob_rect_dsc;
 385              		.loc 1 372 0
 386 00b8 CDF84490 		str	r9, [sp, #68]
 373:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 387              		.loc 1 373 0
 388 00bc 1295     		str	r5, [sp, #72]
 389              	.LVL50:
 390              	.LBB99:
 391              	.LBB100:
 392              		.file 4 "Drivers/lvgl/lvgl/src/widgets/lv_slider.h"
   1:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /**
   2:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @file lv_slider.h
   3:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  *
   4:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  */
   5:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
   6:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** #ifndef LV_SLIDER_H
   7:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** #define LV_SLIDER_H
   8:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
   9:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** #ifdef __cplusplus
  10:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** extern "C" {
  11:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** #endif
  12:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
  13:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /*********************
  14:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  *      INCLUDES
  15:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  *********************/
  16:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** #include "../lv_conf_internal.h"
  17:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
  18:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** #if LV_USE_SLIDER != 0
  19:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
  20:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /*Testing of dependencies*/
  21:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** #if LV_USE_BAR == 0
  22:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** #error "lv_slider: lv_bar is required. Enable it in lv_conf.h (LV_USE_BAR 1)"
  23:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** #endif
  24:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
  25:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** #include "../core/lv_obj.h"
  26:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** #include "lv_bar.h"
  27:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
  28:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /*********************
  29:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  *      DEFINES
  30:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  *********************/
  31:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
  32:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /**********************
  33:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  *      TYPEDEFS
  34:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  **********************/
  35:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
  36:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** enum {
  37:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_NORMAL = LV_BAR_MODE_NORMAL,
  38:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_SYMMETRICAL = LV_BAR_MODE_SYMMETRICAL,
  39:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_RANGE = LV_BAR_MODE_RANGE
  40:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** };
  41:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** typedef uint8_t lv_slider_mode_t;
  42:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
  43:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** typedef struct {
  44:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     lv_bar_t bar;       /*Add the ancestor's type first*/
ARM GAS  /tmp/ccr4ruP3.s 			page 29


  45:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     lv_area_t left_knob_area;
  46:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     lv_area_t right_knob_area;
  47:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     int32_t * value_to_set; /*Which bar value to set*/
  48:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     uint8_t dragging : 1;       /*1: the slider is being dragged*/
  49:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     uint8_t left_knob_focus : 1; /*1: with encoder now the right knob can be adjusted*/
  50:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** } lv_slider_t;
  51:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
  52:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** extern const lv_obj_class_t lv_slider_class;
  53:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
  54:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /**
  55:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * `type` field in `lv_obj_draw_part_dsc_t` if `class_p = lv_slider_class`
  56:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * Used in `LV_EVENT_DRAW_PART_BEGIN` and `LV_EVENT_DRAW_PART_END`
  57:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  */
  58:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** typedef enum {
  59:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_DRAW_PART_KNOB,           /**< The main (right) knob's rectangle*/
  60:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_DRAW_PART_KNOB_LEFT,      /**< The left knob's rectangle*/
  61:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** } lv_slider_draw_part_type_t;
  62:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
  63:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /**********************
  64:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * GLOBAL PROTOTYPES
  65:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  **********************/
  66:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
  67:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /**
  68:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * Create a slider object
  69:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param parent    pointer to an object, it will be the parent of the new slider.
  70:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @return          pointer to the created slider
  71:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  */
  72:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** lv_obj_t * lv_slider_create(lv_obj_t * parent);
  73:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
  74:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /*=====================
  75:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * Setter functions
  76:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  *====================*/
  77:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
  78:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /**
  79:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * Set a new value on the slider
  80:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  81:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param value     the new value
  82:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  83:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  */
  84:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  85:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** {
  86:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_value(obj, value, anim);
  87:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** }
  88:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
  89:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /**
  90:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * Set a new value for the left knob of a slider
  91:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  92:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param value     new value
  93:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  94:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  */
  95:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_left_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  96:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** {
  97:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_start_value(obj, value, anim);
  98:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** }
  99:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
 100:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /**
 101:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * Set minimum and the maximum values of a bar
ARM GAS  /tmp/ccr4ruP3.s 			page 30


 102:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to the slider object
 103:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param min       minimum value
 104:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param max       maximum value
 105:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  */
 106:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_range(lv_obj_t * obj, int32_t min, int32_t max)
 107:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** {
 108:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_range(obj, min, max);
 109:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** }
 110:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
 111:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /**
 112:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * Set the mode of slider.
 113:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 114:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param mode      the mode of the slider. See ::lv_slider_mode_t
 115:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  */
 116:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_mode(lv_obj_t * obj, lv_slider_mode_t mode)
 117:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** {
 118:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_mode(obj, (lv_bar_mode_t)mode);
 119:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** }
 120:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
 121:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /*=====================
 122:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * Getter functions
 123:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  *====================*/
 124:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
 125:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /**
 126:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * Get the value of the main knob of a slider
 127:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 128:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @return          the value of the main knob of the slider
 129:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  */
 130:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** static inline int32_t lv_slider_get_value(const lv_obj_t * obj)
 131:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** {
 132:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     return lv_bar_get_value(obj);
 133:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** }
 134:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
 135:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /**
 136:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * Get the value of the left knob of a slider
 137:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 138:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @return          the value of the left knob of the slider
 139:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  */
 140:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** static inline int32_t lv_slider_get_left_value(const lv_obj_t * obj)
 141:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** {
 142:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     return lv_bar_get_start_value(obj);
 143:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** }
 144:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
 145:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /**
 146:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * Get the minimum value of a slider
 147:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 148:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @return          the minimum value of the slider
 149:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  */
 150:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** static inline int32_t lv_slider_get_min_value(const lv_obj_t * obj)
 151:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** {
 152:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     return lv_bar_get_min_value(obj);
 153:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** }
 154:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
 155:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /**
 156:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * Get the maximum value of a slider
 157:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 158:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @return          the maximum value of the slider
ARM GAS  /tmp/ccr4ruP3.s 			page 31


 159:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  */
 160:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** static inline int32_t lv_slider_get_max_value(const lv_obj_t * obj)
 161:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** {
 162:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     return lv_bar_get_max_value(obj);
 163:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** }
 164:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
 165:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /**
 166:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * Give the slider is being dragged or not
 167:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 168:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @return          true: drag in progress false: not dragged
 169:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  */
 170:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** bool lv_slider_is_dragged(const lv_obj_t * obj);
 171:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** 
 172:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** /**
 173:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * Get the mode of the slider.
 174:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a bar object
 175:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  * @return          see ::lv_slider_mode_t
 176:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****  */
 177:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** static inline lv_slider_mode_t lv_slider_get_mode(lv_obj_t * slider)
 178:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** {
 179:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     lv_bar_mode_t mode = lv_bar_get_mode(slider);
 393              		.loc 4 179 0
 394 00be 2046     		mov	r0, r4
 395 00c0 FFF7FEFF 		bl	lv_bar_get_mode
 396              	.LVL51:
 180:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     if(mode == LV_BAR_MODE_SYMMETRICAL) return LV_SLIDER_MODE_SYMMETRICAL;
 397              		.loc 4 180 0
 398 00c4 0128     		cmp	r0, #1
 399 00c6 01D0     		beq	.L16
 181:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     else if(mode == LV_BAR_MODE_RANGE) return LV_SLIDER_MODE_RANGE;
 400              		.loc 4 181 0
 401 00c8 0228     		cmp	r0, #2
 402 00ca 37D0     		beq	.L31
 403              	.L16:
 404              	.LBE100:
 405              	.LBE99:
 376:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_draw_rect(draw_ctx, &knob_rect_dsc, &slider->right_knob_area);
 406              		.loc 1 376 0
 407 00cc 0EAA     		add	r2, sp, #56
 408 00ce 1A21     		movs	r1, #26
 409 00d0 2046     		mov	r0, r4
 410              	.LVL52:
 411 00d2 FFF7FEFF 		bl	lv_event_send
 412              	.LVL53:
 377:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_draw_dsc);
 413              		.loc 1 377 0
 414 00d6 4A46     		mov	r2, r9
 415 00d8 20A9     		add	r1, sp, #128
 416 00da 3846     		mov	r0, r7
 417 00dc FFF7FEFF 		bl	lv_draw_rect
 418              	.LVL54:
 378:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 419              		.loc 1 378 0
 420 00e0 0EAA     		add	r2, sp, #56
 421 00e2 1B21     		movs	r1, #27
 422 00e4 2046     		mov	r0, r4
 423 00e6 FFF7FEFF 		bl	lv_event_send
ARM GAS  /tmp/ccr4ruP3.s 			page 32


 424              	.LVL55:
 425              	.L8:
 410:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 426              		.loc 1 410 0
 427 00ea 30B0     		add	sp, sp, #192
 428              	.LCFI4:
 429              		.cfi_remember_state
 430              		.cfi_def_cfa_offset 32
 431              		@ sp needed
 432 00ec BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 433              	.LVL56:
 434              	.L28:
 435              	.LCFI5:
 436              		.cfi_restore_state
 344:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****        slider->bar.max_value > 0) is_symmetrical = true;
 437              		.loc 1 344 0 discriminator 1
 438 00f0 A36A     		ldr	r3, [r4, #40]
 439 00f2 002B     		cmp	r3, #0
 440 00f4 01DB     		blt	.L32
 343:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     if(slider->bar.mode == LV_BAR_MODE_SYMMETRICAL && slider->bar.min_value < 0 &&
 441              		.loc 1 343 0
 442 00f6 0025     		movs	r5, #0
 443              	.LVL57:
 444 00f8 9FE7     		b	.L9
 445              	.LVL58:
 446              	.L32:
 345:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 447              		.loc 1 345 0 discriminator 2
 448 00fa E36A     		ldr	r3, [r4, #44]
 344:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****        slider->bar.max_value > 0) is_symmetrical = true;
 449              		.loc 1 344 0 discriminator 2
 450 00fc 002B     		cmp	r3, #0
 451 00fe 01DD     		ble	.L33
 345:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 452              		.loc 1 345 0
 453 0100 0125     		movs	r5, #1
 454              	.LVL59:
 455 0102 9AE7     		b	.L9
 456              	.LVL60:
 457              	.L33:
 343:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     if(slider->bar.mode == LV_BAR_MODE_SYMMETRICAL && slider->bar.min_value < 0 &&
 458              		.loc 1 343 0
 459 0104 0025     		movs	r5, #0
 460              	.LVL61:
 461 0106 98E7     		b	.L9
 462              	.LVL62:
 463              	.L29:
 349:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         else knob_area.x1 = LV_SLIDER_KNOB_COORD(is_rtl, slider->bar.indic_area);
 464              		.loc 1 349 0 discriminator 2
 465 0108 B4F93430 		ldrsh	r3, [r4, #52]
 466 010c ADF8B830 		strh	r3, [sp, #184]	@ movhi
 467 0110 A4E7     		b	.L12
 468              	.L30:
 350:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 469              		.loc 1 350 0 discriminator 1
 470 0112 B4F93430 		ldrsh	r3, [r4, #52]
 471 0116 9FE7     		b	.L14
ARM GAS  /tmp/ccr4ruP3.s 			page 33


 472              	.LVL63:
 473              	.L10:
 353:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(is_symmetrical && slider->bar.cur_value < 0) knob_area.y1 = slider->bar.indic_area.y2;
 474              		.loc 1 353 0
 475 0118 2046     		mov	r0, r4
 476 011a FFF7FEFF 		bl	lv_obj_get_width
 477              	.LVL64:
 478 011e 8246     		mov	r10, r0
 479              	.LVL65:
 354:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         else knob_area.y1 = slider->bar.indic_area.y1;
 480              		.loc 1 354 0
 481 0120 15B1     		cbz	r5, .L15
 354:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         else knob_area.y1 = slider->bar.indic_area.y1;
 482              		.loc 1 354 0 is_stmt 0 discriminator 1
 483 0122 636A     		ldr	r3, [r4, #36]
 484 0124 002B     		cmp	r3, #0
 485 0126 04DB     		blt	.L34
 486              	.L15:
 355:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 487              		.loc 1 355 0 is_stmt 1
 488 0128 B4F93630 		ldrsh	r3, [r4, #54]
 489 012c ADF8BA30 		strh	r3, [sp, #186]	@ movhi
 490 0130 94E7     		b	.L12
 491              	.L34:
 354:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         else knob_area.y1 = slider->bar.indic_area.y1;
 492              		.loc 1 354 0 discriminator 2
 493 0132 B4F93A30 		ldrsh	r3, [r4, #58]
 494 0136 ADF8BA30 		strh	r3, [sp, #186]	@ movhi
 495 013a 8FE7     		b	.L12
 496              	.LVL66:
 497              	.L31:
 498              	.LBB101:
 383:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         /* Draw the right knob */
 499              		.loc 1 383 0
 500 013c 3822     		movs	r2, #56
 501 013e 20A9     		add	r1, sp, #128
 502 0140 6846     		mov	r0, sp
 503 0142 FFF7FEFF 		bl	lv_memcpy
 504              	.LVL67:
 385:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_draw_rect(draw_ctx, &knob_rect_dsc, &slider->right_knob_area);
 505              		.loc 1 385 0
 506 0146 0EAA     		add	r2, sp, #56
 507 0148 1A21     		movs	r1, #26
 508 014a 2046     		mov	r0, r4
 509 014c FFF7FEFF 		bl	lv_event_send
 510              	.LVL68:
 386:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_draw_dsc);
 511              		.loc 1 386 0
 512 0150 4A46     		mov	r2, r9
 513 0152 20A9     		add	r1, sp, #128
 514 0154 3846     		mov	r0, r7
 515 0156 FFF7FEFF 		bl	lv_draw_rect
 516              	.LVL69:
 387:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 517              		.loc 1 387 0
 518 015a 0EAA     		add	r2, sp, #56
 519 015c 1B21     		movs	r1, #27
ARM GAS  /tmp/ccr4ruP3.s 			page 34


 520 015e 2046     		mov	r0, r4
 521 0160 FFF7FEFF 		bl	lv_event_send
 522              	.LVL70:
 390:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             /*use !is_rtl to get the other knob*/
 523              		.loc 1 390 0
 524 0164 26B9     		cbnz	r6, .L17
 395:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 525              		.loc 1 395 0
 526 0166 B4F93A30 		ldrsh	r3, [r4, #58]
 527 016a ADF8BA30 		strh	r3, [sp, #186]	@ movhi
 528 016e 06E0     		b	.L22
 529              	.L17:
 392:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 530              		.loc 1 392 0
 531 0170 B8F1010F 		cmp	r8, #1
 532 0174 36D0     		beq	.L20
 392:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 533              		.loc 1 392 0 is_stmt 0 discriminator 1
 534 0176 B4F93430 		ldrsh	r3, [r4, #52]
 535              	.L21:
 392:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 536              		.loc 1 392 0 discriminator 4
 537 017a ADF8B830 		strh	r3, [sp, #184]	@ movhi
 538              	.L22:
 397:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_area_copy(&slider->left_knob_area, &knob_area);
 539              		.loc 1 397 0 is_stmt 1
 540 017e 3346     		mov	r3, r6
 541 0180 5246     		mov	r2, r10
 542 0182 2EA9     		add	r1, sp, #184
 543 0184 2046     		mov	r0, r4
 544 0186 FFF7FEFF 		bl	position_knob
 545              	.LVL71:
 398:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 546              		.loc 1 398 0
 547 018a 04F16006 		add	r6, r4, #96
 548              	.LVL72:
 549              	.LBB102:
 550              	.LBB103:
 112:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 551              		.loc 3 112 0
 552 018e BDF9B830 		ldrsh	r3, [sp, #184]
 553 0192 A4F86030 		strh	r3, [r4, #96]	@ movhi
 113:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 554              		.loc 3 113 0
 555 0196 BDF9BA30 		ldrsh	r3, [sp, #186]
 556 019a A4F86230 		strh	r3, [r4, #98]	@ movhi
 114:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 557              		.loc 3 114 0
 558 019e BDF9BC30 		ldrsh	r3, [sp, #188]
 559 01a2 A4F86430 		strh	r3, [r4, #100]	@ movhi
 560              		.loc 3 115 0
 561 01a6 BDF9BE30 		ldrsh	r3, [sp, #190]
 562 01aa A4F86630 		strh	r3, [r4, #102]	@ movhi
 563              	.LVL73:
 564              	.LBE103:
 565              	.LBE102:
 400:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.type = LV_SLIDER_DRAW_PART_KNOB_LEFT;
ARM GAS  /tmp/ccr4ruP3.s 			page 35


 566              		.loc 1 400 0
 567 01ae 20AD     		add	r5, sp, #128
 568 01b0 3822     		movs	r2, #56
 569 01b2 6946     		mov	r1, sp
 570 01b4 2846     		mov	r0, r5
 571 01b6 FFF7FEFF 		bl	lv_memcpy
 572              	.LVL74:
 401:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.draw_area = &slider->left_knob_area;
 573              		.loc 1 401 0
 574 01ba 0123     		movs	r3, #1
 575 01bc 1093     		str	r3, [sp, #64]
 402:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.rect_dsc = &knob_rect_dsc;
 576              		.loc 1 402 0
 577 01be 1196     		str	r6, [sp, #68]
 403:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.id = 1;
 578              		.loc 1 403 0
 579 01c0 1295     		str	r5, [sp, #72]
 404:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 580              		.loc 1 404 0
 581 01c2 1C93     		str	r3, [sp, #112]
 406:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_draw_rect(draw_ctx, &knob_rect_dsc, &slider->left_knob_area);
 582              		.loc 1 406 0
 583 01c4 0EAA     		add	r2, sp, #56
 584 01c6 1A21     		movs	r1, #26
 585 01c8 2046     		mov	r0, r4
 586 01ca FFF7FEFF 		bl	lv_event_send
 587              	.LVL75:
 407:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_draw_dsc);
 588              		.loc 1 407 0
 589 01ce 3246     		mov	r2, r6
 590 01d0 2946     		mov	r1, r5
 591 01d2 3846     		mov	r0, r7
 592 01d4 FFF7FEFF 		bl	lv_draw_rect
 593              	.LVL76:
 408:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 594              		.loc 1 408 0
 595 01d8 0EAA     		add	r2, sp, #56
 596 01da 1B21     		movs	r1, #27
 597 01dc 2046     		mov	r0, r4
 598 01de FFF7FEFF 		bl	lv_event_send
 599              	.LVL77:
 600              	.LBE101:
 410:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 601              		.loc 1 410 0
 602 01e2 82E7     		b	.L8
 603              	.LVL78:
 604              	.L20:
 605              	.LBB104:
 392:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 606              		.loc 1 392 0 discriminator 2
 607 01e4 B4F93830 		ldrsh	r3, [r4, #56]
 608 01e8 C7E7     		b	.L21
 609              	.L36:
 610 01ea 00BF     		.align	2
 611              	.L35:
 612 01ec 00000000 		.word	.LANCHOR0
 613              	.LBE104:
ARM GAS  /tmp/ccr4ruP3.s 			page 36


 614              		.cfi_endproc
 615              	.LFE178:
 617              		.section	.text.lv_slider_event,"ax",%progbits
 618              		.align	1
 619              		.syntax unified
 620              		.thumb
 621              		.thumb_func
 622              		.fpu fpv5-d16
 624              	lv_slider_event:
 625              	.LFB177:
  96:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     LV_UNUSED(class_p);
 626              		.loc 1 96 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 16
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              	.LVL79:
 631 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 632              	.LCFI6:
 633              		.cfi_def_cfa_offset 36
 634              		.cfi_offset 4, -36
 635              		.cfi_offset 5, -32
 636              		.cfi_offset 6, -28
 637              		.cfi_offset 7, -24
 638              		.cfi_offset 8, -20
 639              		.cfi_offset 9, -16
 640              		.cfi_offset 10, -12
 641              		.cfi_offset 11, -8
 642              		.cfi_offset 14, -4
 643 0004 85B0     		sub	sp, sp, #20
 644              	.LCFI7:
 645              		.cfi_def_cfa_offset 56
 646 0006 0C46     		mov	r4, r1
 102:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     if(res != LV_RES_OK) return;
 647              		.loc 1 102 0
 648 0008 9F48     		ldr	r0, .L106
 649              	.LVL80:
 650 000a FFF7FEFF 		bl	lv_obj_event_base
 651              	.LVL81:
 103:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 652              		.loc 1 103 0
 653 000e 0128     		cmp	r0, #1
 654 0010 02D0     		beq	.L87
 655              	.LVL82:
 656              	.L37:
 330:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 657              		.loc 1 330 0
 658 0012 05B0     		add	sp, sp, #20
 659              	.LCFI8:
 660              		.cfi_remember_state
 661              		.cfi_def_cfa_offset 36
 662              		@ sp needed
 663 0014 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 664              	.LVL83:
 665              	.L87:
 666              	.LCFI9:
 667              		.cfi_restore_state
 105:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_obj_t * obj = lv_event_get_target(e);
ARM GAS  /tmp/ccr4ruP3.s 			page 37


 668              		.loc 1 105 0
 669 0018 2046     		mov	r0, r4
 670              	.LVL84:
 671 001a FFF7FEFF 		bl	lv_event_get_code
 672              	.LVL85:
 673 001e 0646     		mov	r6, r0
 674              	.LVL86:
 106:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
 675              		.loc 1 106 0
 676 0020 2046     		mov	r0, r4
 677 0022 FFF7FEFF 		bl	lv_event_get_target
 678              	.LVL87:
 679 0026 0546     		mov	r5, r0
 680              	.LVL88:
 681              	.LBB105:
 682              	.LBB106:
 179:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     if(mode == LV_BAR_MODE_SYMMETRICAL) return LV_SLIDER_MODE_SYMMETRICAL;
 683              		.loc 4 179 0
 684 0028 FFF7FEFF 		bl	lv_bar_get_mode
 685              	.LVL89:
 180:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     else if(mode == LV_BAR_MODE_RANGE) return LV_SLIDER_MODE_RANGE;
 686              		.loc 4 180 0
 687 002c 0128     		cmp	r0, #1
 688 002e 22D0     		beq	.L83
 689              		.loc 4 181 0
 690 0030 0228     		cmp	r0, #2
 691 0032 1ED0     		beq	.L88
 182:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     else return LV_SLIDER_MODE_NORMAL;
 692              		.loc 4 182 0
 693 0034 0027     		movs	r7, #0
 694              	.L39:
 695              	.LVL90:
 696              	.LBE106:
 697              	.LBE105:
 111:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_hit_test_info_t * info = lv_event_get_param(e);
 698              		.loc 1 111 0
 699 0036 112E     		cmp	r6, #17
 700 0038 1FD0     		beq	.L89
 128:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_obj_invalidate(obj);
 701              		.loc 1 128 0
 702 003a 012E     		cmp	r6, #1
 703 003c 63D0     		beq	.L90
 192:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_indev_t * indev = lv_indev_get_act();
 704              		.loc 1 192 0
 705 003e 022E     		cmp	r6, #2
 706 0040 00F02481 		beq	.L91
 707              	.L57:
 253:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         slider->dragging = false;
 708              		.loc 1 253 0
 709 0044 032E     		cmp	r6, #3
 710 0046 18BF     		it	ne
 711 0048 082E     		cmpne	r6, #8
 712 004a 00F0BF81 		beq	.L92
 279:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 713              		.loc 1 279 0
 714 004e 0E2E     		cmp	r6, #14
 715 0050 00F0F981 		beq	.L93
ARM GAS  /tmp/ccr4ruP3.s 			page 38


 285:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_obj_refresh_ext_draw_size(obj);
 716              		.loc 1 285 0
 717 0054 292E     		cmp	r6, #41
 718 0056 00F00682 		beq	.L94
 288:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_coord_t knob_left = lv_obj_get_style_pad_left(obj, LV_PART_KNOB);
 719              		.loc 1 288 0
 720 005a 132E     		cmp	r6, #19
 721 005c 00F00782 		beq	.L95
 309:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         char c = *((char *)lv_event_get_param(e));
 722              		.loc 1 309 0
 723 0060 0D2E     		cmp	r6, #13
 724 0062 00F07B82 		beq	.L96
 327:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         draw_knob(e);
 725              		.loc 1 327 0
 726 0066 152E     		cmp	r6, #21
 727 0068 D3D1     		bne	.L37
 328:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 728              		.loc 1 328 0
 729 006a 2046     		mov	r0, r4
 730 006c FFF7FEFF 		bl	draw_knob
 731              	.LVL91:
 732 0070 CFE7     		b	.L37
 733              	.LVL92:
 734              	.L88:
 735              	.LBB108:
 736              	.LBB107:
 181:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     else return LV_SLIDER_MODE_NORMAL;
 737              		.loc 4 181 0
 738 0072 0227     		movs	r7, #2
 739 0074 DFE7     		b	.L39
 740              	.L83:
 180:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     else if(mode == LV_BAR_MODE_RANGE) return LV_SLIDER_MODE_RANGE;
 741              		.loc 4 180 0
 742 0076 0127     		movs	r7, #1
 743 0078 DDE7     		b	.L39
 744              	.LVL93:
 745              	.L89:
 746              	.LBE107:
 747              	.LBE108:
 748              	.LBB109:
 112:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_coord_t ext_click_area = obj->spec_attr ? obj->spec_attr->ext_click_pad : 0;
 749              		.loc 1 112 0
 750 007a 2046     		mov	r0, r4
 751 007c FFF7FEFF 		bl	lv_event_get_param
 752              	.LVL94:
 753 0080 0446     		mov	r4, r0
 754              	.LVL95:
 113:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 755              		.loc 1 113 0
 756 0082 AB68     		ldr	r3, [r5, #8]
 757 0084 002B     		cmp	r3, #0
 758 0086 3CD0     		beq	.L85
 113:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 759              		.loc 1 113 0 is_stmt 0 discriminator 1
 760 0088 B3F91460 		ldrsh	r6, [r3, #20]
 761              	.LVL96:
 762              	.L41:
ARM GAS  /tmp/ccr4ruP3.s 			page 39


 763              	.LBB110:
 764              	.LBB111:
 112:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 765              		.loc 3 112 0 is_stmt 1 discriminator 4
 766 008c B5F96830 		ldrsh	r3, [r5, #104]
 767 0090 ADF80830 		strh	r3, [sp, #8]	@ movhi
 113:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 768              		.loc 3 113 0 discriminator 4
 769 0094 B5F96A30 		ldrsh	r3, [r5, #106]
 770 0098 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 114:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 771              		.loc 3 114 0 discriminator 4
 772 009c B5F96C30 		ldrsh	r3, [r5, #108]
 773 00a0 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 774              		.loc 3 115 0 discriminator 4
 775 00a4 B5F96E30 		ldrsh	r3, [r5, #110]
 776 00a8 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 777              	.LVL97:
 778              	.LBE111:
 779              	.LBE110:
 118:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         info->res = _lv_area_is_point_on(&a, info->point, 0);
 780              		.loc 1 118 0 discriminator 4
 781 00ac 3246     		mov	r2, r6
 782 00ae 3146     		mov	r1, r6
 783 00b0 02A8     		add	r0, sp, #8
 784              	.LVL98:
 785 00b2 FFF7FEFF 		bl	lv_area_increase
 786              	.LVL99:
 119:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 787              		.loc 1 119 0 discriminator 4
 788 00b6 0022     		movs	r2, #0
 789 00b8 2168     		ldr	r1, [r4]
 790 00ba 02A8     		add	r0, sp, #8
 791 00bc FFF7FEFF 		bl	_lv_area_is_point_on
 792              	.LVL100:
 793 00c0 2071     		strb	r0, [r4, #4]
 122:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             lv_area_copy(&a, &slider->left_knob_area);
 794              		.loc 1 122 0 discriminator 4
 795 00c2 0028     		cmp	r0, #0
 796 00c4 A5D1     		bne	.L37
 122:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             lv_area_copy(&a, &slider->left_knob_area);
 797              		.loc 1 122 0 is_stmt 0 discriminator 1
 798 00c6 022F     		cmp	r7, #2
 799 00c8 A3D1     		bne	.L37
 800              	.LVL101:
 801              	.LBB112:
 802              	.LBB113:
 112:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 803              		.loc 3 112 0 is_stmt 1
 804 00ca B5F96030 		ldrsh	r3, [r5, #96]
 805 00ce ADF80830 		strh	r3, [sp, #8]	@ movhi
 113:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 806              		.loc 3 113 0
 807 00d2 B5F96230 		ldrsh	r3, [r5, #98]
 808 00d6 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 114:Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 809              		.loc 3 114 0
ARM GAS  /tmp/ccr4ruP3.s 			page 40


 810 00da B5F96430 		ldrsh	r3, [r5, #100]
 811 00de ADF80C30 		strh	r3, [sp, #12]	@ movhi
 812              		.loc 3 115 0
 813 00e2 B5F96630 		ldrsh	r3, [r5, #102]
 814 00e6 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 815              	.LVL102:
 816              	.LBE113:
 817              	.LBE112:
 124:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             info->res = _lv_area_is_point_on(&a, info->point, 0);
 818              		.loc 1 124 0
 819 00ea 3246     		mov	r2, r6
 820 00ec 3146     		mov	r1, r6
 821 00ee 02A8     		add	r0, sp, #8
 822 00f0 FFF7FEFF 		bl	lv_area_increase
 823              	.LVL103:
 125:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 824              		.loc 1 125 0
 825 00f4 0022     		movs	r2, #0
 826 00f6 2168     		ldr	r1, [r4]
 827 00f8 02A8     		add	r0, sp, #8
 828 00fa FFF7FEFF 		bl	_lv_area_is_point_on
 829              	.LVL104:
 830 00fe 2071     		strb	r0, [r4, #4]
 831 0100 87E7     		b	.L37
 832              	.LVL105:
 833              	.L85:
 113:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 834              		.loc 1 113 0
 835 0102 0026     		movs	r6, #0
 836              	.LVL106:
 837 0104 C2E7     		b	.L41
 838              	.LVL107:
 839              	.L90:
 840              	.LBE109:
 841              	.LBB114:
 129:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 842              		.loc 1 129 0
 843 0106 2846     		mov	r0, r5
 844 0108 FFF7FEFF 		bl	lv_obj_invalidate
 845              	.LVL108:
 132:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(type == LV_SLIDER_MODE_NORMAL || type == LV_SLIDER_MODE_SYMMETRICAL) {
 846              		.loc 1 132 0
 847 010c 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 848 0110 43F00103 		orr	r3, r3, #1
 849 0114 85F87430 		strb	r3, [r5, #116]
 133:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             slider->value_to_set = &slider->bar.cur_value;
 850              		.loc 1 133 0
 851 0118 012F     		cmp	r7, #1
 852 011a 54D9     		bls	.L97
 136:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             lv_indev_get_point(lv_indev_get_act(), &p);
 853              		.loc 1 136 0
 854 011c 022F     		cmp	r7, #2
 855 011e 7FF478AF 		bne	.L37
 856              	.LBB115:
 137:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             bool hor = lv_obj_get_width(obj) >= lv_obj_get_height(obj);
 857              		.loc 1 137 0
 858 0122 FFF7FEFF 		bl	lv_indev_get_act
ARM GAS  /tmp/ccr4ruP3.s 			page 41


 859              	.LVL109:
 860 0126 02A9     		add	r1, sp, #8
 861 0128 FFF7FEFF 		bl	lv_indev_get_point
 862              	.LVL110:
 138:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             lv_base_dir_t base_dir = lv_obj_get_style_base_dir(obj, LV_PART_MAIN);
 863              		.loc 1 138 0
 864 012c 2846     		mov	r0, r5
 865 012e FFF7FEFF 		bl	lv_obj_get_width
 866              	.LVL111:
 867 0132 0646     		mov	r6, r0
 868              	.LVL112:
 869 0134 2846     		mov	r0, r5
 870 0136 FFF7FEFF 		bl	lv_obj_get_height
 871              	.LVL113:
 872 013a 0446     		mov	r4, r0
 873              	.LVL114:
 874              	.LBB116:
 875              	.LBB117:
 561:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_base_dir_t)v.num;
 876              		.loc 2 561 0
 877 013c 1622     		movs	r2, #22
 878 013e 0021     		movs	r1, #0
 879 0140 2846     		mov	r0, r5
 880 0142 FFF7FEFF 		bl	lv_obj_get_style_prop
 881              	.LVL115:
 882              		.loc 2 562 0
 883 0146 C0B2     		uxtb	r0, r0
 884              	.LVL116:
 885              	.LBE117:
 886              	.LBE116:
 142:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 if((base_dir != LV_BASE_DIR_RTL && p.x > slider->right_knob_area.x2) || (base_dir =
 887              		.loc 1 142 0
 888 0148 A642     		cmp	r6, r4
 889 014a 5EDB     		blt	.L46
 143:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                                                                                          p.x < slid
 890              		.loc 1 143 0
 891 014c 0128     		cmp	r0, #1
 892 014e 05D0     		beq	.L47
 143:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                                                                                          p.x < slid
 893              		.loc 1 143 0 is_stmt 0 discriminator 1
 894 0150 BDF90820 		ldrsh	r2, [sp, #8]
 895 0154 B5F96C30 		ldrsh	r3, [r5, #108]
 896 0158 9A42     		cmp	r2, r3
 897 015a 3EDC     		bgt	.L48
 898              	.L47:
 143:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                                                                                          p.x < slid
 899              		.loc 1 143 0 discriminator 3
 900 015c 0128     		cmp	r0, #1
 901 015e 36D0     		beq	.L98
 902              	.L49:
 147:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                                                                                              p.x > 
 903              		.loc 1 147 0 is_stmt 1
 904 0160 0128     		cmp	r0, #1
 905 0162 05D0     		beq	.L50
 147:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                                                                                              p.x > 
 906              		.loc 1 147 0 is_stmt 0 discriminator 1
 907 0164 BDF90820 		ldrsh	r2, [sp, #8]
ARM GAS  /tmp/ccr4ruP3.s 			page 42


 908 0168 B5F96030 		ldrsh	r3, [r5, #96]
 909 016c 9A42     		cmp	r2, r3
 910 016e 3EDB     		blt	.L51
 911              	.L50:
 147:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                                                                                              p.x > 
 912              		.loc 1 147 0 discriminator 3
 913 0170 0128     		cmp	r0, #1
 914 0172 36D0     		beq	.L99
 915              	.L52:
 153:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     dist_right = LV_ABS((slider->right_knob_area.x1 + (slider->right_knob_area.x2 -
 916              		.loc 1 153 0 is_stmt 1
 917 0174 B5F96030 		ldrsh	r3, [r5, #96]
 918 0178 B5F96420 		ldrsh	r2, [r5, #100]
 919 017c D21A     		subs	r2, r2, r3
 920 017e 0224     		movs	r4, #2
 921              	.LVL117:
 922 0180 92FBF4F2 		sdiv	r2, r2, r4
 923 0184 1A44     		add	r2, r2, r3
 924 0186 BDF90800 		ldrsh	r0, [sp, #8]
 925 018a 121A     		subs	r2, r2, r0
 926 018c 002A     		cmp	r2, #0
 927 018e B8BF     		it	lt
 928 0190 5242     		rsblt	r2, r2, #0
 929 0192 12B2     		sxth	r2, r2
 930              	.LVL118:
 154:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 931              		.loc 1 154 0
 932 0194 B5F96830 		ldrsh	r3, [r5, #104]
 933 0198 B5F96C10 		ldrsh	r1, [r5, #108]
 934 019c C91A     		subs	r1, r1, r3
 935 019e 91FBF4F1 		sdiv	r1, r1, r4
 936 01a2 0B44     		add	r3, r3, r1
 937 01a4 1B1A     		subs	r3, r3, r0
 938 01a6 002B     		cmp	r3, #0
 939 01a8 B8BF     		it	lt
 940 01aa 5B42     		rsblt	r3, r3, #0
 941 01ac 1BB2     		sxth	r3, r3
 942              	.LVL119:
 157:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                         slider->value_to_set = &slider->bar.cur_value;
 943              		.loc 1 157 0
 944 01ae 9A42     		cmp	r2, r3
 945 01b0 21DD     		ble	.L53
 158:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 0;
 946              		.loc 1 158 0
 947 01b2 05F12403 		add	r3, r5, #36
 948              	.LVL120:
 949 01b6 2B67     		str	r3, [r5, #112]
 159:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     }
 950              		.loc 1 159 0
 951 01b8 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 952 01bc 6FF34103 		bfc	r3, #1, #1
 953 01c0 85F87430 		strb	r3, [r5, #116]
 954 01c4 25E7     		b	.L37
 955              	.LVL121:
 956              	.L97:
 957              	.LBE115:
 134:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
ARM GAS  /tmp/ccr4ruP3.s 			page 43


 958              		.loc 1 134 0
 959 01c6 05F12403 		add	r3, r5, #36
 960 01ca 2B67     		str	r3, [r5, #112]
 961 01cc 21E7     		b	.L37
 962              	.LVL122:
 963              	.L98:
 964              	.LBB118:
 144:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.cur_value;
 965              		.loc 1 144 0 discriminator 4
 966 01ce BDF90820 		ldrsh	r2, [sp, #8]
 967 01d2 B5F96830 		ldrsh	r3, [r5, #104]
 143:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                                                                                          p.x < slid
 968              		.loc 1 143 0 discriminator 4
 969 01d6 9A42     		cmp	r2, r3
 970 01d8 C2DA     		bge	.L49
 971              	.L48:
 145:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 }
 972              		.loc 1 145 0
 973 01da 05F12403 		add	r3, r5, #36
 974 01de 2B67     		str	r3, [r5, #112]
 975 01e0 17E7     		b	.L37
 976              	.L99:
 148:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.start_value;
 977              		.loc 1 148 0 discriminator 4
 978 01e2 BDF90820 		ldrsh	r2, [sp, #8]
 979 01e6 B5F96430 		ldrsh	r3, [r5, #100]
 147:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                                                                                              p.x > 
 980              		.loc 1 147 0 discriminator 4
 981 01ea 9A42     		cmp	r2, r3
 982 01ec C2DD     		ble	.L52
 983              	.L51:
 149:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 }
 984              		.loc 1 149 0
 985 01ee 05F13003 		add	r3, r5, #48
 986 01f2 2B67     		str	r3, [r5, #112]
 987 01f4 0DE7     		b	.L37
 988              	.LVL123:
 989              	.L53:
 162:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 1;
 990              		.loc 1 162 0
 991 01f6 05F13003 		add	r3, r5, #48
 992              	.LVL124:
 993 01fa 2B67     		str	r3, [r5, #112]
 163:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     }
 994              		.loc 1 163 0
 995 01fc 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 996 0200 43F00203 		orr	r3, r3, #2
 997 0204 85F87430 		strb	r3, [r5, #116]
 998 0208 03E7     		b	.L37
 999              	.LVL125:
 1000              	.L46:
 168:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.cur_value;
 1001              		.loc 1 168 0
 1002 020a BDF90A10 		ldrsh	r1, [sp, #10]
 1003 020e B5F96A30 		ldrsh	r3, [r5, #106]
 1004 0212 9942     		cmp	r1, r3
 1005 0214 03DA     		bge	.L54
ARM GAS  /tmp/ccr4ruP3.s 			page 44


 169:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 }
 1006              		.loc 1 169 0
 1007 0216 05F12403 		add	r3, r5, #36
 1008 021a 2B67     		str	r3, [r5, #112]
 1009 021c F9E6     		b	.L37
 1010              	.L54:
 171:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.start_value;
 1011              		.loc 1 171 0
 1012 021e B5F96600 		ldrsh	r0, [r5, #102]
 1013 0222 8142     		cmp	r1, r0
 1014 0224 03DD     		ble	.L55
 172:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 }
 1015              		.loc 1 172 0
 1016 0226 05F13003 		add	r3, r5, #48
 1017 022a 2B67     		str	r3, [r5, #112]
 1018 022c F1E6     		b	.L37
 1019              	.L55:
 176:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     dist_right = LV_ABS((slider->right_knob_area.y1 + (slider->right_knob_area.y2 -
 1020              		.loc 1 176 0
 1021 022e B5F96220 		ldrsh	r2, [r5, #98]
 1022 0232 801A     		subs	r0, r0, r2
 1023 0234 0224     		movs	r4, #2
 1024              	.LVL126:
 1025 0236 90FBF4F0 		sdiv	r0, r0, r4
 1026 023a 0244     		add	r2, r2, r0
 1027 023c 521A     		subs	r2, r2, r1
 1028 023e 002A     		cmp	r2, #0
 1029 0240 B8BF     		it	lt
 1030 0242 5242     		rsblt	r2, r2, #0
 1031 0244 12B2     		sxth	r2, r2
 1032              	.LVL127:
 177:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 1033              		.loc 1 177 0
 1034 0246 B5F96E00 		ldrsh	r0, [r5, #110]
 1035 024a C01A     		subs	r0, r0, r3
 1036 024c 90FBF4F0 		sdiv	r0, r0, r4
 1037 0250 0344     		add	r3, r3, r0
 1038 0252 5B1A     		subs	r3, r3, r1
 1039 0254 002B     		cmp	r3, #0
 1040 0256 B8BF     		it	lt
 1041 0258 5B42     		rsblt	r3, r3, #0
 1042 025a 1BB2     		sxth	r3, r3
 1043              	.LVL128:
 180:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                         slider->value_to_set = &slider->bar.cur_value;
 1044              		.loc 1 180 0
 1045 025c 9A42     		cmp	r2, r3
 1046 025e 09DD     		ble	.L56
 181:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 0;
 1047              		.loc 1 181 0
 1048 0260 05F12403 		add	r3, r5, #36
 1049              	.LVL129:
 1050 0264 2B67     		str	r3, [r5, #112]
 182:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     }
 1051              		.loc 1 182 0
 1052 0266 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 1053 026a 6FF34103 		bfc	r3, #1, #1
 1054 026e 85F87430 		strb	r3, [r5, #116]
ARM GAS  /tmp/ccr4ruP3.s 			page 45


 1055 0272 CEE6     		b	.L37
 1056              	.LVL130:
 1057              	.L56:
 185:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 1;
 1058              		.loc 1 185 0
 1059 0274 05F13003 		add	r3, r5, #48
 1060              	.LVL131:
 1061 0278 2B67     		str	r3, [r5, #112]
 186:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     }
 1062              		.loc 1 186 0
 1063 027a 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 1064 027e 43F00203 		orr	r3, r3, #2
 1065 0282 85F87430 		strb	r3, [r5, #116]
 1066 0286 C4E6     		b	.L37
 1067              	.L107:
 1068              		.align	2
 1069              	.L106:
 1070 0288 00000000 		.word	.LANCHOR0
 1071              	.LVL132:
 1072              	.L91:
 1073              	.LBE118:
 1074              	.LBE114:
 192:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_indev_t * indev = lv_indev_get_act();
 1075              		.loc 1 192 0 discriminator 1
 1076 028c 2B6F     		ldr	r3, [r5, #112]
 1077 028e 002B     		cmp	r3, #0
 1078 0290 3FF4D8AE 		beq	.L57
 1079              	.LBB119:
 193:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(lv_indev_get_type(indev) != LV_INDEV_TYPE_POINTER) return;
 1080              		.loc 1 193 0
 1081 0294 FFF7FEFF 		bl	lv_indev_get_act
 1082              	.LVL133:
 1083 0298 0446     		mov	r4, r0
 1084              	.LVL134:
 194:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 1085              		.loc 1 194 0
 1086 029a FFF7FEFF 		bl	lv_indev_get_type
 1087              	.LVL135:
 1088 029e 0128     		cmp	r0, #1
 1089 02a0 7FF4B7AE 		bne	.L37
 197:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         int32_t new_value = 0;
 1090              		.loc 1 197 0
 1091 02a4 02A9     		add	r1, sp, #8
 1092 02a6 2046     		mov	r0, r4
 1093 02a8 FFF7FEFF 		bl	lv_indev_get_point
 1094              	.LVL136:
 200:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(is_slider_horizontal(obj)) {
 1095              		.loc 1 200 0
 1096 02ac EC6A     		ldr	r4, [r5, #44]
 1097              	.LVL137:
 1098 02ae AB6A     		ldr	r3, [r5, #40]
 1099 02b0 E41A     		subs	r4, r4, r3
 1100              	.LVL138:
 201:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             const lv_coord_t bg_left = lv_obj_get_style_pad_left(obj, LV_PART_MAIN);
 1101              		.loc 1 201 0
 1102 02b2 2846     		mov	r0, r5
 1103 02b4 FFF7FEFF 		bl	is_slider_horizontal
ARM GAS  /tmp/ccr4ruP3.s 			page 46


 1104              	.LVL139:
 1105 02b8 0028     		cmp	r0, #0
 1106 02ba 57D0     		beq	.L59
 1107              	.LVL140:
 1108              	.LBB120:
 1109              	.LBB121:
 1110              	.LBB122:
 117:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1111              		.loc 2 117 0
 1112 02bc 1222     		movs	r2, #18
 1113 02be 0021     		movs	r1, #0
 1114 02c0 2846     		mov	r0, r5
 1115 02c2 FFF7FEFF 		bl	lv_obj_get_style_prop
 1116              	.LVL141:
 1117 02c6 0646     		mov	r6, r0
 1118              	.LVL142:
 118:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1119              		.loc 2 118 0
 1120 02c8 07B2     		sxth	r7, r0
 1121              	.LVL143:
 1122              	.LBE122:
 1123              	.LBE121:
 1124              	.LBB123:
 1125              	.LBB124:
 123:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1126              		.loc 2 123 0
 1127 02ca 1322     		movs	r2, #19
 1128 02cc 0021     		movs	r1, #0
 1129 02ce 2846     		mov	r0, r5
 1130 02d0 FFF7FEFF 		bl	lv_obj_get_style_prop
 1131              	.LVL144:
 1132 02d4 8146     		mov	r9, r0
 124:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1133              		.loc 2 124 0
 1134 02d6 0FFA80F8 		sxth	r8, r0
 1135              	.LVL145:
 1136              	.LBE124:
 1137              	.LBE123:
 204:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             const lv_coord_t indic_w = w - bg_left - bg_right;
 1138              		.loc 1 204 0
 1139 02da 2846     		mov	r0, r5
 1140 02dc FFF7FEFF 		bl	lv_obj_get_width
 1141              	.LVL146:
 205:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 1142              		.loc 1 205 0
 1143 02e0 861B     		subs	r6, r0, r6
 1144              	.LVL147:
 1145 02e2 B6B2     		uxth	r6, r6
 1146              	.LVL148:
 1147 02e4 A6EB0906 		sub	r6, r6, r9
 1148 02e8 36B2     		sxth	r6, r6
 1149              	.LVL149:
 1150              	.LBB125:
 1151              	.LBB126:
 561:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_base_dir_t)v.num;
 1152              		.loc 2 561 0
 1153 02ea 1622     		movs	r2, #22
ARM GAS  /tmp/ccr4ruP3.s 			page 47


 1154 02ec 0021     		movs	r1, #0
 1155 02ee 2846     		mov	r0, r5
 1156              	.LVL150:
 1157 02f0 FFF7FEFF 		bl	lv_obj_get_style_prop
 1158              	.LVL151:
 1159              		.loc 2 562 0
 1160 02f4 C0B2     		uxtb	r0, r0
 1161              	.LVL152:
 1162              	.LBE126:
 1163              	.LBE125:
 207:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 /*Make the point relative to the indicator*/
 1164              		.loc 1 207 0
 1165 02f6 0128     		cmp	r0, #1
 1166 02f8 2ED0     		beq	.L100
 213:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             }
 1167              		.loc 1 213 0
 1168 02fa BDF90810 		ldrsh	r1, [sp, #8]
 1169 02fe B5F91430 		ldrsh	r3, [r5, #20]
 1170 0302 1F44     		add	r7, r7, r3
 1171 0304 C91B     		subs	r1, r1, r7
 1172              	.LVL153:
 1173              	.L61:
 215:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1174              		.loc 1 215 0
 1175 0306 04FB01F1 		mul	r1, r4, r1
 1176              	.LVL154:
 1177 030a 3346     		mov	r3, r6
 1178 030c 002E     		cmp	r6, #0
 1179 030e 2BDB     		blt	.L101
 1180              	.L62:
 1181 0310 01EB6301 		add	r1, r1, r3, asr #1
 1182 0314 91FBF6F6 		sdiv	r6, r1, r6
 1183              	.LVL155:
 216:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 1184              		.loc 1 216 0
 1185 0318 A96A     		ldr	r1, [r5, #40]
 1186 031a 3144     		add	r1, r1, r6
 1187              	.LVL156:
 1188              	.L63:
 1189              	.LBE120:
 230:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         int32_t real_min_value = slider->bar.min_value;
 1190              		.loc 1 230 0
 1191 031c EC6A     		ldr	r4, [r5, #44]
 1192              	.LVL157:
 231:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         /*Figure out the min. and max. for this mode*/
 1193              		.loc 1 231 0
 1194 031e A86A     		ldr	r0, [r5, #40]
 1195              	.LVL158:
 233:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             real_max_value = slider->bar.cur_value;
 1196              		.loc 1 233 0
 1197 0320 2B6F     		ldr	r3, [r5, #112]
 1198 0322 05F13002 		add	r2, r5, #48
 1199 0326 9342     		cmp	r3, r2
 1200 0328 49D0     		beq	.L102
 237:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 1201              		.loc 1 237 0
 1202 032a 286B     		ldr	r0, [r5, #48]
ARM GAS  /tmp/ccr4ruP3.s 			page 48


 1203              	.LVL159:
 1204              	.L66:
 240:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(*slider->value_to_set != new_value) {
 1205              		.loc 1 240 0
 1206 032c A142     		cmp	r1, r4
 1207 032e A8BF     		it	ge
 1208 0330 2146     		movge	r1, r4
 1209              	.LVL160:
 1210 0332 8142     		cmp	r1, r0
 1211 0334 B8BF     		it	lt
 1212 0336 0146     		movlt	r1, r0
 1213              	.LVL161:
 241:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             if(slider->value_to_set == &slider->bar.start_value) {
 1214              		.loc 1 241 0
 1215 0338 1868     		ldr	r0, [r3]
 1216              	.LVL162:
 1217 033a 8842     		cmp	r0, r1
 1218 033c 3FF469AE 		beq	.L37
 242:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 lv_bar_set_start_value(obj, new_value, LV_ANIM_ON);
 1219              		.loc 1 242 0
 1220 0340 9342     		cmp	r3, r2
 1221 0342 3ED0     		beq	.L103
 246:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             }
 1222              		.loc 1 246 0
 1223 0344 0122     		movs	r2, #1
 1224 0346 2846     		mov	r0, r5
 1225 0348 FFF7FEFF 		bl	lv_bar_set_value
 1226              	.LVL163:
 1227              	.L69:
 248:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             if(res != LV_RES_OK) return;
 1228              		.loc 1 248 0
 1229 034c 0022     		movs	r2, #0
 1230 034e 1C21     		movs	r1, #28
 1231 0350 2846     		mov	r0, r5
 1232 0352 FFF7FEFF 		bl	lv_event_send
 1233              	.LVL164:
 1234 0356 5CE6     		b	.L37
 1235              	.LVL165:
 1236              	.L100:
 1237              	.LBB127:
 209:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             }
 1238              		.loc 1 209 0
 1239 0358 B5F91810 		ldrsh	r1, [r5, #24]
 1240 035c A1EB0801 		sub	r1, r1, r8
 1241 0360 BDF90830 		ldrsh	r3, [sp, #8]
 1242 0364 C91A     		subs	r1, r1, r3
 1243              	.LVL166:
 1244 0366 CEE7     		b	.L61
 1245              	.LVL167:
 1246              	.L101:
 215:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1247              		.loc 1 215 0
 1248 0368 731C     		adds	r3, r6, #1
 1249 036a D1E7     		b	.L62
 1250              	.LVL168:
 1251              	.L59:
 1252              	.LBE127:
ARM GAS  /tmp/ccr4ruP3.s 			page 49


 1253              	.LBB128:
 1254              	.LBB129:
 1255              	.LBB130:
 105:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1256              		.loc 2 105 0
 1257 036c 1022     		movs	r2, #16
 1258 036e 0021     		movs	r1, #0
 1259 0370 2846     		mov	r0, r5
 1260 0372 FFF7FEFF 		bl	lv_obj_get_style_prop
 1261              	.LVL169:
 1262 0376 8046     		mov	r8, r0
 1263              	.LVL170:
 1264              	.LBE130:
 1265              	.LBE129:
 1266              	.LBB131:
 1267              	.LBB132:
 111:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1268              		.loc 2 111 0
 1269 0378 1122     		movs	r2, #17
 1270 037a 0021     		movs	r1, #0
 1271 037c 2846     		mov	r0, r5
 1272 037e FFF7FEFF 		bl	lv_obj_get_style_prop
 1273              	.LVL171:
 1274 0382 0646     		mov	r6, r0
 1275              	.LVL172:
 112:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1276              		.loc 2 112 0
 1277 0384 07B2     		sxth	r7, r0
 1278              	.LVL173:
 1279              	.LBE132:
 1280              	.LBE131:
 221:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             const lv_coord_t indic_h = h - bg_bottom - bg_top;
 1281              		.loc 1 221 0
 1282 0386 2846     		mov	r0, r5
 1283 0388 FFF7FEFF 		bl	lv_obj_get_height
 1284              	.LVL174:
 222:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 1285              		.loc 1 222 0
 1286 038c 831B     		subs	r3, r0, r6
 1287 038e 9BB2     		uxth	r3, r3
 1288              	.LVL175:
 1289 0390 A3EB0803 		sub	r3, r3, r8
 1290 0394 1BB2     		sxth	r3, r3
 1291              	.LVL176:
 225:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             new_value = (-new_value * range + indic_h / 2) / indic_h;
 1292              		.loc 1 225 0
 1293 0396 BDF90A20 		ldrsh	r2, [sp, #10]
 1294 039a B5F91A10 		ldrsh	r1, [r5, #26]
 1295 039e 3944     		add	r1, r1, r7
 1296              	.LVL177:
 226:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1297              		.loc 1 226 0
 1298 03a0 891A     		subs	r1, r1, r2
 1299              	.LVL178:
 1300 03a2 04FB01F1 		mul	r1, r4, r1
 1301 03a6 1A46     		mov	r2, r3
 1302              	.LVL179:
ARM GAS  /tmp/ccr4ruP3.s 			page 50


 1303 03a8 002B     		cmp	r3, #0
 1304 03aa 06DB     		blt	.L104
 1305              	.L64:
 1306 03ac 01EB6201 		add	r1, r1, r2, asr #1
 1307 03b0 91FBF3F3 		sdiv	r3, r1, r3
 1308              	.LVL180:
 227:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 1309              		.loc 1 227 0
 1310 03b4 A96A     		ldr	r1, [r5, #40]
 1311 03b6 1944     		add	r1, r1, r3
 1312              	.LVL181:
 1313 03b8 B0E7     		b	.L63
 1314              	.LVL182:
 1315              	.L104:
 226:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1316              		.loc 1 226 0
 1317 03ba 5A1C     		adds	r2, r3, #1
 1318 03bc F6E7     		b	.L64
 1319              	.LVL183:
 1320              	.L102:
 1321              	.LBE128:
 234:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 1322              		.loc 1 234 0
 1323 03be 6C6A     		ldr	r4, [r5, #36]
 1324              	.LVL184:
 1325 03c0 B4E7     		b	.L66
 1326              	.LVL185:
 1327              	.L103:
 243:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             }
 1328              		.loc 1 243 0
 1329 03c2 0122     		movs	r2, #1
 1330 03c4 2846     		mov	r0, r5
 1331 03c6 FFF7FEFF 		bl	lv_bar_set_start_value
 1332              	.LVL186:
 1333 03ca BFE7     		b	.L69
 1334              	.LVL187:
 1335              	.L92:
 1336              	.LBE119:
 1337              	.LBB133:
 254:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         slider->value_to_set = NULL;
 1338              		.loc 1 254 0
 1339 03cc 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 1340 03d0 6FF30003 		bfc	r3, #0, #1
 1341 03d4 85F87430 		strb	r3, [r5, #116]
 255:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 1342              		.loc 1 255 0
 1343 03d8 0023     		movs	r3, #0
 1344 03da 2B67     		str	r3, [r5, #112]
 257:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 1345              		.loc 1 257 0
 1346 03dc 2846     		mov	r0, r5
 1347 03de FFF7FEFF 		bl	lv_obj_invalidate
 1348              	.LVL188:
 260:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         bool editing     = lv_group_get_editing(g);
 1349              		.loc 1 260 0
 1350 03e2 2846     		mov	r0, r5
 1351 03e4 FFF7FEFF 		bl	lv_obj_get_group
ARM GAS  /tmp/ccr4ruP3.s 			page 51


 1352              	.LVL189:
 1353 03e8 0646     		mov	r6, r0
 1354              	.LVL190:
 261:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 1355              		.loc 1 261 0
 1356 03ea FFF7FEFF 		bl	lv_group_get_editing
 1357              	.LVL191:
 1358 03ee 0446     		mov	r4, r0
 1359              	.LVL192:
 262:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER) {
 1360              		.loc 1 262 0
 1361 03f0 FFF7FEFF 		bl	lv_indev_get_act
 1362              	.LVL193:
 1363 03f4 FFF7FEFF 		bl	lv_indev_get_type
 1364              	.LVL194:
 263:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             if(editing) {
 1365              		.loc 1 263 0
 1366 03f8 0428     		cmp	r0, #4
 1367 03fa 7FF40AAE 		bne	.L37
 264:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 if(lv_slider_get_mode(obj) == LV_SLIDER_MODE_RANGE) {
 1368              		.loc 1 264 0
 1369 03fe 002C     		cmp	r4, #0
 1370 0400 3FF407AE 		beq	.L37
 1371              	.LVL195:
 1372              	.LBB134:
 1373              	.LBB135:
 179:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     if(mode == LV_BAR_MODE_SYMMETRICAL) return LV_SLIDER_MODE_SYMMETRICAL;
 1374              		.loc 4 179 0
 1375 0404 2846     		mov	r0, r5
 1376              	.LVL196:
 1377 0406 FFF7FEFF 		bl	lv_bar_get_mode
 1378              	.LVL197:
 180:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     else if(mode == LV_BAR_MODE_RANGE) return LV_SLIDER_MODE_RANGE;
 1379              		.loc 4 180 0
 1380 040a 0128     		cmp	r0, #1
 1381 040c 01D0     		beq	.L71
 181:Drivers/lvgl/lvgl/src/widgets/lv_slider.h ****     else return LV_SLIDER_MODE_NORMAL;
 1382              		.loc 4 181 0
 1383 040e 0228     		cmp	r0, #2
 1384 0410 04D0     		beq	.L105
 1385              	.L71:
 1386              	.LBE135:
 1387              	.LBE134:
 273:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                 }
 1388              		.loc 1 273 0
 1389 0412 0021     		movs	r1, #0
 1390 0414 3046     		mov	r0, r6
 1391              	.LVL198:
 1392 0416 FFF7FEFF 		bl	lv_group_set_editing
 1393              	.LVL199:
 1394 041a FAE5     		b	.L37
 1395              	.LVL200:
 1396              	.L105:
 266:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     else {
 1397              		.loc 1 266 0
 1398 041c 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 1399 0420 13F0020F 		tst	r3, #2
ARM GAS  /tmp/ccr4ruP3.s 			page 52


 1400 0424 04D1     		bne	.L72
 266:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     else {
 1401              		.loc 1 266 0 is_stmt 0 discriminator 1
 1402 0426 43F00203 		orr	r3, r3, #2
 1403 042a 85F87430 		strb	r3, [r5, #116]
 1404 042e F0E5     		b	.L37
 1405              	.L72:
 268:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                         lv_group_set_editing(g, false);
 1406              		.loc 1 268 0 is_stmt 1
 1407 0430 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 1408 0434 6FF34103 		bfc	r3, #1, #1
 1409 0438 85F87430 		strb	r3, [r5, #116]
 269:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****                     }
 1410              		.loc 1 269 0
 1411 043c 0021     		movs	r1, #0
 1412 043e 3046     		mov	r0, r6
 1413 0440 FFF7FEFF 		bl	lv_group_set_editing
 1414              	.LVL201:
 1415 0444 E5E5     		b	.L37
 1416              	.LVL202:
 1417              	.L93:
 1418              	.LBE133:
 1419              	.LBB136:
 280:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER || indev_type == LV_INDEV_TYPE_KEYPAD) {
 1420              		.loc 1 280 0
 1421 0446 FFF7FEFF 		bl	lv_indev_get_act
 1422              	.LVL203:
 1423 044a FFF7FEFF 		bl	lv_indev_get_type
 1424              	.LVL204:
 281:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             slider->left_knob_focus = 0;
 1425              		.loc 1 281 0
 1426 044e 0228     		cmp	r0, #2
 1427 0450 18BF     		it	ne
 1428 0452 0428     		cmpne	r0, #4
 1429 0454 7FF4DDAD 		bne	.L37
 282:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         }
 1430              		.loc 1 282 0
 1431 0458 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 1432 045c 6FF34103 		bfc	r3, #1, #1
 1433 0460 85F87430 		strb	r3, [r5, #116]
 1434 0464 D5E5     		b	.L37
 1435              	.LVL205:
 1436              	.L94:
 1437              	.LBE136:
 286:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     }
 1438              		.loc 1 286 0
 1439 0466 2846     		mov	r0, r5
 1440 0468 FFF7FEFF 		bl	lv_obj_refresh_ext_draw_size
 1441              	.LVL206:
 1442 046c D1E5     		b	.L37
 1443              	.L95:
 1444              	.LVL207:
 1445              	.LBB137:
 1446              	.LBB138:
 1447              	.LBB139:
 117:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1448              		.loc 2 117 0
ARM GAS  /tmp/ccr4ruP3.s 			page 53


 1449 046e 1222     		movs	r2, #18
 1450 0470 4FF44031 		mov	r1, #196608
 1451 0474 2846     		mov	r0, r5
 1452 0476 FFF7FEFF 		bl	lv_obj_get_style_prop
 1453              	.LVL208:
 118:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1454              		.loc 2 118 0
 1455 047a 0FFA80FA 		sxth	r10, r0
 1456              	.LVL209:
 1457              	.LBE139:
 1458              	.LBE138:
 1459              	.LBB140:
 1460              	.LBB141:
 123:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1461              		.loc 2 123 0
 1462 047e 1322     		movs	r2, #19
 1463 0480 4FF44031 		mov	r1, #196608
 1464 0484 2846     		mov	r0, r5
 1465 0486 FFF7FEFF 		bl	lv_obj_get_style_prop
 1466              	.LVL210:
 124:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1467              		.loc 2 124 0
 1468 048a 03B2     		sxth	r3, r0
 1469 048c 0193     		str	r3, [sp, #4]
 1470              	.LVL211:
 1471              	.LBE141:
 1472              	.LBE140:
 1473              	.LBB142:
 1474              	.LBB143:
 105:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1475              		.loc 2 105 0
 1476 048e 1022     		movs	r2, #16
 1477 0490 4FF44031 		mov	r1, #196608
 1478 0494 2846     		mov	r0, r5
 1479 0496 FFF7FEFF 		bl	lv_obj_get_style_prop
 1480              	.LVL212:
 106:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1481              		.loc 2 106 0
 1482 049a 03B2     		sxth	r3, r0
 1483 049c 0093     		str	r3, [sp]
 1484              	.LVL213:
 1485              	.LBE143:
 1486              	.LBE142:
 1487              	.LBB144:
 1488              	.LBB145:
 111:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1489              		.loc 2 111 0
 1490 049e 1122     		movs	r2, #17
 1491 04a0 4FF44031 		mov	r1, #196608
 1492 04a4 2846     		mov	r0, r5
 1493 04a6 FFF7FEFF 		bl	lv_obj_get_style_prop
 1494              	.LVL214:
 112:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1495              		.loc 2 112 0
 1496 04aa 06B2     		sxth	r6, r0
 1497              	.LVL215:
 1498              	.LBE145:
ARM GAS  /tmp/ccr4ruP3.s 			page 54


 1499              	.LBE144:
 1500              	.LBB146:
 1501              	.LBB147:
  81:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1502              		.loc 2 81 0
 1503 04ac 6C22     		movs	r2, #108
 1504 04ae 4FF44031 		mov	r1, #196608
 1505 04b2 2846     		mov	r0, r5
 1506 04b4 FFF7FEFF 		bl	lv_obj_get_style_prop
 1507              	.LVL216:
  82:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1508              		.loc 2 82 0
 1509 04b8 0FFA80F9 		sxth	r9, r0
 1510              	.LVL217:
 1511              	.LBE147:
 1512              	.LBE146:
 1513              	.LBB148:
 1514              	.LBB149:
  57:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1515              		.loc 2 57 0
 1516 04bc 6822     		movs	r2, #104
 1517 04be 4FF44031 		mov	r1, #196608
 1518 04c2 2846     		mov	r0, r5
 1519 04c4 FFF7FEFF 		bl	lv_obj_get_style_prop
 1520              	.LVL218:
  58:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1521              		.loc 2 58 0
 1522 04c8 0FFA80F8 		sxth	r8, r0
 1523              	.LVL219:
 1524              	.LBE149:
 1525              	.LBE148:
 1526              	.LBB150:
 1527              	.LBB151:
  63:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1528              		.loc 2 63 0
 1529 04cc 6922     		movs	r2, #105
 1530 04ce 4FF44031 		mov	r1, #196608
 1531 04d2 2846     		mov	r0, r5
 1532 04d4 FFF7FEFF 		bl	lv_obj_get_style_prop
 1533              	.LVL220:
  64:Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1534              		.loc 2 64 0
 1535 04d8 07B2     		sxth	r7, r0
 1536              	.LVL221:
 1537              	.LBE151:
 1538              	.LBE150:
 298:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_size = (knob_size * zoom) >> 8;
 1539              		.loc 1 298 0
 1540 04da 2846     		mov	r0, r5
 1541 04dc FFF7FEFF 		bl	lv_obj_get_width
 1542              	.LVL222:
 1543 04e0 4FEA4808 		lsl	r8, r8, #1
 1544 04e4 00EB080B 		add	fp, r0, r8
 1545 04e8 2846     		mov	r0, r5
 1546 04ea FFF7FEFF 		bl	lv_obj_get_height
 1547              	.LVL223:
 1548 04ee 7F00     		lsls	r7, r7, #1
ARM GAS  /tmp/ccr4ruP3.s 			page 55


 1549 04f0 3844     		add	r0, r0, r7
 1550 04f2 8345     		cmp	fp, r0
 1551 04f4 2BDA     		bge	.L76
 298:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_size = (knob_size * zoom) >> 8;
 1552              		.loc 1 298 0 is_stmt 0 discriminator 1
 1553 04f6 2846     		mov	r0, r5
 1554 04f8 FFF7FEFF 		bl	lv_obj_get_width
 1555              	.LVL224:
 1556 04fc 08EB0003 		add	r3, r8, r0
 1557 0500 43F34F03 		sbfx	r3, r3, #1, #16
 1558              	.L77:
 1559              	.LVL225:
 299:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_size += LV_MAX(LV_MAX(knob_left, knob_right), LV_MAX(knob_bottom, knob_top));
 1560              		.loc 1 299 0 is_stmt 1 discriminator 4
 1561 0504 09FB03F3 		mul	r3, r9, r3
 1562              	.LVL226:
 300:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_size += 2;         /*For rounding error*/
 1563              		.loc 1 300 0 discriminator 4
 1564 0508 009A     		ldr	r2, [sp]
 1565 050a 9642     		cmp	r6, r2
 1566 050c B8BF     		it	lt
 1567 050e 1646     		movlt	r6, r2
 1568 0510 019A     		ldr	r2, [sp, #4]
 1569 0512 5245     		cmp	r2, r10
 1570 0514 B8BF     		it	lt
 1571 0516 5246     		movlt	r2, r10
 1572 0518 9642     		cmp	r6, r2
 1573 051a B8BF     		it	lt
 1574 051c 1646     		movlt	r6, r2
 1575 051e B6B2     		uxth	r6, r6
 1576 0520 06EB2326 		add	r6, r6, r3, asr #8
 1577 0524 B6B2     		uxth	r6, r6
 1578              	.LVL227:
 301:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_size += lv_obj_calculate_ext_draw_size(obj, LV_PART_KNOB);
 1579              		.loc 1 301 0 discriminator 4
 1580 0526 0236     		adds	r6, r6, #2
 1581              	.LVL228:
 1582 0528 B6B2     		uxth	r6, r6
 1583              	.LVL229:
 302:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 1584              		.loc 1 302 0 discriminator 4
 1585 052a 4FF44031 		mov	r1, #196608
 1586 052e 2846     		mov	r0, r5
 1587 0530 FFF7FEFF 		bl	lv_obj_calculate_ext_draw_size
 1588              	.LVL230:
 1589 0534 16FA80F0 		uxtah	r0, r6, r0
 1590 0538 05B2     		sxth	r5, r0
 1591              	.LVL231:
 305:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         *s  = LV_MAX(*s, knob_size);
 1592              		.loc 1 305 0 discriminator 4
 1593 053a 2046     		mov	r0, r4
 1594 053c FFF7FEFF 		bl	lv_event_get_param
 1595              	.LVL232:
 306:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 1596              		.loc 1 306 0 discriminator 4
 1597 0540 B0F90030 		ldrsh	r3, [r0]
 1598 0544 9D42     		cmp	r5, r3
ARM GAS  /tmp/ccr4ruP3.s 			page 56


 1599 0546 B8BF     		it	lt
 1600 0548 1D46     		movlt	r5, r3
 1601              	.LVL233:
 1602 054a 0580     		strh	r5, [r0]	@ movhi
 1603              	.LBE137:
 1604 054c 61E5     		b	.L37
 1605              	.LVL234:
 1606              	.L76:
 1607              	.LBB152:
 298:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         knob_size = (knob_size * zoom) >> 8;
 1608              		.loc 1 298 0 discriminator 2
 1609 054e 2846     		mov	r0, r5
 1610 0550 FFF7FEFF 		bl	lv_obj_get_height
 1611              	.LVL235:
 1612 0554 3B18     		adds	r3, r7, r0
 1613 0556 43F34F03 		sbfx	r3, r3, #1, #16
 1614 055a D3E7     		b	.L77
 1615              	.LVL236:
 1616              	.L96:
 1617              	.LBE152:
 1618              	.LBB153:
 310:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 1619              		.loc 1 310 0
 1620 055c 2046     		mov	r0, r4
 1621 055e FFF7FEFF 		bl	lv_event_get_param
 1622              	.LVL237:
 1623 0562 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1624              	.LVL238:
 312:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             if(!slider->left_knob_focus) lv_slider_set_value(obj, lv_slider_get_value(obj) + 1, LV_
 1625              		.loc 1 312 0
 1626 0564 112B     		cmp	r3, #17
 1627 0566 18BF     		it	ne
 1628 0568 132B     		cmpne	r3, #19
 1629 056a 1BD1     		bne	.L79
 313:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             else lv_slider_set_left_value(obj, lv_slider_get_left_value(obj) + 1, LV_ANIM_ON);
 1630              		.loc 1 313 0
 1631 056c 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 1632              	.LVL239:
 1633 0570 13F0020F 		tst	r3, #2
 1634 0574 0DD1     		bne	.L80
 1635              	.LVL240:
 1636              	.LBB154:
 1637              	.LBB155:
 132:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** }
 1638              		.loc 4 132 0
 1639 0576 2846     		mov	r0, r5
 1640              	.LVL241:
 1641 0578 FFF7FEFF 		bl	lv_bar_get_value
 1642              	.LVL242:
 1643              	.LBE155:
 1644              	.LBE154:
 1645              	.LBB156:
 1646              	.LBB157:
  86:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** }
 1647              		.loc 4 86 0
 1648 057c 0122     		movs	r2, #1
 1649 057e 8118     		adds	r1, r0, r2
ARM GAS  /tmp/ccr4ruP3.s 			page 57


 1650              	.LVL243:
 1651 0580 2846     		mov	r0, r5
 1652 0582 FFF7FEFF 		bl	lv_bar_set_value
 1653              	.LVL244:
 1654              	.L81:
 1655              	.LBE157:
 1656              	.LBE156:
 324:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****         if(res != LV_RES_OK) return;
 1657              		.loc 1 324 0
 1658 0586 0022     		movs	r2, #0
 1659 0588 1C21     		movs	r1, #28
 1660 058a 2846     		mov	r0, r5
 1661 058c FFF7FEFF 		bl	lv_event_send
 1662              	.LVL245:
 1663 0590 3FE5     		b	.L37
 1664              	.LVL246:
 1665              	.L80:
 1666              	.LBB158:
 1667              	.LBB159:
 142:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** }
 1668              		.loc 4 142 0
 1669 0592 2846     		mov	r0, r5
 1670              	.LVL247:
 1671 0594 FFF7FEFF 		bl	lv_bar_get_start_value
 1672              	.LVL248:
 1673              	.LBE159:
 1674              	.LBE158:
 1675              	.LBB160:
 1676              	.LBB161:
  97:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** }
 1677              		.loc 4 97 0
 1678 0598 0122     		movs	r2, #1
 1679 059a 8118     		adds	r1, r0, r2
 1680              	.LVL249:
 1681 059c 2846     		mov	r0, r5
 1682 059e FFF7FEFF 		bl	lv_bar_set_start_value
 1683              	.LVL250:
 1684 05a2 F0E7     		b	.L81
 1685              	.LVL251:
 1686              	.L79:
 1687              	.LBE161:
 1688              	.LBE160:
 316:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             if(!slider->left_knob_focus) lv_slider_set_value(obj, lv_slider_get_value(obj) - 1, LV_
 1689              		.loc 1 316 0
 1690 05a4 122B     		cmp	r3, #18
 1691 05a6 18BF     		it	ne
 1692 05a8 142B     		cmpne	r3, #20
 1693 05aa 7FF432AD 		bne	.L37
 317:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****             else lv_slider_set_left_value(obj, lv_slider_get_left_value(obj) - 1, LV_ANIM_ON);
 1694              		.loc 1 317 0
 1695 05ae 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 1696              	.LVL252:
 1697 05b2 13F0020F 		tst	r3, #2
 1698 05b6 08D1     		bne	.L82
 1699              	.LVL253:
 1700              	.LBB162:
 1701              	.LBB163:
ARM GAS  /tmp/ccr4ruP3.s 			page 58


 132:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** }
 1702              		.loc 4 132 0
 1703 05b8 2846     		mov	r0, r5
 1704              	.LVL254:
 1705 05ba FFF7FEFF 		bl	lv_bar_get_value
 1706              	.LVL255:
 1707              	.LBE163:
 1708              	.LBE162:
 1709              	.LBB164:
 1710              	.LBB165:
  86:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** }
 1711              		.loc 4 86 0
 1712 05be 0122     		movs	r2, #1
 1713 05c0 411E     		subs	r1, r0, #1
 1714              	.LVL256:
 1715 05c2 2846     		mov	r0, r5
 1716 05c4 FFF7FEFF 		bl	lv_bar_set_value
 1717              	.LVL257:
 1718 05c8 DDE7     		b	.L81
 1719              	.LVL258:
 1720              	.L82:
 1721              	.LBE165:
 1722              	.LBE164:
 1723              	.LBB166:
 1724              	.LBB167:
 142:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** }
 1725              		.loc 4 142 0
 1726 05ca 2846     		mov	r0, r5
 1727              	.LVL259:
 1728 05cc FFF7FEFF 		bl	lv_bar_get_start_value
 1729              	.LVL260:
 1730              	.LBE167:
 1731              	.LBE166:
 1732              	.LBB168:
 1733              	.LBB169:
  97:Drivers/lvgl/lvgl/src/widgets/lv_slider.h **** }
 1734              		.loc 4 97 0
 1735 05d0 0122     		movs	r2, #1
 1736 05d2 411E     		subs	r1, r0, #1
 1737              	.LVL261:
 1738 05d4 2846     		mov	r0, r5
 1739 05d6 FFF7FEFF 		bl	lv_bar_set_start_value
 1740              	.LVL262:
 1741 05da D4E7     		b	.L81
 1742              	.LBE169:
 1743              	.LBE168:
 1744              	.LBE153:
 1745              		.cfi_endproc
 1746              	.LFE177:
 1748              		.section	.text.lv_slider_constructor,"ax",%progbits
 1749              		.align	1
 1750              		.syntax unified
 1751              		.thumb
 1752              		.thumb_func
 1753              		.fpu fpv5-d16
 1755              	lv_slider_constructor:
 1756              	.LFB176:
ARM GAS  /tmp/ccr4ruP3.s 			page 59


  81:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     LV_UNUSED(class_p);
 1757              		.loc 1 81 0
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 0
 1760              		@ frame_needed = 0, uses_anonymous_args = 0
 1761              	.LVL263:
 1762 0000 38B5     		push	{r3, r4, r5, lr}
 1763              	.LCFI10:
 1764              		.cfi_def_cfa_offset 16
 1765              		.cfi_offset 3, -16
 1766              		.cfi_offset 4, -12
 1767              		.cfi_offset 5, -8
 1768              		.cfi_offset 14, -4
 1769 0002 0C46     		mov	r4, r1
 1770              	.LVL264:
  86:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     slider->dragging = 0U;
 1771              		.loc 1 86 0
 1772 0004 0025     		movs	r5, #0
 1773 0006 0D67     		str	r5, [r1, #112]
  87:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     slider->left_knob_focus = 0U;
 1774              		.loc 1 87 0
 1775 0008 91F87430 		ldrb	r3, [r1, #116]	@ zero_extendqisi2
  88:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 1776              		.loc 1 88 0
 1777 000c 03F0FE03 		and	r3, r3, #254
 1778 0010 65F34103 		bfi	r3, r5, #1, #1
 1779 0014 81F87430 		strb	r3, [r1, #116]
  90:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_obj_clear_flag(obj, LV_OBJ_FLAG_SCROLLABLE);
 1780              		.loc 1 90 0
 1781 0018 4FF44071 		mov	r1, #768
 1782              	.LVL265:
 1783 001c 2046     		mov	r0, r4
 1784              	.LVL266:
 1785 001e FFF7FEFF 		bl	lv_obj_clear_flag
 1786              	.LVL267:
  91:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_obj_set_ext_click_area(obj, LV_DPX(8));
 1787              		.loc 1 91 0
 1788 0022 1021     		movs	r1, #16
 1789 0024 2046     		mov	r0, r4
 1790 0026 FFF7FEFF 		bl	lv_obj_clear_flag
 1791              	.LVL268:
  92:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** }
 1792              		.loc 1 92 0
 1793 002a 2846     		mov	r0, r5
 1794 002c FFF7FEFF 		bl	lv_disp_get_dpi
 1795              	.LVL269:
 1796 0030 0A30     		adds	r0, r0, #10
 1797 0032 C000     		lsls	r0, r0, #3
 1798 0034 B0F5A07F 		cmp	r0, #320
 1799 0038 04DA     		bge	.L112
 1800 003a 0121     		movs	r1, #1
 1801              	.L109:
  92:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** }
 1802              		.loc 1 92 0 is_stmt 0 discriminator 4
 1803 003c 2046     		mov	r0, r4
 1804 003e FFF7FEFF 		bl	lv_obj_set_ext_click_area
 1805              	.LVL270:
ARM GAS  /tmp/ccr4ruP3.s 			page 60


  93:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 1806              		.loc 1 93 0 is_stmt 1 discriminator 4
 1807 0042 38BD     		pop	{r3, r4, r5, pc}
 1808              	.LVL271:
 1809              	.L112:
  92:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** }
 1810              		.loc 1 92 0 discriminator 1
 1811 0044 2846     		mov	r0, r5
 1812 0046 FFF7FEFF 		bl	lv_disp_get_dpi
 1813              	.LVL272:
 1814 004a 0A30     		adds	r0, r0, #10
 1815 004c C000     		lsls	r0, r0, #3
 1816 004e 044B     		ldr	r3, .L113
 1817 0050 83FB0023 		smull	r2, r3, r3, r0
 1818 0054 C117     		asrs	r1, r0, #31
 1819 0056 C1EBA311 		rsb	r1, r1, r3, asr #6
 1820 005a 09B2     		sxth	r1, r1
 1821 005c EEE7     		b	.L109
 1822              	.L114:
 1823 005e 00BF     		.align	2
 1824              	.L113:
 1825 0060 67666666 		.word	1717986919
 1826              		.cfi_endproc
 1827              	.LFE176:
 1829              		.section	.text.lv_slider_create,"ax",%progbits
 1830              		.align	1
 1831              		.global	lv_slider_create
 1832              		.syntax unified
 1833              		.thumb
 1834              		.thumb_func
 1835              		.fpu fpv5-d16
 1837              	lv_slider_create:
 1838              	.LFB174:
  61:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     LV_LOG_INFO("begin");
 1839              		.loc 1 61 0
 1840              		.cfi_startproc
 1841              		@ args = 0, pretend = 0, frame = 0
 1842              		@ frame_needed = 0, uses_anonymous_args = 0
 1843              	.LVL273:
 1844 0000 10B5     		push	{r4, lr}
 1845              	.LCFI11:
 1846              		.cfi_def_cfa_offset 8
 1847              		.cfi_offset 4, -8
 1848              		.cfi_offset 14, -4
  63:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     lv_obj_class_init_obj(obj);
 1849              		.loc 1 63 0
 1850 0002 0146     		mov	r1, r0
 1851 0004 0348     		ldr	r0, .L117
 1852              	.LVL274:
 1853 0006 FFF7FEFF 		bl	lv_obj_class_create_obj
 1854              	.LVL275:
 1855 000a 0446     		mov	r4, r0
 1856              	.LVL276:
  64:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     return obj;
 1857              		.loc 1 64 0
 1858 000c FFF7FEFF 		bl	lv_obj_class_init_obj
 1859              	.LVL277:
ARM GAS  /tmp/ccr4ruP3.s 			page 61


  66:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 1860              		.loc 1 66 0
 1861 0010 2046     		mov	r0, r4
 1862 0012 10BD     		pop	{r4, pc}
 1863              	.LVL278:
 1864              	.L118:
 1865              		.align	2
 1866              	.L117:
 1867 0014 00000000 		.word	.LANCHOR0
 1868              		.cfi_endproc
 1869              	.LFE174:
 1871              		.section	.text.lv_slider_is_dragged,"ax",%progbits
 1872              		.align	1
 1873              		.global	lv_slider_is_dragged
 1874              		.syntax unified
 1875              		.thumb
 1876              		.thumb_func
 1877              		.fpu fpv5-d16
 1879              	lv_slider_is_dragged:
 1880              	.LFB175:
  69:Drivers/lvgl/lvgl/src/widgets/lv_slider.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 1881              		.loc 1 69 0
 1882              		.cfi_startproc
 1883              		@ args = 0, pretend = 0, frame = 0
 1884              		@ frame_needed = 0, uses_anonymous_args = 0
 1885              		@ link register save eliminated.
 1886              	.LVL279:
  73:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** }
 1887              		.loc 1 73 0
 1888 0000 90F87400 		ldrb	r0, [r0, #116]	@ zero_extendqisi2
 1889              	.LVL280:
  74:Drivers/lvgl/lvgl/src/widgets/lv_slider.c **** 
 1890              		.loc 1 74 0
 1891 0004 00F00100 		and	r0, r0, #1
 1892 0008 7047     		bx	lr
 1893              		.cfi_endproc
 1894              	.LFE175:
 1896              		.global	lv_slider_class
 1897              		.section	.rodata.lv_slider_class,"a",%progbits
 1898              		.align	2
 1899              		.set	.LANCHOR0,. + 0
 1902              	lv_slider_class:
 1903 0000 00000000 		.word	lv_bar_class
 1904 0004 00000000 		.word	lv_slider_constructor
 1905 0008 00000000 		.space	8
 1905      00000000 
 1906 0010 00000000 		.word	lv_slider_event
 1907 0014 00000000 		.space	4
 1908 0018 85       		.byte	133
 1909 0019 07       		.byte	7
 1910 001a 00       		.byte	0
 1911 001b 00       		.space	1
 1912              		.text
 1913              	.Letext0:
 1914              		.file 5 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 1915              		.file 6 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1916              		.file 7 "/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
ARM GAS  /tmp/ccr4ruP3.s 			page 62


 1917              		.file 8 "Drivers/lvgl/lvgl/src/widgets/../core/../misc/../font/lv_font.h"
 1918              		.file 9 "Drivers/lvgl/lvgl/src/widgets/../core/../misc/lv_types.h"
 1919              		.file 10 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 1920              		.file 11 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 1921              		.file 12 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 1922              		.file 13 "Drivers/lvgl/lvgl/src/widgets/../core/../misc/lv_color.h"
 1923              		.file 14 "Drivers/lvgl/lvgl/src/widgets/../core/../misc/lv_anim.h"
 1924              		.file 15 "Drivers/lvgl/lvgl/src/widgets/../core/../misc/lv_txt.h"
 1925              		.file 16 "Drivers/lvgl/lvgl/src/widgets/../core/../misc/lv_bidi.h"
 1926              		.file 17 "Drivers/lvgl/lvgl/src/widgets/../core/../misc/lv_style.h"
 1927              		.file 18 "Drivers/lvgl/lvgl/src/widgets/../core/../hal/../draw/lv_img_buf.h"
 1928              		.file 19 "Drivers/lvgl/lvgl/src/widgets/../core/lv_obj.h"
 1929              		.file 20 "Drivers/lvgl/lvgl/src/widgets/../core/../hal/../draw/lv_draw_rect.h"
 1930              		.file 21 "Drivers/lvgl/lvgl/src/widgets/../core/../hal/../draw/lv_draw_label.h"
 1931              		.file 22 "Drivers/lvgl/lvgl/src/widgets/../core/../hal/../draw/lv_draw_img.h"
 1932              		.file 23 "Drivers/lvgl/lvgl/src/widgets/../core/../hal/../draw/lv_draw_line.h"
 1933              		.file 24 "Drivers/lvgl/lvgl/src/widgets/../core/../hal/../draw/lv_draw_arc.h"
 1934              		.file 25 "Drivers/lvgl/lvgl/src/widgets/../core/../hal/../draw/lv_draw_layer.h"
 1935              		.file 26 "Drivers/lvgl/lvgl/src/widgets/../core/../hal/../draw/lv_draw.h"
 1936              		.file 27 "Drivers/lvgl/lvgl/src/widgets/../core/../hal/../misc/lv_ll.h"
 1937              		.file 28 "Drivers/lvgl/lvgl/src/widgets/../core/../hal/../misc/lv_timer.h"
 1938              		.file 29 "Drivers/lvgl/lvgl/src/widgets/../core/../hal/lv_hal_disp.h"
 1939              		.file 30 "Drivers/lvgl/lvgl/src/widgets/../core/lv_theme.h"
 1940              		.file 31 "Drivers/lvgl/lvgl/src/widgets/../core/../hal/lv_hal_indev.h"
 1941              		.file 32 "Drivers/lvgl/lvgl/src/widgets/../core/lv_group.h"
 1942              		.file 33 "Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_scroll.h"
 1943              		.file 34 "Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_style.h"
 1944              		.file 35 "Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_draw.h"
 1945              		.file 36 "Drivers/lvgl/lvgl/src/widgets/../core/lv_obj_class.h"
 1946              		.file 37 "Drivers/lvgl/lvgl/src/widgets/../core/lv_event.h"
 1947              		.file 38 "Drivers/lvgl/lvgl/src/widgets/lv_btn.h"
 1948              		.file 39 "Drivers/lvgl/lvgl/src/widgets/lv_label.h"
 1949              		.file 40 "Drivers/lvgl/lvgl/src/widgets/lv_bar.h"
 1950              		.file 41 "Drivers/lvgl/lvgl/src/widgets/lv_img.h"
 1951              		.file 42 "Drivers/lvgl/lvgl/src/widgets/../core/../hal/../draw/sw/../../core/lv_obj_pos.h"
 1952              		.file 43 "Drivers/lvgl/lvgl/src/widgets/../core/../misc/lv_mem.h"
 1953              		.file 44 "Drivers/lvgl/lvgl/src/widgets/../core/lv_indev.h"
ARM GAS  /tmp/ccr4ruP3.s 			page 63


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_slider.c
     /tmp/ccr4ruP3.s:17     .text.is_slider_horizontal:0000000000000000 $t
     /tmp/ccr4ruP3.s:23     .text.is_slider_horizontal:0000000000000000 is_slider_horizontal
     /tmp/ccr4ruP3.s:56     .text.position_knob:0000000000000000 $t
     /tmp/ccr4ruP3.s:62     .text.position_knob:0000000000000000 position_knob
     /tmp/ccr4ruP3.s:235    .text.draw_knob:0000000000000000 $t
     /tmp/ccr4ruP3.s:241    .text.draw_knob:0000000000000000 draw_knob
     /tmp/ccr4ruP3.s:612    .text.draw_knob:00000000000001ec $d
     /tmp/ccr4ruP3.s:618    .text.lv_slider_event:0000000000000000 $t
     /tmp/ccr4ruP3.s:624    .text.lv_slider_event:0000000000000000 lv_slider_event
     /tmp/ccr4ruP3.s:1070   .text.lv_slider_event:0000000000000288 $d
     /tmp/ccr4ruP3.s:1076   .text.lv_slider_event:000000000000028c $t
     /tmp/ccr4ruP3.s:1749   .text.lv_slider_constructor:0000000000000000 $t
     /tmp/ccr4ruP3.s:1755   .text.lv_slider_constructor:0000000000000000 lv_slider_constructor
     /tmp/ccr4ruP3.s:1825   .text.lv_slider_constructor:0000000000000060 $d
     /tmp/ccr4ruP3.s:1830   .text.lv_slider_create:0000000000000000 $t
     /tmp/ccr4ruP3.s:1837   .text.lv_slider_create:0000000000000000 lv_slider_create
     /tmp/ccr4ruP3.s:1867   .text.lv_slider_create:0000000000000014 $d
     /tmp/ccr4ruP3.s:1872   .text.lv_slider_is_dragged:0000000000000000 $t
     /tmp/ccr4ruP3.s:1879   .text.lv_slider_is_dragged:0000000000000000 lv_slider_is_dragged
     /tmp/ccr4ruP3.s:1902   .rodata.lv_slider_class:0000000000000000 lv_slider_class
     /tmp/ccr4ruP3.s:1898   .rodata.lv_slider_class:0000000000000000 $d

UNDEFINED SYMBOLS
lv_obj_get_width
lv_obj_get_height
lv_obj_get_style_prop
lv_event_get_target
lv_event_get_draw_ctx
lv_draw_rect_dsc_init
lv_obj_init_draw_rect_dsc
lv_obj_draw_dsc_init
lv_bar_get_mode
lv_event_send
lv_draw_rect
lv_memcpy
lv_obj_event_base
lv_event_get_code
lv_event_get_param
lv_area_increase
_lv_area_is_point_on
lv_obj_invalidate
lv_indev_get_act
lv_indev_get_point
lv_indev_get_type
lv_bar_set_value
lv_bar_set_start_value
lv_obj_get_group
lv_group_get_editing
lv_group_set_editing
lv_obj_refresh_ext_draw_size
lv_obj_calculate_ext_draw_size
lv_bar_get_value
lv_bar_get_start_value
lv_obj_clear_flag
lv_disp_get_dpi
ARM GAS  /tmp/ccr4ruP3.s 			page 64


lv_obj_set_ext_click_area
lv_obj_class_create_obj
lv_obj_class_init_obj
lv_bar_class
