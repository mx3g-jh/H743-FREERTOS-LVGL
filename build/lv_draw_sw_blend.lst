ARM GAS  /tmp/ccJH4gbL.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"lv_draw_sw_blend.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.fill_blended,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	fill_blended:
  24              	.LFB163:
  25              		.file 1 "Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c"
   1:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**
   2:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  * @file lv_draw_sw_blend.c
   3:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *
   4:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  */
   5:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
   6:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** /*********************
   7:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *      INCLUDES
   8:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *********************/
   9:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #include "lv_draw_sw.h"
  10:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #include "../../misc/lv_math.h"
  11:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #include "../../hal/lv_hal_disp.h"
  12:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #include "../../core/lv_refr.h"
  13:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  14:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** /*********************
  15:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *      DEFINES
  16:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *********************/
  17:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  18:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  19:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *      TYPEDEFS
  20:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  21:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  22:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  23:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *  STATIC PROTOTYPES
  24:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  25:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  26:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void fill_set_px(lv_color_t * dest_buf, const lv_area_t * blend_area, lv_coord_t dest_stride
  27:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_color_t color, lv_opa_t opa, const lv_opa_t * mask, lv_coord_t mask_stid
  28:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  29:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void fill_normal(lv_color_t * dest_buf, const lv_area_t * dest_area,
  30:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                               lv_coord_t dest_stride, lv_color_t color, lv_opa_t op
  31:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  32:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  33:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
ARM GAS  /tmp/ccJH4gbL.s 			page 2


  34:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void fill_argb(lv_color_t * dest_buf, const lv_area_t * dest_area,
  35:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             lv_coord_t dest_stride, lv_color_t color, lv_opa_t opa,
  36:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif /*LV_COLOR_SCREEN_TRANSP*/
  37:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  38:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
  39:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void fill_blended(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride
  40:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                          lv_opa_t opa, const lv_opa_t * mask, lv_coord_t mask_stride, lv_blend_mode
  41:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif  /*LV_DRAW_COMPLEX*/
  42:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  43:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void map_set_px(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
  44:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                        const lv_color_t * src_buf, lv_coord_t src_stride, lv_opa_t opa, const lv_op
  45:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  46:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void map_normal(lv_color_t * dest_buf, const lv_area_t * dest_area, lv
  47:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                              const lv_color_t * src_buf, lv_coord_t src_stride, lv_
  48:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  49:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
  50:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void map_argb(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_c
  51:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                            const lv_color_t * src_buf, lv_coord_t src_stride, lv_op
  52:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                            const lv_opa_t * mask, lv_coord_t mask_stride, lv_blend_
  53:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  54:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif /*LV_COLOR_SCREEN_TRANSP*/
  55:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  56:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
  57:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void map_blended(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
  58:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         const lv_color_t * src_buf, lv_coord_t src_stride, lv_opa_t opa,
  59:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         const lv_opa_t * mask, lv_coord_t mask_stride, lv_blend_mode_t blend_mode);
  60:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  61:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa
  62:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t 
  63:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_multiply(lv_color_t fg, lv_color_t bg, lv_opa_t opa
  64:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif /*LV_DRAW_COMPLEX*/
  65:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  66:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  67:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *  STATIC VARIABLES
  68:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  69:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  70:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  71:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *      MACROS
  72:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  73:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #define FILL_NORMAL_MASK_PX(color)                                                          \
  74:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(*mask == LV_OPA_COVER) *dest_buf = color;                                 \
  75:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else *dest_buf = lv_color_mix(color, *dest_buf, *mask);            \
  76:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     mask++;                                                         \
  77:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     dest_buf++;
  78:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  79:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #define MAP_NORMAL_MASK_PX(x)                                                          \
  80:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(*mask_tmp_x) {          \
  81:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) dest_buf[x] = src_buf[x];                                 \
  82:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], *mask_tmp_x);            \
  83:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }                                                                                              
  84:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     mask_tmp_x++;
  85:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  86:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  87:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  88:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *   GLOBAL FUNCTIONS
  89:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  90:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
ARM GAS  /tmp/ccJH4gbL.s 			page 3


  91:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** void lv_draw_sw_blend(lv_draw_ctx_t * draw_ctx, const lv_draw_sw_blend_dsc_t * dsc)
  92:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
  93:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Do not draw transparent things*/
  94:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->opa <= LV_OPA_MIN) return;
  95:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  96:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_area_t blend_area;
  97:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(!_lv_area_intersect(&blend_area, dsc->blend_area, draw_ctx->clip_area)) return;
  98:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  99:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(draw_ctx->wait_for_finish) draw_ctx->wait_for_finish(draw_ctx);
 100:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 101:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     ((lv_draw_sw_ctx_t *)draw_ctx)->blend(draw_ctx, dsc);
 102:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 103:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 104:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** LV_ATTRIBUTE_FAST_MEM void lv_draw_sw_blend_basic(lv_draw_ctx_t * draw_ctx, const lv_draw_sw_blend_
 105:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 106:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_opa_t * mask;
 107:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf == NULL) mask = NULL;
 108:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf && dsc->mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 109:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 110:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
 111:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 112:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t dest_stride = lv_area_get_width(draw_ctx->buf_area);
 113:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 114:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_area_t blend_area;
 115:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(!_lv_area_intersect(&blend_area, dsc->blend_area, draw_ctx->clip_area)) return;
 116:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 117:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 118:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t * dest_buf = draw_ctx->buf;
 119:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(disp->driver->set_px_cb == NULL) {
 120:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(disp->driver->screen_transp == 0) {
 121:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) + (blend_area.x1 - d
 122:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 123:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 124:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             /*With LV_COLOR_DEPTH 16 it means ARGB8565 (3 bytes format)*/
 125:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8 = (uint8_t *) dest_buf;
 126:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) * LV_IMG_PX_SIZE_AL
 127:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (blend_area.x1 - draw_ctx->buf_area->x1) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 128:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf = (lv_color_t *)dest_buf8;
 129:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 130:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 131:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 132:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     const lv_color_t * src_buf = dsc->src_buf;
 133:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t src_stride;
 134:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(src_buf) {
 135:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_stride = lv_area_get_width(dsc->blend_area);
 136:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_buf += src_stride * (blend_area.y1 - dsc->blend_area->y1) + (blend_area.x1 - dsc->blend
 137:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 138:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 139:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_stride = 0;
 140:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 141:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 142:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t mask_stride;
 143:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask) {
 144:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Round the values in the mask if anti-aliasing is disabled*/
 145:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(disp->driver->antialiasing == 0) {
 146:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t mask_size = lv_area_get_size(dsc->mask_area);
 147:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t i;
ARM GAS  /tmp/ccJH4gbL.s 			page 4


 148:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(i = 0; i < mask_size; i++) {
 149:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 150:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 151:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 152:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 153:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask_stride = lv_area_get_width(dsc->mask_area);
 154:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask += mask_stride * (blend_area.y1 - dsc->mask_area->y1) + (blend_area.x1 - dsc->mask_are
 155:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 156:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 157:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 158:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask_stride = 0;
 159:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 160:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 161:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_area_move(&blend_area, -draw_ctx->buf_area->x1, -draw_ctx->buf_area->y1);
 162:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 163:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 164:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(disp->driver->set_px_cb) {
 165:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 166:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_set_px(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 167:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 168:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 169:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_set_px(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, mas
 170:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 171:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 172:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 173:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(disp->driver->screen_transp) {
 174:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 175:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_argb(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride);
 176:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 177:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 178:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_argb(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, mask_
 179:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 180:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 181:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 182:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->blend_mode == LV_BLEND_MODE_NORMAL) {
 183:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 184:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_normal(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 185:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 186:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 187:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_normal(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, mas
 188:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 189:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 190:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 191:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
 192:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 193:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_blended(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_strid
 194:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 195:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 196:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_blended(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, ma
 197:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 198:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 199:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 200:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 201:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 202:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 203:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
 204:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *   STATIC FUNCTIONS
ARM GAS  /tmp/ccJH4gbL.s 			page 5


 205:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
 206:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 207:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void fill_set_px(lv_color_t * dest_buf, const lv_area_t * blend_area, lv_coord_t dest_stride
 208:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_color_t color, lv_opa_t opa, const lv_opa_t * mask, lv_coord_t mask_stid
 209:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 210:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 211:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 212:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 213:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 214:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 215:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 216:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = blend_area->y1; y <= blend_area->y2; y++) {
 217:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 218:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 219:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 220:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 221:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 222:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 223:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         int32_t w = lv_area_get_width(blend_area);
 224:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         int32_t h = lv_area_get_height(blend_area);
 225:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 226:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 227:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 228:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 229:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 230:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 231:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, blend_area
 232:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 233:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 234:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 235:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stide;
 236:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 237:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 238:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 239:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 240:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void fill_normal(lv_color_t * dest_buf, const lv_area_t * dest_area,
 241:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                               lv_coord_t dest_stride, lv_color_t color, lv_opa_t op
 242:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 243:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 244:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 245:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 246:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 247:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 248:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 249:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*No mask*/
 250:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 251:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 252:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 253:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 254:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 255:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 256:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 257:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Has opacity*/
 258:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 259:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_dest_color = lv_color_black();
 260:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 261:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
ARM GAS  /tmp/ccJH4gbL.s 			page 6


 262:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_MIX_ROUND_OFS == 0 && LV_COLOR_DEPTH == 16
 263:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             /*lv_color_mix work with an optimized algorithm with 16 bit color depth.
 264:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****              *However, it introduces some rounded error on opa.
 265:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****              *Introduce the same error here too to make lv_color_premult produces the same result *
 266:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             opa = (uint32_t)((uint32_t)opa + 4) >> 3;
 267:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             opa = opa << 3;
 268:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 269:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 270:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint16_t color_premult[3];
 271:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_premult(color, opa, color_premult);
 272:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_inv = 255 - opa;
 273:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 274:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 275:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 276:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 277:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 278:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_res_color = lv_color_mix_premult(color_premult, dest_buf[x], opa_inv);
 279:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 280:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = last_res_color;
 281:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 282:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 283:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 284:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 285:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 286:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 287:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 288:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 16
 289:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         uint32_t c32 = color.full + ((uint32_t)color.full << 16);
 290:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 291:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Only the mask matters*/
 292:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 293:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 294:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 295:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 296:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 297:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 298:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 299:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(; x <= x_end4; x += 4) {
 300:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 301:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask32 == 0xFFFFFFFF) {
 302:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 16
 303:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((lv_uintptr_t)dest_buf & 0x3) {
 304:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 0) = color;
 305:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             uint32_t * d = (uint32_t *)(dest_buf + 1);
 306:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *d = c32;
 307:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 3) = color;
 308:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 309:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         else {
 310:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             uint32_t * d = (uint32_t *)dest_buf;
 311:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *d = c32;
 312:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(d + 1) = c32;
 313:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 314:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 315:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[0] = color;
 316:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[1] = color;
 317:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[2] = color;
 318:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[3] = color;
ARM GAS  /tmp/ccJH4gbL.s 			page 7


 319:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 320:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf += 4;
 321:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         mask += 4;
 322:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 323:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     else if(mask32) {
 324:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 325:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 326:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 327:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 328:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 329:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     else {
 330:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         mask += 4;
 331:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf += 4;
 332:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 333:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 334:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 335:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(; x < w ; x++) {
 336:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 337:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 338:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += (dest_stride - w);
 339:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 340:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 341:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 342:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*With opacity*/
 343:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 344:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             /*Buffer the result color to avoid recalculating the same color*/
 345:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_dest_color;
 346:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_res_color;
 347:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t last_mask = LV_OPA_TRANSP;
 348:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_dest_color.full = dest_buf[0].full;
 349:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_res_color.full = dest_buf[0].full;
 350:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_tmp = LV_OPA_TRANSP;
 351:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 352:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 353:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 354:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 355:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
 356:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 357:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask || last_dest_color.full != dest_buf[x].full) {
 358:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 359:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 360:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_mask = *mask;
 361:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_dest_color.full = dest_buf[x].full;
 362:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 363:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = last_res_color;
 364:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 365:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     mask++;
 366:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 367:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 368:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 369:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 370:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 371:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 372:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 373:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 374:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 375:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline void set_px_argb(uint8_t * buf, lv_color_t color, lv_opa_t opa)
ARM GAS  /tmp/ccJH4gbL.s 			page 8


 376:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 377:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t bg_color;
 378:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t res_color;
 379:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_opa_t bg_opa = buf[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 380:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 381:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color.full = buf[0];
 382:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_mix_with_alpha(bg_color, bg_opa, color, opa, &res_color, &buf[1]);
 383:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[1] <= LV_OPA_MIN) return;
 384:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = res_color.full;
 385:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 386:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color.full = buf[0] + (buf[1] << 8);
 387:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_mix_with_alpha(bg_color, bg_opa, color, opa, &res_color, &buf[2]);
 388:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[2] <= LV_OPA_MIN) return;
 389:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = res_color.full & 0xff;
 390:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[1] = res_color.full >> 8;
 391:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 392:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color = *((lv_color_t *)buf);
 393:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_mix_with_alpha(bg_color, bg_opa, color, opa, &res_color, &buf[3]);
 394:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[3] <= LV_OPA_MIN) return;
 395:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = res_color.ch.blue;
 396:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[1] = res_color.ch.green;
 397:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[2] = res_color.ch.red;
 398:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 399:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 400:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 401:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline void set_px_argb_blend(uint8_t * buf, lv_color_t color, lv_opa_t opa, lv_color_t (*bl
 402:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                                                                    
 403:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 404:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     static lv_color_t last_dest_color;
 405:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     static lv_color_t last_src_color;
 406:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     static lv_color_t last_res_color;
 407:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     static uint32_t last_opa = 0xffff; /*Set to an invalid value for first*/
 408:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 409:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t bg_color;
 410:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 411:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Get the BG color*/
 412:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 413:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[1] <= LV_OPA_MIN) return;
 414:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color.full = buf[0];
 415:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 416:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[2] <= LV_OPA_MIN) return;
 417:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color.full = buf[0] + (buf[1] << 8);
 418:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 419:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[3] <= LV_OPA_MIN) return;
 420:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color = *((lv_color_t *)buf);
 421:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 422:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 423:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Get the result color*/
 424:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(last_dest_color.full != bg_color.full || last_src_color.full != color.full || last_opa != op
 425:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = bg_color;
 426:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = color;
 427:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_opa = opa;
 428:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 429:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 430:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 431:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Set the result color*/
 432:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
ARM GAS  /tmp/ccJH4gbL.s 			page 9


 433:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = res_color.full;
 434:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 435:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = last_res_color.full & 0xff;
 436:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[1] = last_res_color.full >> 8;
 437:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 438:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = last_res_color.ch.blue;
 439:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[1] = last_res_color.ch.green;
 440:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[2] = last_res_color.ch.red;
 441:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 442:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 443:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 444:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 445:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void fill_argb(lv_color_t * dest_buf, const lv_area_t * dest_area,
 446:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             lv_coord_t dest_stride, lv_color_t color, lv_opa_t opa,
 447:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 448:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     uint8_t * dest_buf8 = (uint8_t *) dest_buf;
 449:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 450:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 451:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 452:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 453:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 454:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 455:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     uint8_t ctmp[LV_IMG_PX_SIZE_ALPHA_BYTE];
 456:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_memcpy(ctmp, &color, sizeof(lv_color_t));
 457:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     ctmp[LV_IMG_PX_SIZE_ALPHA_BYTE - 1] = opa;
 458:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 459:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*No mask*/
 460:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 461:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 462:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 463:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf8, ctmp, LV_IMG_PX_SIZE_ALPHA_BYTE);
 464:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 465:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 466:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 467:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (dest_stride - w) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 468:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 469:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 1; y < h; y++) {
 470:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf8, (uint8_t *) dest_buf, w * LV_IMG_PX_SIZE_ALPHA_BYTE);
 471:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 472:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 473:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 474:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Has opacity*/
 475:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 476:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 477:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 478:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 479:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     set_px_argb(dest_buf8, color, opa);
 480:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 481:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 482:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 483:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
 484:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 485:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 486:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 487:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 488:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 489:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Only the mask matters*/
ARM GAS  /tmp/ccJH4gbL.s 			page 10


 490:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 491:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 492:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 493:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 494:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     set_px_argb(dest_buf8, color,  *mask);
 495:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     mask++;
 496:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 497:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 498:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 499:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
 500:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 501:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 502:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*With opacity*/
 503:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 504:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             /*Buffer the result color to avoid recalculating the same color*/
 505:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t last_mask = LV_OPA_TRANSP;
 506:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_tmp = LV_OPA_TRANSP;
 507:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 508:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 509:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 510:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 511:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 512:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
 513:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 514:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 515:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         set_px_argb(dest_buf8, color,  opa_tmp);
 516:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 517:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 518:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     mask++;
 519:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 520:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 521:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
 522:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 523:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 524:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 525:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 526:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 527:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 528:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 529:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
 530:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void fill_blended(lv_color_t * dest_buf, const lv_area_t * dest_area,
 531:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                          lv_coord_t dest_stride, lv_color_t color, lv_opa_t opa, const lv_opa_t * m
 532:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                          lv_blend_mode_t blend_mode)
 533:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
  26              		.loc 1 533 0
  27              		.cfi_startproc
  28              		@ args = 16, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
ARM GAS  /tmp/ccJH4gbL.s 			page 11


  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 87B0     		sub	sp, sp, #28
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 64
  46 0006 0446     		mov	r4, r0
  47 0008 0392     		str	r2, [sp, #12]
  48 000a ADF80630 		strh	r3, [sp, #6]	@ movhi
  49 000e 9DF84030 		ldrb	r3, [sp, #64]	@ zero_extendqisi2
  50              	.LVL1:
  51 0012 0293     		str	r3, [sp, #8]
  52 0014 DDF84490 		ldr	r9, [sp, #68]
  53 0018 BDF94830 		ldrsh	r3, [sp, #72]
  54 001c 0493     		str	r3, [sp, #16]
  55 001e 9DF84C30 		ldrb	r3, [sp, #76]	@ zero_extendqisi2
  56              	.LVL2:
  57              	.LBB98:
  58              	.LBB99:
  59              		.file 2 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h"
   1:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** /**
   2:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * @file lv_area.h
   3:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  *
   4:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  */
   5:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** 
   6:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** #ifndef LV_AREA_H
   7:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** #define LV_AREA_H
   8:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** 
   9:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** #ifdef __cplusplus
  10:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** extern "C" {
  11:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** #endif
  12:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** 
  13:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** /*********************
  14:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  *      INCLUDES
  15:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  *********************/
  16:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** #include <stdbool.h>
  18:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** #include <stdint.h>
  19:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** 
  20:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** /*********************
  21:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  *      DEFINES
  22:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  *********************/
  23:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** 
  24:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  25:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** typedef int32_t lv_coord_t;
  26:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** #else
  27:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** typedef int16_t lv_coord_t;
  28:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** #endif
  29:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** 
  30:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** /**********************
  31:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  *      TYPEDEFS
  32:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  **********************/
  33:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** 
  34:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** /**
  35:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * Represents a point on the screen.
  36:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  */
ARM GAS  /tmp/ccJH4gbL.s 			page 12


  37:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** typedef struct {
  38:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x;
  39:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y;
  40:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** } lv_point_t;
  41:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** 
  42:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** /** Represents an area of the screen.*/
  43:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** typedef struct {
  44:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x1;
  45:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y1;
  46:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x2;
  47:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y2;
  48:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** } lv_area_t;
  49:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** 
  50:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** /** Alignments*/
  51:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** enum {
  52:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  55:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  56:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_CENTER,
  62:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** 
  63:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** };
  76:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** 
  78:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** enum {
  79:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** };
  88:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** 
  89:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** typedef uint8_t lv_dir_t;
  90:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** 
  91:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** /**********************
  92:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * GLOBAL PROTOTYPES
  93:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  **********************/
ARM GAS  /tmp/ccJH4gbL.s 			page 13


  94:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** 
  95:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** /**
  96:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * Initialize an area
  97:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
  98:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param x1 left coordinate of the area
  99:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param y1 top coordinate of the area
 100:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param x2 right coordinate of the area
 101:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 102:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 103:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** 
 105:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 106:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * Copy an area
 107:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param dest pointer to the destination area
 108:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param src pointer to the source area
 109:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 110:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 111:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** {
 112:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x1 = src->x1;
 113:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y1 = src->y1;
 114:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x2 = src->x2;
 115:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y2 = src->y2;
 116:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** }
 117:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** 
 118:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 119:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * Get the width of an area
 120:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
 121:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 122:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 123:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 124:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** {
 125:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
  60              		.loc 2 125 0
  61 0022 8E88     		ldrh	r6, [r1, #4]
  62 0024 0A88     		ldrh	r2, [r1]
  63              	.LVL3:
  64 0026 B61A     		subs	r6, r6, r2
  65 0028 B6B2     		uxth	r6, r6
  66 002a 0136     		adds	r6, r6, #1
  67 002c 36B2     		sxth	r6, r6
  68              	.LVL4:
  69              	.LBE99:
  70              	.LBE98:
  71              	.LBB100:
  72              	.LBB101:
 126:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** }
 127:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** 
 128:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 129:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * Get the height of an area
 130:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
 131:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 132:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 133:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 134:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** {
 135:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
  73              		.loc 2 135 0
  74 002e B1F806A0 		ldrh	r10, [r1, #6]
ARM GAS  /tmp/ccJH4gbL.s 			page 14


  75 0032 4A88     		ldrh	r2, [r1, #2]
  76 0034 AAEB020A 		sub	r10, r10, r2
  77 0038 1FFA8AFA 		uxth	r10, r10
  78 003c 0AF1010A 		add	r10, r10, #1
  79 0040 0FFA8AFA 		sxth	r10, r10
  80              	.LVL5:
  81              	.LBE101:
  82              	.LBE100:
 534:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 535:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 536:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 537:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 538:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 539:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 540:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 541:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 542:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     switch(blend_mode) {
  83              		.loc 1 542 0
  84 0044 022B     		cmp	r3, #2
  85 0046 16D0     		beq	.L19
  86 0048 032B     		cmp	r3, #3
  87 004a 12D0     		beq	.L4
  88 004c 012B     		cmp	r3, #1
  89 004e 02D0     		beq	.L25
  90              	.LVL6:
  91              	.L1:
 543:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 544:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_additive;
 545:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 546:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 547:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 548:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 549:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_MULTIPLY:
 550:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_multiply;
 551:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 552:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         default:
 553:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             LV_LOG_WARN("fill_blended: unsupported blend mode");
 554:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             return;
 555:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 556:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 557:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 558:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 559:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_dest_color = dest_buf[0];
 560:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(color, dest_buf[0], opa);
 561:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 562:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 563:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 564:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 565:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(color, dest_buf[x], opa);
 566:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 567:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = last_res_color;
 568:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 569:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride;
 570:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 571:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 572:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 573:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
ARM GAS  /tmp/ccJH4gbL.s 			page 15


 574:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Buffer the result color to avoid recalculating the same color*/
 575:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_dest_color;
 576:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color;
 577:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 578:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 579:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t opa_tmp = mask[0] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[0] * opa) >> 8;
 580:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 581:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 582:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 583:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 584:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 585:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] != last_mask || last_dest_color.full != dest_buf[x].full) {
 586:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 587:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 588:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(color, dest_buf[x], opa_tmp);
 589:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_mask = mask[x];
 590:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color.full = dest_buf[x].full;
 591:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 592:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = last_res_color;
 593:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 594:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride;
 595:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 596:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 597:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 598:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
  92              		.loc 1 598 0
  93 0050 07B0     		add	sp, sp, #28
  94              	.LCFI2:
  95              		.cfi_remember_state
  96              		.cfi_def_cfa_offset 36
  97              		@ sp needed
  98 0052 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
  99              	.LVL7:
 100              	.L25:
 101              	.LCFI3:
 102              		.cfi_restore_state
 544:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 103              		.loc 1 544 0
 104 0056 3C4F     		ldr	r7, .L29
 105              	.L3:
 106              	.LVL8:
 558:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_dest_color = dest_buf[0];
 107              		.loc 1 558 0
 108 0058 B9F1000F 		cmp	r9, #0
 109 005c 2BD1     		bne	.L6
 110              	.LBB102:
 559:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(color, dest_buf[0], opa);
 111              		.loc 1 559 0
 112 005e B4F80080 		ldrh	r8, [r4]
 560:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 113              		.loc 1 560 0
 114 0062 029A     		ldr	r2, [sp, #8]
 115              	.LVL9:
 116 0064 4146     		mov	r1, r8	@ movhi
 117              	.LVL10:
 118 0066 BDF80600 		ldrh	r0, [sp, #6]
 119              	.LVL11:
ARM GAS  /tmp/ccJH4gbL.s 			page 16


 120 006a B847     		blx	r7
 121              	.LVL12:
 561:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 122              		.loc 1 561 0
 123 006c 4FF0000B 		mov	fp, #0
 124 0070 1DE0     		b	.L7
 125              	.LVL13:
 126              	.L4:
 127              	.LBE102:
 550:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 128              		.loc 1 550 0
 129 0072 364F     		ldr	r7, .L29+4
 551:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         default:
 130              		.loc 1 551 0
 131 0074 F0E7     		b	.L3
 132              	.LVL14:
 133              	.L19:
 547:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 134              		.loc 1 547 0
 135 0076 364F     		ldr	r7, .L29+8
 136 0078 EEE7     		b	.L3
 137              	.LVL15:
 138              	.L8:
 139              	.LBB103:
 567:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 140              		.loc 1 567 0 discriminator 2
 141 007a A9F80000 		strh	r0, [r9]	@ movhi
 562:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 142              		.loc 1 562 0 discriminator 2
 143 007e 0135     		adds	r5, r5, #1
 144              	.LVL16:
 145              	.L10:
 562:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 146              		.loc 1 562 0 is_stmt 0 discriminator 1
 147 0080 B542     		cmp	r5, r6
 148 0082 0FDA     		bge	.L26
 563:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 149              		.loc 1 563 0 is_stmt 1
 150 0084 1FFA88F3 		uxth	r3, r8
 151 0088 04EB4509 		add	r9, r4, r5, lsl #1
 152 008c 34F81520 		ldrh	r2, [r4, r5, lsl #1]
 153 0090 9342     		cmp	r3, r2
 154 0092 F2D0     		beq	.L8
 564:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(color, dest_buf[x], opa);
 155              		.loc 1 564 0
 156 0094 34F81580 		ldrh	r8, [r4, r5, lsl #1]
 157              	.LVL17:
 565:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 158              		.loc 1 565 0
 159 0098 029A     		ldr	r2, [sp, #8]
 160              	.LVL18:
 161 009a 4146     		mov	r1, r8	@ movhi
 162 009c BDF80600 		ldrh	r0, [sp, #6]
 163              	.LVL19:
 164 00a0 B847     		blx	r7
 165              	.LVL20:
 166 00a2 EAE7     		b	.L8
ARM GAS  /tmp/ccJH4gbL.s 			page 17


 167              	.LVL21:
 168              	.L26:
 569:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 169              		.loc 1 569 0 discriminator 2
 170 00a4 039B     		ldr	r3, [sp, #12]
 171 00a6 04EB4304 		add	r4, r4, r3, lsl #1
 172              	.LVL22:
 561:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 173              		.loc 1 561 0 discriminator 2
 174 00aa 0BF1010B 		add	fp, fp, #1
 175              	.LVL23:
 176              	.L7:
 561:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 177              		.loc 1 561 0 is_stmt 0 discriminator 1
 178 00ae D345     		cmp	fp, r10
 179 00b0 CEDA     		bge	.L1
 562:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 180              		.loc 1 562 0 is_stmt 1
 181 00b2 0025     		movs	r5, #0
 182 00b4 E4E7     		b	.L10
 183              	.LVL24:
 184              	.L6:
 185              	.LBE103:
 186              	.LBB104:
 578:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t opa_tmp = mask[0] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[0] * opa) >> 8;
 187              		.loc 1 578 0
 188 00b6 2388     		ldrh	r3, [r4]
 189              	.LVL25:
 190 00b8 1946     		mov	r1, r3	@ movhi
 191              	.LVL26:
 579:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 192              		.loc 1 579 0
 193 00ba 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 194              	.LVL27:
 195 00be FC2B     		cmp	r3, #252
 196 00c0 04D8     		bhi	.L21
 579:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 197              		.loc 1 579 0 is_stmt 0 discriminator 1
 198 00c2 029A     		ldr	r2, [sp, #8]
 199 00c4 03FB02F3 		mul	r3, r3, r2
 200 00c8 1A0A     		lsrs	r2, r3, #8
 201 00ca 00E0     		b	.L11
 202              	.L21:
 579:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 203              		.loc 1 579 0
 204 00cc 029A     		ldr	r2, [sp, #8]
 205              	.L11:
 206              	.LVL28:
 580:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 207              		.loc 1 580 0 is_stmt 1 discriminator 4
 208 00ce 0D46     		mov	r5, r1	@ movhi
 209 00d0 BDF80600 		ldrh	r0, [sp, #6]
 210              	.LVL29:
 211 00d4 B847     		blx	r7
 212              	.LVL30:
 577:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 213              		.loc 1 577 0 discriminator 4
ARM GAS  /tmp/ccJH4gbL.s 			page 18


 214 00d6 0023     		movs	r3, #0
 582:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 215              		.loc 1 582 0 discriminator 4
 216 00d8 9B46     		mov	fp, r3
 217 00da CDF814A0 		str	r10, [sp, #20]
 218              	.LVL31:
 219 00de AC46     		mov	ip, r5	@ movhi
 220 00e0 2CE0     		b	.L12
 221              	.LVL32:
 222              	.L28:
 585:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 223              		.loc 1 585 0 discriminator 1
 224 00e2 1FFA8CF1 		uxth	r1, ip
 225 00e6 34F815E0 		ldrh	lr, [r4, r5, lsl #1]
 226 00ea 7145     		cmp	r1, lr
 227 00ec 18D1     		bne	.L14
 228 00ee 09E0     		b	.L15
 229              	.L22:
 586:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 230              		.loc 1 586 0
 231 00f0 029A     		ldr	r2, [sp, #8]
 232              	.LVL33:
 233              	.L16:
 588:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_mask = mask[x];
 234              		.loc 1 588 0 discriminator 4
 235 00f2 34F81810 		ldrh	r1, [r4, r8, lsl #1]
 236 00f6 BDF80600 		ldrh	r0, [sp, #6]
 237              	.LVL34:
 238 00fa B847     		blx	r7
 239              	.LVL35:
 589:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color.full = dest_buf[x].full;
 240              		.loc 1 589 0 discriminator 4
 241 00fc 9AF80030 		ldrb	r3, [r10]	@ zero_extendqisi2
 242              	.LVL36:
 590:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 243              		.loc 1 590 0 discriminator 4
 244 0100 34F818C0 		ldrh	ip, [r4, r8, lsl #1]
 245              	.LVL37:
 246              	.L15:
 592:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 247              		.loc 1 592 0
 248 0104 24F81800 		strh	r0, [r4, r8, lsl #1]	@ movhi
 249              	.L13:
 583:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 250              		.loc 1 583 0 discriminator 2
 251 0108 0135     		adds	r5, r5, #1
 252              	.LVL38:
 253              	.L18:
 583:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 254              		.loc 1 583 0 is_stmt 0 discriminator 1
 255 010a B542     		cmp	r5, r6
 256 010c 0FDA     		bge	.L27
 584:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] != last_mask || last_dest_color.full != dest_buf[x].full) {
 257              		.loc 1 584 0 is_stmt 1
 258 010e A846     		mov	r8, r5
 259 0110 09EB050A 		add	r10, r9, r5
 260 0114 19F80520 		ldrb	r2, [r9, r5]	@ zero_extendqisi2
ARM GAS  /tmp/ccJH4gbL.s 			page 19


 261 0118 002A     		cmp	r2, #0
 262 011a F5D0     		beq	.L13
 585:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 263              		.loc 1 585 0
 264 011c 9A42     		cmp	r2, r3
 265 011e E0D0     		beq	.L28
 266              	.L14:
 586:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 267              		.loc 1 586 0
 268 0120 FC2A     		cmp	r2, #252
 269 0122 E5D8     		bhi	.L22
 586:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 270              		.loc 1 586 0 is_stmt 0 discriminator 1
 271 0124 029B     		ldr	r3, [sp, #8]
 272              	.LVL39:
 273 0126 02FB03F2 		mul	r2, r2, r3
 274 012a 120A     		lsrs	r2, r2, #8
 275 012c E1E7     		b	.L16
 276              	.LVL40:
 277              	.L27:
 594:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 278              		.loc 1 594 0 is_stmt 1 discriminator 2
 279 012e 039A     		ldr	r2, [sp, #12]
 280 0130 04EB4204 		add	r4, r4, r2, lsl #1
 281              	.LVL41:
 595:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 282              		.loc 1 595 0 discriminator 2
 283 0134 049A     		ldr	r2, [sp, #16]
 284 0136 9144     		add	r9, r9, r2
 285              	.LVL42:
 582:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 286              		.loc 1 582 0 discriminator 2
 287 0138 0BF1010B 		add	fp, fp, #1
 288              	.LVL43:
 289              	.L12:
 582:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 290              		.loc 1 582 0 is_stmt 0 discriminator 1
 291 013c 059A     		ldr	r2, [sp, #20]
 292 013e 9345     		cmp	fp, r2
 293 0140 86DA     		bge	.L1
 583:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 294              		.loc 1 583 0 is_stmt 1
 295 0142 0025     		movs	r5, #0
 296              	.LVL44:
 297 0144 E1E7     		b	.L18
 298              	.L30:
 299 0146 00BF     		.align	2
 300              	.L29:
 301 0148 00000000 		.word	color_blend_true_color_additive
 302 014c 00000000 		.word	color_blend_true_color_multiply
 303 0150 00000000 		.word	color_blend_true_color_subtractive
 304              	.LBE104:
 305              		.cfi_endproc
 306              	.LFE163:
 308              		.section	.text.map_blended,"ax",%progbits
 309              		.align	1
 310              		.syntax unified
ARM GAS  /tmp/ccJH4gbL.s 			page 20


 311              		.thumb
 312              		.thumb_func
 313              		.fpu fpv5-d16
 315              	map_blended:
 316              	.LFB166:
 599:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 600:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 601:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void map_set_px(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
 602:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                        const lv_color_t * src_buf, lv_coord_t src_stride, lv_opa_t opa, const lv_op
 603:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 604:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 605:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 606:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 607:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 608:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 609:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 610:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 611:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 612:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 613:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 614:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 615:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 616:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 617:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 618:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 619:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 620:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 621:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 622:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 623:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 624:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 625:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 626:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area-
 627:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 628:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 629:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 630:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 631:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 632:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 633:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 634:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 635:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 636:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void map_normal(lv_color_t * dest_buf, const lv_area_t * dest_area, lv
 637:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                              const lv_color_t * src_buf, lv_coord_t src_stride, lv_
 638:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 639:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 640:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 641:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 642:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 643:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 644:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 645:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 646:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 647:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 648:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 649:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 650:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
ARM GAS  /tmp/ccJH4gbL.s 			page 21


 651:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 652:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 653:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 654:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 655:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 656:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 657:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 658:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa);
 659:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 660:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 661:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 662:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 663:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 664:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 665:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 666:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 667:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Only the mask matters*/
 668:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa > LV_OPA_MAX) {
 669:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 670:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 671:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 672:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 673:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if 0
 674:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 675:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x);
 676:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 677:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 678:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)mask_tmp_x & 0x3); x++) {
 679:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 680:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 681:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 682:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 uint32_t * mask32 = (uint32_t *)mask_tmp_x;
 683:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(; x < x_end4; x += 4) {
 684:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask32) {
 685:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 686:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x] = src_buf[x];
 687:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 1] = src_buf[x + 1];
 688:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 2] = src_buf[x + 2];
 689:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 3] = src_buf[x + 3];
 690:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 691:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         else {
 692:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             mask_tmp_x = (const lv_opa_t *)mask32;
 693:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x)
 694:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 695:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 696:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 697:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 698:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 699:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     mask32++;
 700:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 701:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 702:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask_tmp_x = (const lv_opa_t *)mask32;
 703:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(; x < w ; x++) {
 704:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 705:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 706:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 707:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
ARM GAS  /tmp/ccJH4gbL.s 			page 22


 708:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 709:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 710:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 711:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 712:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Handle opa and mask values too*/
 713:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 714:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 715:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 716:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 717:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 718:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
 719:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 720:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 721:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 722:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 723:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 724:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 725:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 726:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 727:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 728:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 729:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 730:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 731:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 732:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void map_argb(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_c
 733:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                            const lv_color_t * src_buf, lv_coord_t src_stride, lv_op
 734:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                            const lv_opa_t * mask, lv_coord_t mask_stride, lv_blend_
 735:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 736:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 737:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     uint8_t * dest_buf8 = (uint8_t *) dest_buf;
 738:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 739:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 740:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 741:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 742:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 743:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 744:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 745:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 746:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     switch(blend_mode) {
 747:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 748:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_additive;
 749:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 750:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 751:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 752:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 753:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_MULTIPLY:
 754:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_multiply;
 755:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 756:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         default:
 757:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = NULL;
 758:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 759:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 760:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 761:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 762:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 763:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             if(blend_fp == NULL && LV_COLOR_DEPTH == 32) {
 764:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(y = 0; y < h; y++) {
ARM GAS  /tmp/ccJH4gbL.s 			page 23


 765:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 766:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf += dest_stride;
 767:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     src_buf += src_stride;
 768:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 769:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 770:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             else {
 771:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 uint8_t * dest_buf8_row = dest_buf8;
 772:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(y = 0; y < h; y++) {
 773:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(blend_fp == NULL) {
 774:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         for(x = 0; x < w; x++) {
 775:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             set_px_argb(dest_buf8, src_buf[x], LV_OPA_COVER);
 776:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 777:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 778:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 779:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     else {
 780:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         for(x = 0; x < w; x++) {
 781:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             set_px_argb_blend(dest_buf8, src_buf[x], LV_OPA_COVER, blend_fp);
 782:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 783:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 784:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 785:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 786:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 787:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf8 = dest_buf8_row;
 788:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     src_buf += src_stride;
 789:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 790:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 791:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 792:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*No mask but opacity*/
 793:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 794:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 795:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 796:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(blend_fp == NULL) {
 797:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
 798:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         set_px_argb(dest_buf8, src_buf[x], opa);
 799:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 800:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 801:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 802:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 else {
 803:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
 804:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         set_px_argb_blend(dest_buf8, src_buf[x], opa, blend_fp);
 805:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 806:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 807:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 808:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 809:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 810:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
 811:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 812:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 813:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 814:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 815:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 816:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 817:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Only the mask matters*/
 818:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa > LV_OPA_MAX) {
 819:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 820:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 821:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(blend_fp == NULL) {
ARM GAS  /tmp/ccJH4gbL.s 			page 24


 822:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
 823:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         set_px_argb(dest_buf8, src_buf[x], mask[x]);
 824:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 825:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 826:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 827:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 else {
 828:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
 829:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         set_px_argb_blend(dest_buf8, src_buf[x], mask[x], blend_fp);
 830:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 831:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 832:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 833:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 834:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
 835:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 836:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 837:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 838:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 839:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Handle opa and mask values too*/
 840:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 841:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 842:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 843:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(blend_fp == NULL) {
 844:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
 845:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(mask[x]) {
 846:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8)
 847:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             set_px_argb(dest_buf8, src_buf[x], opa_tmp);
 848:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 849:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 850:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 851:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 852:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 else {
 853:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
 854:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(mask[x]) {
 855:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8)
 856:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             set_px_argb_blend(dest_buf8, src_buf[x], opa_tmp, blend_fp);
 857:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 858:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 859:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 860:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 861:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 862:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
 863:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 864:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 865:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 866:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 867:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 868:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 869:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 870:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 871:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 872:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
 873:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void map_blended(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
 874:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         const lv_color_t * src_buf, lv_coord_t src_stride, lv_opa_t opa,
 875:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         const lv_opa_t * mask, lv_coord_t mask_stride, lv_blend_mode_t blend_mode)
 876:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 317              		.loc 1 876 0
 318              		.cfi_startproc
ARM GAS  /tmp/ccJH4gbL.s 			page 25


 319              		@ args = 20, pretend = 0, frame = 32
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              	.LVL45:
 322 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 323              	.LCFI4:
 324              		.cfi_def_cfa_offset 36
 325              		.cfi_offset 4, -36
 326              		.cfi_offset 5, -32
 327              		.cfi_offset 6, -28
 328              		.cfi_offset 7, -24
 329              		.cfi_offset 8, -20
 330              		.cfi_offset 9, -16
 331              		.cfi_offset 10, -12
 332              		.cfi_offset 11, -8
 333              		.cfi_offset 14, -4
 334 0004 89B0     		sub	sp, sp, #36
 335              	.LCFI5:
 336              		.cfi_def_cfa_offset 72
 337 0006 0746     		mov	r7, r0
 338 0008 0392     		str	r2, [sp, #12]
 339 000a 9846     		mov	r8, r3
 340 000c BDF94830 		ldrsh	r3, [sp, #72]
 341              	.LVL46:
 342 0010 0493     		str	r3, [sp, #16]
 343 0012 9DF84C30 		ldrb	r3, [sp, #76]	@ zero_extendqisi2
 344 0016 0093     		str	r3, [sp]
 345 0018 BDF95430 		ldrsh	r3, [sp, #84]
 346 001c 0793     		str	r3, [sp, #28]
 347 001e 9DF85820 		ldrb	r2, [sp, #88]	@ zero_extendqisi2
 348              	.LVL47:
 349              	.LBB105:
 350              	.LBB106:
 125:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** }
 351              		.loc 2 125 0
 352 0022 B1F804A0 		ldrh	r10, [r1, #4]
 353 0026 0B88     		ldrh	r3, [r1]
 354 0028 AAEB030A 		sub	r10, r10, r3
 355 002c 1FFA8AFA 		uxth	r10, r10
 356 0030 0AF1010A 		add	r10, r10, #1
 357 0034 0FFA8AFA 		sxth	r10, r10
 358              	.LVL48:
 359              	.LBE106:
 360              	.LBE105:
 361              	.LBB107:
 362              	.LBB108:
 363              		.loc 2 135 0
 364 0038 CB88     		ldrh	r3, [r1, #6]
 365 003a 4988     		ldrh	r1, [r1, #2]
 366              	.LVL49:
 367 003c 5B1A     		subs	r3, r3, r1
 368 003e 9BB2     		uxth	r3, r3
 369 0040 0133     		adds	r3, r3, #1
 370 0042 1BB2     		sxth	r3, r3
 371 0044 0293     		str	r3, [sp, #8]
 372              	.LVL50:
 373              	.LBE108:
 374              	.LBE107:
ARM GAS  /tmp/ccJH4gbL.s 			page 26


 877:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 878:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 879:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 880:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 881:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 882:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 883:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 884:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 885:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     switch(blend_mode) {
 375              		.loc 1 885 0
 376 0046 022A     		cmp	r2, #2
 377 0048 1DD0     		beq	.L52
 378 004a 032A     		cmp	r2, #3
 379 004c 18D0     		beq	.L34
 380 004e 012A     		cmp	r2, #1
 381 0050 02D0     		beq	.L58
 382              	.LVL51:
 383              	.L31:
 886:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 887:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_additive;
 888:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 889:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 890:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 891:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 892:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_MULTIPLY:
 893:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_multiply;
 894:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 895:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         default:
 896:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             LV_LOG_WARN("fill_blended: unsupported blend mode");
 897:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             return;
 898:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 899:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 900:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t last_dest_color;
 901:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t last_src_color;
 902:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 903:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 904:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 905:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = src_buf[0];
 906:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, opa);
 907:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 908:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 909:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 910:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 911:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_src_color = src_buf[x];
 912:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(last_src_color, last_dest_color, opa);
 913:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 914:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = last_res_color;
 915:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 916:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride;
 917:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 918:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 919:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 920:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 921:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 922:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 923:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = src_buf[0];
 924:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t last_opa = mask[0] >= LV_OPA_MAX ? opa : ((opa * mask[0]) >> 8);
ARM GAS  /tmp/ccJH4gbL.s 			page 27


 925:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 926:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 927:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 928:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 929:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 930:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 931:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 932:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_src_color = src_buf[x];
 933:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_opa = opa_tmp;
 934:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 935:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 936:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = last_res_color;
 937:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 938:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride;
 939:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 940:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 941:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 942:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 943:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 384              		.loc 1 943 0
 385 0052 09B0     		add	sp, sp, #36
 386              	.LCFI6:
 387              		.cfi_remember_state
 388              		.cfi_def_cfa_offset 36
 389              		@ sp needed
 390 0054 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 391              	.LVL52:
 392              	.L58:
 393              	.LCFI7:
 394              		.cfi_restore_state
 887:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 395              		.loc 1 887 0
 396 0058 4E4B     		ldr	r3, .L62
 397              	.LVL53:
 398 005a 0193     		str	r3, [sp, #4]
 399              	.L33:
 400              	.LVL54:
 903:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 401              		.loc 1 903 0
 402 005c 149B     		ldr	r3, [sp, #80]
 403 005e 002B     		cmp	r3, #0
 404 0060 3DD1     		bne	.L36
 405              	.LBB109:
 904:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = src_buf[0];
 406              		.loc 1 904 0
 407 0062 B7F80090 		ldrh	r9, [r7]
 905:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, opa);
 408              		.loc 1 905 0
 409 0066 B8F80060 		ldrh	r6, [r8]
 906:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 410              		.loc 1 906 0
 411 006a 009A     		ldr	r2, [sp]
 412              	.LVL55:
 413 006c 4946     		mov	r1, r9	@ movhi
 414              	.LVL56:
 415 006e 3046     		mov	r0, r6	@ movhi
 416              	.LVL57:
ARM GAS  /tmp/ccJH4gbL.s 			page 28


 417 0070 019C     		ldr	r4, [sp, #4]
 418 0072 A047     		blx	r4
 419              	.LVL58:
 907:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 420              		.loc 1 907 0
 421 0074 4FF0000B 		mov	fp, #0
 422 0078 CDF804B0 		str	fp, [sp, #4]
 423              	.LVL59:
 424 007c A346     		mov	fp, r4
 425 007e 28E0     		b	.L37
 426              	.LVL60:
 427              	.L34:
 428              	.LBE109:
 893:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 429              		.loc 1 893 0
 430 0080 454B     		ldr	r3, .L62+4
 431              	.LVL61:
 432 0082 0193     		str	r3, [sp, #4]
 894:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         default:
 433              		.loc 1 894 0
 434 0084 EAE7     		b	.L33
 435              	.LVL62:
 436              	.L52:
 890:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 437              		.loc 1 890 0
 438 0086 454B     		ldr	r3, .L62+8
 439              	.LVL63:
 440 0088 0193     		str	r3, [sp, #4]
 441 008a E7E7     		b	.L33
 442              	.LVL64:
 443              	.L38:
 444              	.LBB110:
 910:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_src_color = src_buf[x];
 445              		.loc 1 910 0
 446 008c 37F80590 		ldrh	r9, [r7, r5]
 447              	.LVL65:
 911:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(last_src_color, last_dest_color, opa);
 448              		.loc 1 911 0
 449 0090 0E88     		ldrh	r6, [r1]
 450              	.LVL66:
 912:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 451              		.loc 1 912 0
 452 0092 009A     		ldr	r2, [sp]
 453              	.LVL67:
 454 0094 4946     		mov	r1, r9	@ movhi
 455              	.LVL68:
 456 0096 3046     		mov	r0, r6	@ movhi
 457              	.LVL69:
 458 0098 D847     		blx	fp
 459              	.LVL70:
 460              	.L39:
 914:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 461              		.loc 1 914 0 discriminator 2
 462 009a 7853     		strh	r0, [r7, r5]	@ movhi
 908:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 463              		.loc 1 908 0 discriminator 2
 464 009c 0134     		adds	r4, r4, #1
ARM GAS  /tmp/ccJH4gbL.s 			page 29


 465              	.LVL71:
 466              	.L41:
 908:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 467              		.loc 1 908 0 is_stmt 0 discriminator 1
 468 009e 5445     		cmp	r4, r10
 469 00a0 0EDA     		bge	.L59
 909:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 470              		.loc 1 909 0 is_stmt 1
 471 00a2 B3B2     		uxth	r3, r6
 472 00a4 6500     		lsls	r5, r4, #1
 473 00a6 08EB0501 		add	r1, r8, r5
 474 00aa 38F81420 		ldrh	r2, [r8, r4, lsl #1]
 475 00ae 9342     		cmp	r3, r2
 476 00b0 ECD1     		bne	.L38
 909:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 477              		.loc 1 909 0 is_stmt 0 discriminator 1
 478 00b2 1FFA89F3 		uxth	r3, r9
 479 00b6 37F81420 		ldrh	r2, [r7, r4, lsl #1]
 480 00ba 9342     		cmp	r3, r2
 481 00bc E6D1     		bne	.L38
 482 00be ECE7     		b	.L39
 483              	.L59:
 916:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 484              		.loc 1 916 0 is_stmt 1 discriminator 2
 485 00c0 039B     		ldr	r3, [sp, #12]
 486 00c2 07EB4307 		add	r7, r7, r3, lsl #1
 487              	.LVL72:
 917:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 488              		.loc 1 917 0 discriminator 2
 489 00c6 049B     		ldr	r3, [sp, #16]
 490 00c8 08EB4308 		add	r8, r8, r3, lsl #1
 491              	.LVL73:
 907:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 492              		.loc 1 907 0 discriminator 2
 493 00cc 019B     		ldr	r3, [sp, #4]
 494 00ce 0133     		adds	r3, r3, #1
 495 00d0 0193     		str	r3, [sp, #4]
 496              	.LVL74:
 497              	.L37:
 907:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 498              		.loc 1 907 0 is_stmt 0 discriminator 1
 499 00d2 019B     		ldr	r3, [sp, #4]
 500 00d4 029A     		ldr	r2, [sp, #8]
 501 00d6 9342     		cmp	r3, r2
 502 00d8 BBDA     		bge	.L31
 908:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 503              		.loc 1 908 0 is_stmt 1
 504 00da 0024     		movs	r4, #0
 505 00dc DFE7     		b	.L41
 506              	.LVL75:
 507              	.L36:
 508              	.LBE110:
 509              	.LBB111:
 922:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = src_buf[0];
 510              		.loc 1 922 0
 511 00de B7F80090 		ldrh	r9, [r7]
 923:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t last_opa = mask[0] >= LV_OPA_MAX ? opa : ((opa * mask[0]) >> 8);
ARM GAS  /tmp/ccJH4gbL.s 			page 30


 512              		.loc 1 923 0
 513 00e2 B8F80060 		ldrh	r6, [r8]
 924:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 514              		.loc 1 924 0
 515 00e6 149B     		ldr	r3, [sp, #80]
 516 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517 00ea FC2B     		cmp	r3, #252
 518 00ec 04D8     		bhi	.L54
 924:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 519              		.loc 1 924 0 is_stmt 0 discriminator 1
 520 00ee 009A     		ldr	r2, [sp]
 521 00f0 03FB02F3 		mul	r3, r3, r2
 522 00f4 1B0A     		lsrs	r3, r3, #8
 523 00f6 00E0     		b	.L43
 524              	.L54:
 924:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 525              		.loc 1 924 0
 526 00f8 009B     		ldr	r3, [sp]
 527              	.L43:
 528              	.LVL76:
 925:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 529              		.loc 1 925 0 is_stmt 1 discriminator 4
 530 00fa 1C46     		mov	r4, r3
 531 00fc 1A46     		mov	r2, r3
 532              	.LVL77:
 533 00fe 4946     		mov	r1, r9	@ movhi
 534              	.LVL78:
 535 0100 3046     		mov	r0, r6	@ movhi
 536              	.LVL79:
 537 0102 019B     		ldr	r3, [sp, #4]
 538              	.LVL80:
 539 0104 9847     		blx	r3
 540              	.LVL81:
 926:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 541              		.loc 1 926 0 discriminator 4
 542 0106 0023     		movs	r3, #0
 543 0108 0693     		str	r3, [sp, #24]
 544 010a 2246     		mov	r2, r4
 545 010c ADF81690 		strh	r9, [sp, #22]	@ movhi
 546 0110 DDF850B0 		ldr	fp, [sp, #80]
 547 0114 37E0     		b	.L44
 548              	.LVL82:
 549              	.L55:
 550              	.LBB112:
 929:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 551              		.loc 1 929 0
 552 0116 009C     		ldr	r4, [sp]
 553              	.L46:
 554              	.LVL83:
 930:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 555              		.loc 1 930 0 discriminator 4
 556 0118 B3B2     		uxth	r3, r6
 557 011a 08EB490C 		add	ip, r8, r9, lsl #1
 558 011e 38F81910 		ldrh	r1, [r8, r9, lsl #1]
 559 0122 8B42     		cmp	r3, r1
 560 0124 1BD0     		beq	.L60
 561              	.L47:
ARM GAS  /tmp/ccJH4gbL.s 			page 31


 931:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_src_color = src_buf[x];
 562              		.loc 1 931 0
 563 0126 37F81910 		ldrh	r1, [r7, r9, lsl #1]
 564              	.LVL84:
 565 012a ADF81610 		strh	r1, [sp, #22]	@ movhi
 932:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_opa = opa_tmp;
 566              		.loc 1 932 0
 567 012e BCF80060 		ldrh	r6, [ip]
 568              	.LVL85:
 934:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 569              		.loc 1 934 0
 570 0132 2246     		mov	r2, r4
 571              	.LVL86:
 572 0134 3046     		mov	r0, r6	@ movhi
 573              	.LVL87:
 574 0136 019B     		ldr	r3, [sp, #4]
 575 0138 9847     		blx	r3
 576              	.LVL88:
 933:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 577              		.loc 1 933 0
 578 013a 2246     		mov	r2, r4
 579              	.LVL89:
 580              	.L48:
 936:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 581              		.loc 1 936 0
 582 013c 27F81900 		strh	r0, [r7, r9, lsl #1]	@ movhi
 583              	.LVL90:
 584              	.L45:
 585              	.LBE112:
 927:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 586              		.loc 1 927 0 discriminator 2
 587 0140 0135     		adds	r5, r5, #1
 588              	.LVL91:
 589              	.L50:
 927:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 590              		.loc 1 927 0 is_stmt 0 discriminator 1
 591 0142 5545     		cmp	r5, r10
 592 0144 14DA     		bge	.L61
 593              	.LBB113:
 928:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 594              		.loc 1 928 0 is_stmt 1
 595 0146 A946     		mov	r9, r5
 596              	.LVL92:
 597 0148 1BF80540 		ldrb	r4, [fp, r5]	@ zero_extendqisi2
 598 014c 002C     		cmp	r4, #0
 599 014e F7D0     		beq	.L45
 929:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 600              		.loc 1 929 0
 601 0150 FC2C     		cmp	r4, #252
 602 0152 E0D8     		bhi	.L55
 929:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 603              		.loc 1 929 0 is_stmt 0 discriminator 1
 604 0154 009B     		ldr	r3, [sp]
 605 0156 04FB03F4 		mul	r4, r4, r3
 606 015a 240A     		lsrs	r4, r4, #8
 607 015c DCE7     		b	.L46
 608              	.LVL93:
ARM GAS  /tmp/ccJH4gbL.s 			page 32


 609              	.L60:
 930:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 610              		.loc 1 930 0 is_stmt 1 discriminator 1
 611 015e BDF81630 		ldrh	r3, [sp, #22]
 612 0162 37F81910 		ldrh	r1, [r7, r9, lsl #1]
 613 0166 8B42     		cmp	r3, r1
 614 0168 DDD1     		bne	.L47
 930:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 615              		.loc 1 930 0 is_stmt 0 discriminator 2
 616 016a A242     		cmp	r2, r4
 617 016c DBD1     		bne	.L47
 618 016e E5E7     		b	.L48
 619              	.LVL94:
 620              	.L61:
 621              	.LBE113:
 938:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 622              		.loc 1 938 0 is_stmt 1 discriminator 2
 623 0170 039B     		ldr	r3, [sp, #12]
 624 0172 07EB4307 		add	r7, r7, r3, lsl #1
 625              	.LVL95:
 939:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 626              		.loc 1 939 0 discriminator 2
 627 0176 049B     		ldr	r3, [sp, #16]
 628 0178 08EB4308 		add	r8, r8, r3, lsl #1
 629              	.LVL96:
 940:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 630              		.loc 1 940 0 discriminator 2
 631 017c 079B     		ldr	r3, [sp, #28]
 632 017e 9B44     		add	fp, fp, r3
 633              	.LVL97:
 926:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 634              		.loc 1 926 0 discriminator 2
 635 0180 069B     		ldr	r3, [sp, #24]
 636 0182 0133     		adds	r3, r3, #1
 637 0184 0693     		str	r3, [sp, #24]
 638              	.LVL98:
 639              	.L44:
 926:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 640              		.loc 1 926 0 is_stmt 0 discriminator 1
 641 0186 069B     		ldr	r3, [sp, #24]
 642 0188 0299     		ldr	r1, [sp, #8]
 643 018a 8B42     		cmp	r3, r1
 644 018c BFF661AF 		bge	.L31
 927:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 645              		.loc 1 927 0 is_stmt 1
 646 0190 0025     		movs	r5, #0
 647 0192 D6E7     		b	.L50
 648              	.L63:
 649              		.align	2
 650              	.L62:
 651 0194 00000000 		.word	color_blend_true_color_additive
 652 0198 00000000 		.word	color_blend_true_color_multiply
 653 019c 00000000 		.word	color_blend_true_color_subtractive
 654              	.LBE111:
 655              		.cfi_endproc
 656              	.LFE166:
 658              		.section	.text.color_blend_true_color_additive,"ax",%progbits
ARM GAS  /tmp/ccJH4gbL.s 			page 33


 659              		.align	1
 660              		.syntax unified
 661              		.thumb
 662              		.thumb_func
 663              		.fpu fpv5-d16
 665              	color_blend_true_color_additive:
 666              	.LFB167:
 944:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 945:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa
 946:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 667              		.loc 1 946 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671              		@ link register save eliminated.
 672              	.LVL99:
 947:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 948:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 673              		.loc 1 948 0
 674 0000 022A     		cmp	r2, #2
 675 0002 37D9     		bls	.L71
 946:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 676              		.loc 1 946 0
 677 0004 10B4     		push	{r4}
 678              	.LCFI8:
 679              		.cfi_def_cfa_offset 4
 680              		.cfi_offset 4, -4
 949:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 950:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     uint32_t tmp;
 951:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 1
 952:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.full + fg.full;
 953:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.full = LV_MIN(tmp, 1);
 954:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 955:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.red + fg.ch.red;
 681              		.loc 1 955 0
 682 0006 C1F3C423 		ubfx	r3, r1, #11, #5
 683 000a C0F3C424 		ubfx	r4, r0, #11, #5
 684 000e 2344     		add	r3, r3, r4
 685              	.LVL100:
 956:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 957:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = LV_MIN(tmp, 7);
 958:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 959:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = LV_MIN(tmp, 31);
 686              		.loc 1 959 0
 687 0010 1F2B     		cmp	r3, #31
 688 0012 28BF     		it	cs
 689 0014 1F23     		movcs	r3, #31
 690              	.LVL101:
 691 0016 63F3CF20 		bfi	r0, r3, #11, #5
 960:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 961:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = LV_MIN(tmp, 255);
 962:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 963:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 964:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 965:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 966:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = LV_MIN(tmp, 7);
 967:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
ARM GAS  /tmp/ccJH4gbL.s 			page 34


 968:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_16_SWAP == 0
 969:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 692              		.loc 1 969 0
 693 001a C1F34513 		ubfx	r3, r1, #5, #6
 694 001e C0F34514 		ubfx	r4, r0, #5, #6
 695              	.LVL102:
 696 0022 2344     		add	r3, r3, r4
 697              	.LVL103:
 970:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = LV_MIN(tmp, 63);
 698              		.loc 1 970 0
 699 0024 3F2B     		cmp	r3, #63
 700 0026 28BF     		it	cs
 701 0028 3F23     		movcs	r3, #63
 702              	.LVL104:
 703 002a 63F34A10 		bfi	r0, r3, #5, #6
 971:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 972:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = (bg.ch.green_h << 3) + bg.ch.green_l + (fg.ch.green_h << 3) + fg.ch.green_l;
 973:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = LV_MIN(tmp, 63);
 974:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green_h = tmp >> 3;
 975:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green_l = tmp & 0x7;
 976:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 977:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 978:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 979:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 980:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = LV_MIN(tmp, 255);
 981:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 982:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 983:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.blue + fg.ch.blue;
 704              		.loc 1 983 0
 705 002e 01F01F03 		and	r3, r1, #31
 706 0032 00F01F04 		and	r4, r0, #31
 707              	.LVL105:
 708 0036 2344     		add	r3, r3, r4
 709              	.LVL106:
 984:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 985:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 4);
 986:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 987:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 31);
 710              		.loc 1 987 0
 711 0038 1F2B     		cmp	r3, #31
 712 003a 28BF     		it	cs
 713 003c 1F23     		movcs	r3, #31
 714              	.LVL107:
 715 003e 63F30400 		bfi	r0, r3, #0, #5
 988:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 989:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 255);
 990:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 991:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 992:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 993:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 716              		.loc 1 993 0
 717 0042 FF2A     		cmp	r2, #255
 718 0044 13D0     		beq	.L66
 719              	.LVL108:
 720              	.LBB114:
 721              	.LBB115:
 722              		.file 3 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h"
ARM GAS  /tmp/ccJH4gbL.s 			page 35


   1:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /**
   2:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * @file lv_color.h
   3:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *
   4:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  */
   5:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
   6:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_H
   8:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
   9:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef __cplusplus
  10:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** extern "C" {
  11:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  12:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  13:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  14:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *      INCLUDES
  15:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  16:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_assert.h"
  18:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_math.h"
  19:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_types.h"
  20:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  21:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /*Error checking*/
  22:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  25:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  26:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  27:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  28:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  29:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  30:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #include <stdint.h>
  31:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  32:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  33:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *      DEFINES
  34:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  35:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  36:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  37:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  38:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  39:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * Opacity percentages.
  40:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  */
  41:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** enum {
  42:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  43:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_0      = 0,
  44:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_10     = 25,
  45:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_20     = 51,
  46:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_30     = 76,
  47:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_40     = 102,
  48:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_50     = 127,
  49:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_60     = 153,
  50:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_70     = 178,
  51:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_80     = 204,
  52:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_90     = 229,
  53:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_100    = 255,
  54:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  55:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** };
  56:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  57:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
ARM GAS  /tmp/ccJH4gbL.s 			page 36


  58:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  59:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  60:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  61:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  62:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  63:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  64:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  65:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  66:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  67:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  68:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  69:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  70:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  71:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  72:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  73:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  74:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  75:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  76:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  77:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** */
  78:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef _MSC_VER
  79:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  80:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  81:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  82:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  83:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if __cplusplus >= 201103L
  84:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  86:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  87:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif /*__cplusplus*/
  88:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  89:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  90:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  91:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  92:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
  93:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  94:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  95:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
  96:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  97:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
  98:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  99:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 100:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
 101:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for all existing color depths
 102:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
 103:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 104:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 105:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 106:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 107:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 108:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 109:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 110:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 111:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 112:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 113:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 114:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
ARM GAS  /tmp/ccJH4gbL.s 			page 37


 115:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 116:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 117:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 118:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 119:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 120:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 121:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 122:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 123:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 124:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 125:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 126:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 127:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 128:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 129:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 130:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 134:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 136:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 139:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 140:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 143:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 144:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 145:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 146:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 148:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 149:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 150:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 151:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 152:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 153:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 154:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 155:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 156:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 157:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 158:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 159:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 160:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 161:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 162:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 163:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 164:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 165:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 166:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 167:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 168:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 169:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
 170:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for the current color depth
 171:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
ARM GAS  /tmp/ccJH4gbL.s 			page 38


 172:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 173:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 174:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 175:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 176:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 177:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 178:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 179:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 180:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 181:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 182:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 183:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 184:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 185:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 186:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 187:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *      TYPEDEFS
 188:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 189:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 190:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 191:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 192:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     union {
 193:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 1;
 194:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 1;
 195:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 1;
 196:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 197:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color1_t;
 198:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 199:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 200:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 201:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 2;
 202:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 3;
 203:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 3;
 204:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 205:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full;
 206:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color8_t;
 207:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 208:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 209:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 210:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 211:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 212:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green : 6;
 213:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 214:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 215:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_h : 3;
 216:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 217:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 218:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_l : 3;
 219:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 220:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 221:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t full;
 222:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color16_t;
 223:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 224:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 225:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 226:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue;
 227:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green;
 228:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red;
ARM GAS  /tmp/ccJH4gbL.s 			page 39


 229:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t alpha;
 230:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 231:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t full;
 232:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color32_t;
 233:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 234:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 235:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 236:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 237:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct {
 238:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t h;
 239:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t s;
 240:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t v;
 241:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_hsv_t;
 242:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 243:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 244:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 245:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 246:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** //! @endcond
 247:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 248:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 249:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 250:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 251:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 252:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 253:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 254:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     void * user_data;
 255:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_filter_dsc_t;
 256:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 257:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 258:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** typedef enum {
 259:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_RED,
 260:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PINK,
 261:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 262:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 263:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 264:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE,
 265:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 266:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_CYAN,
 267:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_TEAL,
 268:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREEN,
 269:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 270:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIME,
 271:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 272:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_AMBER,
 273:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 274:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 275:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BROWN,
 276:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 277:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREY,
 278:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     _LV_PALETTE_LAST,
 279:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 280:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_palette_t;
 281:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 282:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 283:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 284:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 285:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
ARM GAS  /tmp/ccJH4gbL.s 			page 40


 286:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /*In color conversations:
 287:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 288:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 289:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *         8 bit Red has 3 bits
 290:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 291:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 292:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *
 293:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 294:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 295:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *        16 bit Red has 5 bits
 296:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 297:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 298:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 299:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 300:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** {
 301:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 302:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 303:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 304:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 305:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 306:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 307:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 308:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 309:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 310:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 311:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 312:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 313:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 314:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 315:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 316:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 317:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 318:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 319:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 320:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 321:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 322:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 323:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 324:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 325:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** }
 326:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 327:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 328:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** {
 329:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 330:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 331:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 332:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 333:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF;
 334:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 335:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 336:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 337:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 338:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 339:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 340:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 341:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 342:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
ARM GAS  /tmp/ccJH4gbL.s 			page 41


 343:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 344:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 345:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 346:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 347:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 348:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 349:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** }
 350:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 351:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 352:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** {
 353:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 354:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 355:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 356:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 357:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFF;
 358:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 359:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 360:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 361:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 362:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 363:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 364:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 365:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 366:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 367:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 368:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 369:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 370:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 371:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 372:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 373:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** }
 374:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 375:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 376:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** {
 377:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 378:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 379:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF000000;
 380:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 381:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFFFFFF;
 382:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 383:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
 384:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 385:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 386:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 387:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 388:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 389:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 390:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     /**
 391:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      * The floating point math for conversion is:
 392:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 393:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      * The faster integer math for conversion is:
 394:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 395:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 396:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 397:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 398:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 399:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
ARM GAS  /tmp/ccJH4gbL.s 			page 42


 400:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 401:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           8      7        7       255
 402:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1          16     14        7       255
 403:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          32     28        7       255
 404:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          65     25        3       255
 405:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4         131     19        1       255
 406:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         263      7        0       255
 407:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 408:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 409:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 410:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           4      3        3       255
 411:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1           8      6        3       255
 412:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          16     12        3       255
 413:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          32     24        3       255
 414:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4          64     48        3       255
 415:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         129     33        1       255
 416:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      *       6         259      3        0       255
 417:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****      */
 418:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 419:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
 420:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 421:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 422:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 423:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 424:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 425:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 426:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 427:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 428:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** }
 429:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 430:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 431:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 432:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 433:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors with a given ratio.
 434:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 435:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 436:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 437:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the mixed color
 438:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 439:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 440:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** {
 441:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t ret;
 442:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 443:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_MIX_ROUND_OFS == 0
 444:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 445:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     c1.full = c1.full << 8 | c1.full >> 8;
 446:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     c2.full = c2.full << 8 | c2.full >> 8;
 447:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 448:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     mix = (uint32_t)((uint32_t)mix + 4) >> 3;
 723              		.loc 3 449 0
 724 0046 0432     		adds	r2, r2, #4
 725              	.LVL109:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 726              		.loc 3 450 0
 727 0048 89B2     		uxth	r1, r1
 728              	.LVL110:
ARM GAS  /tmp/ccJH4gbL.s 			page 43


 729 004a 41EA0141 		orr	r1, r1, r1, lsl #16
 730 004e 0A4C     		ldr	r4, .L72
 731 0050 01EA0403 		and	r3, r1, r4
 732              	.LVL111:
 451:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
 733              		.loc 3 452 0
 734 0054 80B2     		uxth	r0, r0
 735              	.LVL112:
 736 0056 40EA0040 		orr	r0, r0, r0, lsl #16
 737 005a 2040     		ands	r0, r0, r4
 738              	.LVL113:
 453:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 739              		.loc 3 453 0
 740 005c C01A     		subs	r0, r0, r3
 741              	.LVL114:
 742 005e D208     		lsrs	r2, r2, #3
 743              	.LVL115:
 744 0060 00FB02F0 		mul	r0, r0, r2
 745 0064 03EB5010 		add	r0, r3, r0, lsr #5
 746 0068 2040     		ands	r0, r0, r4
 747              	.LVL116:
 748 006a 40EA1040 		orr	r0, r0, r0, lsr #16
 749              	.LVL117:
 750              	.L66:
 751              	.LVL118:
 752              	.LBE115:
 753              	.LBE114:
 994:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 995:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     return lv_color_mix(fg, bg, opa);
 996:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 754              		.loc 1 996 0
 755 006e 5DF8044B 		ldr	r4, [sp], #4
 756              	.LCFI9:
 757              		.cfi_restore 4
 758              		.cfi_def_cfa_offset 0
 759 0072 7047     		bx	lr
 760              	.LVL119:
 761              	.L71:
 948:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 762              		.loc 1 948 0 discriminator 1
 763 0074 0846     		mov	r0, r1	@ movhi
 764              	.LVL120:
 765              		.loc 1 996 0 discriminator 1
 766 0076 7047     		bx	lr
 767              	.L73:
 768              		.align	2
 769              	.L72:
 770 0078 1FF8E007 		.word	132184095
 771              		.cfi_endproc
 772              	.LFE167:
 774              		.section	.text.color_blend_true_color_subtractive,"ax",%progbits
 775              		.align	1
 776              		.syntax unified
 777              		.thumb
 778              		.thumb_func
 779              		.fpu fpv5-d16
ARM GAS  /tmp/ccJH4gbL.s 			page 44


 781              	color_blend_true_color_subtractive:
 782              	.LFB168:
 997:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 998:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t 
 999:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 783              		.loc 1 999 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              		@ link register save eliminated.
 788              	.LVL121:
1000:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 789              		.loc 1 1000 0
 790 0000 022A     		cmp	r2, #2
 791 0002 34D9     		bls	.L81
 999:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 792              		.loc 1 999 0
 793 0004 10B4     		push	{r4}
 794              	.LCFI10:
 795              		.cfi_def_cfa_offset 4
 796              		.cfi_offset 4, -4
1001:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1002:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t tmp;
1003:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.red - fg.ch.red;
 797              		.loc 1 1003 0
 798 0006 C1F3C423 		ubfx	r3, r1, #11, #5
 799 000a C0F3C424 		ubfx	r4, r0, #11, #5
 800 000e 1B1B     		subs	r3, r3, r4
 801              	.LVL122:
1004:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = LV_MAX(tmp, 0);
 802              		.loc 1 1004 0
 803 0010 23EAE373 		bic	r3, r3, r3, asr #31
 804              	.LVL123:
 805 0014 63F3CF20 		bfi	r0, r3, #11, #5
1005:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1006:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_16_SWAP == 0
1007:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.green - fg.ch.green;
 806              		.loc 1 1007 0
 807 0018 C1F34513 		ubfx	r3, r1, #5, #6
 808 001c C0F34514 		ubfx	r4, r0, #5, #6
 809              	.LVL124:
 810 0020 1B1B     		subs	r3, r3, r4
 811              	.LVL125:
1008:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = LV_MAX(tmp, 0);
 812              		.loc 1 1008 0
 813 0022 23EAE373 		bic	r3, r3, r3, asr #31
 814              	.LVL126:
 815 0026 63F34A10 		bfi	r0, r3, #5, #6
1009:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
1010:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = (bg.ch.green_h << 3) + bg.ch.green_l + (fg.ch.green_h << 3) + fg.ch.green_l;
1011:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = LV_MAX(tmp, 0);
1012:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green_h = tmp >> 3;
1013:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green_l = tmp & 0x7;
1014:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
1015:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1016:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.blue - fg.ch.blue;
 816              		.loc 1 1016 0
ARM GAS  /tmp/ccJH4gbL.s 			page 45


 817 002a 01F01F03 		and	r3, r1, #31
 818 002e 00F01F04 		and	r4, r0, #31
 819              	.LVL127:
 820 0032 1B1B     		subs	r3, r3, r4
 821              	.LVL128:
1017:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = LV_MAX(tmp, 0);
 822              		.loc 1 1017 0
 823 0034 23EAE373 		bic	r3, r3, r3, asr #31
 824              	.LVL129:
 825 0038 63F30400 		bfi	r0, r3, #0, #5
1018:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1019:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 826              		.loc 1 1019 0
 827 003c FF2A     		cmp	r2, #255
 828 003e 13D0     		beq	.L76
 829              	.LVL130:
 830              	.LBB116:
 831              	.LBB117:
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 832              		.loc 3 449 0
 833 0040 0432     		adds	r2, r2, #4
 834              	.LVL131:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 835              		.loc 3 450 0
 836 0042 89B2     		uxth	r1, r1
 837              	.LVL132:
 838 0044 41EA0141 		orr	r1, r1, r1, lsl #16
 839 0048 0A4C     		ldr	r4, .L82
 840 004a 01EA0403 		and	r3, r1, r4
 841              	.LVL133:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 842              		.loc 3 452 0
 843 004e 80B2     		uxth	r0, r0
 844              	.LVL134:
 845 0050 40EA0040 		orr	r0, r0, r0, lsl #16
 846 0054 2040     		ands	r0, r0, r4
 847              	.LVL135:
 848              		.loc 3 453 0
 849 0056 C01A     		subs	r0, r0, r3
 850              	.LVL136:
 851 0058 D208     		lsrs	r2, r2, #3
 852              	.LVL137:
 853 005a 00FB02F0 		mul	r0, r0, r2
 854 005e 03EB5010 		add	r0, r3, r0, lsr #5
 855 0062 2040     		ands	r0, r0, r4
 856              	.LVL138:
 857 0064 40EA1040 		orr	r0, r0, r0, lsr #16
 858              	.LVL139:
 859              	.L76:
 860              	.LVL140:
 861              	.LBE117:
 862              	.LBE116:
1020:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1021:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     return lv_color_mix(fg, bg, opa);
1022:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 863              		.loc 1 1022 0
 864 0068 5DF8044B 		ldr	r4, [sp], #4
ARM GAS  /tmp/ccJH4gbL.s 			page 46


 865              	.LCFI11:
 866              		.cfi_restore 4
 867              		.cfi_def_cfa_offset 0
 868 006c 7047     		bx	lr
 869              	.LVL141:
 870              	.L81:
1000:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 871              		.loc 1 1000 0 discriminator 1
 872 006e 0846     		mov	r0, r1	@ movhi
 873              	.LVL142:
 874              		.loc 1 1022 0 discriminator 1
 875 0070 7047     		bx	lr
 876              	.L83:
 877 0072 00BF     		.align	2
 878              	.L82:
 879 0074 1FF8E007 		.word	132184095
 880              		.cfi_endproc
 881              	.LFE168:
 883              		.section	.text.color_blend_true_color_multiply,"ax",%progbits
 884              		.align	1
 885              		.syntax unified
 886              		.thumb
 887              		.thumb_func
 888              		.fpu fpv5-d16
 890              	color_blend_true_color_multiply:
 891              	.LFB169:
1023:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1024:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_multiply(lv_color_t fg, lv_color_t bg, lv_opa_t opa
1025:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 892              		.loc 1 1025 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 0
 895              		@ frame_needed = 0, uses_anonymous_args = 0
 896              		@ link register save eliminated.
 897              	.LVL143:
1026:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 898              		.loc 1 1026 0
 899 0000 022A     		cmp	r2, #2
 900 0002 34D9     		bls	.L91
1025:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 901              		.loc 1 1025 0
 902 0004 10B4     		push	{r4}
 903              	.LCFI12:
 904              		.cfi_def_cfa_offset 4
 905              		.cfi_offset 4, -4
1027:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1028:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 32
1029:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = (fg.ch.red * bg.ch.red) >> 8;
1030:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = (fg.ch.green * bg.ch.green) >> 8;
1031:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = (fg.ch.blue * bg.ch.blue) >> 8;
1032:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
1033:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = (fg.ch.red * bg.ch.red) >> 5;
 906              		.loc 1 1033 0
 907 0006 C0F3C424 		ubfx	r4, r0, #11, #5
 908 000a C1F3C423 		ubfx	r3, r1, #11, #5
 909 000e 03FB04F3 		mul	r3, r3, r4
 910 0012 5B09     		lsrs	r3, r3, #5
ARM GAS  /tmp/ccJH4gbL.s 			page 47


 911 0014 63F3CF20 		bfi	r0, r3, #11, #5
1034:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = (fg.ch.blue * bg.ch.blue) >> 5;
 912              		.loc 1 1034 0
 913 0018 00F01F04 		and	r4, r0, #31
 914 001c 01F01F03 		and	r3, r1, #31
 915 0020 03FB04F3 		mul	r3, r3, r4
 916 0024 5B09     		lsrs	r3, r3, #5
 917 0026 63F30400 		bfi	r0, r3, #0, #5
1035:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     LV_COLOR_SET_G(fg, (LV_COLOR_GET_G(fg) * LV_COLOR_GET_G(bg)) >> 6);
 918              		.loc 1 1035 0
 919 002a C0F34514 		ubfx	r4, r0, #5, #6
 920 002e C1F34513 		ubfx	r3, r1, #5, #6
 921 0032 03FB04F3 		mul	r3, r3, r4
 922 0036 9B09     		lsrs	r3, r3, #6
 923 0038 63F34A10 		bfi	r0, r3, #5, #6
1036:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 8
1037:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = (fg.ch.red * bg.ch.red) >> 3;
1038:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = (fg.ch.green * bg.ch.green) >> 3;
1039:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = (fg.ch.blue * bg.ch.blue) >> 2;
1040:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
1041:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1042:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 924              		.loc 1 1042 0
 925 003c FF2A     		cmp	r2, #255
 926 003e 13D0     		beq	.L86
 927              	.LVL144:
 928              	.LBB118:
 929              	.LBB119:
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 930              		.loc 3 449 0
 931 0040 0432     		adds	r2, r2, #4
 932              	.LVL145:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 933              		.loc 3 450 0
 934 0042 89B2     		uxth	r1, r1
 935              	.LVL146:
 936 0044 41EA0141 		orr	r1, r1, r1, lsl #16
 937 0048 0A4C     		ldr	r4, .L92
 938 004a 01EA0403 		and	r3, r1, r4
 939              	.LVL147:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 940              		.loc 3 452 0
 941 004e 80B2     		uxth	r0, r0
 942              	.LVL148:
 943 0050 40EA0040 		orr	r0, r0, r0, lsl #16
 944 0054 2040     		ands	r0, r0, r4
 945              	.LVL149:
 946              		.loc 3 453 0
 947 0056 C01A     		subs	r0, r0, r3
 948              	.LVL150:
 949 0058 D208     		lsrs	r2, r2, #3
 950              	.LVL151:
 951 005a 00FB02F0 		mul	r0, r0, r2
 952 005e 03EB5010 		add	r0, r3, r0, lsr #5
 953 0062 2040     		ands	r0, r0, r4
 954              	.LVL152:
 955 0064 40EA1040 		orr	r0, r0, r0, lsr #16
ARM GAS  /tmp/ccJH4gbL.s 			page 48


 956              	.LVL153:
 957              	.L86:
 958              	.LVL154:
 959              	.LBE119:
 960              	.LBE118:
1043:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1044:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     return lv_color_mix(fg, bg, opa);
1045:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 961              		.loc 1 1045 0
 962 0068 5DF8044B 		ldr	r4, [sp], #4
 963              	.LCFI13:
 964              		.cfi_restore 4
 965              		.cfi_def_cfa_offset 0
 966 006c 7047     		bx	lr
 967              	.LVL155:
 968              	.L91:
1026:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 969              		.loc 1 1026 0 discriminator 1
 970 006e 0846     		mov	r0, r1	@ movhi
 971              	.LVL156:
 972              		.loc 1 1045 0 discriminator 1
 973 0070 7047     		bx	lr
 974              	.L93:
 975 0072 00BF     		.align	2
 976              	.L92:
 977 0074 1FF8E007 		.word	132184095
 978              		.cfi_endproc
 979              	.LFE169:
 981              		.section	.text.fill_set_px,"ax",%progbits
 982              		.align	1
 983              		.syntax unified
 984              		.thumb
 985              		.thumb_func
 986              		.fpu fpv5-d16
 988              	fill_set_px:
 989              	.LFB161:
 209:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 990              		.loc 1 209 0
 991              		.cfi_startproc
 992              		@ args = 12, pretend = 0, frame = 24
 993              		@ frame_needed = 0, uses_anonymous_args = 0
 994              	.LVL157:
 995 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 996              	.LCFI14:
 997              		.cfi_def_cfa_offset 36
 998              		.cfi_offset 4, -36
 999              		.cfi_offset 5, -32
 1000              		.cfi_offset 6, -28
 1001              		.cfi_offset 7, -24
 1002              		.cfi_offset 8, -20
 1003              		.cfi_offset 9, -16
 1004              		.cfi_offset 10, -12
 1005              		.cfi_offset 11, -8
 1006              		.cfi_offset 14, -4
 1007 0004 8BB0     		sub	sp, sp, #44
 1008              	.LCFI15:
 1009              		.cfi_def_cfa_offset 80
ARM GAS  /tmp/ccJH4gbL.s 			page 49


 1010 0006 0590     		str	r0, [sp, #20]
 1011 0008 0D46     		mov	r5, r1
 1012 000a 0692     		str	r2, [sp, #24]
 1013 000c 9A46     		mov	r10, r3	@ movhi
 1014 000e 9DF850B0 		ldrb	fp, [sp, #80]	@ zero_extendqisi2
 1015 0012 DDF85480 		ldr	r8, [sp, #84]
 1016 0016 BDF95830 		ldrsh	r3, [sp, #88]
 1017              	.LVL158:
 1018 001a 0993     		str	r3, [sp, #36]
 210:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1019              		.loc 1 210 0
 1020 001c FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 1021              	.LVL159:
 1022 0020 8146     		mov	r9, r0
 1023              	.LVL160:
 215:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = blend_area->y1; y <= blend_area->y2; y++) {
 1024              		.loc 1 215 0
 1025 0022 B8F1000F 		cmp	r8, #0
 1026 0026 10D0     		beq	.L107
 1027              	.LVL161:
 1028              	.LBB120:
 1029              	.LBB121:
 1030              	.LBB122:
 125:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1031              		.loc 2 125 0
 1032 0028 AB88     		ldrh	r3, [r5, #4]
 1033 002a 2A88     		ldrh	r2, [r5]
 1034 002c 9B1A     		subs	r3, r3, r2
 1035 002e 9BB2     		uxth	r3, r3
 1036 0030 0133     		adds	r3, r3, #1
 1037 0032 19B2     		sxth	r1, r3
 1038              	.LVL162:
 1039              	.LBE122:
 1040              	.LBE121:
 1041              	.LBB123:
 1042              	.LBB124:
 1043              		.loc 2 135 0
 1044 0034 EB88     		ldrh	r3, [r5, #6]
 1045 0036 6A88     		ldrh	r2, [r5, #2]
 1046 0038 9B1A     		subs	r3, r3, r2
 1047 003a 9BB2     		uxth	r3, r3
 1048 003c 0133     		adds	r3, r3, #1
 1049 003e 1BB2     		sxth	r3, r3
 1050 0040 0893     		str	r3, [sp, #32]
 1051              	.LVL163:
 1052              	.LBE124:
 1053              	.LBE123:
 226:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1054              		.loc 1 226 0
 1055 0042 0027     		movs	r7, #0
 1056 0044 0790     		str	r0, [sp, #28]
 1057 0046 8946     		mov	r9, r1
 1058 0048 3CE0     		b	.L101
 1059              	.LVL164:
 1060              	.L107:
 1061              	.LBE120:
 216:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
ARM GAS  /tmp/ccJH4gbL.s 			page 50


 1062              		.loc 1 216 0
 1063 004a B5F90270 		ldrsh	r7, [r5, #2]
 1064              	.LVL165:
 1065 004e DDF81880 		ldr	r8, [sp, #24]
 1066 0052 12E0     		b	.L96
 1067              	.LVL166:
 1068              	.L98:
 218:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1069              		.loc 1 218 0 discriminator 3
 1070 0054 D9F80000 		ldr	r0, [r9]
 1071 0058 C669     		ldr	r6, [r0, #28]
 1072 005a CDF808B0 		str	fp, [sp, #8]
 1073 005e ADF804A0 		strh	r10, [sp, #4]	@ movhi
 1074 0062 3BB2     		sxth	r3, r7
 1075 0064 0093     		str	r3, [sp]
 1076 0066 23B2     		sxth	r3, r4
 1077 0068 4246     		mov	r2, r8
 1078 006a 0599     		ldr	r1, [sp, #20]
 1079 006c B047     		blx	r6
 1080              	.LVL167:
 217:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1081              		.loc 1 217 0 discriminator 3
 1082 006e 0134     		adds	r4, r4, #1
 1083              	.LVL168:
 1084              	.L97:
 217:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1085              		.loc 1 217 0 is_stmt 0 discriminator 1
 1086 0070 B5F90430 		ldrsh	r3, [r5, #4]
 1087 0074 A342     		cmp	r3, r4
 1088 0076 EDDA     		bge	.L98
 216:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1089              		.loc 1 216 0 is_stmt 1 discriminator 2
 1090 0078 0137     		adds	r7, r7, #1
 1091              	.LVL169:
 1092              	.L96:
 216:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1093              		.loc 1 216 0 is_stmt 0 discriminator 1
 1094 007a B5F90630 		ldrsh	r3, [r5, #6]
 1095 007e BB42     		cmp	r3, r7
 1096 0080 25DB     		blt	.L94
 217:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1097              		.loc 1 217 0 is_stmt 1
 1098 0082 B5F90040 		ldrsh	r4, [r5]
 1099              	.LVL170:
 1100 0086 F3E7     		b	.L97
 1101              	.LVL171:
 1102              	.L102:
 1103              	.LBB125:
 227:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1104              		.loc 1 227 0 discriminator 2
 1105 0088 0134     		adds	r4, r4, #1
 1106              	.LVL172:
 1107              	.L104:
 227:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1108              		.loc 1 227 0 is_stmt 0 discriminator 1
 1109 008a 4C45     		cmp	r4, r9
 1110 008c 17DA     		bge	.L108
ARM GAS  /tmp/ccJH4gbL.s 			page 51


 228:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1111              		.loc 1 228 0 is_stmt 1
 1112 008e 18F80420 		ldrb	r2, [r8, r4]	@ zero_extendqisi2
 1113 0092 002A     		cmp	r2, #0
 1114 0094 F8D0     		beq	.L102
 231:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1115              		.loc 1 231 0
 1116 0096 079B     		ldr	r3, [sp, #28]
 1117 0098 1868     		ldr	r0, [r3]
 1118 009a C669     		ldr	r6, [r0, #28]
 1119 009c 2B88     		ldrh	r3, [r5]
 1120 009e 2344     		add	r3, r3, r4
 1121 00a0 6988     		ldrh	r1, [r5, #2]
 1122 00a2 3944     		add	r1, r1, r7
 232:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1123              		.loc 1 232 0
 1124 00a4 02FB0BF2 		mul	r2, r2, fp
 231:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1125              		.loc 1 231 0
 1126 00a8 120A     		lsrs	r2, r2, #8
 1127 00aa 0292     		str	r2, [sp, #8]
 1128 00ac ADF804A0 		strh	r10, [sp, #4]	@ movhi
 1129 00b0 09B2     		sxth	r1, r1
 1130 00b2 0091     		str	r1, [sp]
 1131 00b4 1BB2     		sxth	r3, r3
 1132 00b6 069A     		ldr	r2, [sp, #24]
 1133 00b8 0599     		ldr	r1, [sp, #20]
 1134 00ba B047     		blx	r6
 1135              	.LVL173:
 1136 00bc E4E7     		b	.L102
 1137              	.L108:
 235:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1138              		.loc 1 235 0 discriminator 2
 1139 00be 099B     		ldr	r3, [sp, #36]
 1140 00c0 9844     		add	r8, r8, r3
 1141              	.LVL174:
 226:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1142              		.loc 1 226 0 discriminator 2
 1143 00c2 0137     		adds	r7, r7, #1
 1144              	.LVL175:
 1145              	.L101:
 226:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1146              		.loc 1 226 0 is_stmt 0 discriminator 1
 1147 00c4 089B     		ldr	r3, [sp, #32]
 1148 00c6 9F42     		cmp	r7, r3
 1149 00c8 01DA     		bge	.L94
 227:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1150              		.loc 1 227 0 is_stmt 1
 1151 00ca 0024     		movs	r4, #0
 1152 00cc DDE7     		b	.L104
 1153              	.LVL176:
 1154              	.L94:
 1155              	.LBE125:
 238:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1156              		.loc 1 238 0
 1157 00ce 0BB0     		add	sp, sp, #44
 1158              	.LCFI16:
ARM GAS  /tmp/ccJH4gbL.s 			page 52


 1159              		.cfi_def_cfa_offset 36
 1160              		@ sp needed
 1161 00d0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1162              		.cfi_endproc
 1163              	.LFE161:
 1165              		.section	.text.map_set_px,"ax",%progbits
 1166              		.align	1
 1167              		.syntax unified
 1168              		.thumb
 1169              		.thumb_func
 1170              		.fpu fpv5-d16
 1172              	map_set_px:
 1173              	.LFB164:
 604:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1174              		.loc 1 604 0
 1175              		.cfi_startproc
 1176              		@ args = 16, pretend = 0, frame = 32
 1177              		@ frame_needed = 0, uses_anonymous_args = 0
 1178              	.LVL177:
 1179 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1180              	.LCFI17:
 1181              		.cfi_def_cfa_offset 36
 1182              		.cfi_offset 4, -36
 1183              		.cfi_offset 5, -32
 1184              		.cfi_offset 6, -28
 1185              		.cfi_offset 7, -24
 1186              		.cfi_offset 8, -20
 1187              		.cfi_offset 9, -16
 1188              		.cfi_offset 10, -12
 1189              		.cfi_offset 11, -8
 1190              		.cfi_offset 14, -4
 1191 0004 8DB0     		sub	sp, sp, #52
 1192              	.LCFI18:
 1193              		.cfi_def_cfa_offset 88
 1194 0006 0590     		str	r0, [sp, #20]
 1195 0008 0D46     		mov	r5, r1
 1196 000a 0692     		str	r2, [sp, #24]
 1197 000c 1F46     		mov	r7, r3
 1198 000e BDF95830 		ldrsh	r3, [sp, #88]
 1199              	.LVL178:
 1200 0012 0A93     		str	r3, [sp, #40]
 1201 0014 9DF85C30 		ldrb	r3, [sp, #92]	@ zero_extendqisi2
 1202 0018 0893     		str	r3, [sp, #32]
 1203 001a DDF860A0 		ldr	r10, [sp, #96]
 1204 001e BDF96430 		ldrsh	r3, [sp, #100]
 1205 0022 0B93     		str	r3, [sp, #44]
 605:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1206              		.loc 1 605 0
 1207 0024 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 1208              	.LVL179:
 1209 0028 8346     		mov	fp, r0
 1210              	.LVL180:
 1211              	.LBB126:
 1212              	.LBB127:
 125:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1213              		.loc 2 125 0
 1214 002a AE88     		ldrh	r6, [r5, #4]
ARM GAS  /tmp/ccJH4gbL.s 			page 53


 1215 002c 2B88     		ldrh	r3, [r5]
 1216 002e F61A     		subs	r6, r6, r3
 1217 0030 B6B2     		uxth	r6, r6
 1218 0032 0136     		adds	r6, r6, #1
 1219 0034 36B2     		sxth	r6, r6
 1220              	.LVL181:
 1221              	.LBE127:
 1222              	.LBE126:
 1223              	.LBB128:
 1224              	.LBB129:
 1225              		.loc 2 135 0
 1226 0036 EB88     		ldrh	r3, [r5, #6]
 1227 0038 6A88     		ldrh	r2, [r5, #2]
 1228 003a 9B1A     		subs	r3, r3, r2
 1229 003c 9BB2     		uxth	r3, r3
 1230 003e 0133     		adds	r3, r3, #1
 1231 0040 1BB2     		sxth	r3, r3
 1232 0042 0993     		str	r3, [sp, #36]
 1233              	.LVL182:
 1234              	.LBE129:
 1235              	.LBE128:
 613:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 1236              		.loc 1 613 0
 1237 0044 BAF1000F 		cmp	r10, #0
 1238 0048 23D0     		beq	.L118
 623:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1239              		.loc 1 623 0
 1240 004a 4FF00009 		mov	r9, #0
 1241 004e B046     		mov	r8, r6
 1242 0050 4CE0     		b	.L111
 1243              	.LVL183:
 1244              	.L112:
 616:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1245              		.loc 1 616 0 discriminator 3
 1246 0052 DBF80000 		ldr	r0, [fp]
 1247 0056 C669     		ldr	r6, [r0, #28]
 1248 0058 2B88     		ldrh	r3, [r5]
 1249 005a 2344     		add	r3, r3, r4
 1250 005c 6A88     		ldrh	r2, [r5, #2]
 1251 005e 4A44     		add	r2, r2, r9
 1252 0060 CDF808A0 		str	r10, [sp, #8]
 1253 0064 37F81410 		ldrh	r1, [r7, r4, lsl #1]
 1254 0068 ADF80410 		strh	r1, [sp, #4]	@ movhi
 1255 006c 12B2     		sxth	r2, r2
 1256 006e 0092     		str	r2, [sp]
 1257 0070 1BB2     		sxth	r3, r3
 1258 0072 069A     		ldr	r2, [sp, #24]
 1259 0074 0599     		ldr	r1, [sp, #20]
 1260 0076 B047     		blx	r6
 1261              	.LVL184:
 615:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 1262              		.loc 1 615 0 discriminator 3
 1263 0078 0134     		adds	r4, r4, #1
 1264              	.LVL185:
 1265              	.L113:
 615:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 1266              		.loc 1 615 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccJH4gbL.s 			page 54


 1267 007a 4445     		cmp	r4, r8
 1268 007c E9DB     		blt	.L112
 619:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1269              		.loc 1 619 0 is_stmt 1 discriminator 2
 1270 007e 0A9B     		ldr	r3, [sp, #40]
 1271 0080 07EB4307 		add	r7, r7, r3, lsl #1
 1272              	.LVL186:
 614:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1273              		.loc 1 614 0 discriminator 2
 1274 0084 09F10109 		add	r9, r9, #1
 1275              	.LVL187:
 1276              	.L110:
 614:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1277              		.loc 1 614 0 is_stmt 0 discriminator 1
 1278 0088 099B     		ldr	r3, [sp, #36]
 1279 008a 9945     		cmp	r9, r3
 1280 008c 34DA     		bge	.L109
 615:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 1281              		.loc 1 615 0 is_stmt 1
 1282 008e 0024     		movs	r4, #0
 1283 0090 F3E7     		b	.L113
 1284              	.LVL188:
 1285              	.L118:
 614:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1286              		.loc 1 614 0
 1287 0092 4FF00009 		mov	r9, #0
 1288 0096 B046     		mov	r8, r6
 1289 0098 DDF820A0 		ldr	r10, [sp, #32]
 1290 009c F4E7     		b	.L110
 1291              	.LVL189:
 1292              	.L115:
 624:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1293              		.loc 1 624 0 discriminator 2
 1294 009e 0134     		adds	r4, r4, #1
 1295              	.LVL190:
 1296              	.L117:
 624:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1297              		.loc 1 624 0 is_stmt 0 discriminator 1
 1298 00a0 4445     		cmp	r4, r8
 1299 00a2 1BDA     		bge	.L122
 625:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area-
 1300              		.loc 1 625 0 is_stmt 1
 1301 00a4 1AF80420 		ldrb	r2, [r10, r4]	@ zero_extendqisi2
 1302 00a8 002A     		cmp	r2, #0
 1303 00aa F8D0     		beq	.L115
 626:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1304              		.loc 1 626 0
 1305 00ac DBF80000 		ldr	r0, [fp]
 1306 00b0 C669     		ldr	r6, [r0, #28]
 1307 00b2 2B88     		ldrh	r3, [r5]
 1308 00b4 2344     		add	r3, r3, r4
 1309 00b6 6988     		ldrh	r1, [r5, #2]
 1310 00b8 4944     		add	r1, r1, r9
 627:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1311              		.loc 1 627 0
 1312 00ba 089F     		ldr	r7, [sp, #32]
 1313 00bc 02FB07F2 		mul	r2, r2, r7
ARM GAS  /tmp/ccJH4gbL.s 			page 55


 626:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1314              		.loc 1 626 0
 1315 00c0 120A     		lsrs	r2, r2, #8
 1316 00c2 0292     		str	r2, [sp, #8]
 1317 00c4 079A     		ldr	r2, [sp, #28]
 1318 00c6 32F81420 		ldrh	r2, [r2, r4, lsl #1]
 1319 00ca ADF80420 		strh	r2, [sp, #4]	@ movhi
 1320 00ce 09B2     		sxth	r1, r1
 1321 00d0 0091     		str	r1, [sp]
 1322 00d2 1BB2     		sxth	r3, r3
 1323 00d4 069A     		ldr	r2, [sp, #24]
 1324 00d6 0599     		ldr	r1, [sp, #20]
 1325 00d8 B047     		blx	r6
 1326              	.LVL191:
 1327 00da E0E7     		b	.L115
 1328              	.L122:
 1329 00dc 079F     		ldr	r7, [sp, #28]
 630:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 1330              		.loc 1 630 0 discriminator 2
 1331 00de 0B9B     		ldr	r3, [sp, #44]
 1332 00e0 9A44     		add	r10, r10, r3
 1333              	.LVL192:
 631:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1334              		.loc 1 631 0 discriminator 2
 1335 00e2 0A9B     		ldr	r3, [sp, #40]
 1336 00e4 07EB4307 		add	r7, r7, r3, lsl #1
 1337              	.LVL193:
 623:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1338              		.loc 1 623 0 discriminator 2
 1339 00e8 09F10109 		add	r9, r9, #1
 1340              	.LVL194:
 1341              	.L111:
 623:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1342              		.loc 1 623 0 is_stmt 0 discriminator 1
 1343 00ec 099B     		ldr	r3, [sp, #36]
 1344 00ee 9945     		cmp	r9, r3
 1345 00f0 02DA     		bge	.L109
 624:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1346              		.loc 1 624 0 is_stmt 1
 1347 00f2 0024     		movs	r4, #0
 1348 00f4 0797     		str	r7, [sp, #28]
 1349 00f6 D3E7     		b	.L117
 1350              	.LVL195:
 1351              	.L109:
 634:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1352              		.loc 1 634 0
 1353 00f8 0DB0     		add	sp, sp, #52
 1354              	.LCFI19:
 1355              		.cfi_def_cfa_offset 36
 1356              		@ sp needed
 1357 00fa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1358              		.cfi_endproc
 1359              	.LFE164:
 1361              		.section	.text.fill_normal,"ax",%progbits
 1362              		.align	1
 1363              		.syntax unified
 1364              		.thumb
ARM GAS  /tmp/ccJH4gbL.s 			page 56


 1365              		.thumb_func
 1366              		.fpu fpv5-d16
 1368              	fill_normal:
 1369              	.LFB162:
 242:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 1370              		.loc 1 242 0
 1371              		.cfi_startproc
 1372              		@ args = 12, pretend = 0, frame = 8
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374              	.LVL196:
 1375 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1376              	.LCFI20:
 1377              		.cfi_def_cfa_offset 36
 1378              		.cfi_offset 4, -36
 1379              		.cfi_offset 5, -32
 1380              		.cfi_offset 6, -28
 1381              		.cfi_offset 7, -24
 1382              		.cfi_offset 8, -20
 1383              		.cfi_offset 9, -16
 1384              		.cfi_offset 10, -12
 1385              		.cfi_offset 11, -8
 1386              		.cfi_offset 14, -4
 1387 0004 83B0     		sub	sp, sp, #12
 1388              	.LCFI21:
 1389              		.cfi_def_cfa_offset 48
 1390 0006 0446     		mov	r4, r0
 1391 0008 0092     		str	r2, [sp]
 1392 000a 1D46     		mov	r5, r3	@ movhi
 1393 000c 9DF830E0 		ldrb	lr, [sp, #48]	@ zero_extendqisi2
 1394 0010 0D98     		ldr	r0, [sp, #52]
 1395              	.LVL197:
 1396 0012 BDF938B0 		ldrsh	fp, [sp, #56]
 1397              	.LVL198:
 1398              	.LBB130:
 1399              	.LBB131:
 125:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1400              		.loc 2 125 0
 1401 0016 8F88     		ldrh	r7, [r1, #4]
 1402 0018 0B88     		ldrh	r3, [r1]
 1403              	.LVL199:
 1404 001a FF1A     		subs	r7, r7, r3
 1405 001c BFB2     		uxth	r7, r7
 1406 001e 0137     		adds	r7, r7, #1
 1407 0020 3FB2     		sxth	r7, r7
 1408              	.LVL200:
 1409              	.LBE131:
 1410              	.LBE130:
 243:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 1411              		.loc 1 243 0
 1412 0022 3B46     		mov	r3, r7
 1413              	.LVL201:
 1414              	.LBB132:
 1415              	.LBB133:
 1416              		.loc 2 135 0
 1417 0024 CA88     		ldrh	r2, [r1, #6]
 1418              	.LVL202:
 1419 0026 4988     		ldrh	r1, [r1, #2]
ARM GAS  /tmp/ccJH4gbL.s 			page 57


 1420              	.LVL203:
 1421 0028 521A     		subs	r2, r2, r1
 1422 002a 92B2     		uxth	r2, r2
 1423 002c 0132     		adds	r2, r2, #1
 1424 002e 0FFA82FA 		sxth	r10, r2
 1425              	.LVL204:
 1426              	.LBE133:
 1427              	.LBE132:
 250:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 1428              		.loc 1 250 0
 1429 0032 58B1     		cbz	r0, .L176
 1430              	.LVL205:
 1431              	.LBB134:
 289:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 1432              		.loc 1 289 0
 1433 0034 1FFA85F8 		uxth	r8, r5
 1434 0038 08EB0848 		add	r8, r8, r8, lsl #16
 1435              	.LVL206:
 292:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 1436              		.loc 1 292 0
 1437 003c BEF1FC0F 		cmp	lr, #252
 1438 0040 40F27681 		bls	.L133
 1439              	.LBB135:
 293:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 1440              		.loc 1 293 0
 1441 0044 043F     		subs	r7, r7, #4
 1442              	.LVL207:
 294:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1443              		.loc 1 294 0
 1444 0046 4FF00009 		mov	r9, #0
 1445 004a 6BE1     		b	.L134
 1446              	.LVL208:
 1447              	.L176:
 1448              	.LBE135:
 1449              	.LBE134:
 251:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 1450              		.loc 1 251 0
 1451 004c BEF1FC0F 		cmp	lr, #252
 1452 0050 33D8     		bhi	.L168
 1453              	.LVL209:
 1454 0052 4FF00000 		mov	r0, #0	@ movhi
 1455              	.LVL210:
 1456              	.LBB156:
 1457              	.LBB157:
 1458              	.LBB158:
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 1459              		.loc 3 449 0
 1460 0056 0EF10401 		add	r1, lr, #4
 1461              	.LVL211:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 1462              		.loc 3 450 0
 1463 005a D34F     		ldr	r7, .L190
 1464              	.LVL212:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1465              		.loc 3 452 0
 1466 005c AAB2     		uxth	r2, r5
 1467 005e 42EA0242 		orr	r2, r2, r2, lsl #16
ARM GAS  /tmp/ccJH4gbL.s 			page 58


 1468              	.LVL213:
 1469              		.loc 3 453 0
 1470 0062 3A40     		ands	r2, r2, r7
 1471              	.LVL214:
 1472 0064 C908     		lsrs	r1, r1, #3
 1473              	.LVL215:
 1474 0066 02FB01F2 		mul	r2, r2, r1
 1475              	.LVL216:
 1476 006a 07EA521E 		and	lr, r7, r2, lsr #5
 1477              	.LVL217:
 1478 006e 4EEA1E4E 		orr	lr, lr, lr, lsr #16
 1479              	.LVL218:
 1480              	.LBE158:
 1481              	.LBE157:
 267:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 1482              		.loc 1 267 0
 1483 0072 CA00     		lsls	r2, r1, #3
 1484 0074 D2B2     		uxtb	r2, r2
 1485              	.LVL219:
 1486              	.LBB159:
 1487              	.LBB160:
 454:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 455:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 456:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = ret.full << 8 | ret.full >> 8;
 457:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 458:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 459:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 460:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 461:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 462:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 463:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 464:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 465:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 466:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 467:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 468:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 469:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 470:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 471:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 472:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret;
 473:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** }
 474:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 475:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 476:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** {
 477:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 478:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 1488              		.loc 3 478 0
 1489 0076 C5F3C421 		ubfx	r1, r5, #11, #5
 1490 007a 1FFA82F8 		uxth	r8, r2
 1491 007e 01FB08FB 		mul	fp, r1, r8
 479:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 1492              		.loc 3 479 0
 1493 0082 C5F34519 		ubfx	r9, r5, #5, #6
 1494 0086 08FB09F9 		mul	r9, r8, r9
 480:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 1495              		.loc 3 480 0
 1496 008a 05F01F05 		and	r5, r5, #31
ARM GAS  /tmp/ccJH4gbL.s 			page 59


 1497              	.LVL220:
 1498 008e 08FB05F8 		mul	r8, r8, r5
 1499              	.LVL221:
 1500              	.LBE160:
 1501              	.LBE159:
 272:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1502              		.loc 1 272 0
 1503 0092 82F0FF05 		eor	r5, r2, #255
 1504              	.LVL222:
 274:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1505              		.loc 1 274 0
 1506 0096 0022     		movs	r2, #0
 1507              	.LVL223:
 1508 0098 CDF804A0 		str	r10, [sp, #4]
 1509 009c 9246     		mov	r10, r2
 1510              	.LVL224:
 1511 009e 48E0     		b	.L129
 1512              	.LVL225:
 1513              	.L127:
 1514              	.LBE156:
 253:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 1515              		.loc 1 253 0 discriminator 3
 1516 00a0 3A46     		mov	r2, r7
 1517 00a2 2946     		mov	r1, r5	@ movhi
 1518 00a4 2046     		mov	r0, r4
 1519 00a6 FFF7FEFF 		bl	lv_color_fill
 1520              	.LVL226:
 254:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1521              		.loc 1 254 0 discriminator 3
 1522 00aa 04EB4804 		add	r4, r4, r8, lsl #1
 1523              	.LVL227:
 252:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 1524              		.loc 1 252 0 discriminator 3
 1525 00ae 0136     		adds	r6, r6, #1
 1526              	.LVL228:
 1527              	.L125:
 252:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 1528              		.loc 1 252 0 is_stmt 0 discriminator 1
 1529 00b0 5645     		cmp	r6, r10
 1530 00b2 F5DB     		blt	.L127
 1531              	.LVL229:
 1532              	.L123:
 372:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1533              		.loc 1 372 0 is_stmt 1
 1534 00b4 03B0     		add	sp, sp, #12
 1535              	.LCFI22:
 1536              		.cfi_remember_state
 1537              		.cfi_def_cfa_offset 36
 1538              		@ sp needed
 1539 00b6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1540              	.LVL230:
 1541              	.L168:
 1542              	.LCFI23:
 1543              		.cfi_restore_state
 252:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 1544              		.loc 1 252 0
 1545 00ba 0026     		movs	r6, #0
ARM GAS  /tmp/ccJH4gbL.s 			page 60


 1546 00bc DDF80080 		ldr	r8, [sp]
 1547 00c0 F6E7     		b	.L125
 1548              	.LVL231:
 1549              	.L130:
 1550              	.LBB163:
 280:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1551              		.loc 1 280 0 discriminator 2
 1552 00c2 A7F800E0 		strh	lr, [r7]	@ movhi
 275:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 1553              		.loc 1 275 0 discriminator 2
 1554 00c6 0132     		adds	r2, r2, #1
 1555              	.LVL232:
 1556              	.L132:
 275:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 1557              		.loc 1 275 0 is_stmt 0 discriminator 1
 1558 00c8 9A42     		cmp	r2, r3
 1559 00ca 2DDA     		bge	.L177
 276:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 1560              		.loc 1 276 0 is_stmt 1
 1561 00cc 81B2     		uxth	r1, r0
 1562 00ce 04EB4207 		add	r7, r4, r2, lsl #1
 1563 00d2 34F812C0 		ldrh	ip, [r4, r2, lsl #1]
 1564 00d6 6145     		cmp	r1, ip
 1565 00d8 F3D0     		beq	.L130
 277:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_res_color = lv_color_mix_premult(color_premult, dest_buf[x], opa_inv);
 1566              		.loc 1 277 0
 1567 00da 34F81200 		ldrh	r0, [r4, r2, lsl #1]
 1568              	.LVL233:
 1569              	.LBB161:
 1570              	.LBB162:
 481:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 482:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     (void) mix;
 483:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 484:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 485:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 486:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 487:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 488:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 489:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** }
 490:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** 
 491:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 492:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 493:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 494:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 495:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 496:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 497:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the mixed color
 498:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 499:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 500:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 501:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** {
 502:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t ret;
 503:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 504:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 505:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 1571              		.loc 3 505 0
 1572 00de C10A     		lsrs	r1, r0, #11
ARM GAS  /tmp/ccJH4gbL.s 			page 61


 1573 00e0 05FB01B1 		mla	r1, r5, r1, fp
 1574 00e4 01EB012C 		add	ip, r1, r1, lsl #8
 1575 00e8 01EBCC11 		add	r1, r1, ip, lsl #7
 1576 00ec C1F3C451 		ubfx	r1, r1, #23, #5
 1577 00f0 61F3CF26 		bfi	r6, r1, #11, #5
 506:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 1578              		.loc 3 506 0
 1579 00f4 C0F34511 		ubfx	r1, r0, #5, #6
 1580 00f8 01FB0591 		mla	r1, r1, r5, r9
 1581 00fc 01EB012C 		add	ip, r1, r1, lsl #8
 1582 0100 01EBCC11 		add	r1, r1, ip, lsl #7
 1583 0104 C1F3C551 		ubfx	r1, r1, #23, #6
 1584 0108 61F34A16 		bfi	r6, r1, #5, #6
 507:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 1585              		.loc 3 507 0
 1586 010c 00F01F01 		and	r1, r0, #31
 1587 0110 01FB0581 		mla	r1, r1, r5, r8
 1588 0114 01EB012C 		add	ip, r1, r1, lsl #8
 1589 0118 01EBCC11 		add	r1, r1, ip, lsl #7
 1590 011c C1F3C451 		ubfx	r1, r1, #23, #5
 1591 0120 61F30406 		bfi	r6, r1, #0, #5
 1592 0124 B646     		mov	lr, r6	@ movhi
 1593              	.LVL234:
 1594 0126 CCE7     		b	.L130
 1595              	.LVL235:
 1596              	.L177:
 1597              	.LBE162:
 1598              	.LBE161:
 282:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1599              		.loc 1 282 0 discriminator 2
 1600 0128 009A     		ldr	r2, [sp]
 1601              	.LVL236:
 1602 012a 04EB4204 		add	r4, r4, r2, lsl #1
 1603              	.LVL237:
 274:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1604              		.loc 1 274 0 discriminator 2
 1605 012e 0AF1010A 		add	r10, r10, #1
 1606              	.LVL238:
 1607              	.L129:
 274:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1608              		.loc 1 274 0 is_stmt 0 discriminator 1
 1609 0132 019A     		ldr	r2, [sp, #4]
 1610 0134 9245     		cmp	r10, r2
 1611 0136 BDDA     		bge	.L123
 275:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 1612              		.loc 1 275 0 is_stmt 1
 1613 0138 0022     		movs	r2, #0
 1614 013a C5E7     		b	.L132
 1615              	.LVL239:
 1616              	.L179:
 1617              	.LBE163:
 1618              	.LBB164:
 1619              	.LBB152:
 296:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1620              		.loc 1 296 0 discriminator 1
 1621 013c 2580     		strh	r5, [r4]	@ movhi
 1622              	.L136:
ARM GAS  /tmp/ccJH4gbL.s 			page 62


 296:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1623              		.loc 1 296 0 is_stmt 0 discriminator 4
 1624 013e 0130     		adds	r0, r0, #1
 1625              	.LVL240:
 1626 0140 0234     		adds	r4, r4, #2
 1627              	.LVL241:
 295:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1628              		.loc 1 295 0 is_stmt 1 discriminator 4
 1629 0142 0EF1010E 		add	lr, lr, #1
 1630              	.LVL242:
 1631              	.L158:
 295:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1632              		.loc 1 295 0 is_stmt 0 discriminator 2
 1633 0146 9E45     		cmp	lr, r3
 1634 0148 80F2BC80 		bge	.L174
 295:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1635              		.loc 1 295 0 discriminator 3
 1636 014c 10F0030F 		tst	r0, #3
 1637 0150 1BD0     		beq	.L178
 296:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1638              		.loc 1 296 0 is_stmt 1
 1639 0152 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 1640 0154 FF2A     		cmp	r2, #255
 1641 0156 F1D0     		beq	.L179
 1642              	.LVL243:
 1643              	.LBB136:
 1644              	.LBB137:
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 1645              		.loc 3 449 0 discriminator 2
 1646 0158 0432     		adds	r2, r2, #4
 1647              	.LVL244:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 1648              		.loc 3 450 0 discriminator 2
 1649 015a 2188     		ldrh	r1, [r4]
 1650 015c 41EA0141 		orr	r1, r1, r1, lsl #16
 1651 0160 DFF844C2 		ldr	ip, .L190
 1652 0164 01EA0C01 		and	r1, r1, ip
 1653              	.LVL245:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1654              		.loc 3 452 0 discriminator 2
 1655 0168 AEB2     		uxth	r6, r5
 1656 016a 46EA0646 		orr	r6, r6, r6, lsl #16
 1657 016e 06EA0C06 		and	r6, r6, ip
 1658              	.LVL246:
 453:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1659              		.loc 3 453 0 discriminator 2
 1660 0172 761A     		subs	r6, r6, r1
 1661              	.LVL247:
 1662 0174 D208     		lsrs	r2, r2, #3
 1663              	.LVL248:
 1664 0176 06FB02F2 		mul	r2, r6, r2
 1665 017a 01EB5212 		add	r2, r1, r2, lsr #5
 1666 017e 02EA0C02 		and	r2, r2, ip
 1667              	.LVL249:
 454:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 1668              		.loc 3 454 0 discriminator 2
 1669 0182 42EA1242 		orr	r2, r2, r2, lsr #16
ARM GAS  /tmp/ccJH4gbL.s 			page 63


 1670              	.LVL250:
 1671              	.LBE137:
 1672              	.LBE136:
 296:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1673              		.loc 1 296 0 discriminator 2
 1674 0186 2280     		strh	r2, [r4]	@ movhi
 1675 0188 D9E7     		b	.L136
 1676              	.L178:
 1677 018a 4646     		mov	r6, r8
 1678 018c 0BE0     		b	.L152
 1679              	.LVL251:
 1680              	.L181:
 1681              	.LBB138:
 303:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 0) = color;
 1682              		.loc 1 303 0
 1683 018e 14F0030F 		tst	r4, #3
 1684 0192 00F08980 		beq	.L140
 1685              	.LBB139:
 304:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             uint32_t * d = (uint32_t *)(dest_buf + 1);
 1686              		.loc 1 304 0
 1687 0196 2580     		strh	r5, [r4]	@ movhi
 1688              	.LVL252:
 306:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 3) = color;
 1689              		.loc 1 306 0
 1690 0198 C4F80260 		str	r6, [r4, #2]
 307:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 1691              		.loc 1 307 0
 1692 019c E580     		strh	r5, [r4, #6]	@ movhi
 1693              	.LVL253:
 1694              	.L141:
 1695              	.LBE139:
 320:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         mask += 4;
 1696              		.loc 1 320 0
 1697 019e 0834     		adds	r4, r4, #8
 1698              	.LVL254:
 321:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1699              		.loc 1 321 0
 1700 01a0 0430     		adds	r0, r0, #4
 1701              	.LVL255:
 1702              	.L142:
 1703              	.LBE138:
 299:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 1704              		.loc 1 299 0
 1705 01a2 0EF1040E 		add	lr, lr, #4
 1706              	.LVL256:
 1707              	.L152:
 299:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 1708              		.loc 1 299 0 is_stmt 0 discriminator 1
 1709 01a6 BE45     		cmp	lr, r7
 1710 01a8 00F38E80 		bgt	.L180
 1711              	.LBB149:
 300:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask32 == 0xFFFFFFFF) {
 1712              		.loc 1 300 0 is_stmt 1
 1713 01ac 0268     		ldr	r2, [r0]
 1714              	.LVL257:
 301:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 16
 1715              		.loc 1 301 0
ARM GAS  /tmp/ccJH4gbL.s 			page 64


 1716 01ae B2F1FF3F 		cmp	r2, #-1
 1717 01b2 ECD0     		beq	.L181
 323:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1718              		.loc 1 323 0
 1719 01b4 002A     		cmp	r2, #0
 1720 01b6 00F08280 		beq	.L143
 324:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1721              		.loc 1 324 0
 1722 01ba 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 1723              	.LVL258:
 1724 01bc FF2A     		cmp	r2, #255
 1725 01be 76D0     		beq	.L182
 1726              	.LVL259:
 1727              	.LBB140:
 1728              	.LBB141:
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 1729              		.loc 3 449 0 discriminator 2
 1730 01c0 0432     		adds	r2, r2, #4
 1731              	.LVL260:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 1732              		.loc 3 450 0 discriminator 2
 1733 01c2 2188     		ldrh	r1, [r4]
 1734 01c4 41EA0141 		orr	r1, r1, r1, lsl #16
 1735 01c8 DFF8DC81 		ldr	r8, .L190
 1736 01cc 01EA0801 		and	r1, r1, r8
 1737              	.LVL261:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1738              		.loc 3 452 0 discriminator 2
 1739 01d0 1FFA85FC 		uxth	ip, r5
 1740 01d4 4CEA0C4C 		orr	ip, ip, ip, lsl #16
 1741 01d8 0CEA080C 		and	ip, ip, r8
 1742              	.LVL262:
 453:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1743              		.loc 3 453 0 discriminator 2
 1744 01dc ACEB010C 		sub	ip, ip, r1
 1745              	.LVL263:
 1746 01e0 D208     		lsrs	r2, r2, #3
 1747              	.LVL264:
 1748 01e2 0CFB02F2 		mul	r2, ip, r2
 1749 01e6 01EB5212 		add	r2, r1, r2, lsr #5
 1750 01ea 02EA0802 		and	r2, r2, r8
 1751              	.LVL265:
 454:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 1752              		.loc 3 454 0 discriminator 2
 1753 01ee 42EA1242 		orr	r2, r2, r2, lsr #16
 1754              	.LVL266:
 1755              	.LBE141:
 1756              	.LBE140:
 324:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1757              		.loc 1 324 0 discriminator 2
 1758 01f2 2280     		strh	r2, [r4]	@ movhi
 1759              	.LVL267:
 1760              	.L145:
 325:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1761              		.loc 1 325 0 discriminator 4
 1762 01f4 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 1763 01f6 FF2A     		cmp	r2, #255
ARM GAS  /tmp/ccJH4gbL.s 			page 65


 1764 01f8 5BD0     		beq	.L183
 1765              	.LVL268:
 1766              	.LBB142:
 1767              	.LBB143:
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 1768              		.loc 3 449 0 discriminator 2
 1769 01fa 0432     		adds	r2, r2, #4
 1770              	.LVL269:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 1771              		.loc 3 450 0 discriminator 2
 1772 01fc 6188     		ldrh	r1, [r4, #2]
 1773 01fe 41EA0141 		orr	r1, r1, r1, lsl #16
 1774 0202 DFF8A481 		ldr	r8, .L190
 1775 0206 01EA0801 		and	r1, r1, r8
 1776              	.LVL270:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1777              		.loc 3 452 0 discriminator 2
 1778 020a 1FFA85FC 		uxth	ip, r5
 1779 020e 4CEA0C4C 		orr	ip, ip, ip, lsl #16
 1780 0212 0CEA080C 		and	ip, ip, r8
 1781              	.LVL271:
 453:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1782              		.loc 3 453 0 discriminator 2
 1783 0216 ACEB010C 		sub	ip, ip, r1
 1784              	.LVL272:
 1785 021a D208     		lsrs	r2, r2, #3
 1786              	.LVL273:
 1787 021c 0CFB02F2 		mul	r2, ip, r2
 1788 0220 01EB5212 		add	r2, r1, r2, lsr #5
 1789 0224 02EA0802 		and	r2, r2, r8
 1790              	.LVL274:
 454:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 1791              		.loc 3 454 0 discriminator 2
 1792 0228 42EA1242 		orr	r2, r2, r2, lsr #16
 1793              	.LVL275:
 1794              	.LBE143:
 1795              	.LBE142:
 325:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1796              		.loc 1 325 0 discriminator 2
 1797 022c 6280     		strh	r2, [r4, #2]	@ movhi
 1798              	.L147:
 1799              	.LVL276:
 326:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1800              		.loc 1 326 0 discriminator 4
 1801 022e 8278     		ldrb	r2, [r0, #2]	@ zero_extendqisi2
 1802 0230 FF2A     		cmp	r2, #255
 1803 0232 40D0     		beq	.L184
 1804              	.LVL277:
 1805              	.LBB144:
 1806              	.LBB145:
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 1807              		.loc 3 449 0 discriminator 2
 1808 0234 0432     		adds	r2, r2, #4
 1809              	.LVL278:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 1810              		.loc 3 450 0 discriminator 2
 1811 0236 A188     		ldrh	r1, [r4, #4]
ARM GAS  /tmp/ccJH4gbL.s 			page 66


 1812 0238 41EA0141 		orr	r1, r1, r1, lsl #16
 1813 023c DFF86881 		ldr	r8, .L190
 1814 0240 01EA0801 		and	r1, r1, r8
 1815              	.LVL279:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1816              		.loc 3 452 0 discriminator 2
 1817 0244 1FFA85FC 		uxth	ip, r5
 1818 0248 4CEA0C4C 		orr	ip, ip, ip, lsl #16
 1819 024c 0CEA080C 		and	ip, ip, r8
 1820              	.LVL280:
 453:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1821              		.loc 3 453 0 discriminator 2
 1822 0250 ACEB010C 		sub	ip, ip, r1
 1823              	.LVL281:
 1824 0254 D208     		lsrs	r2, r2, #3
 1825              	.LVL282:
 1826 0256 0CFB02F2 		mul	r2, ip, r2
 1827 025a 01EB5212 		add	r2, r1, r2, lsr #5
 1828 025e 02EA0802 		and	r2, r2, r8
 1829              	.LVL283:
 454:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 1830              		.loc 3 454 0 discriminator 2
 1831 0262 42EA1242 		orr	r2, r2, r2, lsr #16
 1832              	.LVL284:
 1833              	.LBE145:
 1834              	.LBE144:
 326:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1835              		.loc 1 326 0 discriminator 2
 1836 0266 A280     		strh	r2, [r4, #4]	@ movhi
 1837              	.L149:
 1838              	.LVL285:
 327:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1839              		.loc 1 327 0 discriminator 4
 1840 0268 C278     		ldrb	r2, [r0, #3]	@ zero_extendqisi2
 1841 026a FF2A     		cmp	r2, #255
 1842 026c 25D0     		beq	.L185
 1843              	.LVL286:
 1844              	.LBB146:
 1845              	.LBB147:
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 1846              		.loc 3 449 0 discriminator 2
 1847 026e 0432     		adds	r2, r2, #4
 1848              	.LVL287:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 1849              		.loc 3 450 0 discriminator 2
 1850 0270 E188     		ldrh	r1, [r4, #6]
 1851 0272 41EA0141 		orr	r1, r1, r1, lsl #16
 1852 0276 DFF83081 		ldr	r8, .L190
 1853 027a 01EA0801 		and	r1, r1, r8
 1854              	.LVL288:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1855              		.loc 3 452 0 discriminator 2
 1856 027e 1FFA85FC 		uxth	ip, r5
 1857 0282 4CEA0C4C 		orr	ip, ip, ip, lsl #16
 1858 0286 0CEA080C 		and	ip, ip, r8
 1859              	.LVL289:
 453:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
ARM GAS  /tmp/ccJH4gbL.s 			page 67


 1860              		.loc 3 453 0 discriminator 2
 1861 028a ACEB010C 		sub	ip, ip, r1
 1862              	.LVL290:
 1863 028e D208     		lsrs	r2, r2, #3
 1864              	.LVL291:
 1865 0290 0CFB02F2 		mul	r2, ip, r2
 1866 0294 01EB5212 		add	r2, r1, r2, lsr #5
 1867 0298 02EA0802 		and	r2, r2, r8
 1868              	.LVL292:
 454:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 1869              		.loc 3 454 0 discriminator 2
 1870 029c 42EA1242 		orr	r2, r2, r2, lsr #16
 1871              	.LVL293:
 1872              	.LBE147:
 1873              	.LBE146:
 327:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1874              		.loc 1 327 0 discriminator 2
 1875 02a0 E280     		strh	r2, [r4, #6]	@ movhi
 1876              	.L151:
 327:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1877              		.loc 1 327 0 is_stmt 0 discriminator 4
 1878 02a2 0430     		adds	r0, r0, #4
 1879              	.LVL294:
 1880 02a4 0834     		adds	r4, r4, #8
 1881              	.LVL295:
 1882 02a6 7CE7     		b	.L142
 1883              	.LVL296:
 1884              	.L140:
 1885              	.LBB148:
 311:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(d + 1) = c32;
 1886              		.loc 1 311 0 is_stmt 1
 1887 02a8 2660     		str	r6, [r4]
 312:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 1888              		.loc 1 312 0
 1889 02aa 6660     		str	r6, [r4, #4]
 1890 02ac 77E7     		b	.L141
 1891              	.LVL297:
 1892              	.L182:
 1893              	.LBE148:
 324:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1894              		.loc 1 324 0 discriminator 1
 1895 02ae 2580     		strh	r5, [r4]	@ movhi
 1896              	.LVL298:
 1897 02b0 A0E7     		b	.L145
 1898              	.LVL299:
 1899              	.L183:
 325:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1900              		.loc 1 325 0 discriminator 1
 1901 02b2 6580     		strh	r5, [r4, #2]	@ movhi
 1902 02b4 BBE7     		b	.L147
 1903              	.LVL300:
 1904              	.L184:
 326:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1905              		.loc 1 326 0 discriminator 1
 1906 02b6 A580     		strh	r5, [r4, #4]	@ movhi
 1907 02b8 D6E7     		b	.L149
 1908              	.LVL301:
ARM GAS  /tmp/ccJH4gbL.s 			page 68


 1909              	.L185:
 327:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1910              		.loc 1 327 0 discriminator 1
 1911 02ba E580     		strh	r5, [r4, #6]	@ movhi
 1912 02bc F1E7     		b	.L151
 1913              	.LVL302:
 1914              	.L143:
 330:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf += 4;
 1915              		.loc 1 330 0
 1916 02be 0430     		adds	r0, r0, #4
 1917              	.LVL303:
 331:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1918              		.loc 1 331 0
 1919 02c0 0834     		adds	r4, r4, #8
 1920              	.LVL304:
 1921 02c2 6EE7     		b	.L142
 1922              	.LVL305:
 1923              	.L174:
 1924 02c4 4646     		mov	r6, r8
 1925 02c6 6EE7     		b	.L152
 1926              	.LVL306:
 1927              	.L180:
 1928 02c8 B046     		mov	r8, r6
 1929              	.LBE149:
 1930 02ca 1BE0     		b	.L154
 1931              	.LVL307:
 1932              	.L155:
 1933              	.LBB150:
 1934              	.LBB151:
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 1935              		.loc 3 449 0 discriminator 2
 1936 02cc 0432     		adds	r2, r2, #4
 1937              	.LVL308:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 1938              		.loc 3 450 0 discriminator 2
 1939 02ce 2188     		ldrh	r1, [r4]
 1940 02d0 41EA0141 		orr	r1, r1, r1, lsl #16
 1941 02d4 DFF8D0C0 		ldr	ip, .L190
 1942 02d8 01EA0C01 		and	r1, r1, ip
 1943              	.LVL309:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 1944              		.loc 3 452 0 discriminator 2
 1945 02dc AEB2     		uxth	r6, r5
 1946 02de 46EA0646 		orr	r6, r6, r6, lsl #16
 1947 02e2 06EA0C06 		and	r6, r6, ip
 1948              	.LVL310:
 453:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 1949              		.loc 3 453 0 discriminator 2
 1950 02e6 761A     		subs	r6, r6, r1
 1951              	.LVL311:
 1952 02e8 D208     		lsrs	r2, r2, #3
 1953              	.LVL312:
 1954 02ea 06FB02F2 		mul	r2, r6, r2
 1955 02ee 01EB5212 		add	r2, r1, r2, lsr #5
 1956 02f2 02EA0C02 		and	r2, r2, ip
 1957              	.LVL313:
 454:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
ARM GAS  /tmp/ccJH4gbL.s 			page 69


 1958              		.loc 3 454 0 discriminator 2
 1959 02f6 42EA1242 		orr	r2, r2, r2, lsr #16
 1960              	.LVL314:
 1961              	.LBE151:
 1962              	.LBE150:
 336:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1963              		.loc 1 336 0 discriminator 2
 1964 02fa 2280     		strh	r2, [r4]	@ movhi
 1965              	.L156:
 336:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1966              		.loc 1 336 0 is_stmt 0 discriminator 4
 1967 02fc 0130     		adds	r0, r0, #1
 1968              	.LVL315:
 1969 02fe 0234     		adds	r4, r4, #2
 1970              	.LVL316:
 335:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1971              		.loc 1 335 0 is_stmt 1 discriminator 4
 1972 0300 0EF1010E 		add	lr, lr, #1
 1973              	.LVL317:
 1974              	.L154:
 335:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1975              		.loc 1 335 0 is_stmt 0 discriminator 1
 1976 0304 9E45     		cmp	lr, r3
 1977 0306 04DA     		bge	.L186
 336:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1978              		.loc 1 336 0 is_stmt 1
 1979 0308 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 1980 030a FF2A     		cmp	r2, #255
 1981 030c DED1     		bne	.L155
 336:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1982              		.loc 1 336 0 is_stmt 0 discriminator 1
 1983 030e 2580     		strh	r5, [r4]	@ movhi
 1984 0310 F4E7     		b	.L156
 1985              	.L186:
 338:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 1986              		.loc 1 338 0 is_stmt 1 discriminator 2
 1987 0312 009A     		ldr	r2, [sp]
 1988 0314 D21A     		subs	r2, r2, r3
 1989 0316 04EB4204 		add	r4, r4, r2, lsl #1
 1990              	.LVL318:
 339:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1991              		.loc 1 339 0 discriminator 2
 1992 031a ABEB0302 		sub	r2, fp, r3
 1993 031e 1044     		add	r0, r0, r2
 1994              	.LVL319:
 294:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1995              		.loc 1 294 0 discriminator 2
 1996 0320 09F10109 		add	r9, r9, #1
 1997              	.LVL320:
 1998              	.L134:
 294:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1999              		.loc 1 294 0 is_stmt 0 discriminator 1
 2000 0324 D145     		cmp	r9, r10
 2001 0326 BFF6C5AE 		bge	.L123
 295:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2002              		.loc 1 295 0 is_stmt 1
 2003 032a 4FF0000E 		mov	lr, #0
ARM GAS  /tmp/ccJH4gbL.s 			page 70


 2004 032e 0AE7     		b	.L158
 2005              	.LVL321:
 2006              	.L133:
 2007              	.LBE152:
 2008              	.LBB153:
 348:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_res_color.full = dest_buf[0].full;
 2009              		.loc 1 348 0
 2010 0330 2288     		ldrh	r2, [r4]
 2011 0332 9046     		mov	r8, r2	@ movhi
 2012              	.LVL322:
 350:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2013              		.loc 1 350 0
 2014 0334 0026     		movs	r6, #0
 347:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_dest_color.full = dest_buf[0].full;
 2015              		.loc 1 347 0
 2016 0336 3746     		mov	r7, r6
 352:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2017              		.loc 1 352 0
 2018 0338 B146     		mov	r9, r6
 2019 033a ADF80450 		strh	r5, [sp, #4]	@ movhi
 2020 033e 47E0     		b	.L159
 2021              	.LVL323:
 2022              	.L171:
 355:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2023              		.loc 1 355 0
 2024 0340 7646     		mov	r6, lr
 2025              	.LVL324:
 2026              	.L161:
 357:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 2027              		.loc 1 357 0
 2028 0342 BD42     		cmp	r5, r7
 2029 0344 32D0     		beq	.L187
 2030              	.L162:
 358:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 2031              		.loc 1 358 0
 2032 0346 FF2E     		cmp	r6, #255
 2033 0348 37D0     		beq	.L188
 2034              	.LVL325:
 2035              	.LBB154:
 2036              	.LBB155:
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 2037              		.loc 3 449 0
 2038 034a 06F10408 		add	r8, r6, #4
 2039              	.LVL326:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 2040              		.loc 3 450 0
 2041 034e 34F81150 		ldrh	r5, [r4, r1, lsl #1]
 2042 0352 45EA0545 		orr	r5, r5, r5, lsl #16
 2043 0356 DFF850C0 		ldr	ip, .L190
 2044 035a 05EA0C05 		and	r5, r5, ip
 2045              	.LVL327:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 2046              		.loc 3 452 0
 2047 035e BDF80470 		ldrh	r7, [sp, #4]
 2048              	.LVL328:
 2049 0362 47EA0747 		orr	r7, r7, r7, lsl #16
 2050 0366 07EA0C07 		and	r7, r7, ip
ARM GAS  /tmp/ccJH4gbL.s 			page 71


 2051              	.LVL329:
 453:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 2052              		.loc 3 453 0
 2053 036a 7F1B     		subs	r7, r7, r5
 2054              	.LVL330:
 2055 036c C8F3C708 		ubfx	r8, r8, #3, #8
 2056 0370 07FB08F2 		mul	r2, r7, r8
 2057              	.LVL331:
 2058 0374 05EB5212 		add	r2, r5, r2, lsr #5
 2059 0378 02EA0C02 		and	r2, r2, ip
 2060              	.LVL332:
 2061 037c 42EA1242 		orr	r2, r2, r2, lsr #16
 2062              	.LVL333:
 2063              	.L165:
 2064              	.LBE155:
 2065              	.LBE154:
 360:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_dest_color.full = dest_buf[x].full;
 2066              		.loc 1 360 0
 2067 0380 0778     		ldrb	r7, [r0]	@ zero_extendqisi2
 2068              	.LVL334:
 361:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2069              		.loc 1 361 0
 2070 0382 34F81180 		ldrh	r8, [r4, r1, lsl #1]
 2071              	.LVL335:
 2072              	.L163:
 363:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2073              		.loc 1 363 0
 2074 0386 24F81120 		strh	r2, [r4, r1, lsl #1]	@ movhi
 2075              	.L160:
 365:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2076              		.loc 1 365 0 discriminator 2
 2077 038a 0130     		adds	r0, r0, #1
 2078              	.LVL336:
 353:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2079              		.loc 1 353 0 discriminator 2
 2080 038c 0131     		adds	r1, r1, #1
 2081              	.LVL337:
 2082              	.L167:
 353:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2083              		.loc 1 353 0 is_stmt 0 discriminator 1
 2084 038e 9942     		cmp	r1, r3
 2085 0390 16DA     		bge	.L189
 354:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
 2086              		.loc 1 354 0 is_stmt 1
 2087 0392 0578     		ldrb	r5, [r0]	@ zero_extendqisi2
 2088              	.LVL338:
 2089 0394 002D     		cmp	r5, #0
 2090 0396 F8D0     		beq	.L160
 355:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2091              		.loc 1 355 0
 2092 0398 BD42     		cmp	r5, r7
 2093 039a D2D0     		beq	.L161
 355:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2094              		.loc 1 355 0 is_stmt 0 discriminator 1
 2095 039c FF2D     		cmp	r5, #255
 2096 039e CFD0     		beq	.L171
 356:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask || last_dest_color.full != dest_buf[x].full) {
ARM GAS  /tmp/ccJH4gbL.s 			page 72


 2097              		.loc 1 356 0 is_stmt 1 discriminator 2
 2098 03a0 05FB0EF6 		mul	r6, r5, lr
 2099              	.LVL339:
 355:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2100              		.loc 1 355 0 discriminator 2
 2101 03a4 360A     		lsrs	r6, r6, #8
 2102 03a6 CCE7     		b	.L161
 2103              	.L191:
 2104              		.align	2
 2105              	.L190:
 2106 03a8 1FF8E007 		.word	132184095
 2107              	.LVL340:
 2108              	.L187:
 357:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 2109              		.loc 1 357 0 discriminator 1
 2110 03ac 1FFA88F5 		uxth	r5, r8
 2111 03b0 34F811C0 		ldrh	ip, [r4, r1, lsl #1]
 2112 03b4 6545     		cmp	r5, ip
 2113 03b6 C6D1     		bne	.L162
 2114 03b8 E5E7     		b	.L163
 2115              	.L188:
 358:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 2116              		.loc 1 358 0 discriminator 1
 2117 03ba BDF80420 		ldrh	r2, [sp, #4]
 2118              	.LVL341:
 2119 03be DFE7     		b	.L165
 2120              	.LVL342:
 2121              	.L189:
 367:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2122              		.loc 1 367 0 discriminator 2
 2123 03c0 0099     		ldr	r1, [sp]
 2124              	.LVL343:
 2125 03c2 04EB4104 		add	r4, r4, r1, lsl #1
 2126              	.LVL344:
 368:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2127              		.loc 1 368 0 discriminator 2
 2128 03c6 ABEB0301 		sub	r1, fp, r3
 2129 03ca 0844     		add	r0, r0, r1
 2130              	.LVL345:
 352:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2131              		.loc 1 352 0 discriminator 2
 2132 03cc 09F10109 		add	r9, r9, #1
 2133              	.LVL346:
 2134              	.L159:
 352:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2135              		.loc 1 352 0 is_stmt 0 discriminator 1
 2136 03d0 D145     		cmp	r9, r10
 2137 03d2 BFF66FAE 		bge	.L123
 353:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2138              		.loc 1 353 0 is_stmt 1
 2139 03d6 0021     		movs	r1, #0
 2140 03d8 D9E7     		b	.L167
 2141              	.LBE153:
 2142              	.LBE164:
 2143              		.cfi_endproc
 2144              	.LFE162:
 2146 03da 00BF     		.section	.text.map_normal,"ax",%progbits
ARM GAS  /tmp/ccJH4gbL.s 			page 73


 2147              		.align	1
 2148              		.syntax unified
 2149              		.thumb
 2150              		.thumb_func
 2151              		.fpu fpv5-d16
 2153              	map_normal:
 2154              	.LFB165:
 639:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 2155              		.loc 1 639 0
 2156              		.cfi_startproc
 2157              		@ args = 16, pretend = 0, frame = 16
 2158              		@ frame_needed = 0, uses_anonymous_args = 0
 2159              	.LVL347:
 2160 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2161              	.LCFI24:
 2162              		.cfi_def_cfa_offset 36
 2163              		.cfi_offset 4, -36
 2164              		.cfi_offset 5, -32
 2165              		.cfi_offset 6, -28
 2166              		.cfi_offset 7, -24
 2167              		.cfi_offset 8, -20
 2168              		.cfi_offset 9, -16
 2169              		.cfi_offset 10, -12
 2170              		.cfi_offset 11, -8
 2171              		.cfi_offset 14, -4
 2172 0004 85B0     		sub	sp, sp, #20
 2173              	.LCFI25:
 2174              		.cfi_def_cfa_offset 56
 2175 0006 0446     		mov	r4, r0
 2176 0008 0192     		str	r2, [sp, #4]
 2177 000a 1E46     		mov	r6, r3
 2178 000c BDF938B0 		ldrsh	fp, [sp, #56]
 2179 0010 9DF83CA0 		ldrb	r10, [sp, #60]	@ zero_extendqisi2
 2180 0014 DDF84090 		ldr	r9, [sp, #64]
 2181 0018 BDF94430 		ldrsh	r3, [sp, #68]
 2182              	.LVL348:
 2183 001c 0293     		str	r3, [sp, #8]
 2184              	.LVL349:
 2185              	.LBB165:
 2186              	.LBB166:
 125:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2187              		.loc 2 125 0
 2188 001e B1F80480 		ldrh	r8, [r1, #4]
 2189 0022 0B88     		ldrh	r3, [r1]
 2190 0024 A8EB0308 		sub	r8, r8, r3
 2191 0028 1FFA88F8 		uxth	r8, r8
 2192 002c 08F10108 		add	r8, r8, #1
 2193 0030 0FFA88F8 		sxth	r8, r8
 2194              	.LVL350:
 2195              	.LBE166:
 2196              	.LBE165:
 640:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 2197              		.loc 1 640 0
 2198 0034 4046     		mov	r0, r8
 2199              	.LVL351:
 2200              	.LBB167:
 2201              	.LBB168:
ARM GAS  /tmp/ccJH4gbL.s 			page 74


 2202              		.loc 2 135 0
 2203 0036 CF88     		ldrh	r7, [r1, #6]
 2204 0038 4B88     		ldrh	r3, [r1, #2]
 2205 003a FF1A     		subs	r7, r7, r3
 2206 003c BFB2     		uxth	r7, r7
 2207 003e 0137     		adds	r7, r7, #1
 2208 0040 3FB2     		sxth	r7, r7
 2209              	.LVL352:
 2210              	.LBE168:
 2211              	.LBE167:
 647:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 2212              		.loc 1 647 0
 2213 0042 B9F1000F 		cmp	r9, #0
 2214 0046 0AD0     		beq	.L234
 668:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 2215              		.loc 1 668 0
 2216 0048 BAF1FD0F 		cmp	r10, #253
 2217 004c 40F2AC81 		bls	.L228
 2218              	.LBB169:
 669:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2219              		.loc 1 669 0
 2220 0050 A8F10408 		sub	r8, r8, #4
 2221              	.LVL353:
 671:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2222              		.loc 1 671 0
 2223 0054 0023     		movs	r3, #0
 2224 0056 CDF80CB0 		str	fp, [sp, #12]
 2225 005a 9B46     		mov	fp, r3
 2226 005c 63E1     		b	.L201
 2227              	.LVL354:
 2228              	.L234:
 2229              	.LBE169:
 648:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 2230              		.loc 1 648 0
 2231 005e BAF1FC0F 		cmp	r10, #252
 2232 0062 12D8     		bhi	.L226
 656:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2233              		.loc 1 656 0
 2234 0064 0025     		movs	r5, #0
 2235 0066 9646     		mov	lr, r2
 2236 0068 39E0     		b	.L195
 2237              	.LVL355:
 2238              	.L196:
 650:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 2239              		.loc 1 650 0 discriminator 3
 2240 006a 4FEA4802 		lsl	r2, r8, #1
 2241 006e 3146     		mov	r1, r6
 2242 0070 2046     		mov	r0, r4
 2243 0072 FFF7FEFF 		bl	lv_memcpy
 2244              	.LVL356:
 651:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2245              		.loc 1 651 0 discriminator 3
 2246 0076 04EB4904 		add	r4, r4, r9, lsl #1
 2247              	.LVL357:
 652:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2248              		.loc 1 652 0 discriminator 3
 2249 007a 06EB4B06 		add	r6, r6, fp, lsl #1
ARM GAS  /tmp/ccJH4gbL.s 			page 75


 2250              	.LVL358:
 649:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 2251              		.loc 1 649 0 discriminator 3
 2252 007e 0135     		adds	r5, r5, #1
 2253              	.LVL359:
 2254              	.L194:
 649:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 2255              		.loc 1 649 0 is_stmt 0 discriminator 1
 2256 0080 BD42     		cmp	r5, r7
 2257 0082 F2DB     		blt	.L196
 2258              	.LVL360:
 2259              	.L192:
 727:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2260              		.loc 1 727 0 is_stmt 1
 2261 0084 05B0     		add	sp, sp, #20
 2262              	.LCFI26:
 2263              		.cfi_remember_state
 2264              		.cfi_def_cfa_offset 36
 2265              		@ sp needed
 2266 0086 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2267              	.LVL361:
 2268              	.L226:
 2269              	.LCFI27:
 2270              		.cfi_restore_state
 649:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 2271              		.loc 1 649 0
 2272 008a 0025     		movs	r5, #0
 2273 008c DDF80490 		ldr	r9, [sp, #4]
 2274 0090 F6E7     		b	.L194
 2275              	.LVL362:
 2276              	.L198:
 2277              	.LBB184:
 2278              	.LBB185:
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 2279              		.loc 3 449 0 discriminator 3
 2280 0092 0AF10409 		add	r9, r10, #4
 2281              	.LVL363:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 2282              		.loc 3 450 0 discriminator 3
 2283 0096 34F81C20 		ldrh	r2, [r4, ip, lsl #1]
 2284 009a 42EA0242 		orr	r2, r2, r2, lsl #16
 2285 009e DFF81083 		ldr	r8, .L242
 2286 00a2 02EA0802 		and	r2, r2, r8
 2287              	.LVL364:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 2288              		.loc 3 452 0 discriminator 3
 2289 00a6 36F81C10 		ldrh	r1, [r6, ip, lsl #1]
 2290 00aa 41EA0141 		orr	r1, r1, r1, lsl #16
 2291 00ae 01EA0801 		and	r1, r1, r8
 2292              	.LVL365:
 453:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 2293              		.loc 3 453 0 discriminator 3
 2294 00b2 891A     		subs	r1, r1, r2
 2295              	.LVL366:
 2296 00b4 4FEAD909 		lsr	r9, r9, #3
 2297 00b8 01FB09F3 		mul	r3, r1, r9
 2298 00bc 02EB5313 		add	r3, r2, r3, lsr #5
ARM GAS  /tmp/ccJH4gbL.s 			page 76


 2299 00c0 03EA0803 		and	r3, r3, r8
 2300              	.LVL367:
 454:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 2301              		.loc 3 454 0 discriminator 3
 2302 00c4 43EA1343 		orr	r3, r3, r3, lsr #16
 2303              	.LVL368:
 2304              	.LBE185:
 2305              	.LBE184:
 658:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2306              		.loc 1 658 0 discriminator 3
 2307 00c8 24F81C30 		strh	r3, [r4, ip, lsl #1]	@ movhi
 657:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa);
 2308              		.loc 1 657 0 discriminator 3
 2309 00cc 0CF1010C 		add	ip, ip, #1
 2310              	.LVL369:
 2311              	.L199:
 657:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa);
 2312              		.loc 1 657 0 is_stmt 0 discriminator 1
 2313 00d0 8445     		cmp	ip, r0
 2314 00d2 DEDB     		blt	.L198
 660:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2315              		.loc 1 660 0 is_stmt 1 discriminator 2
 2316 00d4 04EB4E04 		add	r4, r4, lr, lsl #1
 2317              	.LVL370:
 661:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2318              		.loc 1 661 0 discriminator 2
 2319 00d8 06EB4B06 		add	r6, r6, fp, lsl #1
 2320              	.LVL371:
 656:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2321              		.loc 1 656 0 discriminator 2
 2322 00dc 0135     		adds	r5, r5, #1
 2323              	.LVL372:
 2324              	.L195:
 656:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2325              		.loc 1 656 0 is_stmt 0 discriminator 1
 2326 00de BD42     		cmp	r5, r7
 2327 00e0 D0DA     		bge	.L192
 657:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa);
 2328              		.loc 1 657 0 is_stmt 1
 2329 00e2 4FF0000C 		mov	ip, #0
 2330 00e6 F3E7     		b	.L199
 2331              	.LVL373:
 2332              	.L203:
 2333              	.LBB186:
 2334              	.LBB170:
 2335              	.LBB171:
 2336              	.LBB172:
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 2337              		.loc 3 449 0 discriminator 4
 2338 00e8 0435     		adds	r5, r5, #4
 2339              	.LVL374:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 2340              		.loc 3 450 0 discriminator 4
 2341 00ea 34F81310 		ldrh	r1, [r4, r3, lsl #1]
 2342 00ee 41EA0141 		orr	r1, r1, r1, lsl #16
 2343 00f2 DFF8BCE2 		ldr	lr, .L242
 2344 00f6 01EA0E01 		and	r1, r1, lr
ARM GAS  /tmp/ccJH4gbL.s 			page 77


 2345              	.LVL375:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 2346              		.loc 3 452 0 discriminator 4
 2347 00fa 36F813C0 		ldrh	ip, [r6, r3, lsl #1]
 2348 00fe 4CEA0C4C 		orr	ip, ip, ip, lsl #16
 2349 0102 0CEA0E0C 		and	ip, ip, lr
 2350              	.LVL376:
 453:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 2351              		.loc 3 453 0 discriminator 4
 2352 0106 ACEB010C 		sub	ip, ip, r1
 2353              	.LVL377:
 2354 010a ED08     		lsrs	r5, r5, #3
 2355              	.LVL378:
 2356 010c 0CFB05F5 		mul	r5, ip, r5
 2357 0110 01EB5515 		add	r5, r1, r5, lsr #5
 2358 0114 05EA0E0E 		and	lr, r5, lr
 2359              	.LVL379:
 454:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 2360              		.loc 3 454 0 discriminator 4
 2361 0118 4EEA1E4E 		orr	lr, lr, lr, lsr #16
 2362              	.LVL380:
 2363              	.LBE172:
 2364              	.LBE171:
 679:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2365              		.loc 1 679 0 discriminator 4
 2366 011c 24F813E0 		strh	lr, [r4, r3, lsl #1]	@ movhi
 2367              	.L202:
 679:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2368              		.loc 1 679 0 is_stmt 0 discriminator 6
 2369 0120 0132     		adds	r2, r2, #1
 2370              	.LVL381:
 678:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 2371              		.loc 1 678 0 is_stmt 1 discriminator 6
 2372 0122 0133     		adds	r3, r3, #1
 2373              	.LVL382:
 2374              	.L221:
 678:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 2375              		.loc 1 678 0 is_stmt 0 discriminator 2
 2376 0124 8342     		cmp	r3, r0
 2377 0126 21DA     		bge	.L215
 678:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 2378              		.loc 1 678 0 discriminator 3
 2379 0128 12F0030F 		tst	r2, #3
 2380 012c 1ED0     		beq	.L215
 679:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2381              		.loc 1 679 0 is_stmt 1
 2382 012e 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 2383 0130 002D     		cmp	r5, #0
 2384 0132 F5D0     		beq	.L202
 679:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2385              		.loc 1 679 0 is_stmt 0 discriminator 1
 2386 0134 FF2D     		cmp	r5, #255
 2387 0136 D7D1     		bne	.L203
 679:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2388              		.loc 1 679 0 discriminator 3
 2389 0138 36F81310 		ldrh	r1, [r6, r3, lsl #1]
 2390 013c 24F81310 		strh	r1, [r4, r3, lsl #1]	@ movhi
ARM GAS  /tmp/ccJH4gbL.s 			page 78


 2391 0140 EEE7     		b	.L202
 2392              	.LVL383:
 2393              	.L235:
 686:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 1] = src_buf[x + 1];
 2394              		.loc 1 686 0 is_stmt 1
 2395 0142 36F81310 		ldrh	r1, [r6, r3, lsl #1]
 2396 0146 24F81310 		strh	r1, [r4, r3, lsl #1]	@ movhi
 687:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 2] = src_buf[x + 2];
 2397              		.loc 1 687 0
 2398 014a 591C     		adds	r1, r3, #1
 2399 014c 36F81150 		ldrh	r5, [r6, r1, lsl #1]
 2400 0150 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 688:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 3] = src_buf[x + 3];
 2401              		.loc 1 688 0
 2402 0154 991C     		adds	r1, r3, #2
 2403 0156 36F81150 		ldrh	r5, [r6, r1, lsl #1]
 2404 015a 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 689:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2405              		.loc 1 689 0
 2406 015e D91C     		adds	r1, r3, #3
 2407 0160 36F81150 		ldrh	r5, [r6, r1, lsl #1]
 2408 0164 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 2409              	.L206:
 699:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2410              		.loc 1 699 0
 2411 0168 0432     		adds	r2, r2, #4
 2412              	.LVL384:
 683:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask32) {
 2413              		.loc 1 683 0
 2414 016a 0433     		adds	r3, r3, #4
 2415              	.LVL385:
 2416              	.L215:
 683:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask32) {
 2417              		.loc 1 683 0 is_stmt 0 discriminator 1
 2418 016c 4345     		cmp	r3, r8
 2419 016e 80F2C480 		bge	.L217
 684:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 2420              		.loc 1 684 0 is_stmt 1
 2421 0172 1168     		ldr	r1, [r2]
 2422 0174 0029     		cmp	r1, #0
 2423 0176 F7D0     		beq	.L206
 685:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x] = src_buf[x];
 2424              		.loc 1 685 0
 2425 0178 B1F1FF3F 		cmp	r1, #-1
 2426 017c E1D0     		beq	.L235
 2427              	.LVL386:
 693:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 2428              		.loc 1 693 0
 2429 017e 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 2430 0180 F5B1     		cbz	r5, .L208
 693:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 2431              		.loc 1 693 0 is_stmt 0 discriminator 1
 2432 0182 FF2D     		cmp	r5, #255
 2433 0184 00F08480 		beq	.L236
 2434              	.LVL387:
 2435              	.LBB173:
 2436              	.LBB174:
ARM GAS  /tmp/ccJH4gbL.s 			page 79


 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 2437              		.loc 3 449 0 is_stmt 1 discriminator 4
 2438 0188 0435     		adds	r5, r5, #4
 2439              	.LVL388:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 2440              		.loc 3 450 0 discriminator 4
 2441 018a 34F81310 		ldrh	r1, [r4, r3, lsl #1]
 2442 018e 41EA0141 		orr	r1, r1, r1, lsl #16
 2443 0192 DFF81CE2 		ldr	lr, .L242
 2444 0196 01EA0E01 		and	r1, r1, lr
 2445              	.LVL389:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 2446              		.loc 3 452 0 discriminator 4
 2447 019a 36F813C0 		ldrh	ip, [r6, r3, lsl #1]
 2448 019e 4CEA0C4C 		orr	ip, ip, ip, lsl #16
 2449 01a2 0CEA0E0C 		and	ip, ip, lr
 2450              	.LVL390:
 453:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 2451              		.loc 3 453 0 discriminator 4
 2452 01a6 ACEB010C 		sub	ip, ip, r1
 2453              	.LVL391:
 2454 01aa ED08     		lsrs	r5, r5, #3
 2455              	.LVL392:
 2456 01ac 0CFB05F5 		mul	r5, ip, r5
 2457 01b0 01EB5515 		add	r5, r1, r5, lsr #5
 2458 01b4 05EA0E0E 		and	lr, r5, lr
 2459              	.LVL393:
 454:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 2460              		.loc 3 454 0 discriminator 4
 2461 01b8 4EEA1E4E 		orr	lr, lr, lr, lsr #16
 2462              	.LVL394:
 2463              	.LBE174:
 2464              	.LBE173:
 693:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 2465              		.loc 1 693 0 discriminator 4
 2466 01bc 24F813E0 		strh	lr, [r4, r3, lsl #1]	@ movhi
 2467              	.L208:
 2468              	.LVL395:
 694:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 2469              		.loc 1 694 0 discriminator 6
 2470 01c0 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 2471 01c2 F9B1     		cbz	r1, .L210
 694:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 2472              		.loc 1 694 0 is_stmt 0 discriminator 1
 2473 01c4 FF29     		cmp	r1, #255
 2474 01c6 68D0     		beq	.L237
 694:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 2475              		.loc 1 694 0 discriminator 4
 2476 01c8 03F1010C 		add	ip, r3, #1
 2477              	.LVL396:
 2478              	.LBB175:
 2479              	.LBB176:
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 2480              		.loc 3 449 0 is_stmt 1 discriminator 4
 2481 01cc 0431     		adds	r1, r1, #4
 2482              	.LVL397:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
ARM GAS  /tmp/ccJH4gbL.s 			page 80


 2483              		.loc 3 450 0 discriminator 4
 2484 01ce 34F81C50 		ldrh	r5, [r4, ip, lsl #1]
 2485 01d2 45EA0545 		orr	r5, r5, r5, lsl #16
 2486 01d6 DFF8D8E1 		ldr	lr, .L242
 2487 01da 05EA0E05 		and	r5, r5, lr
 2488              	.LVL398:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 2489              		.loc 3 452 0 discriminator 4
 2490 01de 36F81CA0 		ldrh	r10, [r6, ip, lsl #1]
 2491 01e2 4AEA0A4A 		orr	r10, r10, r10, lsl #16
 2492 01e6 0AEA0E0A 		and	r10, r10, lr
 2493              	.LVL399:
 453:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 2494              		.loc 3 453 0 discriminator 4
 2495 01ea AAEB050A 		sub	r10, r10, r5
 2496              	.LVL400:
 2497 01ee C908     		lsrs	r1, r1, #3
 2498              	.LVL401:
 2499 01f0 0AFB01F1 		mul	r1, r10, r1
 2500 01f4 05EB5111 		add	r1, r5, r1, lsr #5
 2501 01f8 01EA0E01 		and	r1, r1, lr
 2502              	.LVL402:
 454:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 2503              		.loc 3 454 0 discriminator 4
 2504 01fc 41EA1141 		orr	r1, r1, r1, lsr #16
 2505              	.LVL403:
 2506              	.LBE176:
 2507              	.LBE175:
 694:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 2508              		.loc 1 694 0 discriminator 4
 2509 0200 24F81C10 		strh	r1, [r4, ip, lsl #1]	@ movhi
 2510              	.L210:
 2511              	.LVL404:
 695:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 2512              		.loc 1 695 0 discriminator 6
 2513 0204 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 2514 0206 F9B1     		cbz	r1, .L212
 695:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 2515              		.loc 1 695 0 is_stmt 0 discriminator 1
 2516 0208 FF29     		cmp	r1, #255
 2517 020a 4CD0     		beq	.L238
 695:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 2518              		.loc 1 695 0 discriminator 4
 2519 020c 03F1020C 		add	ip, r3, #2
 2520              	.LVL405:
 2521              	.LBB177:
 2522              	.LBB178:
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 2523              		.loc 3 449 0 is_stmt 1 discriminator 4
 2524 0210 0431     		adds	r1, r1, #4
 2525              	.LVL406:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 2526              		.loc 3 450 0 discriminator 4
 2527 0212 34F81C50 		ldrh	r5, [r4, ip, lsl #1]
 2528 0216 45EA0545 		orr	r5, r5, r5, lsl #16
 2529 021a DFF894E1 		ldr	lr, .L242
 2530 021e 05EA0E05 		and	r5, r5, lr
ARM GAS  /tmp/ccJH4gbL.s 			page 81


 2531              	.LVL407:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 2532              		.loc 3 452 0 discriminator 4
 2533 0222 36F81CA0 		ldrh	r10, [r6, ip, lsl #1]
 2534 0226 4AEA0A4A 		orr	r10, r10, r10, lsl #16
 2535 022a 0AEA0E0A 		and	r10, r10, lr
 2536              	.LVL408:
 453:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 2537              		.loc 3 453 0 discriminator 4
 2538 022e AAEB050A 		sub	r10, r10, r5
 2539              	.LVL409:
 2540 0232 C908     		lsrs	r1, r1, #3
 2541              	.LVL410:
 2542 0234 0AFB01F1 		mul	r1, r10, r1
 2543 0238 05EB5111 		add	r1, r5, r1, lsr #5
 2544 023c 01EA0E01 		and	r1, r1, lr
 2545              	.LVL411:
 454:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 2546              		.loc 3 454 0 discriminator 4
 2547 0240 41EA1141 		orr	r1, r1, r1, lsr #16
 2548              	.LVL412:
 2549              	.LBE178:
 2550              	.LBE177:
 695:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 2551              		.loc 1 695 0 discriminator 4
 2552 0244 24F81C10 		strh	r1, [r4, ip, lsl #1]	@ movhi
 2553              	.L212:
 2554              	.LVL413:
 696:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2555              		.loc 1 696 0 discriminator 6
 2556 0248 D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 2557 024a 0029     		cmp	r1, #0
 2558 024c 8CD0     		beq	.L206
 696:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2559              		.loc 1 696 0 is_stmt 0 discriminator 1
 2560 024e FF29     		cmp	r1, #255
 2561 0250 2FD0     		beq	.L239
 696:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2562              		.loc 1 696 0 discriminator 4
 2563 0252 03F1030C 		add	ip, r3, #3
 2564              	.LVL414:
 2565              	.LBB179:
 2566              	.LBB180:
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 2567              		.loc 3 449 0 is_stmt 1 discriminator 4
 2568 0256 0431     		adds	r1, r1, #4
 2569              	.LVL415:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 2570              		.loc 3 450 0 discriminator 4
 2571 0258 34F81C50 		ldrh	r5, [r4, ip, lsl #1]
 2572 025c 45EA0545 		orr	r5, r5, r5, lsl #16
 2573 0260 DFF84CE1 		ldr	lr, .L242
 2574 0264 05EA0E05 		and	r5, r5, lr
 2575              	.LVL416:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 2576              		.loc 3 452 0 discriminator 4
 2577 0268 36F81CA0 		ldrh	r10, [r6, ip, lsl #1]
ARM GAS  /tmp/ccJH4gbL.s 			page 82


 2578 026c 4AEA0A4A 		orr	r10, r10, r10, lsl #16
 2579 0270 0AEA0E0A 		and	r10, r10, lr
 2580              	.LVL417:
 453:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 2581              		.loc 3 453 0 discriminator 4
 2582 0274 AAEB050A 		sub	r10, r10, r5
 2583              	.LVL418:
 2584 0278 C908     		lsrs	r1, r1, #3
 2585              	.LVL419:
 2586 027a 0AFB01F1 		mul	r1, r10, r1
 2587 027e 05EB5111 		add	r1, r5, r1, lsr #5
 2588 0282 01EA0E01 		and	r1, r1, lr
 2589              	.LVL420:
 454:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 2590              		.loc 3 454 0 discriminator 4
 2591 0286 41EA1141 		orr	r1, r1, r1, lsr #16
 2592              	.LVL421:
 2593              	.LBE180:
 2594              	.LBE179:
 696:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2595              		.loc 1 696 0 discriminator 4
 2596 028a 24F81C10 		strh	r1, [r4, ip, lsl #1]	@ movhi
 2597 028e 6BE7     		b	.L206
 2598              	.LVL422:
 2599              	.L236:
 693:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 2600              		.loc 1 693 0 discriminator 3
 2601 0290 36F81310 		ldrh	r1, [r6, r3, lsl #1]
 2602 0294 24F81310 		strh	r1, [r4, r3, lsl #1]	@ movhi
 2603 0298 92E7     		b	.L208
 2604              	.LVL423:
 2605              	.L237:
 694:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 2606              		.loc 1 694 0 discriminator 3
 2607 029a 591C     		adds	r1, r3, #1
 2608 029c 36F81150 		ldrh	r5, [r6, r1, lsl #1]
 2609 02a0 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 2610 02a4 AEE7     		b	.L210
 2611              	.LVL424:
 2612              	.L238:
 695:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 2613              		.loc 1 695 0 discriminator 3
 2614 02a6 991C     		adds	r1, r3, #2
 2615 02a8 36F81150 		ldrh	r5, [r6, r1, lsl #1]
 2616 02ac 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 2617 02b0 CAE7     		b	.L212
 2618              	.LVL425:
 2619              	.L239:
 696:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2620              		.loc 1 696 0 discriminator 3
 2621 02b2 D91C     		adds	r1, r3, #3
 2622 02b4 36F81150 		ldrh	r5, [r6, r1, lsl #1]
 2623 02b8 24F81150 		strh	r5, [r4, r1, lsl #1]	@ movhi
 2624 02bc 54E7     		b	.L206
 2625              	.LVL426:
 2626              	.L219:
 2627              	.LBB181:
ARM GAS  /tmp/ccJH4gbL.s 			page 83


 2628              	.LBB182:
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 2629              		.loc 3 449 0 discriminator 4
 2630 02be 0435     		adds	r5, r5, #4
 2631              	.LVL427:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 2632              		.loc 3 450 0 discriminator 4
 2633 02c0 34F81310 		ldrh	r1, [r4, r3, lsl #1]
 2634 02c4 41EA0141 		orr	r1, r1, r1, lsl #16
 2635 02c8 DFF8E4E0 		ldr	lr, .L242
 2636 02cc 01EA0E01 		and	r1, r1, lr
 2637              	.LVL428:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 2638              		.loc 3 452 0 discriminator 4
 2639 02d0 36F813C0 		ldrh	ip, [r6, r3, lsl #1]
 2640 02d4 4CEA0C4C 		orr	ip, ip, ip, lsl #16
 2641 02d8 0CEA0E0C 		and	ip, ip, lr
 2642              	.LVL429:
 453:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 2643              		.loc 3 453 0 discriminator 4
 2644 02dc ACEB010C 		sub	ip, ip, r1
 2645              	.LVL430:
 2646 02e0 ED08     		lsrs	r5, r5, #3
 2647              	.LVL431:
 2648 02e2 0CFB05F5 		mul	r5, ip, r5
 2649 02e6 01EB5515 		add	r5, r1, r5, lsr #5
 2650 02ea 05EA0E0E 		and	lr, r5, lr
 2651              	.LVL432:
 454:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 2652              		.loc 3 454 0 discriminator 4
 2653 02ee 4EEA1E4E 		orr	lr, lr, lr, lsr #16
 2654              	.LVL433:
 2655              	.LBE182:
 2656              	.LBE181:
 704:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2657              		.loc 1 704 0 discriminator 4
 2658 02f2 24F813E0 		strh	lr, [r4, r3, lsl #1]	@ movhi
 2659              	.L218:
 704:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2660              		.loc 1 704 0 is_stmt 0 discriminator 6
 2661 02f6 0132     		adds	r2, r2, #1
 2662              	.LVL434:
 703:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 2663              		.loc 1 703 0 is_stmt 1 discriminator 6
 2664 02f8 0133     		adds	r3, r3, #1
 2665              	.LVL435:
 2666              	.L217:
 703:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 2667              		.loc 1 703 0 is_stmt 0 discriminator 1
 2668 02fa 8342     		cmp	r3, r0
 2669 02fc 09DA     		bge	.L240
 704:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2670              		.loc 1 704 0 is_stmt 1
 2671 02fe 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 2672 0300 002D     		cmp	r5, #0
 2673 0302 F8D0     		beq	.L218
 704:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
ARM GAS  /tmp/ccJH4gbL.s 			page 84


 2674              		.loc 1 704 0 is_stmt 0 discriminator 1
 2675 0304 FF2D     		cmp	r5, #255
 2676 0306 DAD1     		bne	.L219
 704:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2677              		.loc 1 704 0 discriminator 3
 2678 0308 36F81310 		ldrh	r1, [r6, r3, lsl #1]
 2679 030c 24F81310 		strh	r1, [r4, r3, lsl #1]	@ movhi
 2680 0310 F1E7     		b	.L218
 2681              	.L240:
 707:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2682              		.loc 1 707 0 is_stmt 1 discriminator 2
 2683 0312 019B     		ldr	r3, [sp, #4]
 2684              	.LVL436:
 2685 0314 04EB4304 		add	r4, r4, r3, lsl #1
 2686              	.LVL437:
 708:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 2687              		.loc 1 708 0 discriminator 2
 2688 0318 039B     		ldr	r3, [sp, #12]
 2689 031a 06EB4306 		add	r6, r6, r3, lsl #1
 2690              	.LVL438:
 709:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2691              		.loc 1 709 0 discriminator 2
 2692 031e 029B     		ldr	r3, [sp, #8]
 2693 0320 9944     		add	r9, r9, r3
 2694              	.LVL439:
 2695              	.LBE170:
 671:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2696              		.loc 1 671 0 discriminator 2
 2697 0322 0BF1010B 		add	fp, fp, #1
 2698              	.LVL440:
 2699              	.L201:
 671:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2700              		.loc 1 671 0 is_stmt 0 discriminator 1
 2701 0326 BB45     		cmp	fp, r7
 2702 0328 BFF6ACAE 		bge	.L192
 2703              	.LBB183:
 672:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if 0
 2704              		.loc 1 672 0 is_stmt 1
 2705 032c 4A46     		mov	r2, r9
 678:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 2706              		.loc 1 678 0
 2707 032e 0023     		movs	r3, #0
 2708 0330 F8E6     		b	.L221
 2709              	.LVL441:
 2710              	.L230:
 2711              	.LBE183:
 2712              	.LBE186:
 2713              	.LBB187:
 717:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
 2714              		.loc 1 717 0
 2715 0332 5546     		mov	r5, r10
 2716              	.L223:
 2717              	.LVL442:
 2718              	.LBB188:
 2719              	.LBB189:
 449:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 2720              		.loc 3 449 0 discriminator 4
ARM GAS  /tmp/ccJH4gbL.s 			page 85


 2721 0334 0435     		adds	r5, r5, #4
 2722              	.LVL443:
 450:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 2723              		.loc 3 450 0 discriminator 4
 2724 0336 34F81120 		ldrh	r2, [r4, r1, lsl #1]
 2725 033a 42EA0242 		orr	r2, r2, r2, lsl #16
 2726 033e DFF870E0 		ldr	lr, .L242
 2727 0342 02EA0E02 		and	r2, r2, lr
 2728              	.LVL444:
 452:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 2729              		.loc 3 452 0 discriminator 4
 2730 0346 36F81130 		ldrh	r3, [r6, r1, lsl #1]
 2731 034a 43EA0343 		orr	r3, r3, r3, lsl #16
 2732 034e 03EA0E03 		and	r3, r3, lr
 2733              	.LVL445:
 453:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 2734              		.loc 3 453 0 discriminator 4
 2735 0352 9B1A     		subs	r3, r3, r2
 2736              	.LVL446:
 2737 0354 C5F3C705 		ubfx	r5, r5, #3, #8
 2738              	.LVL447:
 2739 0358 03FB05F3 		mul	r3, r3, r5
 2740 035c 02EB5313 		add	r3, r2, r3, lsr #5
 2741 0360 03EA0E03 		and	r3, r3, lr
 2742              	.LVL448:
 454:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 2743              		.loc 3 454 0 discriminator 4
 2744 0364 43EA1343 		orr	r3, r3, r3, lsr #16
 2745              	.LVL449:
 2746              	.LBE189:
 2747              	.LBE188:
 718:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2748              		.loc 1 718 0 discriminator 4
 2749 0368 24F81130 		strh	r3, [r4, r1, lsl #1]	@ movhi
 2750              	.L222:
 2751              	.LBE187:
 715:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 2752              		.loc 1 715 0 discriminator 2
 2753 036c 0CF1010C 		add	ip, ip, #1
 2754              	.LVL450:
 2755              	.L225:
 715:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 2756              		.loc 1 715 0 is_stmt 0 discriminator 1
 2757 0370 8445     		cmp	ip, r0
 2758 0372 0ADA     		bge	.L241
 716:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 2759              		.loc 1 716 0 is_stmt 1
 2760 0374 6146     		mov	r1, ip
 2761 0376 19F80C50 		ldrb	r5, [r9, ip]	@ zero_extendqisi2
 2762 037a 002D     		cmp	r5, #0
 2763 037c F6D0     		beq	.L222
 2764              	.LBB190:
 717:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
 2765              		.loc 1 717 0
 2766 037e FC2D     		cmp	r5, #252
 2767 0380 D7D8     		bhi	.L230
 717:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
ARM GAS  /tmp/ccJH4gbL.s 			page 86


 2768              		.loc 1 717 0 is_stmt 0 discriminator 1
 2769 0382 05FB0AF5 		mul	r5, r5, r10
 2770 0386 2D0A     		lsrs	r5, r5, #8
 2771 0388 D4E7     		b	.L223
 2772              	.L241:
 2773              	.LBE190:
 721:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2774              		.loc 1 721 0 is_stmt 1 discriminator 2
 2775 038a 019B     		ldr	r3, [sp, #4]
 2776 038c 04EB4304 		add	r4, r4, r3, lsl #1
 2777              	.LVL451:
 722:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 2778              		.loc 1 722 0 discriminator 2
 2779 0390 06EB4B06 		add	r6, r6, fp, lsl #1
 2780              	.LVL452:
 723:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2781              		.loc 1 723 0 discriminator 2
 2782 0394 029B     		ldr	r3, [sp, #8]
 2783 0396 9944     		add	r9, r9, r3
 2784              	.LVL453:
 714:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2785              		.loc 1 714 0 discriminator 2
 2786 0398 08F10108 		add	r8, r8, #1
 2787              	.LVL454:
 2788              	.L200:
 714:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2789              		.loc 1 714 0 is_stmt 0 discriminator 1
 2790 039c B845     		cmp	r8, r7
 2791 039e BFF671AE 		bge	.L192
 715:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 2792              		.loc 1 715 0 is_stmt 1
 2793 03a2 4FF0000C 		mov	ip, #0
 2794 03a6 E3E7     		b	.L225
 2795              	.LVL455:
 2796              	.L228:
 714:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2797              		.loc 1 714 0
 2798 03a8 4FF00008 		mov	r8, #0
 2799 03ac F6E7     		b	.L200
 2800              	.L243:
 2801 03ae 00BF     		.align	2
 2802              	.L242:
 2803 03b0 1FF8E007 		.word	132184095
 2804              		.cfi_endproc
 2805              	.LFE165:
 2807              		.section	.text.lv_draw_sw_blend,"ax",%progbits
 2808              		.align	1
 2809              		.global	lv_draw_sw_blend
 2810              		.syntax unified
 2811              		.thumb
 2812              		.thumb_func
 2813              		.fpu fpv5-d16
 2815              	lv_draw_sw_blend:
 2816              	.LFB159:
  92:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Do not draw transparent things*/
 2817              		.loc 1 92 0
 2818              		.cfi_startproc
ARM GAS  /tmp/ccJH4gbL.s 			page 87


 2819              		@ args = 0, pretend = 0, frame = 8
 2820              		@ frame_needed = 0, uses_anonymous_args = 0
 2821              	.LVL456:
  94:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2822              		.loc 1 94 0
 2823 0000 0B7E     		ldrb	r3, [r1, #24]	@ zero_extendqisi2
 2824 0002 022B     		cmp	r3, #2
 2825 0004 00D8     		bhi	.L252
 2826 0006 7047     		bx	lr
 2827              	.L252:
  92:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Do not draw transparent things*/
 2828              		.loc 1 92 0
 2829 0008 30B5     		push	{r4, r5, lr}
 2830              	.LCFI28:
 2831              		.cfi_def_cfa_offset 12
 2832              		.cfi_offset 4, -12
 2833              		.cfi_offset 5, -8
 2834              		.cfi_offset 14, -4
 2835 000a 83B0     		sub	sp, sp, #12
 2836              	.LCFI29:
 2837              		.cfi_def_cfa_offset 24
 2838 000c 0C46     		mov	r4, r1
 2839 000e 0546     		mov	r5, r0
  97:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2840              		.loc 1 97 0
 2841 0010 8268     		ldr	r2, [r0, #8]
 2842 0012 0968     		ldr	r1, [r1]
 2843              	.LVL457:
 2844 0014 6846     		mov	r0, sp
 2845              	.LVL458:
 2846 0016 FFF7FEFF 		bl	_lv_area_intersect
 2847              	.LVL459:
 2848 001a 38B1     		cbz	r0, .L244
  99:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2849              		.loc 1 99 0
 2850 001c 6B6B     		ldr	r3, [r5, #52]
 2851 001e 0BB1     		cbz	r3, .L246
  99:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2852              		.loc 1 99 0 is_stmt 0 discriminator 1
 2853 0020 2846     		mov	r0, r5
 2854 0022 9847     		blx	r3
 2855              	.LVL460:
 2856              	.L246:
 101:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 2857              		.loc 1 101 0 is_stmt 1
 2858 0024 6B6D     		ldr	r3, [r5, #84]
 2859 0026 2146     		mov	r1, r4
 2860 0028 2846     		mov	r0, r5
 2861 002a 9847     		blx	r3
 2862              	.LVL461:
 2863              	.L244:
 102:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2864              		.loc 1 102 0
 2865 002c 03B0     		add	sp, sp, #12
 2866              	.LCFI30:
 2867              		.cfi_def_cfa_offset 12
 2868              		@ sp needed
ARM GAS  /tmp/ccJH4gbL.s 			page 88


 2869 002e 30BD     		pop	{r4, r5, pc}
 2870              		.cfi_endproc
 2871              	.LFE159:
 2873              		.section	.text.lv_draw_sw_blend_basic,"ax",%progbits
 2874              		.align	1
 2875              		.global	lv_draw_sw_blend_basic
 2876              		.syntax unified
 2877              		.thumb
 2878              		.thumb_func
 2879              		.fpu fpv5-d16
 2881              	lv_draw_sw_blend_basic:
 2882              	.LFB160:
 105:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_opa_t * mask;
 2883              		.loc 1 105 0
 2884              		.cfi_startproc
 2885              		@ args = 0, pretend = 0, frame = 16
 2886              		@ frame_needed = 0, uses_anonymous_args = 0
 2887              	.LVL462:
 2888 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2889              	.LCFI31:
 2890              		.cfi_def_cfa_offset 36
 2891              		.cfi_offset 4, -36
 2892              		.cfi_offset 5, -32
 2893              		.cfi_offset 6, -28
 2894              		.cfi_offset 7, -24
 2895              		.cfi_offset 8, -20
 2896              		.cfi_offset 9, -16
 2897              		.cfi_offset 10, -12
 2898              		.cfi_offset 11, -8
 2899              		.cfi_offset 14, -4
 2900 0004 8BB0     		sub	sp, sp, #44
 2901              	.LCFI32:
 2902              		.cfi_def_cfa_offset 80
 107:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf && dsc->mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 2903              		.loc 1 107 0
 2904 0006 CF68     		ldr	r7, [r1, #12]
 108:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 2905              		.loc 1 108 0
 2906 0008 0FB1     		cbz	r7, .L254
 108:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 2907              		.loc 1 108 0 is_stmt 0 discriminator 1
 2908 000a 0B7C     		ldrb	r3, [r1, #16]	@ zero_extendqisi2
 2909 000c 8BB1     		cbz	r3, .L253
 2910              	.L254:
 109:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
 2911              		.loc 1 109 0 is_stmt 1
 2912 000e 0B7C     		ldrb	r3, [r1, #16]	@ zero_extendqisi2
 2913 0010 012B     		cmp	r3, #1
 2914 0012 11D0     		beq	.L276
 2915              	.L256:
 2916 0014 0C46     		mov	r4, r1
 2917 0016 0646     		mov	r6, r0
 2918              	.LVL463:
 112:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2919              		.loc 1 112 0
 2920 0018 4368     		ldr	r3, [r0, #4]
 2921              	.LVL464:
ARM GAS  /tmp/ccJH4gbL.s 			page 89


 2922              	.LBB191:
 2923              	.LBB192:
 125:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2924              		.loc 2 125 0
 2925 001a 9D88     		ldrh	r5, [r3, #4]
 2926 001c 1B88     		ldrh	r3, [r3]
 2927              	.LVL465:
 2928 001e ED1A     		subs	r5, r5, r3
 2929 0020 ADB2     		uxth	r5, r5
 2930 0022 0135     		adds	r5, r5, #1
 2931 0024 2DB2     		sxth	r5, r5
 2932              	.LVL466:
 2933              	.LBE192:
 2934              	.LBE191:
 115:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2935              		.loc 1 115 0
 2936 0026 8268     		ldr	r2, [r0, #8]
 2937 0028 0968     		ldr	r1, [r1]
 2938              	.LVL467:
 2939 002a 08A8     		add	r0, sp, #32
 2940              	.LVL468:
 2941 002c FFF7FEFF 		bl	_lv_area_intersect
 2942              	.LVL469:
 2943 0030 20B9     		cbnz	r0, .L277
 2944              	.LVL470:
 2945              	.L253:
 200:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2946              		.loc 1 200 0
 2947 0032 0BB0     		add	sp, sp, #44
 2948              	.LCFI33:
 2949              		.cfi_remember_state
 2950              		.cfi_def_cfa_offset 36
 2951              		@ sp needed
 2952 0034 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2953              	.LVL471:
 2954              	.L276:
 2955              	.LCFI34:
 2956              		.cfi_restore_state
 109:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
 2957              		.loc 1 109 0
 2958 0038 0027     		movs	r7, #0
 2959 003a EBE7     		b	.L256
 2960              	.LVL472:
 2961              	.L277:
 117:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t * dest_buf = draw_ctx->buf;
 2962              		.loc 1 117 0
 2963 003c FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 2964              	.LVL473:
 2965 0040 8346     		mov	fp, r0
 2966              	.LVL474:
 118:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(disp->driver->set_px_cb == NULL) {
 2967              		.loc 1 118 0
 2968 0042 3368     		ldr	r3, [r6]
 2969 0044 0793     		str	r3, [sp, #28]
 2970              	.LVL475:
 119:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(disp->driver->screen_transp == 0) {
 2971              		.loc 1 119 0
ARM GAS  /tmp/ccJH4gbL.s 			page 90


 2972 0046 0368     		ldr	r3, [r0]
 2973              	.LVL476:
 2974 0048 DA69     		ldr	r2, [r3, #28]
 2975 004a 002A     		cmp	r2, #0
 2976 004c 5ED0     		beq	.L278
 2977              	.LVL477:
 2978              	.L257:
 132:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t src_stride;
 2979              		.loc 1 132 0
 2980 004e D4F804A0 		ldr	r10, [r4, #4]
 2981              	.LVL478:
 134:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_stride = lv_area_get_width(dsc->blend_area);
 2982              		.loc 1 134 0
 2983 0052 BAF1000F 		cmp	r10, #0
 2984 0056 00F08580 		beq	.L272
 135:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_buf += src_stride * (blend_area.y1 - dsc->blend_area->y1) + (blend_area.x1 - dsc->blend
 2985              		.loc 1 135 0
 2986 005a 2268     		ldr	r2, [r4]
 2987              	.LVL479:
 2988              	.LBB193:
 2989              	.LBB194:
 125:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2990              		.loc 2 125 0
 2991 005c B2F80490 		ldrh	r9, [r2, #4]
 2992 0060 B2F90010 		ldrsh	r1, [r2]
 2993 0064 88B2     		uxth	r0, r1
 2994 0066 A9EB0009 		sub	r9, r9, r0
 2995 006a 1FFA89F9 		uxth	r9, r9
 2996 006e 09F10109 		add	r9, r9, #1
 2997 0072 0FFA89F9 		sxth	r9, r9
 2998              	.LVL480:
 2999              	.LBE194:
 3000              	.LBE193:
 136:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3001              		.loc 1 136 0
 3002 0076 BDF92200 		ldrsh	r0, [sp, #34]
 3003 007a B2F90220 		ldrsh	r2, [r2, #2]
 3004 007e 821A     		subs	r2, r0, r2
 3005 0080 BDF92000 		ldrsh	r0, [sp, #32]
 3006 0084 411A     		subs	r1, r0, r1
 3007 0086 02FB0911 		mla	r1, r2, r9, r1
 3008 008a 0AEB410A 		add	r10, r10, r1, lsl #1
 3009              	.LVL481:
 3010              	.L259:
 143:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Round the values in the mask if anti-aliasing is disabled*/
 3011              		.loc 1 143 0
 3012 008e 002F     		cmp	r7, #0
 3013 0090 7BD0     		beq	.L273
 145:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t mask_size = lv_area_get_size(dsc->mask_area);
 3014              		.loc 1 145 0
 3015 0092 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3016 0094 13F0080F 		tst	r3, #8
 3017 0098 67D0     		beq	.L279
 3018              	.L261:
 153:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask += mask_stride * (blend_area.y1 - dsc->mask_area->y1) + (blend_area.x1 - dsc->mask_are
 3019              		.loc 1 153 0
 3020 009a 6169     		ldr	r1, [r4, #20]
ARM GAS  /tmp/ccJH4gbL.s 			page 91


 3021              	.LVL482:
 3022              	.LBB195:
 3023              	.LBB196:
 125:Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3024              		.loc 2 125 0
 3025 009c B1F80480 		ldrh	r8, [r1, #4]
 3026 00a0 B1F90020 		ldrsh	r2, [r1]
 3027 00a4 93B2     		uxth	r3, r2
 3028 00a6 A8EB0308 		sub	r8, r8, r3
 3029 00aa 1FFA88F8 		uxth	r8, r8
 3030 00ae 08F10108 		add	r8, r8, #1
 3031 00b2 0FFA88F8 		sxth	r8, r8
 3032              	.LVL483:
 3033              	.LBE196:
 3034              	.LBE195:
 154:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3035              		.loc 1 154 0
 3036 00b6 BDF92230 		ldrsh	r3, [sp, #34]
 3037 00ba B1F90210 		ldrsh	r1, [r1, #2]
 3038 00be 5B1A     		subs	r3, r3, r1
 3039 00c0 BDF92010 		ldrsh	r1, [sp, #32]
 3040 00c4 8A1A     		subs	r2, r1, r2
 3041 00c6 03FB0823 		mla	r3, r3, r8, r2
 3042 00ca 1F44     		add	r7, r7, r3
 3043              	.LVL484:
 3044              	.L260:
 161:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3045              		.loc 1 161 0
 3046 00cc 7368     		ldr	r3, [r6, #4]
 3047 00ce 1988     		ldrh	r1, [r3]
 3048 00d0 5A88     		ldrh	r2, [r3, #2]
 3049 00d2 5242     		negs	r2, r2
 3050 00d4 4942     		negs	r1, r1
 3051 00d6 12B2     		sxth	r2, r2
 3052 00d8 09B2     		sxth	r1, r1
 3053 00da 08A8     		add	r0, sp, #32
 3054 00dc FFF7FEFF 		bl	lv_area_move
 3055              	.LVL485:
 164:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 3056              		.loc 1 164 0
 3057 00e0 DBF80030 		ldr	r3, [fp]
 3058 00e4 DB69     		ldr	r3, [r3, #28]
 3059 00e6 002B     		cmp	r3, #0
 3060 00e8 5ED0     		beq	.L265
 165:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_set_px(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 3061              		.loc 1 165 0
 3062 00ea 6368     		ldr	r3, [r4, #4]
 3063 00ec 002B     		cmp	r3, #0
 3064 00ee 4FD0     		beq	.L280
 169:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3065              		.loc 1 169 0
 3066 00f0 CDF80C80 		str	r8, [sp, #12]
 3067 00f4 0297     		str	r7, [sp, #8]
 3068 00f6 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 3069 00f8 0193     		str	r3, [sp, #4]
 3070 00fa CDF80090 		str	r9, [sp]
 3071 00fe 5346     		mov	r3, r10
ARM GAS  /tmp/ccJH4gbL.s 			page 92


 3072 0100 2A46     		mov	r2, r5
 3073 0102 08A9     		add	r1, sp, #32
 3074 0104 0798     		ldr	r0, [sp, #28]
 3075 0106 FFF7FEFF 		bl	map_set_px
 3076              	.LVL486:
 3077 010a 92E7     		b	.L253
 3078              	.LVL487:
 3079              	.L278:
 120:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) + (blend_area.x1 - d
 3080              		.loc 1 120 0
 3081 010c 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 3082 010e 12F0400F 		tst	r2, #64
 3083 0112 11D1     		bne	.L258
 121:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3084              		.loc 1 121 0
 3085 0114 BDF92220 		ldrsh	r2, [sp, #34]
 3086 0118 7068     		ldr	r0, [r6, #4]
 3087              	.LVL488:
 3088 011a B0F90210 		ldrsh	r1, [r0, #2]
 3089 011e 521A     		subs	r2, r2, r1
 3090 0120 BDF92010 		ldrsh	r1, [sp, #32]
 3091 0124 B0F90000 		ldrsh	r0, [r0]
 3092 0128 091A     		subs	r1, r1, r0
 3093 012a 02FB0512 		mla	r2, r2, r5, r1
 3094 012e 0799     		ldr	r1, [sp, #28]
 3095 0130 01EB4202 		add	r2, r1, r2, lsl #1
 3096 0134 0792     		str	r2, [sp, #28]
 3097              	.LVL489:
 3098 0136 8AE7     		b	.L257
 3099              	.LVL490:
 3100              	.L258:
 3101              	.LBB197:
 126:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (blend_area.x1 - draw_ctx->buf_area->x1) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 3102              		.loc 1 126 0
 3103 0138 BDF92220 		ldrsh	r2, [sp, #34]
 3104 013c 7068     		ldr	r0, [r6, #4]
 3105              	.LVL491:
 3106 013e B0F90210 		ldrsh	r1, [r0, #2]
 3107 0142 521A     		subs	r2, r2, r1
 3108 0144 02FB05F2 		mul	r2, r2, r5
 3109 0148 02EB4202 		add	r2, r2, r2, lsl #1
 3110              	.LVL492:
 127:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf = (lv_color_t *)dest_buf8;
 3111              		.loc 1 127 0
 3112 014c BDF92010 		ldrsh	r1, [sp, #32]
 3113 0150 B0F90000 		ldrsh	r0, [r0]
 3114 0154 091A     		subs	r1, r1, r0
 3115 0156 01EB4101 		add	r1, r1, r1, lsl #1
 3116 015a 0A44     		add	r2, r2, r1
 3117              	.LVL493:
 3118 015c 0799     		ldr	r1, [sp, #28]
 3119 015e 1144     		add	r1, r1, r2
 3120 0160 0791     		str	r1, [sp, #28]
 3121              	.LVL494:
 3122 0162 74E7     		b	.L257
 3123              	.LVL495:
 3124              	.L272:
ARM GAS  /tmp/ccJH4gbL.s 			page 93


 3125              	.LBE197:
 139:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3126              		.loc 1 139 0
 3127 0164 4FF00009 		mov	r9, #0
 3128 0168 91E7     		b	.L259
 3129              	.LVL496:
 3130              	.L279:
 3131              	.LBB198:
 146:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t i;
 3132              		.loc 1 146 0
 3133 016a 6069     		ldr	r0, [r4, #20]
 3134 016c FFF7FEFF 		bl	lv_area_get_size
 3135              	.LVL497:
 148:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 3136              		.loc 1 148 0
 3137 0170 0023     		movs	r3, #0
 3138 0172 02E0     		b	.L262
 3139              	.LVL498:
 3140              	.L274:
 149:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3141              		.loc 1 149 0
 3142 0174 0021     		movs	r1, #0
 3143              	.L263:
 149:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3144              		.loc 1 149 0 is_stmt 0 discriminator 4
 3145 0176 1170     		strb	r1, [r2]
 148:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 3146              		.loc 1 148 0 is_stmt 1 discriminator 4
 3147 0178 0133     		adds	r3, r3, #1
 3148              	.LVL499:
 3149              	.L262:
 148:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 3150              		.loc 1 148 0 is_stmt 0 discriminator 2
 3151 017a 8342     		cmp	r3, r0
 3152 017c 8DDA     		bge	.L261
 149:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3153              		.loc 1 149 0 is_stmt 1
 3154 017e FA18     		adds	r2, r7, r3
 3155 0180 F95C     		ldrb	r1, [r7, r3]	@ zero_extendqisi2
 3156 0182 8029     		cmp	r1, #128
 3157 0184 F6D9     		bls	.L274
 3158 0186 FF21     		movs	r1, #255
 3159 0188 F5E7     		b	.L263
 3160              	.LVL500:
 3161              	.L273:
 3162              	.LBE198:
 158:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3163              		.loc 1 158 0
 3164 018a 4FF00008 		mov	r8, #0
 3165 018e 9DE7     		b	.L260
 3166              	.LVL501:
 3167              	.L280:
 166:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3168              		.loc 1 166 0
 3169 0190 2389     		ldrh	r3, [r4, #8]
 3170 0192 CDF80880 		str	r8, [sp, #8]
 3171 0196 0197     		str	r7, [sp, #4]
ARM GAS  /tmp/ccJH4gbL.s 			page 94


 3172 0198 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 3173 019a 0092     		str	r2, [sp]
 3174 019c 2A46     		mov	r2, r5
 3175 019e 08A9     		add	r1, sp, #32
 3176 01a0 0798     		ldr	r0, [sp, #28]
 3177 01a2 FFF7FEFF 		bl	fill_set_px
 3178              	.LVL502:
 3179 01a6 44E7     		b	.L253
 3180              	.L265:
 182:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 3181              		.loc 1 182 0
 3182 01a8 627E     		ldrb	r2, [r4, #25]	@ zero_extendqisi2
 3183 01aa DAB9     		cbnz	r2, .L268
 183:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_normal(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 3184              		.loc 1 183 0
 3185 01ac 6368     		ldr	r3, [r4, #4]
 3186 01ae 6BB1     		cbz	r3, .L281
 187:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3187              		.loc 1 187 0
 3188 01b0 CDF80C80 		str	r8, [sp, #12]
 3189 01b4 0297     		str	r7, [sp, #8]
 3190 01b6 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 3191 01b8 0193     		str	r3, [sp, #4]
 3192 01ba CDF80090 		str	r9, [sp]
 3193 01be 5346     		mov	r3, r10
 3194 01c0 2A46     		mov	r2, r5
 3195 01c2 08A9     		add	r1, sp, #32
 3196 01c4 0798     		ldr	r0, [sp, #28]
 3197 01c6 FFF7FEFF 		bl	map_normal
 3198              	.LVL503:
 3199 01ca 32E7     		b	.L253
 3200              	.L281:
 184:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3201              		.loc 1 184 0
 3202 01cc 2389     		ldrh	r3, [r4, #8]
 3203 01ce CDF80880 		str	r8, [sp, #8]
 3204 01d2 0197     		str	r7, [sp, #4]
 3205 01d4 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 3206 01d6 0092     		str	r2, [sp]
 3207 01d8 2A46     		mov	r2, r5
 3208 01da 08A9     		add	r1, sp, #32
 3209 01dc 0798     		ldr	r0, [sp, #28]
 3210 01de FFF7FEFF 		bl	fill_normal
 3211              	.LVL504:
 3212 01e2 26E7     		b	.L253
 3213              	.L268:
 192:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_blended(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_strid
 3214              		.loc 1 192 0
 3215 01e4 6368     		ldr	r3, [r4, #4]
 3216 01e6 73B1     		cbz	r3, .L282
 196:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3217              		.loc 1 196 0
 3218 01e8 0492     		str	r2, [sp, #16]
 3219 01ea CDF80C80 		str	r8, [sp, #12]
 3220 01ee 0297     		str	r7, [sp, #8]
 3221 01f0 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 3222 01f2 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccJH4gbL.s 			page 95


 3223 01f4 CDF80090 		str	r9, [sp]
 3224 01f8 5346     		mov	r3, r10
 3225 01fa 2A46     		mov	r2, r5
 3226 01fc 08A9     		add	r1, sp, #32
 3227 01fe 0798     		ldr	r0, [sp, #28]
 3228 0200 FFF7FEFF 		bl	map_blended
 3229              	.LVL505:
 3230 0204 15E7     		b	.L253
 3231              	.L282:
 193:Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3232              		.loc 1 193 0
 3233 0206 2389     		ldrh	r3, [r4, #8]
 3234 0208 0392     		str	r2, [sp, #12]
 3235 020a CDF80880 		str	r8, [sp, #8]
 3236 020e 0197     		str	r7, [sp, #4]
 3237 0210 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 3238 0212 0092     		str	r2, [sp]
 3239 0214 2A46     		mov	r2, r5
 3240 0216 08A9     		add	r1, sp, #32
 3241 0218 0798     		ldr	r0, [sp, #28]
 3242 021a FFF7FEFF 		bl	fill_blended
 3243              	.LVL506:
 3244 021e 08E7     		b	.L253
 3245              		.cfi_endproc
 3246              	.LFE160:
 3248              		.text
 3249              	.Letext0:
 3250              		.file 4 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 3251              		.file 5 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 3252              		.file 6 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_types.h"
 3253              		.file 7 "/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
 3254              		.file 8 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 3255              		.file 9 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 3256              		.file 10 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 3257              		.file 11 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/../font/lv_font.h"
 3258              		.file 12 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_txt.h"
 3259              		.file 13 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_bidi.h"
 3260              		.file 14 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_style.h"
 3261              		.file 15 "Drivers/lvgl/lvgl/src/draw/sw/../lv_draw_mask.h"
 3262              		.file 16 "Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw_blend.h"
 3263              		.file 17 "Drivers/lvgl/lvgl/src/draw/sw/../lv_img_buf.h"
 3264              		.file 18 "Drivers/lvgl/lvgl/src/draw/sw/../../core/lv_obj.h"
 3265              		.file 19 "Drivers/lvgl/lvgl/src/draw/sw/../lv_draw_rect.h"
 3266              		.file 20 "Drivers/lvgl/lvgl/src/draw/sw/../lv_draw_label.h"
 3267              		.file 21 "Drivers/lvgl/lvgl/src/draw/sw/../lv_draw_img.h"
 3268              		.file 22 "Drivers/lvgl/lvgl/src/draw/sw/../lv_draw_line.h"
 3269              		.file 23 "Drivers/lvgl/lvgl/src/draw/sw/../lv_draw_arc.h"
 3270              		.file 24 "Drivers/lvgl/lvgl/src/draw/sw/../lv_draw_layer.h"
 3271              		.file 25 "Drivers/lvgl/lvgl/src/draw/sw/../lv_draw.h"
 3272              		.file 26 "Drivers/lvgl/lvgl/src/draw/sw/../../hal/../misc/lv_timer.h"
 3273              		.file 27 "Drivers/lvgl/lvgl/src/draw/sw/../../hal/lv_hal_disp.h"
 3274              		.file 28 "Drivers/lvgl/lvgl/src/draw/sw/../../core/lv_group.h"
 3275              		.file 29 "Drivers/lvgl/lvgl/src/draw/sw/../../hal/../misc/lv_ll.h"
 3276              		.file 30 "Drivers/lvgl/lvgl/src/draw/sw/lv_draw_sw.h"
 3277              		.file 31 "Drivers/lvgl/lvgl/src/draw/sw/../../core/lv_obj_scroll.h"
 3278              		.file 32 "Drivers/lvgl/lvgl/src/draw/sw/../../core/lv_obj_style.h"
 3279              		.file 33 "Drivers/lvgl/lvgl/src/draw/sw/../../core/lv_obj_class.h"
ARM GAS  /tmp/ccJH4gbL.s 			page 96


 3280              		.file 34 "Drivers/lvgl/lvgl/src/draw/sw/../../core/lv_event.h"
 3281              		.file 35 "Drivers/lvgl/lvgl/src/draw/sw/../../misc/lv_mem.h"
 3282              		.file 36 "Drivers/lvgl/lvgl/src/draw/sw/../../core/lv_refr.h"
ARM GAS  /tmp/ccJH4gbL.s 			page 97


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_draw_sw_blend.c
     /tmp/ccJH4gbL.s:17     .text.fill_blended:0000000000000000 $t
     /tmp/ccJH4gbL.s:23     .text.fill_blended:0000000000000000 fill_blended
     /tmp/ccJH4gbL.s:301    .text.fill_blended:0000000000000148 $d
     /tmp/ccJH4gbL.s:665    .text.color_blend_true_color_additive:0000000000000000 color_blend_true_color_additive
     /tmp/ccJH4gbL.s:890    .text.color_blend_true_color_multiply:0000000000000000 color_blend_true_color_multiply
     /tmp/ccJH4gbL.s:781    .text.color_blend_true_color_subtractive:0000000000000000 color_blend_true_color_subtractive
     /tmp/ccJH4gbL.s:309    .text.map_blended:0000000000000000 $t
     /tmp/ccJH4gbL.s:315    .text.map_blended:0000000000000000 map_blended
     /tmp/ccJH4gbL.s:651    .text.map_blended:0000000000000194 $d
     /tmp/ccJH4gbL.s:659    .text.color_blend_true_color_additive:0000000000000000 $t
     /tmp/ccJH4gbL.s:770    .text.color_blend_true_color_additive:0000000000000078 $d
     /tmp/ccJH4gbL.s:775    .text.color_blend_true_color_subtractive:0000000000000000 $t
     /tmp/ccJH4gbL.s:879    .text.color_blend_true_color_subtractive:0000000000000074 $d
     /tmp/ccJH4gbL.s:884    .text.color_blend_true_color_multiply:0000000000000000 $t
     /tmp/ccJH4gbL.s:977    .text.color_blend_true_color_multiply:0000000000000074 $d
     /tmp/ccJH4gbL.s:982    .text.fill_set_px:0000000000000000 $t
     /tmp/ccJH4gbL.s:988    .text.fill_set_px:0000000000000000 fill_set_px
     /tmp/ccJH4gbL.s:1166   .text.map_set_px:0000000000000000 $t
     /tmp/ccJH4gbL.s:1172   .text.map_set_px:0000000000000000 map_set_px
     /tmp/ccJH4gbL.s:1362   .text.fill_normal:0000000000000000 $t
     /tmp/ccJH4gbL.s:1368   .text.fill_normal:0000000000000000 fill_normal
     /tmp/ccJH4gbL.s:2106   .text.fill_normal:00000000000003a8 $d
     /tmp/ccJH4gbL.s:2110   .text.fill_normal:00000000000003ac $t
     /tmp/ccJH4gbL.s:2147   .text.map_normal:0000000000000000 $t
     /tmp/ccJH4gbL.s:2153   .text.map_normal:0000000000000000 map_normal
     /tmp/ccJH4gbL.s:2803   .text.map_normal:00000000000003b0 $d
     /tmp/ccJH4gbL.s:2808   .text.lv_draw_sw_blend:0000000000000000 $t
     /tmp/ccJH4gbL.s:2815   .text.lv_draw_sw_blend:0000000000000000 lv_draw_sw_blend
     /tmp/ccJH4gbL.s:2874   .text.lv_draw_sw_blend_basic:0000000000000000 $t
     /tmp/ccJH4gbL.s:2881   .text.lv_draw_sw_blend_basic:0000000000000000 lv_draw_sw_blend_basic

UNDEFINED SYMBOLS
_lv_refr_get_disp_refreshing
lv_color_fill
lv_memcpy
_lv_area_intersect
lv_area_move
lv_area_get_size
