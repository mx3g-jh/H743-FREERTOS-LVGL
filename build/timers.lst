ARM GAS  /tmp/cc5PSjuz.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"timers.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	prvGetNextExpireTime:
  24              	.LFB18:
  25              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/timers.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** task.h is included from an application file. */
ARM GAS  /tmp/cc5PSjuz.s 			page 2


  34:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "timers.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  41:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  42:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  43:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  44:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  45:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  46:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  47:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** for the header files above, but not in this file, in order to generate the
  48:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** correct privileged Vs unprivileged linkage and placement. */
  49:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e9021 !e961 !e750. */
  50:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* This entire source file will be skipped if the application is not configured
  53:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  54:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** of this file.  If you want to include software timer functionality then ensure
  55:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  58:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Misc definitions. */
  59:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
  60:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  61:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  62:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  63:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #ifndef configTIMER_SERVICE_TASK_NAME
  64:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#define configTIMER_SERVICE_TASK_NAME "Tmr Svc"
  65:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Bit definitions used in the ucStatus member of a timer structure. */
  68:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrSTATUS_IS_ACTIVE					( ( uint8_t ) 0x01 )
  69:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrSTATUS_IS_STATICALLY_ALLOCATED	( ( uint8_t ) 0x02 )
  70:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrSTATUS_IS_AUTORELOAD				( ( uint8_t ) 0x04 )
  71:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of the timers themselves. */
  73:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerControl /* The old naming convention is used to prevent breaking kernel awar
  74:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  75:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
  76:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
  77:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
  78:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
  79:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
  80:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  81:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
  82:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  83:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint8_t 				ucStatus;			/*<< Holds bits to say if the timer was statically allocated or not, and i
  84:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } xTIMER;
  85:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  86:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  87:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** name below to enable the use of older kernel aware debuggers. */
  88:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef xTIMER Timer_t;
  89:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
ARM GAS  /tmp/cc5PSjuz.s 			page 3


  91:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
  92:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and messages that request the execution of a non-timer related callback.  The
  93:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** two message types are defined in two separate structures, xTimerParametersType
  94:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and xCallbackParametersType respectively. */
  95:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerParameters
  96:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  97:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
  98:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
  99:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } TimerParameter_t;
 100:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 102:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrCallbackParameters
 103:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 104:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 105:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 106:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 107:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } CallbackParameters_t;
 108:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The structure that contains the two message types, along with an identifier
 110:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** that is used to determine which message type is valid. */
 111:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerQueueMessage
 112:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 113:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 114:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	union
 115:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 116:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		TimerParameter_t xTimerParameters;
 117:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 119:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 120:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 121:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			CallbackParameters_t xCallbackParameters;
 122:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 123:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	} u;
 124:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } DaemonTaskMessage_t;
 125:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 127:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** which static variables must be declared volatile. */
 128:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 130:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 131:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** timer service task is allowed to access these lists.
 132:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** xActiveTimerList1 and xActiveTimerList2 could be at function scope but that
 133:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** breaks some kernel aware debuggers, and debuggers that reply on removing the
 134:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static qualifier. */
 135:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1;
 136:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2;
 137:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList;
 138:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList;
 139:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 140:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* A queue that is used to send commands to the timer service task. */
 141:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 142:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 143:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 144:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -restore */
 145:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 147:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/cc5PSjuz.s 			page 4


 148:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 149:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If static allocation is supported then the application must provide the
 151:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	following callback function - which enables the application to optionally
 152:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
 153:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	and TCB. */
 154:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 155:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
 157:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 159:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 160:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * been initialised already.
 161:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 162:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 163:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 165:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 166:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 167:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * xTimerQueue queue.
 168:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 169:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static portTASK_FUNCTION_PROTO( prvTimerTask, pvParameters ) PRIVILEGED_FUNCTION;
 170:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 172:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called by the timer service task to interpret and process a command it
 173:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * received on the timer queue.
 174:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 175:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 176:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 178:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 179:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 180:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 181:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 182:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 183:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 184:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 185:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * auto-reload timer, then call its callback.
 186:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 187:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 188:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 190:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 191:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * current timer list does not still reference some timers.
 192:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 193:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 194:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 196:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 197:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 198:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 199:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 200:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 202:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If the timer list contains any active timers then return the expire time of
 203:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 204:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
ARM GAS  /tmp/cc5PSjuz.s 			page 5


 205:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * to pdTRUE.
 206:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 207:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
 208:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 210:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 211:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * until either a timer does expire or a command is received.
 212:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 213:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 214:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 215:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 216:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 217:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * dynamically to fill in the structure's members.
 218:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 219:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 220:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 221:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 222:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 223:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
 225:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 230:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* This function is called when the scheduler is started if
 232:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer service task has been created/initialised.  If timers have already
 234:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been created then the initialisation will already have been performed. */
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	prvCheckForValidListAndQueue();
 236:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 239:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 240:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 243:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 244:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 247:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 248:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													ulTimerTaskStackSize,
 249:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													NULL,
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 251:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskStackBuffer,
 252:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskTCBBuffer );
 253:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTimerTaskHandle != NULL )
 255:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 256:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = pdPASS;
 257:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 258:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 259:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#else
 260:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 261:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
ARM GAS  /tmp/cc5PSjuz.s 			page 6


 262:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 263:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 264:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									NULL,
 265:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 266:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									&xTimerTaskHandle );
 267:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 268:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 269:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 270:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 271:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 272:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 274:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 275:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xReturn );
 276:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 278:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 279:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 280:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 281:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 282:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			/*lint !e971 Unqualified char types 
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 284:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const UBaseType_t uxAutoReload,
 285:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								void * const pvTimerID,
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction )
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 289:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All values ret
 291:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 293:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 294:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Status is thus far zero as the timer is not created statically
 295:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and has not been started.  The auto-reload bit may get set in
 296:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer. */
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxNewTimer->ucStatus = 0x00;
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 299:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 300:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 301:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 304:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 305:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 306:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 307:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 308:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 309:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		/*lint !e971 Unqualified char t
 310:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 311:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const UBaseType_t uxAutoReload,
 312:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										void * const pvTimerID,
 313:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 314:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										StaticTimer_t *pxTimerBuffer )
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 317:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 318:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configASSERT_DEFINED == 1 )
ARM GAS  /tmp/cc5PSjuz.s 			page 7


 319:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 320:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 321:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 322:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			structure. */
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 326:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 327:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configASSERT_DEFINED */
 328:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( pxTimerBuffer );
 331:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointer to a Tim
 332:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 333:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 334:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Timers can be created statically or dynamically so note this
 336:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			timer was created statically in case it is later deleted.  The
 337:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			auto-reload bit may get set in prvInitialiseNewTimer(). */
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxNewTimer->ucStatus = tmrSTATUS_IS_STATICALLY_ALLOCATED;
 339:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 342:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 343:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 345:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 346:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 348:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 350:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 351:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 352:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 353:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 354:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer )
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 356:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxNewTimer != NULL )
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 361:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		created/initialised. */
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvCheckForValidListAndQueue();
 364:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 365:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Initialise the timer structure members using the function
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		parameters. */
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( uxAutoReload != pdFALSE )
 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
ARM GAS  /tmp/cc5PSjuz.s 			page 8


 376:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 377:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 378:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 379:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 380:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 384:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 385:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 387:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 389:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	on a particular timer definition. */
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 391:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 392:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = xCommandID;
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = xTimer;
 396:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 398:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 400:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 402:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 403:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 404:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 406:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 407:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 408:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 409:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 411:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 412:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 415:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 416:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 417:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 418:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 419:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 422:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 423:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 424:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 426:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 429:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 431:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 432:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/cc5PSjuz.s 			page 9


 433:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 435:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 436:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 438:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 440:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 441:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetReloadMode( TimerHandle_t xTimer, const UBaseType_t uxAutoReload )
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 444:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 445:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 448:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( uxAutoReload != pdFALSE )
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 452:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 453:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer->ucStatus &= ~tmrSTATUS_IS_AUTORELOAD;
 456:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 460:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 461:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 462:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** UBaseType_t uxTimerGetReloadMode( TimerHandle_t xTimer )
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 464:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** UBaseType_t uxReturn;
 466:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 468:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) == 0 )
 471:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 472:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Not an auto-reload timer. */
 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uxReturn = ( UBaseType_t ) pdFALSE;
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 475:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 476:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 477:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Is an auto-reload timer. */
 478:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uxReturn = ( UBaseType_t ) pdTRUE;
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 480:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 481:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 482:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return uxReturn;
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 485:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 486:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 488:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 489:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
ARM GAS  /tmp/cc5PSjuz.s 			page 10


 490:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xReturn;
 491:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 492:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 493:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 494:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 496:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 497:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 500:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 501:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 502:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 505:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 506:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
 508:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 509:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !
 511:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 512:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 513:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been performed to ensure the list is not empty. */
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 515:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 516:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If the timer is an auto-reload timer then calculate the next
 518:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 520:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 521:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 522:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		other than the current time.  It will therefore be inserted into the
 523:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		correct list relative to the time this task thinks it is now. */
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 525:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The timer expired before it was added to the active timer
 527:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			list.  Reload it now.  */
 528:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 529:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 531:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 532:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 534:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 535:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 536:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 537:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 538:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 540:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 541:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 542:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Call the timer callback. */
 544:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 545:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 546:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc5PSjuz.s 			page 11


 547:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 548:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static portTASK_FUNCTION( prvTimerTask, pvParameters )
 549:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xListWasEmpty;
 552:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 553:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Just to avoid compiler warnings. */
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) pvParameters;
 555:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 558:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 559:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 560:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Allow the application writer to execute some code in the context of
 561:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 562:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		application includes initialisation code that would benefit from
 563:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		executing after the scheduler has been started. */
 564:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vApplicationDaemonTaskStartupHook();
 565:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 566:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 568:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	for( ;; )
 569:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 570:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		obtain the time at which the next timer will expire. */
 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 573:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		until either a timer does expire, or a command is received. */
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 577:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 578:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Empty the command queue. */
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessReceivedCommands();
 580:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 581:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 583:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 584:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 585:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 586:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 587:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched;
 588:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	vTaskSuspendAll();
 590:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 591:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 593:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		then don't process this timer as any timers that remained in the list
 594:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		when the lists were switched will have been processed within the
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSampleTimeNow() function. */
 596:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 598:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 599:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 601:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 602:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xTaskResumeAll();
 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
ARM GAS  /tmp/cc5PSjuz.s 			page 12


 604:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 605:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 606:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 607:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The tick count has not overflowed, and the next expire
 608:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				time has not been reached yet.  This task should therefore
 609:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				block to wait for the next expire time or a command to be
 610:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				received - whichever comes first.  The following line cannot
 611:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 612:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case when the current timer list is empty. */
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xListWasEmpty != pdFALSE )
 614:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 615:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The current timer list is empty - is the overflow list
 616:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					also empty? */
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 618:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 619:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 620:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 621:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 622:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 623:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 624:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					block time to expire.  If a command arrived between the
 626:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					critical section being exited and this yield then the yield
 627:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					will not cause the task to block. */
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					portYIELD_WITHIN_API();
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 630:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 632:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 635:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 636:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 637:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xTaskResumeAll();
 639:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 640:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 642:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 643:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 645:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  26              		.loc 1 645 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 646:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 647:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 648:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 650:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 651:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 652:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 653:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer lists will be switched and the next expiry time can be
 654:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	re-assessed.  */
ARM GAS  /tmp/cc5PSjuz.s 			page 13


 655:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  32              		.loc 1 655 0
  33 0000 064B     		ldr	r3, .L6
  34 0002 1A68     		ldr	r2, [r3]
  35 0004 1368     		ldr	r3, [r2]
  36 0006 2BB9     		cbnz	r3, .L4
  37 0008 0123     		movs	r3, #1
  38              	.L2:
  39              		.loc 1 655 0 is_stmt 0 discriminator 4
  40 000a 0360     		str	r3, [r0]
 656:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  41              		.loc 1 656 0 is_stmt 1 discriminator 4
  42 000c 23B9     		cbnz	r3, .L5
 657:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 658:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  43              		.loc 1 658 0
  44 000e D368     		ldr	r3, [r2, #12]
  45 0010 1868     		ldr	r0, [r3]
  46              	.LVL1:
  47 0012 7047     		bx	lr
  48              	.LVL2:
  49              	.L4:
 655:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  50              		.loc 1 655 0
  51 0014 0023     		movs	r3, #0
  52 0016 F8E7     		b	.L2
  53              	.L5:
 659:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 660:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 661:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 662:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 663:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
  54              		.loc 1 663 0
  55 0018 0020     		movs	r0, #0
  56              	.LVL3:
 664:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 665:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 666:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xNextExpireTime;
 667:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
  57              		.loc 1 667 0
  58 001a 7047     		bx	lr
  59              	.L7:
  60              		.align	2
  61              	.L6:
  62 001c 00000000 		.word	.LANCHOR0
  63              		.cfi_endproc
  64              	.LFE18:
  66              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  67              		.align	1
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu fpv5-d16
  73              	prvInsertTimerInActiveList:
  74              	.LFB20:
 668:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 669:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/cc5PSjuz.s 			page 14


 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 671:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 672:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 673:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 674:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 675:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xTimeNow = xTaskGetTickCount();
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimeNow < xLastTime )
 678:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 679:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSwitchTimerLists();
 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 681:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 682:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 683:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 685:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 686:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 687:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xLastTime = xTimeNow;
 688:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimeNow;
 690:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 691:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 692:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 693:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 694:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  75              		.loc 1 694 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              	.LVL4:
  80 0000 08B5     		push	{r3, lr}
  81              	.LCFI0:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 3, -8
  84              		.cfi_offset 14, -4
  85              	.LVL5:
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 696:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 697:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  86              		.loc 1 697 0
  87 0002 4160     		str	r1, [r0, #4]
 698:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  88              		.loc 1 698 0
  89 0004 0061     		str	r0, [r0, #16]
 699:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 700:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
  90              		.loc 1 700 0
  91 0006 9142     		cmp	r1, r2
  92 0008 0CD8     		bhi	.L9
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 702:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 703:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		timer was issued, and the time the command was processed? */
 704:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
  93              		.loc 1 704 0
  94 000a D21A     		subs	r2, r2, r3
  95              	.LVL6:
  96 000c 8369     		ldr	r3, [r0, #24]
ARM GAS  /tmp/cc5PSjuz.s 			page 15


  97              	.LVL7:
  98 000e 9A42     		cmp	r2, r3
  99 0010 01D3     		bcc	.L14
 705:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 706:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The time between a command being issued and the command being
 707:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed actually exceeds the timers period.  */
 708:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 100              		.loc 1 708 0
 101 0012 0120     		movs	r0, #1
 102              	.LVL8:
 103              	.L8:
 709:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 711:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 712:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 713:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 714:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 715:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 716:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 717:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 718:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 719:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 720:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			but the expiry time has not, then the timer must have already passed
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			its expiry time and should be processed immediately. */
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 723:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 724:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 726:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 728:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 729:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xProcessTimerNow;
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 104              		.loc 1 731 0
 105 0014 08BD     		pop	{r3, pc}
 106              	.LVL9:
 107              	.L14:
 712:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 108              		.loc 1 712 0
 109 0016 011D     		adds	r1, r0, #4
 110              	.LVL10:
 111 0018 0B4B     		ldr	r3, .L16
 112 001a 1868     		ldr	r0, [r3]
 113              	.LVL11:
 114 001c FFF7FEFF 		bl	vListInsert
 115              	.LVL12:
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 116              		.loc 1 695 0
 117 0020 0020     		movs	r0, #0
 118 0022 F7E7     		b	.L8
 119              	.LVL13:
 120              	.L9:
 717:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 121              		.loc 1 717 0
 122 0024 9A42     		cmp	r2, r3
 123 0026 2CBF     		ite	cs
ARM GAS  /tmp/cc5PSjuz.s 			page 16


 124 0028 0022     		movcs	r2, #0
 125              	.LVL14:
 126 002a 0122     		movcc	r2, #1
 127 002c 9942     		cmp	r1, r3
 128 002e 38BF     		it	cc
 129 0030 0022     		movcc	r2, #0
 130 0032 0AB1     		cbz	r2, .L15
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 131              		.loc 1 722 0
 132 0034 0120     		movs	r0, #1
 133              	.LVL15:
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 134              		.loc 1 730 0
 135 0036 EDE7     		b	.L8
 136              	.LVL16:
 137              	.L15:
 726:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 138              		.loc 1 726 0
 139 0038 011D     		adds	r1, r0, #4
 140              	.LVL17:
 141 003a 044B     		ldr	r3, .L16+4
 142              	.LVL18:
 143 003c 1868     		ldr	r0, [r3]
 144              	.LVL19:
 145 003e FFF7FEFF 		bl	vListInsert
 146              	.LVL20:
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 147              		.loc 1 695 0
 148 0042 0020     		movs	r0, #0
 149 0044 E6E7     		b	.L8
 150              	.L17:
 151 0046 00BF     		.align	2
 152              	.L16:
 153 0048 00000000 		.word	.LANCHOR1
 154 004c 00000000 		.word	.LANCHOR0
 155              		.cfi_endproc
 156              	.LFE20:
 158              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 159              		.align	1
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv5-d16
 165              	prvCheckForValidListAndQueue:
 166              	.LFB23:
 732:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 733:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 734:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void	prvProcessReceivedCommands( void )
 735:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 736:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 737:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 738:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 739:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 740:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 742:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 743:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
ARM GAS  /tmp/cc5PSjuz.s 			page 17


 744:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Negative commands are pended function calls rather than timer
 746:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			commands. */
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 748:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 749:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 750:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 751:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 752:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 753:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( pxCallback );
 754:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Call the function. */
 756:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 757:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 758:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 760:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 761:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 763:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 766:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		function calls. */
 767:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 768:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 769:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 770:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			software timer. */
 771:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 772:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 773:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The
 774:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 775:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer is in a list, remove it. */
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 777:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 778:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 779:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 780:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 781:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 782:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 783:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 784:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 785:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 786:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			called after the message is received from xTimerQueue so there is no
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			possibility of a higher priority task adding a message to the message
 789:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 790:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 792:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 793:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			switch( xMessage.xMessageID )
 794:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 795:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START :
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_FROM_ISR :
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_RESET :
 798:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_RESET_FROM_ISR :
 799:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 800:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Start or restart a timer. */
ARM GAS  /tmp/cc5PSjuz.s 			page 18


 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 802:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 803:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 804:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer expired before it was added to the active
 805:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						timer list.  Process it now. */
 806:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 807:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 808:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 810:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 812:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 813:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 815:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 817:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 818:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 819:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 820:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					else
 821:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 822:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 823:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 824:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 825:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 826:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP :
 827:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 828:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list. */
 829:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 831:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 833:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 835:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 837:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 838:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The new period does not really have a reference, and can
 839:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be longer or shorter than the old one.  The command time is
 840:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					therefore set to the current time, and as the period cannot
 841:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be zero the next expiry time can only be in the future,
 842:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 843:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					no fail case that needs to be handled here. */
 844:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 845:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 847:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_DELETE :
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 849:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 850:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer has already been removed from the active list,
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						just free up the memory if the memory was dynamically
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						allocated. */
 853:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 854:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 855:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							vPortFree( pxTimer );
 856:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 857:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
ARM GAS  /tmp/cc5PSjuz.s 			page 19


 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 859:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 861:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 862:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#else
 863:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 864:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* If dynamic allocation is not enabled, the memory
 865:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						could not have been dynamically allocated. So there is
 866:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						no need to free the memory - just mark the timer as
 867:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						"not active". */
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 870:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				default	:
 874:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Don't expect to get here. */
 875:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 876:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 879:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 880:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 881:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void )
 883:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 884:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 885:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** List_t *pxTemp;
 886:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 887:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 888:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	If there are any timers still referenced from the current timer list
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	then they must have expired and should be processed before the lists
 892:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	are switched. */
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 894:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 896:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 897:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Remove the timer from the list. */
 898:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 v
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 900:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 901:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 902:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		have not yet been switched. */
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 908:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 909:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 910:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the timer going into the same timer list then it has already expired
 911:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and the timer should be re-inserted into the current list so it is
 912:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 913:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 914:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the lists have been swapped. */
ARM GAS  /tmp/cc5PSjuz.s 			page 20


 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 916:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 917:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 918:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 919:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 920:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 921:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 922:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 923:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 924:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 926:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 928:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 929:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 930:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 931:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 932:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 933:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 934:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 935:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTemp = pxCurrentTimerList;
 936:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 938:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 939:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 940:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 941:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void )
 942:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 167              		.loc 1 942 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 30B5     		push	{r4, r5, lr}
 172              	.LCFI1:
 173              		.cfi_def_cfa_offset 12
 174              		.cfi_offset 4, -12
 175              		.cfi_offset 5, -8
 176              		.cfi_offset 14, -4
 177 0002 83B0     		sub	sp, sp, #12
 178              	.LCFI2:
 179              		.cfi_def_cfa_offset 24
 943:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 944:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	queue used to communicate with the timer service, have been
 945:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	initialised. */
 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 180              		.loc 1 946 0
 181 0004 FFF7FEFF 		bl	vPortEnterCritical
 182              	.LVL21:
 947:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 948:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerQueue == NULL )
 183              		.loc 1 948 0
 184 0008 114B     		ldr	r3, .L22
 185 000a 1B68     		ldr	r3, [r3]
 186 000c 1BB1     		cbz	r3, .L21
 187              	.L19:
 949:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 950:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList1 );
ARM GAS  /tmp/cc5PSjuz.s 			page 21


 951:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 952:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 953:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 954:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 955:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 956:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 957:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer queue is allocated statically in case
 958:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 959:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent ad
 960:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonT
 961:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 962:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) siz
 963:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 964:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#else
 965:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 966:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 968:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif
 969:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 970:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 971:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 972:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTimerQueue != NULL )
 973:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 974:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 975:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 976:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 977:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 978:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 979:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 980:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 981:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 982:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 983:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 984:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 985:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 986:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 987:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 988:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 188              		.loc 1 988 0
 189 000e FFF7FEFF 		bl	vPortExitCritical
 190              	.LVL22:
 989:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 191              		.loc 1 989 0
 192 0012 03B0     		add	sp, sp, #12
 193              	.LCFI3:
 194              		.cfi_remember_state
 195              		.cfi_def_cfa_offset 12
 196              		@ sp needed
 197 0014 30BD     		pop	{r4, r5, pc}
 198              	.L21:
 199              	.LCFI4:
 200              		.cfi_restore_state
 950:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 201              		.loc 1 950 0
 202 0016 0F4D     		ldr	r5, .L22+4
 203 0018 2846     		mov	r0, r5
 204 001a FFF7FEFF 		bl	vListInitialise
ARM GAS  /tmp/cc5PSjuz.s 			page 22


 205              	.LVL23:
 951:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 206              		.loc 1 951 0
 207 001e 0E4C     		ldr	r4, .L22+8
 208 0020 2046     		mov	r0, r4
 209 0022 FFF7FEFF 		bl	vListInitialise
 210              	.LVL24:
 952:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 211              		.loc 1 952 0
 212 0026 0D4B     		ldr	r3, .L22+12
 213 0028 1D60     		str	r5, [r3]
 953:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 214              		.loc 1 953 0
 215 002a 0D4B     		ldr	r3, .L22+16
 216 002c 1C60     		str	r4, [r3]
 217              	.LBB45:
 962:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 218              		.loc 1 962 0
 219 002e 0023     		movs	r3, #0
 220 0030 0093     		str	r3, [sp]
 221 0032 0C4B     		ldr	r3, .L22+20
 222 0034 0C4A     		ldr	r2, .L22+24
 223 0036 1021     		movs	r1, #16
 224 0038 0A20     		movs	r0, #10
 225 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 226              	.LVL25:
 227 003e 044B     		ldr	r3, .L22
 228 0040 1860     		str	r0, [r3]
 229              	.LBE45:
 972:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 230              		.loc 1 972 0
 231 0042 0028     		cmp	r0, #0
 232 0044 E3D0     		beq	.L19
 974:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 233              		.loc 1 974 0
 234 0046 0949     		ldr	r1, .L22+28
 235 0048 FFF7FEFF 		bl	vQueueAddToRegistry
 236              	.LVL26:
 237 004c DFE7     		b	.L19
 238              	.L23:
 239 004e 00BF     		.align	2
 240              	.L22:
 241 0050 00000000 		.word	.LANCHOR2
 242 0054 00000000 		.word	.LANCHOR3
 243 0058 00000000 		.word	.LANCHOR4
 244 005c 00000000 		.word	.LANCHOR0
 245 0060 00000000 		.word	.LANCHOR1
 246 0064 00000000 		.word	.LANCHOR5
 247 0068 00000000 		.word	.LANCHOR6
 248 006c 00000000 		.word	.LC0
 249              		.cfi_endproc
 250              	.LFE23:
 252              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 253              		.align	1
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
ARM GAS  /tmp/cc5PSjuz.s 			page 23


 257              		.fpu fpv5-d16
 259              	prvInitialiseNewTimer:
 260              	.LFB7:
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 261              		.loc 1 355 0
 262              		.cfi_startproc
 263              		@ args = 8, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              	.LVL27:
 266 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 267              	.LCFI5:
 268              		.cfi_def_cfa_offset 24
 269              		.cfi_offset 4, -24
 270              		.cfi_offset 5, -20
 271              		.cfi_offset 6, -16
 272              		.cfi_offset 7, -12
 273              		.cfi_offset 8, -8
 274              		.cfi_offset 14, -4
 275 0004 079C     		ldr	r4, [sp, #28]
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 276              		.loc 1 357 0
 277 0006 41B9     		cbnz	r1, .L25
 278              	.LBB46:
 279              	.LBB47:
 280              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
ARM GAS  /tmp/cc5PSjuz.s 			page 24


  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/cc5PSjuz.s 			page 25


  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/cc5PSjuz.s 			page 26


 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 281              		.loc 2 195 0
 282              		.syntax unified
 283              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 284 0008 4FF05003 			mov r3, #80												
 285 000c 83F31188 		msr basepri, r3											
 286 0010 BFF36F8F 		isb														
 287 0014 BFF34F8F 		dsb														
 288              	
ARM GAS  /tmp/cc5PSjuz.s 			page 27


 289              	@ 0 "" 2
 290              	.LVL28:
 291              		.thumb
 292              		.syntax unified
 293              	.L26:
 294 0018 FEE7     		b	.L26
 295              	.LVL29:
 296              	.L25:
 297 001a 0F46     		mov	r7, r1
 298              	.LBE47:
 299              	.LBE46:
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 300              		.loc 1 359 0
 301 001c A4B1     		cbz	r4, .L24
 302 001e 1E46     		mov	r6, r3
 303 0020 1546     		mov	r5, r2
 304 0022 8046     		mov	r8, r0
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 305              		.loc 1 363 0
 306 0024 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 307              	.LVL30:
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 308              		.loc 1 367 0
 309 0028 C4F80080 		str	r8, [r4]
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 310              		.loc 1 368 0
 311 002c A761     		str	r7, [r4, #24]
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 312              		.loc 1 369 0
 313 002e E661     		str	r6, [r4, #28]
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 314              		.loc 1 370 0
 315 0030 069B     		ldr	r3, [sp, #24]
 316 0032 2362     		str	r3, [r4, #32]
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( uxAutoReload != pdFALSE )
 317              		.loc 1 371 0
 318 0034 201D     		adds	r0, r4, #4
 319 0036 FFF7FEFF 		bl	vListInitialiseItem
 320              	.LVL31:
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 321              		.loc 1 372 0
 322 003a 2DB1     		cbz	r5, .L24
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 323              		.loc 1 374 0
 324 003c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 325 0040 43F00403 		orr	r3, r3, #4
 326 0044 84F82830 		strb	r3, [r4, #40]
 327              	.LVL32:
 328              	.L24:
 378:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 329              		.loc 1 378 0
 330 0048 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 331              		.cfi_endproc
 332              	.LFE7:
 334              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 335              		.align	1
 336              		.global	xTimerCreateTimerTask
ARM GAS  /tmp/cc5PSjuz.s 			page 28


 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu fpv5-d16
 342              	xTimerCreateTimerTask:
 343              	.LFB4:
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 344              		.loc 1 228 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 16
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348 0000 10B5     		push	{r4, lr}
 349              	.LCFI6:
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 4, -8
 352              		.cfi_offset 14, -4
 353 0002 88B0     		sub	sp, sp, #32
 354              	.LCFI7:
 355              		.cfi_def_cfa_offset 40
 356              	.LVL33:
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 357              		.loc 1 235 0
 358 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 359              	.LVL34:
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 360              		.loc 1 237 0
 361 0008 124B     		ldr	r3, .L35
 362 000a 1B68     		ldr	r3, [r3]
 363 000c CBB1     		cbz	r3, .L30
 364              	.LBB48:
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 365              		.loc 1 241 0
 366 000e 0024     		movs	r4, #0
 367 0010 0594     		str	r4, [sp, #20]
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 368              		.loc 1 242 0
 369 0012 0694     		str	r4, [sp, #24]
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 370              		.loc 1 245 0
 371 0014 07AA     		add	r2, sp, #28
 372 0016 06A9     		add	r1, sp, #24
 373 0018 05A8     		add	r0, sp, #20
 374 001a FFF7FEFF 		bl	vApplicationGetTimerTaskMemory
 375              	.LVL35:
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 376              		.loc 1 246 0
 377 001e 059B     		ldr	r3, [sp, #20]
 378 0020 0293     		str	r3, [sp, #8]
 379 0022 069B     		ldr	r3, [sp, #24]
 380 0024 0193     		str	r3, [sp, #4]
 381 0026 0223     		movs	r3, #2
 382 0028 0093     		str	r3, [sp]
 383 002a 2346     		mov	r3, r4
 384 002c 079A     		ldr	r2, [sp, #28]
 385 002e 0A49     		ldr	r1, .L35+4
 386 0030 0A48     		ldr	r0, .L35+8
 387 0032 FFF7FEFF 		bl	xTaskCreateStatic
ARM GAS  /tmp/cc5PSjuz.s 			page 29


 388              	.LVL36:
 389 0036 0A4B     		ldr	r3, .L35+12
 390 0038 1860     		str	r0, [r3]
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 391              		.loc 1 254 0
 392 003a 10B1     		cbz	r0, .L30
 393              	.LBE48:
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 394              		.loc 1 277 0
 395 003c 0120     		movs	r0, #1
 396 003e 08B0     		add	sp, sp, #32
 397              	.LCFI8:
 398              		.cfi_remember_state
 399              		.cfi_def_cfa_offset 8
 400              		@ sp needed
 401 0040 10BD     		pop	{r4, pc}
 402              	.L30:
 403              	.LCFI9:
 404              		.cfi_restore_state
 405              	.LBB49:
 406              	.LBB50:
 407              		.loc 2 195 0
 408              		.syntax unified
 409              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 410 0042 4FF05003 			mov r3, #80												
 411 0046 83F31188 		msr basepri, r3											
 412 004a BFF36F8F 		isb														
 413 004e BFF34F8F 		dsb														
 414              	
 415              	@ 0 "" 2
 416              	.LVL37:
 417              		.thumb
 418              		.syntax unified
 419              	.L32:
 420 0052 FEE7     		b	.L32
 421              	.L36:
 422              		.align	2
 423              	.L35:
 424 0054 00000000 		.word	.LANCHOR2
 425 0058 00000000 		.word	.LC1
 426 005c 00000000 		.word	prvTimerTask
 427 0060 00000000 		.word	.LANCHOR7
 428              	.LBE50:
 429              	.LBE49:
 430              		.cfi_endproc
 431              	.LFE4:
 433              		.section	.text.xTimerCreate,"ax",%progbits
 434              		.align	1
 435              		.global	xTimerCreate
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu fpv5-d16
 441              	xTimerCreate:
 442              	.LFB5:
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 443              		.loc 1 287 0
ARM GAS  /tmp/cc5PSjuz.s 			page 30


 444              		.cfi_startproc
 445              		@ args = 4, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              	.LVL38:
 448 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 449              	.LCFI10:
 450              		.cfi_def_cfa_offset 24
 451              		.cfi_offset 4, -24
 452              		.cfi_offset 5, -20
 453              		.cfi_offset 6, -16
 454              		.cfi_offset 7, -12
 455              		.cfi_offset 8, -8
 456              		.cfi_offset 14, -4
 457 0004 82B0     		sub	sp, sp, #8
 458              	.LCFI11:
 459              		.cfi_def_cfa_offset 32
 460 0006 0546     		mov	r5, r0
 461 0008 0E46     		mov	r6, r1
 462 000a 1746     		mov	r7, r2
 463 000c 9846     		mov	r8, r3
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 464              		.loc 1 290 0
 465 000e 2C20     		movs	r0, #44
 466              	.LVL39:
 467 0010 FFF7FEFF 		bl	pvPortMalloc
 468              	.LVL40:
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 469              		.loc 1 292 0
 470 0014 0446     		mov	r4, r0
 471 0016 58B1     		cbz	r0, .L37
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 472              		.loc 1 297 0
 473 0018 0023     		movs	r3, #0
 474 001a 80F82830 		strb	r3, [r0, #40]
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 475              		.loc 1 298 0
 476 001e 0190     		str	r0, [sp, #4]
 477 0020 089B     		ldr	r3, [sp, #32]
 478 0022 0093     		str	r3, [sp]
 479 0024 4346     		mov	r3, r8
 480 0026 3A46     		mov	r2, r7
 481 0028 3146     		mov	r1, r6
 482 002a 2846     		mov	r0, r5
 483              	.LVL41:
 484 002c FFF7FEFF 		bl	prvInitialiseNewTimer
 485              	.LVL42:
 486              	.L37:
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 487              		.loc 1 302 0
 488 0030 2046     		mov	r0, r4
 489 0032 02B0     		add	sp, sp, #8
 490              	.LCFI12:
 491              		.cfi_def_cfa_offset 24
 492              		@ sp needed
 493 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 494              		.cfi_endproc
 495              	.LFE5:
ARM GAS  /tmp/cc5PSjuz.s 			page 31


 497              		.section	.text.xTimerCreateStatic,"ax",%progbits
 498              		.align	1
 499              		.global	xTimerCreateStatic
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 503              		.fpu fpv5-d16
 505              	xTimerCreateStatic:
 506              	.LFB6:
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 507              		.loc 1 315 0
 508              		.cfi_startproc
 509              		@ args = 8, pretend = 0, frame = 8
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              	.LVL43:
 512 0000 30B5     		push	{r4, r5, lr}
 513              	.LCFI13:
 514              		.cfi_def_cfa_offset 12
 515              		.cfi_offset 4, -12
 516              		.cfi_offset 5, -8
 517              		.cfi_offset 14, -4
 518 0002 85B0     		sub	sp, sp, #20
 519              	.LCFI14:
 520              		.cfi_def_cfa_offset 32
 521 0004 099C     		ldr	r4, [sp, #36]
 522              	.LBB51:
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 523              		.loc 1 323 0
 524 0006 2C25     		movs	r5, #44
 525 0008 0395     		str	r5, [sp, #12]
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 526              		.loc 1 324 0
 527 000a 039D     		ldr	r5, [sp, #12]
 528 000c 2C2D     		cmp	r5, #44
 529 000e 08D0     		beq	.L41
 530              	.LBB52:
 531              	.LBB53:
 532              		.loc 2 195 0
 533              		.syntax unified
 534              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 535 0010 4FF05003 			mov r3, #80												
 536 0014 83F31188 		msr basepri, r3											
 537 0018 BFF36F8F 		isb														
 538 001c BFF34F8F 		dsb														
 539              	
 540              	@ 0 "" 2
 541              	.LVL44:
 542              		.thumb
 543              		.syntax unified
 544              	.L42:
 545 0020 FEE7     		b	.L42
 546              	.LVL45:
 547              	.L41:
 548              	.LBE53:
 549              	.LBE52:
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 550              		.loc 1 325 0
ARM GAS  /tmp/cc5PSjuz.s 			page 32


 551 0022 039D     		ldr	r5, [sp, #12]
 552              	.LBE51:
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointer to a Tim
 553              		.loc 1 330 0
 554 0024 44B9     		cbnz	r4, .L43
 555              	.LBB54:
 556              	.LBB55:
 557              		.loc 2 195 0
 558              		.syntax unified
 559              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 560 0026 4FF05003 			mov r3, #80												
 561 002a 83F31188 		msr basepri, r3											
 562 002e BFF36F8F 		isb														
 563 0032 BFF34F8F 		dsb														
 564              	
 565              	@ 0 "" 2
 566              	.LVL46:
 567              		.thumb
 568              		.syntax unified
 569              	.L44:
 570 0036 FEE7     		b	.L44
 571              	.LVL47:
 572              	.L43:
 573              	.LBE55:
 574              	.LBE54:
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 575              		.loc 1 338 0
 576 0038 0225     		movs	r5, #2
 577 003a 84F82850 		strb	r5, [r4, #40]
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 578              		.loc 1 340 0
 579 003e 0194     		str	r4, [sp, #4]
 580 0040 089D     		ldr	r5, [sp, #32]
 581 0042 0095     		str	r5, [sp]
 582 0044 FFF7FEFF 		bl	prvInitialiseNewTimer
 583              	.LVL48:
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 584              		.loc 1 344 0
 585 0048 2046     		mov	r0, r4
 586 004a 05B0     		add	sp, sp, #20
 587              	.LCFI15:
 588              		.cfi_def_cfa_offset 12
 589              		@ sp needed
 590 004c 30BD     		pop	{r4, r5, pc}
 591              		.cfi_endproc
 592              	.LFE6:
 594              		.section	.text.xTimerGenericCommand,"ax",%progbits
 595              		.align	1
 596              		.global	xTimerGenericCommand
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 600              		.fpu fpv5-d16
 602              	xTimerGenericCommand:
 603              	.LFB8:
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 604              		.loc 1 382 0
ARM GAS  /tmp/cc5PSjuz.s 			page 33


 605              		.cfi_startproc
 606              		@ args = 4, pretend = 0, frame = 16
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              	.LVL49:
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 609              		.loc 1 386 0
 610 0000 C8B1     		cbz	r0, .L55
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 611              		.loc 1 382 0
 612 0002 30B5     		push	{r4, r5, lr}
 613              	.LCFI16:
 614              		.cfi_def_cfa_offset 12
 615              		.cfi_offset 4, -12
 616              		.cfi_offset 5, -8
 617              		.cfi_offset 14, -4
 618 0004 85B0     		sub	sp, sp, #20
 619              	.LCFI17:
 620              		.cfi_def_cfa_offset 32
 621 0006 1546     		mov	r5, r2
 622 0008 0446     		mov	r4, r0
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 623              		.loc 1 390 0
 624 000a 174A     		ldr	r2, .L57
 625              	.LVL50:
 626 000c 1068     		ldr	r0, [r2]
 627              	.LVL51:
 628 000e 40B3     		cbz	r0, .L52
 629 0010 1A46     		mov	r2, r3
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 630              		.loc 1 393 0
 631 0012 0091     		str	r1, [sp]
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = xTimer;
 632              		.loc 1 394 0
 633 0014 0195     		str	r5, [sp, #4]
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 634              		.loc 1 395 0
 635 0016 0294     		str	r4, [sp, #8]
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 636              		.loc 1 397 0
 637 0018 0529     		cmp	r1, #5
 638 001a 1DDC     		bgt	.L50
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 639              		.loc 1 399 0
 640 001c FFF7FEFF 		bl	xTaskGetSchedulerState
 641              	.LVL52:
 642 0020 0228     		cmp	r0, #2
 643 0022 11D0     		beq	.L56
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 644              		.loc 1 405 0
 645 0024 0023     		movs	r3, #0
 646 0026 1A46     		mov	r2, r3
 647 0028 6946     		mov	r1, sp
 648 002a 0F48     		ldr	r0, .L57
 649 002c 0068     		ldr	r0, [r0]
 650 002e FFF7FEFF 		bl	xQueueGenericSend
 651              	.LVL53:
 652              	.L46:
ARM GAS  /tmp/cc5PSjuz.s 			page 34


 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 653              		.loc 1 421 0
 654 0032 05B0     		add	sp, sp, #20
 655              	.LCFI18:
 656              		.cfi_def_cfa_offset 12
 657              		@ sp needed
 658 0034 30BD     		pop	{r4, r5, pc}
 659              	.LVL54:
 660              	.L55:
 661              	.LCFI19:
 662              		.cfi_def_cfa_offset 0
 663              		.cfi_restore 4
 664              		.cfi_restore 5
 665              		.cfi_restore 14
 666              	.LBB56:
 667              	.LBB57:
 668              		.loc 2 195 0
 669              		.syntax unified
 670              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 671 0036 4FF05003 			mov r3, #80												
 672 003a 83F31188 		msr basepri, r3											
 673 003e BFF36F8F 		isb														
 674 0042 BFF34F8F 		dsb														
 675              	
 676              	@ 0 "" 2
 677              	.LVL55:
 678              		.thumb
 679              		.syntax unified
 680              	.L48:
 681 0046 FEE7     		b	.L48
 682              	.LVL56:
 683              	.L56:
 684              	.LCFI20:
 685              		.cfi_def_cfa_offset 32
 686              		.cfi_offset 4, -12
 687              		.cfi_offset 5, -8
 688              		.cfi_offset 14, -4
 689              	.LBE57:
 690              	.LBE56:
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 691              		.loc 1 401 0
 692 0048 0023     		movs	r3, #0
 693 004a 089A     		ldr	r2, [sp, #32]
 694 004c 6946     		mov	r1, sp
 695 004e 0648     		ldr	r0, .L57
 696 0050 0068     		ldr	r0, [r0]
 697 0052 FFF7FEFF 		bl	xQueueGenericSend
 698              	.LVL57:
 699 0056 ECE7     		b	.L46
 700              	.LVL58:
 701              	.L50:
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 702              		.loc 1 410 0
 703 0058 0023     		movs	r3, #0
 704 005a 6946     		mov	r1, sp
 705              	.LVL59:
 706 005c FFF7FEFF 		bl	xQueueGenericSendFromISR
ARM GAS  /tmp/cc5PSjuz.s 			page 35


 707              	.LVL60:
 708 0060 E7E7     		b	.L46
 709              	.LVL61:
 710              	.L52:
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 711              		.loc 1 383 0
 712 0062 0020     		movs	r0, #0
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 713              		.loc 1 420 0
 714 0064 E5E7     		b	.L46
 715              	.L58:
 716 0066 00BF     		.align	2
 717              	.L57:
 718 0068 00000000 		.word	.LANCHOR2
 719              		.cfi_endproc
 720              	.LFE8:
 722              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 723              		.align	1
 724              		.syntax unified
 725              		.thumb
 726              		.thumb_func
 727              		.fpu fpv5-d16
 729              	prvSwitchTimerLists:
 730              	.LFB22:
 883:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 731              		.loc 1 883 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735 0000 70B5     		push	{r4, r5, r6, lr}
 736              	.LCFI21:
 737              		.cfi_def_cfa_offset 16
 738              		.cfi_offset 4, -16
 739              		.cfi_offset 5, -12
 740              		.cfi_offset 6, -8
 741              		.cfi_offset 14, -4
 742 0002 82B0     		sub	sp, sp, #8
 743              	.LCFI22:
 744              		.cfi_def_cfa_offset 24
 745              	.L61:
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 746              		.loc 1 893 0
 747 0004 1B4B     		ldr	r3, .L68
 748 0006 1B68     		ldr	r3, [r3]
 749 0008 1A68     		ldr	r2, [r3]
 750 000a 62B3     		cbz	r2, .L67
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 751              		.loc 1 895 0
 752 000c DB68     		ldr	r3, [r3, #12]
 753 000e 1E68     		ldr	r6, [r3]
 754              	.LVL62:
 898:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 755              		.loc 1 898 0
 756 0010 DC68     		ldr	r4, [r3, #12]
 757              	.LVL63:
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 758              		.loc 1 899 0
ARM GAS  /tmp/cc5PSjuz.s 			page 36


 759 0012 251D     		adds	r5, r4, #4
 760 0014 2846     		mov	r0, r5
 761 0016 FFF7FEFF 		bl	uxListRemove
 762              	.LVL64:
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 763              		.loc 1 905 0
 764 001a 236A     		ldr	r3, [r4, #32]
 765 001c 2046     		mov	r0, r4
 766 001e 9847     		blx	r3
 767              	.LVL65:
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 768              		.loc 1 907 0
 769 0020 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 770 0024 13F0040F 		tst	r3, #4
 771 0028 ECD0     		beq	.L61
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 772              		.loc 1 915 0
 773 002a A369     		ldr	r3, [r4, #24]
 774 002c 3344     		add	r3, r3, r6
 775              	.LVL66:
 916:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 776              		.loc 1 916 0
 777 002e 9E42     		cmp	r6, r3
 778 0030 07D2     		bcs	.L62
 918:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 779              		.loc 1 918 0
 780 0032 6360     		str	r3, [r4, #4]
 919:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 781              		.loc 1 919 0
 782 0034 2461     		str	r4, [r4, #16]
 920:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 783              		.loc 1 920 0
 784 0036 2946     		mov	r1, r5
 785 0038 0E4B     		ldr	r3, .L68
 786              	.LVL67:
 787 003a 1868     		ldr	r0, [r3]
 788 003c FFF7FEFF 		bl	vListInsert
 789              	.LVL68:
 790 0040 E0E7     		b	.L61
 791              	.LVL69:
 792              	.L62:
 924:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 793              		.loc 1 924 0
 794 0042 0021     		movs	r1, #0
 795 0044 0091     		str	r1, [sp]
 796 0046 0B46     		mov	r3, r1
 797              	.LVL70:
 798 0048 3246     		mov	r2, r6
 799 004a 2046     		mov	r0, r4
 800 004c FFF7FEFF 		bl	xTimerGenericCommand
 801              	.LVL71:
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 802              		.loc 1 925 0
 803 0050 0028     		cmp	r0, #0
 804 0052 D7D1     		bne	.L61
 805              	.LBB58:
 806              	.LBB59:
ARM GAS  /tmp/cc5PSjuz.s 			page 37


 807              		.loc 2 195 0
 808              		.syntax unified
 809              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 810 0054 4FF05003 			mov r3, #80												
 811 0058 83F31188 		msr basepri, r3											
 812 005c BFF36F8F 		isb														
 813 0060 BFF34F8F 		dsb														
 814              	
 815              	@ 0 "" 2
 816              	.LVL72:
 817              		.thumb
 818              		.syntax unified
 819              	.L64:
 820 0064 FEE7     		b	.L64
 821              	.LVL73:
 822              	.L67:
 823              	.LBE59:
 824              	.LBE58:
 936:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 825              		.loc 1 936 0
 826 0066 044A     		ldr	r2, .L68+4
 827 0068 1068     		ldr	r0, [r2]
 828 006a 0249     		ldr	r1, .L68
 829 006c 0860     		str	r0, [r1]
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 830              		.loc 1 937 0
 831 006e 1360     		str	r3, [r2]
 938:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 832              		.loc 1 938 0
 833 0070 02B0     		add	sp, sp, #8
 834              	.LCFI23:
 835              		.cfi_def_cfa_offset 16
 836              		@ sp needed
 837 0072 70BD     		pop	{r4, r5, r6, pc}
 838              	.L69:
 839              		.align	2
 840              	.L68:
 841 0074 00000000 		.word	.LANCHOR0
 842 0078 00000000 		.word	.LANCHOR1
 843              		.cfi_endproc
 844              	.LFE22:
 846              		.section	.text.prvSampleTimeNow,"ax",%progbits
 847              		.align	1
 848              		.syntax unified
 849              		.thumb
 850              		.thumb_func
 851              		.fpu fpv5-d16
 853              	prvSampleTimeNow:
 854              	.LFB19:
 671:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 855              		.loc 1 671 0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859              	.LVL74:
 860 0000 38B5     		push	{r3, r4, r5, lr}
 861              	.LCFI24:
ARM GAS  /tmp/cc5PSjuz.s 			page 38


 862              		.cfi_def_cfa_offset 16
 863              		.cfi_offset 3, -16
 864              		.cfi_offset 4, -12
 865              		.cfi_offset 5, -8
 866              		.cfi_offset 14, -4
 867 0002 0546     		mov	r5, r0
 675:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 868              		.loc 1 675 0
 869 0004 FFF7FEFF 		bl	xTaskGetTickCount
 870              	.LVL75:
 871 0008 0446     		mov	r4, r0
 872              	.LVL76:
 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 873              		.loc 1 677 0
 874 000a 074B     		ldr	r3, .L75
 875 000c 1B68     		ldr	r3, [r3]
 876 000e 8342     		cmp	r3, r0
 877 0010 05D8     		bhi	.L74
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 878              		.loc 1 684 0
 879 0012 0023     		movs	r3, #0
 880 0014 2B60     		str	r3, [r5]
 881              	.LVL77:
 882              	.L72:
 687:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 883              		.loc 1 687 0
 884 0016 044B     		ldr	r3, .L75
 885 0018 1C60     		str	r4, [r3]
 690:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 886              		.loc 1 690 0
 887 001a 2046     		mov	r0, r4
 888 001c 38BD     		pop	{r3, r4, r5, pc}
 889              	.LVL78:
 890              	.L74:
 679:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 891              		.loc 1 679 0
 892 001e FFF7FEFF 		bl	prvSwitchTimerLists
 893              	.LVL79:
 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 894              		.loc 1 680 0
 895 0022 0123     		movs	r3, #1
 896 0024 2B60     		str	r3, [r5]
 897 0026 F6E7     		b	.L72
 898              	.L76:
 899              		.align	2
 900              	.L75:
 901 0028 00000000 		.word	.LANCHOR8
 902              		.cfi_endproc
 903              	.LFE19:
 905              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 906              		.align	1
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 910              		.fpu fpv5-d16
 912              	prvProcessExpiredTimer:
 913              	.LFB15:
ARM GAS  /tmp/cc5PSjuz.s 			page 39


 508:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 914              		.loc 1 508 0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 918              	.LVL80:
 919 0000 70B5     		push	{r4, r5, r6, lr}
 920              	.LCFI25:
 921              		.cfi_def_cfa_offset 16
 922              		.cfi_offset 4, -16
 923              		.cfi_offset 5, -12
 924              		.cfi_offset 6, -8
 925              		.cfi_offset 14, -4
 926 0002 82B0     		sub	sp, sp, #8
 927              	.LCFI26:
 928              		.cfi_def_cfa_offset 24
 929 0004 0546     		mov	r5, r0
 930 0006 0E46     		mov	r6, r1
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 931              		.loc 1 510 0
 932 0008 174B     		ldr	r3, .L83
 933 000a 1B68     		ldr	r3, [r3]
 934 000c DB68     		ldr	r3, [r3, #12]
 935 000e DC68     		ldr	r4, [r3, #12]
 936              	.LVL81:
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 937              		.loc 1 514 0
 938 0010 201D     		adds	r0, r4, #4
 939              	.LVL82:
 940 0012 FFF7FEFF 		bl	uxListRemove
 941              	.LVL83:
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 942              		.loc 1 519 0
 943 0016 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 944 001a 13F0040F 		tst	r3, #4
 945 001e 08D1     		bne	.L82
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 946              		.loc 1 539 0
 947 0020 23F00103 		bic	r3, r3, #1
 948 0024 84F82830 		strb	r3, [r4, #40]
 949              	.L79:
 544:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 950              		.loc 1 544 0
 951 0028 236A     		ldr	r3, [r4, #32]
 952 002a 2046     		mov	r0, r4
 953 002c 9847     		blx	r3
 954              	.LVL84:
 545:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 955              		.loc 1 545 0
 956 002e 02B0     		add	sp, sp, #8
 957              	.LCFI27:
 958              		.cfi_remember_state
 959              		.cfi_def_cfa_offset 16
 960              		@ sp needed
 961 0030 70BD     		pop	{r4, r5, r6, pc}
 962              	.LVL85:
 963              	.L82:
ARM GAS  /tmp/cc5PSjuz.s 			page 40


 964              	.LCFI28:
 965              		.cfi_restore_state
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 966              		.loc 1 524 0
 967 0032 A169     		ldr	r1, [r4, #24]
 968 0034 2B46     		mov	r3, r5
 969 0036 3246     		mov	r2, r6
 970 0038 2944     		add	r1, r1, r5
 971 003a 2046     		mov	r0, r4
 972 003c FFF7FEFF 		bl	prvInsertTimerInActiveList
 973              	.LVL86:
 974 0040 0028     		cmp	r0, #0
 975 0042 F1D0     		beq	.L79
 528:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 976              		.loc 1 528 0
 977 0044 0021     		movs	r1, #0
 978 0046 0091     		str	r1, [sp]
 979 0048 0B46     		mov	r3, r1
 980 004a 2A46     		mov	r2, r5
 981 004c 2046     		mov	r0, r4
 982 004e FFF7FEFF 		bl	xTimerGenericCommand
 983              	.LVL87:
 529:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 984              		.loc 1 529 0
 985 0052 0028     		cmp	r0, #0
 986 0054 E8D1     		bne	.L79
 987              	.LBB60:
 988              	.LBB61:
 989              		.loc 2 195 0
 990              		.syntax unified
 991              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 992 0056 4FF05003 			mov r3, #80												
 993 005a 83F31188 		msr basepri, r3											
 994 005e BFF36F8F 		isb														
 995 0062 BFF34F8F 		dsb														
 996              	
 997              	@ 0 "" 2
 998              	.LVL88:
 999              		.thumb
 1000              		.syntax unified
 1001              	.L80:
 1002 0066 FEE7     		b	.L80
 1003              	.L84:
 1004              		.align	2
 1005              	.L83:
 1006 0068 00000000 		.word	.LANCHOR0
 1007              	.LBE61:
 1008              	.LBE60:
 1009              		.cfi_endproc
 1010              	.LFE15:
 1012              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 1013              		.align	1
 1014              		.syntax unified
 1015              		.thumb
 1016              		.thumb_func
 1017              		.fpu fpv5-d16
 1019              	prvProcessTimerOrBlockTask:
ARM GAS  /tmp/cc5PSjuz.s 			page 41


 1020              	.LFB17:
 585:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 1021              		.loc 1 585 0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 8
 1024              		@ frame_needed = 0, uses_anonymous_args = 0
 1025              	.LVL89:
 1026 0000 70B5     		push	{r4, r5, r6, lr}
 1027              	.LCFI29:
 1028              		.cfi_def_cfa_offset 16
 1029              		.cfi_offset 4, -16
 1030              		.cfi_offset 5, -12
 1031              		.cfi_offset 6, -8
 1032              		.cfi_offset 14, -4
 1033 0002 82B0     		sub	sp, sp, #8
 1034              	.LCFI30:
 1035              		.cfi_def_cfa_offset 24
 1036 0004 0646     		mov	r6, r0
 1037 0006 0C46     		mov	r4, r1
 589:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1038              		.loc 1 589 0
 1039 0008 FFF7FEFF 		bl	vTaskSuspendAll
 1040              	.LVL90:
 596:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 1041              		.loc 1 596 0
 1042 000c 01A8     		add	r0, sp, #4
 1043 000e FFF7FEFF 		bl	prvSampleTimeNow
 1044              	.LVL91:
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1045              		.loc 1 597 0
 1046 0012 019B     		ldr	r3, [sp, #4]
 1047 0014 4BBB     		cbnz	r3, .L86
 1048 0016 0546     		mov	r5, r0
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1049              		.loc 1 600 0
 1050 0018 B042     		cmp	r0, r6
 1051 001a 34BF     		ite	cc
 1052 001c 0023     		movcc	r3, #0
 1053 001e 0123     		movcs	r3, #1
 1054 0020 002C     		cmp	r4, #0
 1055 0022 18BF     		it	ne
 1056 0024 0023     		movne	r3, #0
 1057 0026 BBB9     		cbnz	r3, .L92
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1058              		.loc 1 613 0
 1059 0028 24B1     		cbz	r4, .L89
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1060              		.loc 1 617 0
 1061 002a 124B     		ldr	r3, .L93
 1062 002c 1B68     		ldr	r3, [r3]
 1063 002e 1B68     		ldr	r3, [r3]
 1064 0030 CBB9     		cbnz	r3, .L90
 1065 0032 0124     		movs	r4, #1
 1066              	.LVL92:
 1067              	.L89:
 620:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1068              		.loc 1 620 0
ARM GAS  /tmp/cc5PSjuz.s 			page 42


 1069 0034 2246     		mov	r2, r4
 1070 0036 711B     		subs	r1, r6, r5
 1071 0038 0F4B     		ldr	r3, .L93+4
 1072 003a 1868     		ldr	r0, [r3]
 1073              	.LVL93:
 1074 003c FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 1075              	.LVL94:
 622:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1076              		.loc 1 622 0
 1077 0040 FFF7FEFF 		bl	xTaskResumeAll
 1078              	.LVL95:
 1079 0044 98B9     		cbnz	r0, .L85
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1080              		.loc 1 628 0
 1081 0046 0D4B     		ldr	r3, .L93+8
 1082 0048 4FF08052 		mov	r2, #268435456
 1083 004c 1A60     		str	r2, [r3]
 1084              		.syntax unified
 1085              	@ 628 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1086 004e BFF34F8F 		dsb
 1087              	@ 0 "" 2
 1088              	@ 628 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1089 0052 BFF36F8F 		isb
 1090              	@ 0 "" 2
 1091              		.thumb
 1092              		.syntax unified
 1093 0056 0AE0     		b	.L85
 1094              	.LVL96:
 1095              	.L92:
 602:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1096              		.loc 1 602 0
 1097 0058 FFF7FEFF 		bl	xTaskResumeAll
 1098              	.LVL97:
 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1099              		.loc 1 603 0
 1100 005c 2946     		mov	r1, r5
 1101 005e 3046     		mov	r0, r6
 1102 0060 FFF7FEFF 		bl	prvProcessExpiredTimer
 1103              	.LVL98:
 1104 0064 03E0     		b	.L85
 1105              	.LVL99:
 1106              	.L90:
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1107              		.loc 1 617 0
 1108 0066 0024     		movs	r4, #0
 1109              	.LVL100:
 1110 0068 E4E7     		b	.L89
 1111              	.LVL101:
 1112              	.L86:
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1113              		.loc 1 638 0
 1114 006a FFF7FEFF 		bl	xTaskResumeAll
 1115              	.LVL102:
 1116              	.L85:
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1117              		.loc 1 641 0
 1118 006e 02B0     		add	sp, sp, #8
ARM GAS  /tmp/cc5PSjuz.s 			page 43


 1119              	.LCFI31:
 1120              		.cfi_def_cfa_offset 16
 1121              		@ sp needed
 1122 0070 70BD     		pop	{r4, r5, r6, pc}
 1123              	.LVL103:
 1124              	.L94:
 1125 0072 00BF     		.align	2
 1126              	.L93:
 1127 0074 00000000 		.word	.LANCHOR1
 1128 0078 00000000 		.word	.LANCHOR2
 1129 007c 04ED00E0 		.word	-536810236
 1130              		.cfi_endproc
 1131              	.LFE17:
 1133              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 1134              		.align	1
 1135              		.syntax unified
 1136              		.thumb
 1137              		.thumb_func
 1138              		.fpu fpv5-d16
 1140              	prvProcessReceivedCommands:
 1141              	.LFB21:
 735:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 1142              		.loc 1 735 0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 24
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 1146 0000 30B5     		push	{r4, r5, lr}
 1147              	.LCFI32:
 1148              		.cfi_def_cfa_offset 12
 1149              		.cfi_offset 4, -12
 1150              		.cfi_offset 5, -8
 1151              		.cfi_offset 14, -4
 1152 0002 89B0     		sub	sp, sp, #36
 1153              	.LCFI33:
 1154              		.cfi_def_cfa_offset 48
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1155              		.loc 1 741 0
 1156 0004 02E0     		b	.L98
 1157              	.L97:
 767:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1158              		.loc 1 767 0
 1159 0006 049B     		ldr	r3, [sp, #16]
 1160 0008 002B     		cmp	r3, #0
 1161 000a 0FDA     		bge	.L113
 1162              	.L98:
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1163              		.loc 1 741 0
 1164 000c 0022     		movs	r2, #0
 1165 000e 04A9     		add	r1, sp, #16
 1166 0010 3E4B     		ldr	r3, .L117
 1167 0012 1868     		ldr	r0, [r3]
 1168 0014 FFF7FEFF 		bl	xQueueReceive
 1169              	.LVL104:
 1170 0018 0028     		cmp	r0, #0
 1171 001a 74D0     		beq	.L114
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1172              		.loc 1 747 0
ARM GAS  /tmp/cc5PSjuz.s 			page 44


 1173 001c 049B     		ldr	r3, [sp, #16]
 1174 001e 002B     		cmp	r3, #0
 1175 0020 F1DA     		bge	.L97
 1176              	.LVL105:
 1177              	.LBB62:
 756:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1178              		.loc 1 756 0
 1179 0022 0799     		ldr	r1, [sp, #28]
 1180 0024 0698     		ldr	r0, [sp, #24]
 1181 0026 059B     		ldr	r3, [sp, #20]
 1182 0028 9847     		blx	r3
 1183              	.LVL106:
 1184              	.LBE62:
 1185 002a ECE7     		b	.L97
 1186              	.LVL107:
 1187              	.L113:
 771:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1188              		.loc 1 771 0
 1189 002c 069C     		ldr	r4, [sp, #24]
 1190              	.LVL108:
 773:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1191              		.loc 1 773 0
 1192 002e 6369     		ldr	r3, [r4, #20]
 1193 0030 13B1     		cbz	r3, .L99
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1194              		.loc 1 776 0
 1195 0032 201D     		adds	r0, r4, #4
 1196 0034 FFF7FEFF 		bl	uxListRemove
 1197              	.LVL109:
 1198              	.L99:
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1199              		.loc 1 791 0
 1200 0038 03A8     		add	r0, sp, #12
 1201 003a FFF7FEFF 		bl	prvSampleTimeNow
 1202              	.LVL110:
 793:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1203              		.loc 1 793 0
 1204 003e 049B     		ldr	r3, [sp, #16]
 1205 0040 092B     		cmp	r3, #9
 1206 0042 E3D8     		bhi	.L98
 1207 0044 DFE803F0 		tbb	[pc, r3]
 1208              	.L102:
 1209 0048 05       		.byte	(.L101-.L102)/2
 1210 0049 05       		.byte	(.L101-.L102)/2
 1211 004a 05       		.byte	(.L101-.L102)/2
 1212 004b 31       		.byte	(.L103-.L102)/2
 1213 004c 38       		.byte	(.L104-.L102)/2
 1214 004d 51       		.byte	(.L105-.L102)/2
 1215 004e 05       		.byte	(.L101-.L102)/2
 1216 004f 05       		.byte	(.L101-.L102)/2
 1217 0050 31       		.byte	(.L103-.L102)/2
 1218 0051 38       		.byte	(.L104-.L102)/2
 1219              		.p2align 1
 1220              	.L101:
 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 1221              		.loc 1 801 0
 1222 0052 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
ARM GAS  /tmp/cc5PSjuz.s 			page 45


 1223 0056 43F00103 		orr	r3, r3, #1
 1224 005a 84F82830 		strb	r3, [r4, #40]
 802:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 1225              		.loc 1 802 0
 1226 005e 0599     		ldr	r1, [sp, #20]
 1227 0060 A569     		ldr	r5, [r4, #24]
 1228 0062 0B46     		mov	r3, r1
 1229 0064 0246     		mov	r2, r0
 1230 0066 2944     		add	r1, r1, r5
 1231 0068 2046     		mov	r0, r4
 1232              	.LVL111:
 1233 006a FFF7FEFF 		bl	prvInsertTimerInActiveList
 1234              	.LVL112:
 1235 006e 0028     		cmp	r0, #0
 1236 0070 CCD0     		beq	.L98
 806:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 1237              		.loc 1 806 0
 1238 0072 236A     		ldr	r3, [r4, #32]
 1239 0074 2046     		mov	r0, r4
 1240 0076 9847     		blx	r3
 1241              	.LVL113:
 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1242              		.loc 1 809 0
 1243 0078 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1244 007c 13F0040F 		tst	r3, #4
 1245 0080 C4D0     		beq	.L98
 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 1246              		.loc 1 811 0
 1247 0082 A269     		ldr	r2, [r4, #24]
 1248 0084 0021     		movs	r1, #0
 1249 0086 0091     		str	r1, [sp]
 1250 0088 0B46     		mov	r3, r1
 1251 008a 0598     		ldr	r0, [sp, #20]
 1252 008c 0244     		add	r2, r2, r0
 1253 008e 2046     		mov	r0, r4
 1254 0090 FFF7FEFF 		bl	xTimerGenericCommand
 1255              	.LVL114:
 812:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 1256              		.loc 1 812 0
 1257 0094 0028     		cmp	r0, #0
 1258 0096 B9D1     		bne	.L98
 1259              	.LBB63:
 1260              	.LBB64:
 1261              		.loc 2 195 0
 1262              		.syntax unified
 1263              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1264 0098 4FF05003 			mov r3, #80												
 1265 009c 83F31188 		msr basepri, r3											
 1266 00a0 BFF36F8F 		isb														
 1267 00a4 BFF34F8F 		dsb														
 1268              	
 1269              	@ 0 "" 2
 1270              	.LVL115:
 1271              		.thumb
 1272              		.syntax unified
 1273              	.L107:
 1274 00a8 FEE7     		b	.L107
ARM GAS  /tmp/cc5PSjuz.s 			page 46


 1275              	.LVL116:
 1276              	.L103:
 1277              	.LBE64:
 1278              	.LBE63:
 829:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1279              		.loc 1 829 0
 1280 00aa 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1281 00ae 23F00103 		bic	r3, r3, #1
 1282 00b2 84F82830 		strb	r3, [r4, #40]
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1283              		.loc 1 830 0
 1284 00b6 A9E7     		b	.L98
 1285              	.L104:
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 1286              		.loc 1 834 0
 1287 00b8 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1288 00bc 43F00103 		orr	r3, r3, #1
 1289 00c0 84F82830 		strb	r3, [r4, #40]
 835:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1290              		.loc 1 835 0
 1291 00c4 0599     		ldr	r1, [sp, #20]
 1292 00c6 A161     		str	r1, [r4, #24]
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1293              		.loc 1 836 0
 1294 00c8 31B1     		cbz	r1, .L115
 844:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1295              		.loc 1 844 0
 1296 00ca 0346     		mov	r3, r0
 1297 00cc 0246     		mov	r2, r0
 1298 00ce 0144     		add	r1, r1, r0
 1299 00d0 2046     		mov	r0, r4
 1300              	.LVL117:
 1301 00d2 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1302              	.LVL118:
 845:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1303              		.loc 1 845 0
 1304 00d6 99E7     		b	.L98
 1305              	.LVL119:
 1306              	.L115:
 1307              	.LBB65:
 1308              	.LBB66:
 1309              		.loc 2 195 0
 1310              		.syntax unified
 1311              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1312 00d8 4FF05003 			mov r3, #80												
 1313 00dc 83F31188 		msr basepri, r3											
 1314 00e0 BFF36F8F 		isb														
 1315 00e4 BFF34F8F 		dsb														
 1316              	
 1317              	@ 0 "" 2
 1318              	.LVL120:
 1319              		.thumb
 1320              		.syntax unified
 1321              	.L109:
 1322 00e8 FEE7     		b	.L109
 1323              	.L105:
 1324              	.LBE66:
ARM GAS  /tmp/cc5PSjuz.s 			page 47


 1325              	.LBE65:
 853:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1326              		.loc 1 853 0
 1327 00ea 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1328 00ee 13F0020F 		tst	r3, #2
 1329 00f2 04D0     		beq	.L116
 859:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 1330              		.loc 1 859 0
 1331 00f4 23F00103 		bic	r3, r3, #1
 1332 00f8 84F82830 		strb	r3, [r4, #40]
 1333 00fc 86E7     		b	.L98
 1334              	.L116:
 855:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 1335              		.loc 1 855 0
 1336 00fe 2046     		mov	r0, r4
 1337              	.LVL121:
 1338 0100 FFF7FEFF 		bl	vPortFree
 1339              	.LVL122:
 1340 0104 82E7     		b	.L98
 1341              	.LVL123:
 1342              	.L114:
 879:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1343              		.loc 1 879 0
 1344 0106 09B0     		add	sp, sp, #36
 1345              	.LCFI34:
 1346              		.cfi_def_cfa_offset 12
 1347              		@ sp needed
 1348 0108 30BD     		pop	{r4, r5, pc}
 1349              	.L118:
 1350 010a 00BF     		.align	2
 1351              	.L117:
 1352 010c 00000000 		.word	.LANCHOR2
 1353              		.cfi_endproc
 1354              	.LFE21:
 1356              		.section	.text.prvTimerTask,"ax",%progbits
 1357              		.align	1
 1358              		.syntax unified
 1359              		.thumb
 1360              		.thumb_func
 1361              		.fpu fpv5-d16
 1363              	prvTimerTask:
 1364              	.LFB16:
 549:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 1365              		.loc 1 549 0
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 8
 1368              		@ frame_needed = 0, uses_anonymous_args = 0
 1369              	.LVL124:
 1370 0000 00B5     		push	{lr}
 1371              	.LCFI35:
 1372              		.cfi_def_cfa_offset 4
 1373              		.cfi_offset 14, -4
 1374 0002 83B0     		sub	sp, sp, #12
 1375              	.LCFI36:
 1376              		.cfi_def_cfa_offset 16
 1377              	.LVL125:
 1378              	.L120:
ARM GAS  /tmp/cc5PSjuz.s 			page 48


 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1379              		.loc 1 572 0 discriminator 1
 1380 0004 01A8     		add	r0, sp, #4
 1381 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 1382              	.LVL126:
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1383              		.loc 1 576 0 discriminator 1
 1384 000a 0199     		ldr	r1, [sp, #4]
 1385 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 1386              	.LVL127:
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1387              		.loc 1 579 0 discriminator 1
 1388 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 1389              	.LVL128:
 1390 0014 F6E7     		b	.L120
 1391              		.cfi_endproc
 1392              	.LFE16:
 1394              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 1395              		.align	1
 1396              		.global	xTimerGetTimerDaemonTaskHandle
 1397              		.syntax unified
 1398              		.thumb
 1399              		.thumb_func
 1400              		.fpu fpv5-d16
 1402              	xTimerGetTimerDaemonTaskHandle:
 1403              	.LFB9:
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1404              		.loc 1 425 0
 1405              		.cfi_startproc
 1406              		@ args = 0, pretend = 0, frame = 0
 1407              		@ frame_needed = 0, uses_anonymous_args = 0
 1408              		@ link register save eliminated.
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 1409              		.loc 1 428 0
 1410 0000 064B     		ldr	r3, .L126
 1411 0002 1868     		ldr	r0, [r3]
 1412 0004 00B1     		cbz	r0, .L125
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1413              		.loc 1 430 0
 1414 0006 7047     		bx	lr
 1415              	.L125:
 1416              	.LBB67:
 1417              	.LBB68:
 1418              		.loc 2 195 0
 1419              		.syntax unified
 1420              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1421 0008 4FF05003 			mov r3, #80												
 1422 000c 83F31188 		msr basepri, r3											
 1423 0010 BFF36F8F 		isb														
 1424 0014 BFF34F8F 		dsb														
 1425              	
 1426              	@ 0 "" 2
 1427              	.LVL129:
 1428              		.thumb
 1429              		.syntax unified
 1430              	.L124:
 1431 0018 FEE7     		b	.L124
ARM GAS  /tmp/cc5PSjuz.s 			page 49


 1432              	.L127:
 1433 001a 00BF     		.align	2
 1434              	.L126:
 1435 001c 00000000 		.word	.LANCHOR7
 1436              	.LBE68:
 1437              	.LBE67:
 1438              		.cfi_endproc
 1439              	.LFE9:
 1441              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1442              		.align	1
 1443              		.global	xTimerGetPeriod
 1444              		.syntax unified
 1445              		.thumb
 1446              		.thumb_func
 1447              		.fpu fpv5-d16
 1449              	xTimerGetPeriod:
 1450              	.LFB10:
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 1451              		.loc 1 434 0
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 0
 1454              		@ frame_needed = 0, uses_anonymous_args = 0
 1455              		@ link register save eliminated.
 1456              	.LVL130:
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1457              		.loc 1 437 0
 1458 0000 08B1     		cbz	r0, .L131
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1459              		.loc 1 439 0
 1460 0002 8069     		ldr	r0, [r0, #24]
 1461              	.LVL131:
 1462 0004 7047     		bx	lr
 1463              	.LVL132:
 1464              	.L131:
 1465              	.LBB69:
 1466              	.LBB70:
 1467              		.loc 2 195 0
 1468              		.syntax unified
 1469              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1470 0006 4FF05003 			mov r3, #80												
 1471 000a 83F31188 		msr basepri, r3											
 1472 000e BFF36F8F 		isb														
 1473 0012 BFF34F8F 		dsb														
 1474              	
 1475              	@ 0 "" 2
 1476              	.LVL133:
 1477              		.thumb
 1478              		.syntax unified
 1479              	.L130:
 1480 0016 FEE7     		b	.L130
 1481              	.LBE70:
 1482              	.LBE69:
 1483              		.cfi_endproc
 1484              	.LFE10:
 1486              		.section	.text.vTimerSetReloadMode,"ax",%progbits
 1487              		.align	1
 1488              		.global	vTimerSetReloadMode
ARM GAS  /tmp/cc5PSjuz.s 			page 50


 1489              		.syntax unified
 1490              		.thumb
 1491              		.thumb_func
 1492              		.fpu fpv5-d16
 1494              	vTimerSetReloadMode:
 1495              	.LFB11:
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 1496              		.loc 1 443 0
 1497              		.cfi_startproc
 1498              		@ args = 0, pretend = 0, frame = 0
 1499              		@ frame_needed = 0, uses_anonymous_args = 0
 1500              	.LVL134:
 1501 0000 38B5     		push	{r3, r4, r5, lr}
 1502              	.LCFI37:
 1503              		.cfi_def_cfa_offset 16
 1504              		.cfi_offset 3, -16
 1505              		.cfi_offset 4, -12
 1506              		.cfi_offset 5, -8
 1507              		.cfi_offset 14, -4
 1508              	.LVL135:
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1509              		.loc 1 446 0
 1510 0002 40B9     		cbnz	r0, .L133
 1511              	.LBB71:
 1512              	.LBB72:
 1513              		.loc 2 195 0
 1514              		.syntax unified
 1515              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1516 0004 4FF05003 			mov r3, #80												
 1517 0008 83F31188 		msr basepri, r3											
 1518 000c BFF36F8F 		isb														
 1519 0010 BFF34F8F 		dsb														
 1520              	
 1521              	@ 0 "" 2
 1522              	.LVL136:
 1523              		.thumb
 1524              		.syntax unified
 1525              	.L134:
 1526 0014 FEE7     		b	.L134
 1527              	.L133:
 1528 0016 0446     		mov	r4, r0
 1529 0018 0D46     		mov	r5, r1
 1530              	.LBE72:
 1531              	.LBE71:
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1532              		.loc 1 447 0
 1533 001a FFF7FEFF 		bl	vPortEnterCritical
 1534              	.LVL137:
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1535              		.loc 1 449 0
 1536 001e 35B9     		cbnz	r5, .L138
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1537              		.loc 1 455 0
 1538 0020 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1539 0024 23F00403 		bic	r3, r3, #4
 1540 0028 84F82830 		strb	r3, [r4, #40]
 1541 002c 05E0     		b	.L136
ARM GAS  /tmp/cc5PSjuz.s 			page 51


 1542              	.L138:
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1543              		.loc 1 451 0
 1544 002e 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1545 0032 43F00403 		orr	r3, r3, #4
 1546 0036 84F82830 		strb	r3, [r4, #40]
 1547              	.L136:
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1548              		.loc 1 458 0
 1549 003a FFF7FEFF 		bl	vPortExitCritical
 1550              	.LVL138:
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1551              		.loc 1 459 0
 1552 003e 38BD     		pop	{r3, r4, r5, pc}
 1553              		.cfi_endproc
 1554              	.LFE11:
 1556              		.section	.text.uxTimerGetReloadMode,"ax",%progbits
 1557              		.align	1
 1558              		.global	uxTimerGetReloadMode
 1559              		.syntax unified
 1560              		.thumb
 1561              		.thumb_func
 1562              		.fpu fpv5-d16
 1564              	uxTimerGetReloadMode:
 1565              	.LFB12:
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 1566              		.loc 1 463 0
 1567              		.cfi_startproc
 1568              		@ args = 0, pretend = 0, frame = 0
 1569              		@ frame_needed = 0, uses_anonymous_args = 0
 1570              	.LVL139:
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1571              		.loc 1 467 0
 1572 0000 40B9     		cbnz	r0, .L140
 1573              	.LBB73:
 1574              	.LBB74:
 1575              		.loc 2 195 0
 1576              		.syntax unified
 1577              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1578 0002 4FF05003 			mov r3, #80												
 1579 0006 83F31188 		msr basepri, r3											
 1580 000a BFF36F8F 		isb														
 1581 000e BFF34F8F 		dsb														
 1582              	
 1583              	@ 0 "" 2
 1584              	.LVL140:
 1585              		.thumb
 1586              		.syntax unified
 1587              	.L141:
 1588 0012 FEE7     		b	.L141
 1589              	.L140:
 1590              	.LBE74:
 1591              	.LBE73:
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 1592              		.loc 1 463 0
 1593 0014 10B5     		push	{r4, lr}
 1594              	.LCFI38:
ARM GAS  /tmp/cc5PSjuz.s 			page 52


 1595              		.cfi_def_cfa_offset 8
 1596              		.cfi_offset 4, -8
 1597              		.cfi_offset 14, -4
 1598 0016 0446     		mov	r4, r0
 468:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1599              		.loc 1 468 0
 1600 0018 FFF7FEFF 		bl	vPortEnterCritical
 1601              	.LVL141:
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1602              		.loc 1 470 0
 1603 001c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1604 0020 13F0040F 		tst	r3, #4
 1605 0024 04D0     		beq	.L146
 478:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1606              		.loc 1 478 0
 1607 0026 0124     		movs	r4, #1
 1608              	.LVL142:
 1609              	.L142:
 481:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1610              		.loc 1 481 0
 1611 0028 FFF7FEFF 		bl	vPortExitCritical
 1612              	.LVL143:
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1613              		.loc 1 484 0
 1614 002c 2046     		mov	r0, r4
 1615 002e 10BD     		pop	{r4, pc}
 1616              	.LVL144:
 1617              	.L146:
 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1618              		.loc 1 473 0
 1619 0030 0024     		movs	r4, #0
 1620              	.LVL145:
 1621 0032 F9E7     		b	.L142
 1622              		.cfi_endproc
 1623              	.LFE12:
 1625              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 1626              		.align	1
 1627              		.global	xTimerGetExpiryTime
 1628              		.syntax unified
 1629              		.thumb
 1630              		.thumb_func
 1631              		.fpu fpv5-d16
 1633              	xTimerGetExpiryTime:
 1634              	.LFB13:
 488:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 1635              		.loc 1 488 0
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 0
 1638              		@ frame_needed = 0, uses_anonymous_args = 0
 1639              		@ link register save eliminated.
 1640              	.LVL146:
 492:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1641              		.loc 1 492 0
 1642 0000 08B1     		cbz	r0, .L150
 1643              	.LVL147:
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1644              		.loc 1 495 0
ARM GAS  /tmp/cc5PSjuz.s 			page 53


 1645 0002 4068     		ldr	r0, [r0, #4]
 1646              	.LVL148:
 1647 0004 7047     		bx	lr
 1648              	.LVL149:
 1649              	.L150:
 1650              	.LBB75:
 1651              	.LBB76:
 1652              		.loc 2 195 0
 1653              		.syntax unified
 1654              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1655 0006 4FF05003 			mov r3, #80												
 1656 000a 83F31188 		msr basepri, r3											
 1657 000e BFF36F8F 		isb														
 1658 0012 BFF34F8F 		dsb														
 1659              	
 1660              	@ 0 "" 2
 1661              	.LVL150:
 1662              		.thumb
 1663              		.syntax unified
 1664              	.L149:
 1665 0016 FEE7     		b	.L149
 1666              	.LBE76:
 1667              	.LBE75:
 1668              		.cfi_endproc
 1669              	.LFE13:
 1671              		.section	.text.pcTimerGetName,"ax",%progbits
 1672              		.align	1
 1673              		.global	pcTimerGetName
 1674              		.syntax unified
 1675              		.thumb
 1676              		.thumb_func
 1677              		.fpu fpv5-d16
 1679              	pcTimerGetName:
 1680              	.LFB14:
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 1681              		.loc 1 499 0
 1682              		.cfi_startproc
 1683              		@ args = 0, pretend = 0, frame = 0
 1684              		@ frame_needed = 0, uses_anonymous_args = 0
 1685              		@ link register save eliminated.
 1686              	.LVL151:
 502:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 1687              		.loc 1 502 0
 1688 0000 08B1     		cbz	r0, .L154
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1689              		.loc 1 504 0
 1690 0002 0068     		ldr	r0, [r0]
 1691              	.LVL152:
 1692 0004 7047     		bx	lr
 1693              	.LVL153:
 1694              	.L154:
 1695              	.LBB77:
 1696              	.LBB78:
 1697              		.loc 2 195 0
 1698              		.syntax unified
 1699              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1700 0006 4FF05003 			mov r3, #80												
ARM GAS  /tmp/cc5PSjuz.s 			page 54


 1701 000a 83F31188 		msr basepri, r3											
 1702 000e BFF36F8F 		isb														
 1703 0012 BFF34F8F 		dsb														
 1704              	
 1705              	@ 0 "" 2
 1706              	.LVL154:
 1707              		.thumb
 1708              		.syntax unified
 1709              	.L153:
 1710 0016 FEE7     		b	.L153
 1711              	.LBE78:
 1712              	.LBE77:
 1713              		.cfi_endproc
 1714              	.LFE14:
 1716              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 1717              		.align	1
 1718              		.global	xTimerIsTimerActive
 1719              		.syntax unified
 1720              		.thumb
 1721              		.thumb_func
 1722              		.fpu fpv5-d16
 1724              	xTimerIsTimerActive:
 1725              	.LFB24:
 990:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 991:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 992:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1726              		.loc 1 993 0
 1727              		.cfi_startproc
 1728              		@ args = 0, pretend = 0, frame = 0
 1729              		@ frame_needed = 0, uses_anonymous_args = 0
 1730              	.LVL155:
 994:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn;
 995:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 996:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1731              		.loc 1 997 0
 1732 0000 40B9     		cbnz	r0, .L156
 1733              	.LBB79:
 1734              	.LBB80:
 1735              		.loc 2 195 0
 1736              		.syntax unified
 1737              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1738 0002 4FF05003 			mov r3, #80												
 1739 0006 83F31188 		msr basepri, r3											
 1740 000a BFF36F8F 		isb														
 1741 000e BFF34F8F 		dsb														
 1742              	
 1743              	@ 0 "" 2
 1744              	.LVL156:
 1745              		.thumb
 1746              		.syntax unified
 1747              	.L157:
 1748 0012 FEE7     		b	.L157
 1749              	.L156:
 1750              	.LBE80:
 1751              	.LBE79:
ARM GAS  /tmp/cc5PSjuz.s 			page 55


 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn;
 1752              		.loc 1 993 0
 1753 0014 10B5     		push	{r4, lr}
 1754              	.LCFI39:
 1755              		.cfi_def_cfa_offset 8
 1756              		.cfi_offset 4, -8
 1757              		.cfi_offset 14, -4
 1758 0016 0446     		mov	r4, r0
 998:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 999:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Is the timer in the list of active timers? */
1000:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1759              		.loc 1 1000 0
 1760 0018 FFF7FEFF 		bl	vPortEnterCritical
 1761              	.LVL157:
1001:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1002:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_ACTIVE ) == 0 )
 1762              		.loc 1 1002 0
 1763 001c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1764 0020 13F0010F 		tst	r3, #1
 1765 0024 04D0     		beq	.L162
1003:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
1004:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = pdFALSE;
1005:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
1006:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
1007:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
1008:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = pdTRUE;
 1766              		.loc 1 1008 0
 1767 0026 0124     		movs	r4, #1
 1768              	.LVL158:
 1769              	.L158:
1009:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
1010:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1011:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1770              		.loc 1 1011 0
 1771 0028 FFF7FEFF 		bl	vPortExitCritical
 1772              	.LVL159:
1012:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1013:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
1014:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1773              		.loc 1 1014 0
 1774 002c 2046     		mov	r0, r4
 1775 002e 10BD     		pop	{r4, pc}
 1776              	.LVL160:
 1777              	.L162:
1004:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1778              		.loc 1 1004 0
 1779 0030 0024     		movs	r4, #0
 1780              	.LVL161:
 1781 0032 F9E7     		b	.L158
 1782              		.cfi_endproc
 1783              	.LFE24:
 1785              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1786              		.align	1
 1787              		.global	pvTimerGetTimerID
 1788              		.syntax unified
 1789              		.thumb
 1790              		.thumb_func
ARM GAS  /tmp/cc5PSjuz.s 			page 56


 1791              		.fpu fpv5-d16
 1793              	pvTimerGetTimerID:
 1794              	.LFB25:
1015:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1016:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1017:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
1018:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1795              		.loc 1 1018 0
 1796              		.cfi_startproc
 1797              		@ args = 0, pretend = 0, frame = 0
 1798              		@ frame_needed = 0, uses_anonymous_args = 0
 1799              	.LVL162:
1019:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = xTimer;
1020:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvReturn;
1021:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1022:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1800              		.loc 1 1022 0
 1801 0000 40B9     		cbnz	r0, .L164
 1802              	.LBB81:
 1803              	.LBB82:
 1804              		.loc 2 195 0
 1805              		.syntax unified
 1806              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1807 0002 4FF05003 			mov r3, #80												
 1808 0006 83F31188 		msr basepri, r3											
 1809 000a BFF36F8F 		isb														
 1810 000e BFF34F8F 		dsb														
 1811              	
 1812              	@ 0 "" 2
 1813              	.LVL163:
 1814              		.thumb
 1815              		.syntax unified
 1816              	.L165:
 1817 0012 FEE7     		b	.L165
 1818              	.L164:
 1819              	.LBE82:
 1820              	.LBE81:
1018:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = xTimer;
 1821              		.loc 1 1018 0
 1822 0014 10B5     		push	{r4, lr}
 1823              	.LCFI40:
 1824              		.cfi_def_cfa_offset 8
 1825              		.cfi_offset 4, -8
 1826              		.cfi_offset 14, -4
 1827 0016 0446     		mov	r4, r0
1023:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1024:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1828              		.loc 1 1024 0
 1829 0018 FFF7FEFF 		bl	vPortEnterCritical
 1830              	.LVL164:
1025:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1026:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1831              		.loc 1 1026 0
 1832 001c E469     		ldr	r4, [r4, #28]
 1833              	.LVL165:
1027:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1028:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
ARM GAS  /tmp/cc5PSjuz.s 			page 57


 1834              		.loc 1 1028 0
 1835 001e FFF7FEFF 		bl	vPortExitCritical
 1836              	.LVL166:
1029:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1030:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pvReturn;
1031:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1837              		.loc 1 1031 0
 1838 0022 2046     		mov	r0, r4
 1839 0024 10BD     		pop	{r4, pc}
 1840              		.cfi_endproc
 1841              	.LFE25:
 1843              		.section	.text.vTimerSetTimerID,"ax",%progbits
 1844              		.align	1
 1845              		.global	vTimerSetTimerID
 1846              		.syntax unified
 1847              		.thumb
 1848              		.thumb_func
 1849              		.fpu fpv5-d16
 1851              	vTimerSetTimerID:
 1852              	.LFB26:
1032:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1033:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1034:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
1035:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1853              		.loc 1 1035 0
 1854              		.cfi_startproc
 1855              		@ args = 0, pretend = 0, frame = 0
 1856              		@ frame_needed = 0, uses_anonymous_args = 0
 1857              	.LVL167:
 1858 0000 38B5     		push	{r3, r4, r5, lr}
 1859              	.LCFI41:
 1860              		.cfi_def_cfa_offset 16
 1861              		.cfi_offset 3, -16
 1862              		.cfi_offset 4, -12
 1863              		.cfi_offset 5, -8
 1864              		.cfi_offset 14, -4
 1865              	.LVL168:
1036:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = xTimer;
1037:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1038:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1866              		.loc 1 1038 0
 1867 0002 40B9     		cbnz	r0, .L169
 1868              	.LBB83:
 1869              	.LBB84:
 1870              		.loc 2 195 0
 1871              		.syntax unified
 1872              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1873 0004 4FF05003 			mov r3, #80												
 1874 0008 83F31188 		msr basepri, r3											
 1875 000c BFF36F8F 		isb														
 1876 0010 BFF34F8F 		dsb														
 1877              	
 1878              	@ 0 "" 2
 1879              	.LVL169:
 1880              		.thumb
 1881              		.syntax unified
 1882              	.L170:
ARM GAS  /tmp/cc5PSjuz.s 			page 58


 1883 0014 FEE7     		b	.L170
 1884              	.L169:
 1885 0016 0446     		mov	r4, r0
 1886 0018 0D46     		mov	r5, r1
 1887              	.LBE84:
 1888              	.LBE83:
1039:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1040:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1889              		.loc 1 1040 0
 1890 001a FFF7FEFF 		bl	vPortEnterCritical
 1891              	.LVL170:
1041:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1042:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1892              		.loc 1 1042 0
 1893 001e E561     		str	r5, [r4, #28]
1043:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1044:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1894              		.loc 1 1044 0
 1895 0020 FFF7FEFF 		bl	vPortExitCritical
 1896              	.LVL171:
1045:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1897              		.loc 1 1045 0
 1898 0024 38BD     		pop	{r3, r4, r5, pc}
 1899              		.cfi_endproc
 1900              	.LFE26:
 1902              		.section	.text.xTimerPendFunctionCallFromISR,"ax",%progbits
 1903              		.align	1
 1904              		.global	xTimerPendFunctionCallFromISR
 1905              		.syntax unified
 1906              		.thumb
 1907              		.thumb_func
 1908              		.fpu fpv5-d16
 1910              	xTimerPendFunctionCallFromISR:
 1911              	.LFB27:
1046:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1047:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1048:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1049:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1050:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, ui
1051:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1912              		.loc 1 1051 0
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 16
 1915              		@ frame_needed = 0, uses_anonymous_args = 0
 1916              	.LVL172:
 1917 0000 10B5     		push	{r4, lr}
 1918              	.LCFI42:
 1919              		.cfi_def_cfa_offset 8
 1920              		.cfi_offset 4, -8
 1921              		.cfi_offset 14, -4
 1922 0002 84B0     		sub	sp, sp, #16
 1923              	.LCFI43:
 1924              		.cfi_def_cfa_offset 24
 1925 0004 1C46     		mov	r4, r3
1052:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1053:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1054:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/cc5PSjuz.s 			page 59


1055:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1056:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1057:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
 1926              		.loc 1 1057 0
 1927 0006 6FF00103 		mvn	r3, #1
 1928              	.LVL173:
 1929 000a 0093     		str	r3, [sp]
1058:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1930              		.loc 1 1058 0
 1931 000c 0190     		str	r0, [sp, #4]
1059:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1932              		.loc 1 1059 0
 1933 000e 0291     		str	r1, [sp, #8]
1060:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1934              		.loc 1 1060 0
 1935 0010 0392     		str	r2, [sp, #12]
1061:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1062:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 1936              		.loc 1 1062 0
 1937 0012 0023     		movs	r3, #0
 1938 0014 2246     		mov	r2, r4
 1939              	.LVL174:
 1940 0016 6946     		mov	r1, sp
 1941              	.LVL175:
 1942 0018 0248     		ldr	r0, .L174
 1943              	.LVL176:
 1944 001a 0068     		ldr	r0, [r0]
 1945 001c FFF7FEFF 		bl	xQueueGenericSendFromISR
 1946              	.LVL177:
1063:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1064:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1065:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1066:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1067:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1947              		.loc 1 1067 0
 1948 0020 04B0     		add	sp, sp, #16
 1949              	.LCFI44:
 1950              		.cfi_def_cfa_offset 8
 1951              		@ sp needed
 1952 0022 10BD     		pop	{r4, pc}
 1953              	.LVL178:
 1954              	.L175:
 1955              		.align	2
 1956              	.L174:
 1957 0024 00000000 		.word	.LANCHOR2
 1958              		.cfi_endproc
 1959              	.LFE27:
 1961              		.section	.text.xTimerPendFunctionCall,"ax",%progbits
 1962              		.align	1
 1963              		.global	xTimerPendFunctionCall
 1964              		.syntax unified
 1965              		.thumb
 1966              		.thumb_func
 1967              		.fpu fpv5-d16
 1969              	xTimerPendFunctionCall:
 1970              	.LFB28:
1068:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/cc5PSjuz.s 			page 60


1069:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1070:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1071:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1072:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1073:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1074:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t 
1075:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1971              		.loc 1 1075 0
 1972              		.cfi_startproc
 1973              		@ args = 0, pretend = 0, frame = 16
 1974              		@ frame_needed = 0, uses_anonymous_args = 0
 1975              	.LVL179:
 1976 0000 30B5     		push	{r4, r5, lr}
 1977              	.LCFI45:
 1978              		.cfi_def_cfa_offset 12
 1979              		.cfi_offset 4, -12
 1980              		.cfi_offset 5, -8
 1981              		.cfi_offset 14, -4
 1982 0002 85B0     		sub	sp, sp, #20
 1983              	.LCFI46:
 1984              		.cfi_def_cfa_offset 32
 1985 0004 1446     		mov	r4, r2
1076:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1077:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1078:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1079:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* This function can only be called after a timer has been created or
1080:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		after the scheduler has been started because, until then, the timer
1081:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		queue does not exist. */
1082:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( xTimerQueue );
 1986              		.loc 1 1082 0
 1987 0006 0D4A     		ldr	r2, .L180
 1988              	.LVL180:
 1989 0008 1568     		ldr	r5, [r2]
 1990 000a 45B9     		cbnz	r5, .L177
 1991              	.LBB85:
 1992              	.LBB86:
 1993              		.loc 2 195 0
 1994              		.syntax unified
 1995              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1996 000c 4FF05003 			mov r3, #80												
 1997 0010 83F31188 		msr basepri, r3											
 1998 0014 BFF36F8F 		isb														
 1999 0018 BFF34F8F 		dsb														
 2000              	
 2001              	@ 0 "" 2
 2002              	.LVL181:
 2003              		.thumb
 2004              		.syntax unified
 2005              	.L178:
 2006 001c FEE7     		b	.L178
 2007              	.LVL182:
 2008              	.L177:
 2009 001e 1A46     		mov	r2, r3
 2010 0020 0346     		mov	r3, r0
 2011              	.LVL183:
 2012              	.LBE86:
 2013              	.LBE85:
ARM GAS  /tmp/cc5PSjuz.s 			page 61


1083:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1084:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1085:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1086:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
 2014              		.loc 1 1086 0
 2015 0022 4FF0FF30 		mov	r0, #-1
 2016              	.LVL184:
 2017 0026 0090     		str	r0, [sp]
1087:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 2018              		.loc 1 1087 0
 2019 0028 0193     		str	r3, [sp, #4]
1088:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 2020              		.loc 1 1088 0
 2021 002a 0291     		str	r1, [sp, #8]
1089:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 2022              		.loc 1 1089 0
 2023 002c 0394     		str	r4, [sp, #12]
1090:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1091:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 2024              		.loc 1 1091 0
 2025 002e 0023     		movs	r3, #0
 2026              	.LVL185:
 2027 0030 6946     		mov	r1, sp
 2028              	.LVL186:
 2029 0032 2846     		mov	r0, r5
 2030 0034 FFF7FEFF 		bl	xQueueGenericSend
 2031              	.LVL187:
1092:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1093:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1094:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1095:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1096:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 2032              		.loc 1 1096 0
 2033 0038 05B0     		add	sp, sp, #20
 2034              	.LCFI47:
 2035              		.cfi_def_cfa_offset 12
 2036              		@ sp needed
 2037 003a 30BD     		pop	{r4, r5, pc}
 2038              	.LVL188:
 2039              	.L181:
 2040              		.align	2
 2041              	.L180:
 2042 003c 00000000 		.word	.LANCHOR2
 2043              		.cfi_endproc
 2044              	.LFE28:
 2046              		.section	.text.uxTimerGetTimerNumber,"ax",%progbits
 2047              		.align	1
 2048              		.global	uxTimerGetTimerNumber
 2049              		.syntax unified
 2050              		.thumb
 2051              		.thumb_func
 2052              		.fpu fpv5-d16
 2054              	uxTimerGetTimerNumber:
 2055              	.LFB29:
1097:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1098:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1099:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc5PSjuz.s 			page 62


1100:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1101:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1102:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1103:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1104:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 2056              		.loc 1 1104 0
 2057              		.cfi_startproc
 2058              		@ args = 0, pretend = 0, frame = 0
 2059              		@ frame_needed = 0, uses_anonymous_args = 0
 2060              		@ link register save eliminated.
 2061              	.LVL189:
1105:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return ( ( Timer_t * ) xTimer )->uxTimerNumber;
1106:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 2062              		.loc 1 1106 0
 2063 0000 406A     		ldr	r0, [r0, #36]
 2064              	.LVL190:
 2065 0002 7047     		bx	lr
 2066              		.cfi_endproc
 2067              	.LFE29:
 2069              		.section	.text.vTimerSetTimerNumber,"ax",%progbits
 2070              		.align	1
 2071              		.global	vTimerSetTimerNumber
 2072              		.syntax unified
 2073              		.thumb
 2074              		.thumb_func
 2075              		.fpu fpv5-d16
 2077              	vTimerSetTimerNumber:
 2078              	.LFB30:
1107:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1108:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configUSE_TRACE_FACILITY */
1109:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1110:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1111:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1112:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1113:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void vTimerSetTimerNumber( TimerHandle_t xTimer, UBaseType_t uxTimerNumber )
1114:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 2079              		.loc 1 1114 0
 2080              		.cfi_startproc
 2081              		@ args = 0, pretend = 0, frame = 0
 2082              		@ frame_needed = 0, uses_anonymous_args = 0
 2083              		@ link register save eliminated.
 2084              	.LVL191:
1115:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 2085              		.loc 1 1115 0
 2086 0000 4162     		str	r1, [r0, #36]
1116:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 2087              		.loc 1 1116 0
 2088 0002 7047     		bx	lr
 2089              		.cfi_endproc
 2090              	.LFE30:
 2092              		.section	.bss.pxCurrentTimerList,"aw",%nobits
 2093              		.align	2
 2094              		.set	.LANCHOR0,. + 0
 2097              	pxCurrentTimerList:
 2098 0000 00000000 		.space	4
 2099              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 2100              		.align	2
ARM GAS  /tmp/cc5PSjuz.s 			page 63


 2101              		.set	.LANCHOR1,. + 0
 2104              	pxOverflowTimerList:
 2105 0000 00000000 		.space	4
 2106              		.section	.bss.ucStaticTimerQueueStorage.6829,"aw",%nobits
 2107              		.align	2
 2108              		.set	.LANCHOR6,. + 0
 2111              	ucStaticTimerQueueStorage.6829:
 2112 0000 00000000 		.space	160
 2112      00000000 
 2112      00000000 
 2112      00000000 
 2112      00000000 
 2113              		.section	.bss.xActiveTimerList1,"aw",%nobits
 2114              		.align	2
 2115              		.set	.LANCHOR3,. + 0
 2118              	xActiveTimerList1:
 2119 0000 00000000 		.space	20
 2119      00000000 
 2119      00000000 
 2119      00000000 
 2119      00000000 
 2120              		.section	.bss.xActiveTimerList2,"aw",%nobits
 2121              		.align	2
 2122              		.set	.LANCHOR4,. + 0
 2125              	xActiveTimerList2:
 2126 0000 00000000 		.space	20
 2126      00000000 
 2126      00000000 
 2126      00000000 
 2126      00000000 
 2127              		.section	.bss.xLastTime.6778,"aw",%nobits
 2128              		.align	2
 2129              		.set	.LANCHOR8,. + 0
 2132              	xLastTime.6778:
 2133 0000 00000000 		.space	4
 2134              		.section	.bss.xStaticTimerQueue.6828,"aw",%nobits
 2135              		.align	2
 2136              		.set	.LANCHOR5,. + 0
 2139              	xStaticTimerQueue.6828:
 2140 0000 00000000 		.space	80
 2140      00000000 
 2140      00000000 
 2140      00000000 
 2140      00000000 
 2141              		.section	.bss.xTimerQueue,"aw",%nobits
 2142              		.align	2
 2143              		.set	.LANCHOR2,. + 0
 2146              	xTimerQueue:
 2147 0000 00000000 		.space	4
 2148              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 2149              		.align	2
 2150              		.set	.LANCHOR7,. + 0
 2153              	xTimerTaskHandle:
 2154 0000 00000000 		.space	4
 2155              		.section	.rodata.prvCheckForValidListAndQueue.str1.4,"aMS",%progbits,1
 2156              		.align	2
 2157              	.LC0:
ARM GAS  /tmp/cc5PSjuz.s 			page 64


 2158 0000 546D7251 		.ascii	"TmrQ\000"
 2158      00
 2159              		.section	.rodata.xTimerCreateTimerTask.str1.4,"aMS",%progbits,1
 2160              		.align	2
 2161              	.LC1:
 2162 0000 546D7220 		.ascii	"Tmr Svc\000"
 2162      53766300 
 2163              		.text
 2164              	.Letext0:
 2165              		.file 3 "/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
 2166              		.file 4 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 2167              		.file 5 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 2168              		.file 6 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 2169              		.file 7 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 2170              		.file 8 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdlib.h"
 2171              		.file 9 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 2172              		.file 10 "Core/Inc/FreeRTOSConfig.h"
 2173              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 2174              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 2175              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 2176              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 2177              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 2178              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 2179              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/cc5PSjuz.s 			page 65


DEFINED SYMBOLS
                            *ABS*:0000000000000000 timers.c
     /tmp/cc5PSjuz.s:17     .text.prvGetNextExpireTime:0000000000000000 $t
     /tmp/cc5PSjuz.s:23     .text.prvGetNextExpireTime:0000000000000000 prvGetNextExpireTime
     /tmp/cc5PSjuz.s:62     .text.prvGetNextExpireTime:000000000000001c $d
     /tmp/cc5PSjuz.s:67     .text.prvInsertTimerInActiveList:0000000000000000 $t
     /tmp/cc5PSjuz.s:73     .text.prvInsertTimerInActiveList:0000000000000000 prvInsertTimerInActiveList
     /tmp/cc5PSjuz.s:153    .text.prvInsertTimerInActiveList:0000000000000048 $d
     /tmp/cc5PSjuz.s:159    .text.prvCheckForValidListAndQueue:0000000000000000 $t
     /tmp/cc5PSjuz.s:165    .text.prvCheckForValidListAndQueue:0000000000000000 prvCheckForValidListAndQueue
     /tmp/cc5PSjuz.s:241    .text.prvCheckForValidListAndQueue:0000000000000050 $d
     /tmp/cc5PSjuz.s:253    .text.prvInitialiseNewTimer:0000000000000000 $t
     /tmp/cc5PSjuz.s:259    .text.prvInitialiseNewTimer:0000000000000000 prvInitialiseNewTimer
     /tmp/cc5PSjuz.s:335    .text.xTimerCreateTimerTask:0000000000000000 $t
     /tmp/cc5PSjuz.s:342    .text.xTimerCreateTimerTask:0000000000000000 xTimerCreateTimerTask
     /tmp/cc5PSjuz.s:424    .text.xTimerCreateTimerTask:0000000000000054 $d
     /tmp/cc5PSjuz.s:1363   .text.prvTimerTask:0000000000000000 prvTimerTask
     /tmp/cc5PSjuz.s:434    .text.xTimerCreate:0000000000000000 $t
     /tmp/cc5PSjuz.s:441    .text.xTimerCreate:0000000000000000 xTimerCreate
     /tmp/cc5PSjuz.s:498    .text.xTimerCreateStatic:0000000000000000 $t
     /tmp/cc5PSjuz.s:505    .text.xTimerCreateStatic:0000000000000000 xTimerCreateStatic
     /tmp/cc5PSjuz.s:595    .text.xTimerGenericCommand:0000000000000000 $t
     /tmp/cc5PSjuz.s:602    .text.xTimerGenericCommand:0000000000000000 xTimerGenericCommand
     /tmp/cc5PSjuz.s:718    .text.xTimerGenericCommand:0000000000000068 $d
     /tmp/cc5PSjuz.s:723    .text.prvSwitchTimerLists:0000000000000000 $t
     /tmp/cc5PSjuz.s:729    .text.prvSwitchTimerLists:0000000000000000 prvSwitchTimerLists
     /tmp/cc5PSjuz.s:841    .text.prvSwitchTimerLists:0000000000000074 $d
     /tmp/cc5PSjuz.s:847    .text.prvSampleTimeNow:0000000000000000 $t
     /tmp/cc5PSjuz.s:853    .text.prvSampleTimeNow:0000000000000000 prvSampleTimeNow
     /tmp/cc5PSjuz.s:901    .text.prvSampleTimeNow:0000000000000028 $d
     /tmp/cc5PSjuz.s:906    .text.prvProcessExpiredTimer:0000000000000000 $t
     /tmp/cc5PSjuz.s:912    .text.prvProcessExpiredTimer:0000000000000000 prvProcessExpiredTimer
     /tmp/cc5PSjuz.s:1006   .text.prvProcessExpiredTimer:0000000000000068 $d
     /tmp/cc5PSjuz.s:1013   .text.prvProcessTimerOrBlockTask:0000000000000000 $t
     /tmp/cc5PSjuz.s:1019   .text.prvProcessTimerOrBlockTask:0000000000000000 prvProcessTimerOrBlockTask
     /tmp/cc5PSjuz.s:1127   .text.prvProcessTimerOrBlockTask:0000000000000074 $d
     /tmp/cc5PSjuz.s:1134   .text.prvProcessReceivedCommands:0000000000000000 $t
     /tmp/cc5PSjuz.s:1140   .text.prvProcessReceivedCommands:0000000000000000 prvProcessReceivedCommands
     /tmp/cc5PSjuz.s:1209   .text.prvProcessReceivedCommands:0000000000000048 $d
     /tmp/cc5PSjuz.s:1219   .text.prvProcessReceivedCommands:0000000000000052 $t
     /tmp/cc5PSjuz.s:1352   .text.prvProcessReceivedCommands:000000000000010c $d
     /tmp/cc5PSjuz.s:1357   .text.prvTimerTask:0000000000000000 $t
     /tmp/cc5PSjuz.s:1395   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 $t
     /tmp/cc5PSjuz.s:1402   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 xTimerGetTimerDaemonTaskHandle
     /tmp/cc5PSjuz.s:1435   .text.xTimerGetTimerDaemonTaskHandle:000000000000001c $d
     /tmp/cc5PSjuz.s:1442   .text.xTimerGetPeriod:0000000000000000 $t
     /tmp/cc5PSjuz.s:1449   .text.xTimerGetPeriod:0000000000000000 xTimerGetPeriod
     /tmp/cc5PSjuz.s:1487   .text.vTimerSetReloadMode:0000000000000000 $t
     /tmp/cc5PSjuz.s:1494   .text.vTimerSetReloadMode:0000000000000000 vTimerSetReloadMode
     /tmp/cc5PSjuz.s:1557   .text.uxTimerGetReloadMode:0000000000000000 $t
     /tmp/cc5PSjuz.s:1564   .text.uxTimerGetReloadMode:0000000000000000 uxTimerGetReloadMode
     /tmp/cc5PSjuz.s:1626   .text.xTimerGetExpiryTime:0000000000000000 $t
     /tmp/cc5PSjuz.s:1633   .text.xTimerGetExpiryTime:0000000000000000 xTimerGetExpiryTime
     /tmp/cc5PSjuz.s:1672   .text.pcTimerGetName:0000000000000000 $t
     /tmp/cc5PSjuz.s:1679   .text.pcTimerGetName:0000000000000000 pcTimerGetName
     /tmp/cc5PSjuz.s:1717   .text.xTimerIsTimerActive:0000000000000000 $t
     /tmp/cc5PSjuz.s:1724   .text.xTimerIsTimerActive:0000000000000000 xTimerIsTimerActive
ARM GAS  /tmp/cc5PSjuz.s 			page 66


     /tmp/cc5PSjuz.s:1786   .text.pvTimerGetTimerID:0000000000000000 $t
     /tmp/cc5PSjuz.s:1793   .text.pvTimerGetTimerID:0000000000000000 pvTimerGetTimerID
     /tmp/cc5PSjuz.s:1844   .text.vTimerSetTimerID:0000000000000000 $t
     /tmp/cc5PSjuz.s:1851   .text.vTimerSetTimerID:0000000000000000 vTimerSetTimerID
     /tmp/cc5PSjuz.s:1903   .text.xTimerPendFunctionCallFromISR:0000000000000000 $t
     /tmp/cc5PSjuz.s:1910   .text.xTimerPendFunctionCallFromISR:0000000000000000 xTimerPendFunctionCallFromISR
     /tmp/cc5PSjuz.s:1957   .text.xTimerPendFunctionCallFromISR:0000000000000024 $d
     /tmp/cc5PSjuz.s:1962   .text.xTimerPendFunctionCall:0000000000000000 $t
     /tmp/cc5PSjuz.s:1969   .text.xTimerPendFunctionCall:0000000000000000 xTimerPendFunctionCall
     /tmp/cc5PSjuz.s:2042   .text.xTimerPendFunctionCall:000000000000003c $d
     /tmp/cc5PSjuz.s:2047   .text.uxTimerGetTimerNumber:0000000000000000 $t
     /tmp/cc5PSjuz.s:2054   .text.uxTimerGetTimerNumber:0000000000000000 uxTimerGetTimerNumber
     /tmp/cc5PSjuz.s:2070   .text.vTimerSetTimerNumber:0000000000000000 $t
     /tmp/cc5PSjuz.s:2077   .text.vTimerSetTimerNumber:0000000000000000 vTimerSetTimerNumber
     /tmp/cc5PSjuz.s:2093   .bss.pxCurrentTimerList:0000000000000000 $d
     /tmp/cc5PSjuz.s:2097   .bss.pxCurrentTimerList:0000000000000000 pxCurrentTimerList
     /tmp/cc5PSjuz.s:2100   .bss.pxOverflowTimerList:0000000000000000 $d
     /tmp/cc5PSjuz.s:2104   .bss.pxOverflowTimerList:0000000000000000 pxOverflowTimerList
     /tmp/cc5PSjuz.s:2107   .bss.ucStaticTimerQueueStorage.6829:0000000000000000 $d
     /tmp/cc5PSjuz.s:2111   .bss.ucStaticTimerQueueStorage.6829:0000000000000000 ucStaticTimerQueueStorage.6829
     /tmp/cc5PSjuz.s:2114   .bss.xActiveTimerList1:0000000000000000 $d
     /tmp/cc5PSjuz.s:2118   .bss.xActiveTimerList1:0000000000000000 xActiveTimerList1
     /tmp/cc5PSjuz.s:2121   .bss.xActiveTimerList2:0000000000000000 $d
     /tmp/cc5PSjuz.s:2125   .bss.xActiveTimerList2:0000000000000000 xActiveTimerList2
     /tmp/cc5PSjuz.s:2128   .bss.xLastTime.6778:0000000000000000 $d
     /tmp/cc5PSjuz.s:2132   .bss.xLastTime.6778:0000000000000000 xLastTime.6778
     /tmp/cc5PSjuz.s:2135   .bss.xStaticTimerQueue.6828:0000000000000000 $d
     /tmp/cc5PSjuz.s:2139   .bss.xStaticTimerQueue.6828:0000000000000000 xStaticTimerQueue.6828
     /tmp/cc5PSjuz.s:2142   .bss.xTimerQueue:0000000000000000 $d
     /tmp/cc5PSjuz.s:2146   .bss.xTimerQueue:0000000000000000 xTimerQueue
     /tmp/cc5PSjuz.s:2149   .bss.xTimerTaskHandle:0000000000000000 $d
     /tmp/cc5PSjuz.s:2153   .bss.xTimerTaskHandle:0000000000000000 xTimerTaskHandle
     /tmp/cc5PSjuz.s:2156   .rodata.prvCheckForValidListAndQueue.str1.4:0000000000000000 $d
     /tmp/cc5PSjuz.s:2160   .rodata.xTimerCreateTimerTask.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
vListInsert
vPortEnterCritical
vPortExitCritical
vListInitialise
xQueueGenericCreateStatic
vQueueAddToRegistry
vListInitialiseItem
vApplicationGetTimerTaskMemory
xTaskCreateStatic
pvPortMalloc
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
uxListRemove
xTaskGetTickCount
vTaskSuspendAll
vQueueWaitForMessageRestricted
xTaskResumeAll
xQueueReceive
vPortFree
