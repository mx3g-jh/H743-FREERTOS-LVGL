ARM GAS  /tmp/cc0w4XYV.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"queue.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	prvGetDisinheritPriorityAfterTimeout:
  24              	.LFB32:
  25              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
ARM GAS  /tmp/cc0w4XYV.s 			page 2


  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** for the header files above, but not in this file, in order to generate the
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** correct privileged Vs unprivileged linkage and placement. */
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure instead holds a pointer to the mutex holder (if any).  Map alternative
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and structure member to ensure the readability of the code
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** is maintained.  The QueuePointers_t and SemaphoreData_t types are used to form
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** a union as their usage is mutually exclusive dependent on what the queue is
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** being used for. */
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueuePointers
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcReadFrom;				/*< Points to the last place that a queued item was read from when the stru
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } QueuePointers_t;
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct SemaphoreData
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xMutexHolder;		 /*< The handle of the task that holds the mutex. */
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex ha
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } SemaphoreData_t;
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
ARM GAS  /tmp/cc0w4XYV.s 			page 3


  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: https://www.freertos.org/Embedded-RTOS-Queues.html
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition 		/* The old naming convention is used to prevent breaking kernel aw
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueuePointers_t xQueue;		/*< Data required exclusively when this structure is used as a queue. */
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		SemaphoreData_t xSemaphore; /*< Data required exclusively when this structure is used as a semaph
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
ARM GAS  /tmp/cc0w4XYV.s 			page 4


 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
ARM GAS  /tmp/cc0w4XYV.s 			page 5


 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * that priority.
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
ARM GAS  /tmp/cc0w4XYV.s 			page 6


 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint 
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
ARM GAS  /tmp/cc0w4XYV.s 			page 7


 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 !e9087 Unusual cast is ok as the structure
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc0w4XYV.s 			page 8


 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Allocate enough space to hold the maximum number of items that
 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		can be in the queue at any time.  It is valid for uxItemSize to be
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		zero in the case the queue is used as a semaphore. */
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as th
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Allocate the queue and storage area.  Justification for MISRA
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deviation as follows:  pvPortMalloc() always ensures returned memory
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		blocks are aligned per the requirements of the MCU stack.  In this case
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pvPortMalloc() must return a pointer that is guaranteed to meet the
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		alignment requirements of the Queue_t structure - which in this case
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is an int8_t *.  Therefore, whenever the stack alignment requirements
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		are greater than or equal to the pointer to char requirements the cast
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is safe.  In other cases alignment requirements are not strict (one or
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		two bytes). */
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( uint8_t * ) pxNewQueue;
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, es
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
ARM GAS  /tmp/cc0w4XYV.s 			page 9


 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
ARM GAS  /tmp/cc0w4XYV.s 			page 10


 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueTy
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxSemaphore = ( Queue_t * ) xSemaphore;
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxSemaphore->uxQueueType == queueQUEUE_IS_MUTEX )
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = pxSemaphore->u.xSemaphore.xMutexHolder;
ARM GAS  /tmp/cc0w4XYV.s 			page 11


 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( xSemaphore );
 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not required here. */
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = ( ( Queue_t * ) xSemaphore )->u.xSemaphore.xMutexHolder;
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = NULL;
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then xMutexHolder will not
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/cc0w4XYV.s 			page 12


 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if xMutexHolder is equal to
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/cc0w4XYV.s 			page 13


 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc0w4XYV.s 			page 14


 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc0w4XYV.s 			page 15


 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 )
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Do not notify the queue set as an existing item
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							was overwritten in the queue so the number of items
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							in the queue has not changed. */
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
ARM GAS  /tmp/cc0w4XYV.s 			page 16


 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
ARM GAS  /tmp/cc0w4XYV.s 			page 17


 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible that interrupts occurring now
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event list again - but as the
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/cc0w4XYV.s 			page 18


 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  /tmp/cc0w4XYV.s 			page 19


1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 )
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Do not notify the queue set as an existing item
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							was overwritten in the queue so the number of items
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							in the queue has not changed. */
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
ARM GAS  /tmp/cc0w4XYV.s 			page 20


1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Not used in this path. */
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					( void ) uxPreviousMessagesWaiting;
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
ARM GAS  /tmp/cc0w4XYV.s 			page 21


1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutex
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
ARM GAS  /tmp/cc0w4XYV.s 			page 22


1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  /tmp/cc0w4XYV.s 			page 23


1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
ARM GAS  /tmp/cc0w4XYV.s 			page 24


1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data available, remove one item. */
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task. */
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
ARM GAS  /tmp/cc0w4XYV.s 			page 25


1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data. */
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			back and attempt to read the data. */
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
ARM GAS  /tmp/cc0w4XYV.s 			page 26


1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the queue pointer is not NULL. */
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	0. */
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to allow return
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
ARM GAS  /tmp/cc0w4XYV.s 			page 27


1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* Record the information required to implement
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						priority inheritance should it become necessary. */
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* For inheritance to have occurred there must have been an
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if it were 0 the function would have exited. */
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					(or the block time has expired) so exit now. */
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
ARM GAS  /tmp/cc0w4XYV.s 			page 28


1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					so configure the timeout structure ready to block. */
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			become available.  As semaphores are implemented with queues the
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  /tmp/cc0w4XYV.s 			page 29


1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				attempt to take the semaphore again. */
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out. */
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* xInheritanceOccurred could only have be set if
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This task blocking on the mutex caused another
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to inherit this task's priority.  Now this task
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							has timed out the priority should be disinherited
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							again, but only as low as the next highest priority
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task that is waiting for the same mutex. */
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cc0w4XYV.s 			page 30


1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position so it can be reset after the data
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is read from the queue as this function is only peeking the
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data, not removing it. */
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is being left in the queue, so see if there are
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				any other tasks waiting for the data. */
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
ARM GAS  /tmp/cc0w4XYV.s 			page 31


1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than this task. */
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure ready to enter the blocked
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					state. */
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/cc0w4XYV.s 			page 32


1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				state, instead return to try and obtain the data. */
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			exit, otherwise go back and try to read the data again. */
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
ARM GAS  /tmp/cc0w4XYV.s 			page 33


1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
ARM GAS  /tmp/cc0w4XYV.s 			page 34


1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
ARM GAS  /tmp/cc0w4XYV.s 			page 35


1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
ARM GAS  /tmp/cc0w4XYV.s 			page 36


1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc0w4XYV.s 			page 37


2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  26              		.loc 1 2050 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		priority, but the waiting task times out, then the holder should
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return the priority of the highest priority task that is waiting for the
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutex. */
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
  32              		.loc 1 2059 0
  33 0000 436A     		ldr	r3, [r0, #36]
  34 0002 23B1     		cbz	r3, .L3
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET
  35              		.loc 1 2061 0
  36 0004 036B     		ldr	r3, [r0, #48]
  37 0006 1868     		ldr	r0, [r3]
  38              	.LVL1:
  39 0008 C0F13800 		rsb	r0, r0, #56
  40              	.LVL2:
  41 000c 7047     		bx	lr
  42              	.LVL3:
  43              	.L3:
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
  44              		.loc 1 2065 0
  45 000e 0020     		movs	r0, #0
ARM GAS  /tmp/cc0w4XYV.s 			page 38


  46              	.LVL4:
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
  47              		.loc 1 2069 0
  48 0010 7047     		bx	lr
  49              		.cfi_endproc
  50              	.LFE32:
  52              		.section	.text.prvIsQueueFull,"ax",%progbits
  53              		.align	1
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu fpv5-d16
  59              	prvIsQueueFull:
  60              	.LFB38:
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/cc0w4XYV.s 			page 39


2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxIt
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char typ
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue
ARM GAS  /tmp/cc0w4XYV.s 			page 40


2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  /tmp/cc0w4XYV.s 			page 41


2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/cc0w4XYV.s 			page 42


2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  61              		.loc 1 2332 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              	.LVL5:
ARM GAS  /tmp/cc0w4XYV.s 			page 43


  66 0000 10B5     		push	{r4, lr}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 8
  69              		.cfi_offset 4, -8
  70              		.cfi_offset 14, -4
  71 0002 0446     		mov	r4, r0
2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  72              		.loc 1 2335 0
  73 0004 FFF7FEFF 		bl	vPortEnterCritical
  74              	.LVL6:
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  75              		.loc 1 2337 0
  76 0008 A26B     		ldr	r2, [r4, #56]
  77 000a E36B     		ldr	r3, [r4, #60]
  78 000c 9A42     		cmp	r2, r3
  79 000e 04D0     		beq	.L8
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
  80              		.loc 1 2343 0
  81 0010 0024     		movs	r4, #0
  82              	.LVL7:
  83              	.L5:
2344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
  84              		.loc 1 2346 0
  85 0012 FFF7FEFF 		bl	vPortExitCritical
  86              	.LVL8:
2347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
  87              		.loc 1 2349 0
  88 0016 2046     		mov	r0, r4
  89 0018 10BD     		pop	{r4, pc}
  90              	.LVL9:
  91              	.L8:
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
  92              		.loc 1 2339 0
  93 001a 0124     		movs	r4, #1
  94              	.LVL10:
  95 001c F9E7     		b	.L5
  96              		.cfi_endproc
  97              	.LFE38:
  99              		.section	.text.prvIsQueueEmpty,"ax",%progbits
 100              		.align	1
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu fpv5-d16
 106              	prvIsQueueEmpty:
ARM GAS  /tmp/cc0w4XYV.s 			page 44


 107              	.LFB36:
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 108              		.loc 1 2292 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112              	.LVL11:
 113 0000 10B5     		push	{r4, lr}
 114              	.LCFI1:
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 4, -8
 117              		.cfi_offset 14, -4
 118 0002 0446     		mov	r4, r0
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 119              		.loc 1 2295 0
 120 0004 FFF7FEFF 		bl	vPortEnterCritical
 121              	.LVL12:
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 122              		.loc 1 2297 0
 123 0008 A36B     		ldr	r3, [r4, #56]
 124 000a 23B1     		cbz	r3, .L13
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 125              		.loc 1 2303 0
 126 000c 0024     		movs	r4, #0
 127              	.LVL13:
 128              	.L10:
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 129              		.loc 1 2306 0
 130 000e FFF7FEFF 		bl	vPortExitCritical
 131              	.LVL14:
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 132              		.loc 1 2309 0
 133 0012 2046     		mov	r0, r4
 134 0014 10BD     		pop	{r4, pc}
 135              	.LVL15:
 136              	.L13:
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 137              		.loc 1 2299 0
 138 0016 0124     		movs	r4, #1
 139              	.LVL16:
 140 0018 F9E7     		b	.L10
 141              		.cfi_endproc
 142              	.LFE36:
 144              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 145              		.align	1
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv5-d16
 151              	prvCopyDataToQueue:
 152              	.LFB33:
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 153              		.loc 1 2075 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              	.LVL17:
ARM GAS  /tmp/cc0w4XYV.s 			page 45


 158 0000 70B5     		push	{r4, r5, r6, lr}
 159              	.LCFI2:
 160              		.cfi_def_cfa_offset 16
 161              		.cfi_offset 4, -16
 162              		.cfi_offset 5, -12
 163              		.cfi_offset 6, -8
 164              		.cfi_offset 14, -4
 165 0002 0446     		mov	r4, r0
 166 0004 1646     		mov	r6, r2
 167              	.LVL18:
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 168              		.loc 1 2081 0
 169 0006 856B     		ldr	r5, [r0, #56]
 170              	.LVL19:
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 171              		.loc 1 2083 0
 172 0008 026C     		ldr	r2, [r0, #64]
 173              	.LVL20:
 174 000a 5AB9     		cbnz	r2, .L15
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 175              		.loc 1 2087 0
 176 000c 0368     		ldr	r3, [r0]
 177 000e 1BB1     		cbz	r3, .L24
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 178              		.loc 1 2076 0
 179 0010 0020     		movs	r0, #0
 180              	.LVL21:
 181              	.L16:
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 182              		.loc 1 2147 0
 183 0012 0135     		adds	r5, r5, #1
 184              	.LVL22:
 185 0014 A563     		str	r5, [r4, #56]
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 186              		.loc 1 2150 0
 187 0016 70BD     		pop	{r4, r5, r6, pc}
 188              	.LVL23:
 189              	.L24:
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 190              		.loc 1 2090 0
 191 0018 8068     		ldr	r0, [r0, #8]
 192              	.LVL24:
 193 001a FFF7FEFF 		bl	xTaskPriorityDisinherit
 194              	.LVL25:
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 195              		.loc 1 2091 0
 196 001e 0023     		movs	r3, #0
 197 0020 A360     		str	r3, [r4, #8]
 198 0022 F6E7     		b	.L16
 199              	.LVL26:
 200              	.L15:
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 201              		.loc 1 2100 0
 202 0024 6EB9     		cbnz	r6, .L17
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
 203              		.loc 1 2102 0
 204 0026 4068     		ldr	r0, [r0, #4]
ARM GAS  /tmp/cc0w4XYV.s 			page 46


 205              	.LVL27:
 206 0028 FFF7FEFF 		bl	memcpy
 207              	.LVL28:
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
 208              		.loc 1 2103 0
 209 002c 226C     		ldr	r2, [r4, #64]
 210 002e 6368     		ldr	r3, [r4, #4]
 211 0030 1344     		add	r3, r3, r2
 212 0032 6360     		str	r3, [r4, #4]
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 213              		.loc 1 2104 0
 214 0034 A268     		ldr	r2, [r4, #8]
 215 0036 9342     		cmp	r3, r2
 216 0038 19D3     		bcc	.L20
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 217              		.loc 1 2106 0
 218 003a 2368     		ldr	r3, [r4]
 219 003c 6360     		str	r3, [r4, #4]
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 220              		.loc 1 2076 0
 221 003e 0020     		movs	r0, #0
 222 0040 E7E7     		b	.L16
 223              	.LVL29:
 224              	.L17:
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 225              		.loc 1 2115 0
 226 0042 C068     		ldr	r0, [r0, #12]
 227              	.LVL30:
 228 0044 FFF7FEFF 		bl	memcpy
 229              	.LVL31:
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
 230              		.loc 1 2116 0
 231 0048 226C     		ldr	r2, [r4, #64]
 232 004a 5242     		negs	r2, r2
 233 004c E368     		ldr	r3, [r4, #12]
 234 004e 1344     		add	r3, r3, r2
 235 0050 E360     		str	r3, [r4, #12]
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 236              		.loc 1 2117 0
 237 0052 2168     		ldr	r1, [r4]
 238 0054 8B42     		cmp	r3, r1
 239 0056 02D2     		bcs	.L18
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 240              		.loc 1 2119 0
 241 0058 A368     		ldr	r3, [r4, #8]
 242 005a 1A44     		add	r2, r2, r3
 243 005c E260     		str	r2, [r4, #12]
 244              	.L18:
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 245              		.loc 1 2126 0
 246 005e 022E     		cmp	r6, #2
 247 0060 01D0     		beq	.L25
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 248              		.loc 1 2076 0
 249 0062 0020     		movs	r0, #0
 250 0064 D5E7     		b	.L16
 251              	.L25:
ARM GAS  /tmp/cc0w4XYV.s 			page 47


2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 252              		.loc 1 2128 0
 253 0066 25B1     		cbz	r5, .L22
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 254              		.loc 1 2134 0
 255 0068 013D     		subs	r5, r5, #1
 256              	.LVL32:
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 257              		.loc 1 2076 0
 258 006a 0020     		movs	r0, #0
 259 006c D1E7     		b	.L16
 260              	.L20:
 261 006e 0020     		movs	r0, #0
 262 0070 CFE7     		b	.L16
 263              	.L22:
 264 0072 0020     		movs	r0, #0
 265 0074 CDE7     		b	.L16
 266              		.cfi_endproc
 267              	.LFE33:
 269              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 270              		.align	1
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 274              		.fpu fpv5-d16
 276              	prvCopyDataFromQueue:
 277              	.LFB34:
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 278              		.loc 1 2154 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              	.LVL33:
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 283              		.loc 1 2155 0
 284 0000 026C     		ldr	r2, [r0, #64]
 285 0002 72B1     		cbz	r2, .L30
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 286              		.loc 1 2154 0
 287 0004 10B5     		push	{r4, lr}
 288              	.LCFI3:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 4, -8
 291              		.cfi_offset 14, -4
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
 292              		.loc 1 2157 0
 293 0006 C368     		ldr	r3, [r0, #12]
 294 0008 1344     		add	r3, r3, r2
 295 000a C360     		str	r3, [r0, #12]
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 296              		.loc 1 2158 0
 297 000c 8468     		ldr	r4, [r0, #8]
 298 000e A342     		cmp	r3, r4
 299 0010 01D3     		bcc	.L28
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 300              		.loc 1 2160 0
 301 0012 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cc0w4XYV.s 			page 48


 302 0014 C360     		str	r3, [r0, #12]
 303              	.L28:
 304 0016 0C46     		mov	r4, r1
2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 305              		.loc 1 2166 0
 306 0018 C168     		ldr	r1, [r0, #12]
 307              	.LVL34:
 308 001a 2046     		mov	r0, r4
 309              	.LVL35:
 310 001c FFF7FEFF 		bl	memcpy
 311              	.LVL36:
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 312              		.loc 1 2168 0
 313 0020 10BD     		pop	{r4, pc}
 314              	.LVL37:
 315              	.L30:
 316              	.LCFI4:
 317              		.cfi_def_cfa_offset 0
 318              		.cfi_restore 4
 319              		.cfi_restore 14
 320 0022 7047     		bx	lr
 321              		.cfi_endproc
 322              	.LFE34:
 324              		.section	.text.prvUnlockQueue,"ax",%progbits
 325              		.align	1
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu fpv5-d16
 331              	prvUnlockQueue:
 332              	.LFB35:
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 333              		.loc 1 2172 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              	.LVL38:
 338 0000 38B5     		push	{r3, r4, r5, lr}
 339              	.LCFI5:
 340              		.cfi_def_cfa_offset 16
 341              		.cfi_offset 3, -16
 342              		.cfi_offset 4, -12
 343              		.cfi_offset 5, -8
 344              		.cfi_offset 14, -4
 345 0002 0546     		mov	r5, r0
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 346              		.loc 1 2179 0
 347 0004 FFF7FEFF 		bl	vPortEnterCritical
 348              	.LVL39:
 349              	.LBB118:
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 350              		.loc 1 2181 0
 351 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 352 000c 64B2     		sxtb	r4, r4
 353              	.LVL40:
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 354              		.loc 1 2184 0
ARM GAS  /tmp/cc0w4XYV.s 			page 49


 355 000e 03E0     		b	.L34
 356              	.L43:
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 357              		.loc 1 2238 0
 358 0010 FFF7FEFF 		bl	vTaskMissedYield
 359              	.LVL41:
 360              	.L36:
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 361              		.loc 1 2252 0
 362 0014 013C     		subs	r4, r4, #1
 363              	.LVL42:
 364 0016 64B2     		sxtb	r4, r4
 365              	.LVL43:
 366              	.L34:
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 367              		.loc 1 2184 0
 368 0018 002C     		cmp	r4, #0
 369 001a 08DD     		ble	.L35
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 370              		.loc 1 2232 0
 371 001c 6B6A     		ldr	r3, [r5, #36]
 372 001e 33B1     		cbz	r3, .L35
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 373              		.loc 1 2234 0
 374 0020 05F12400 		add	r0, r5, #36
 375 0024 FFF7FEFF 		bl	xTaskRemoveFromEventList
 376              	.LVL44:
 377 0028 0028     		cmp	r0, #0
 378 002a F3D0     		beq	.L36
 379 002c F0E7     		b	.L43
 380              	.L35:
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 381              		.loc 1 2255 0
 382 002e FF23     		movs	r3, #255
 383 0030 85F84530 		strb	r3, [r5, #69]
 384              	.LBE118:
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 385              		.loc 1 2257 0
 386 0034 FFF7FEFF 		bl	vPortExitCritical
 387              	.LVL45:
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 388              		.loc 1 2260 0
 389 0038 FFF7FEFF 		bl	vPortEnterCritical
 390              	.LVL46:
 391              	.LBB119:
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 392              		.loc 1 2262 0
 393 003c 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 394              	.LVL47:
 395 0040 64B2     		sxtb	r4, r4
 396              	.LVL48:
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 397              		.loc 1 2264 0
 398 0042 03E0     		b	.L38
 399              	.L44:
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 400              		.loc 1 2270 0
ARM GAS  /tmp/cc0w4XYV.s 			page 50


 401 0044 FFF7FEFF 		bl	vTaskMissedYield
 402              	.LVL49:
 403              	.L40:
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 404              		.loc 1 2277 0
 405 0048 013C     		subs	r4, r4, #1
 406              	.LVL50:
 407 004a 64B2     		sxtb	r4, r4
 408              	.LVL51:
 409              	.L38:
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 410              		.loc 1 2264 0
 411 004c 002C     		cmp	r4, #0
 412 004e 08DD     		ble	.L39
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 413              		.loc 1 2266 0
 414 0050 2B69     		ldr	r3, [r5, #16]
 415 0052 33B1     		cbz	r3, .L39
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 416              		.loc 1 2268 0
 417 0054 05F11000 		add	r0, r5, #16
 418 0058 FFF7FEFF 		bl	xTaskRemoveFromEventList
 419              	.LVL52:
 420 005c 0028     		cmp	r0, #0
 421 005e F3D0     		beq	.L40
 422 0060 F0E7     		b	.L44
 423              	.L39:
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 424              		.loc 1 2285 0
 425 0062 FF23     		movs	r3, #255
 426 0064 85F84430 		strb	r3, [r5, #68]
 427              	.LBE119:
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 428              		.loc 1 2287 0
 429 0068 FFF7FEFF 		bl	vPortExitCritical
 430              	.LVL53:
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 431              		.loc 1 2288 0
 432 006c 38BD     		pop	{r3, r4, r5, pc}
 433              		.cfi_endproc
 434              	.LFE35:
 436              		.section	.text.xQueueGenericReset,"ax",%progbits
 437              		.align	1
 438              		.global	xQueueGenericReset
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu fpv5-d16
 444              	xQueueGenericReset:
 445              	.LFB4:
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 446              		.loc 1 256 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              	.LVL54:
 451 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/cc0w4XYV.s 			page 51


 452              	.LCFI6:
 453              		.cfi_def_cfa_offset 16
 454              		.cfi_offset 3, -16
 455              		.cfi_offset 4, -12
 456              		.cfi_offset 5, -8
 457              		.cfi_offset 14, -4
 458              	.LVL55:
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 459              		.loc 1 259 0
 460 0002 40B9     		cbnz	r0, .L46
 461              	.LBB120:
 462              	.LBB121:
 463              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
ARM GAS  /tmp/cc0w4XYV.s 			page 52


  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
ARM GAS  /tmp/cc0w4XYV.s 			page 53


 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
ARM GAS  /tmp/cc0w4XYV.s 			page 54


 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 464              		.loc 2 195 0
 465              		.syntax unified
 466              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 467 0004 4FF05003 			mov r3, #80												
 468 0008 83F31188 		msr basepri, r3											
 469 000c BFF36F8F 		isb														
 470 0010 BFF34F8F 		dsb														
 471              	
 472              	@ 0 "" 2
 473              	.LVL56:
 474              		.thumb
 475              		.syntax unified
 476              	.L47:
 477 0014 FEE7     		b	.L47
 478              	.L46:
 479 0016 0446     		mov	r4, r0
 480 0018 0D46     		mov	r5, r1
 481              	.LBE121:
 482              	.LBE120:
 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
ARM GAS  /tmp/cc0w4XYV.s 			page 55


 483              		.loc 1 261 0
 484 001a FFF7FEFF 		bl	vPortEnterCritical
 485              	.LVL57:
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 486              		.loc 1 263 0
 487 001e 2168     		ldr	r1, [r4]
 488 0020 E26B     		ldr	r2, [r4, #60]
 489 0022 236C     		ldr	r3, [r4, #64]
 490 0024 03FB0210 		mla	r0, r3, r2, r1
 491 0028 A060     		str	r0, [r4, #8]
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 492              		.loc 1 264 0
 493 002a 0020     		movs	r0, #0
 494 002c A063     		str	r0, [r4, #56]
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 495              		.loc 1 265 0
 496 002e 6160     		str	r1, [r4, #4]
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 497              		.loc 1 266 0
 498 0030 013A     		subs	r2, r2, #1
 499 0032 02FB0313 		mla	r3, r2, r3, r1
 500 0036 E360     		str	r3, [r4, #12]
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 501              		.loc 1 267 0
 502 0038 FF23     		movs	r3, #255
 503 003a 84F84430 		strb	r3, [r4, #68]
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 504              		.loc 1 268 0
 505 003e 84F84530 		strb	r3, [r4, #69]
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 506              		.loc 1 270 0
 507 0042 A5B9     		cbnz	r5, .L48
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 508              		.loc 1 277 0
 509 0044 2369     		ldr	r3, [r4, #16]
 510 0046 1BB9     		cbnz	r3, .L51
 511              	.L49:
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 512              		.loc 1 300 0
 513 0048 FFF7FEFF 		bl	vPortExitCritical
 514              	.LVL58:
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 515              		.loc 1 305 0
 516 004c 0120     		movs	r0, #1
 517 004e 38BD     		pop	{r3, r4, r5, pc}
 518              	.LVL59:
 519              	.L51:
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 520              		.loc 1 279 0
 521 0050 04F11000 		add	r0, r4, #16
 522 0054 FFF7FEFF 		bl	xTaskRemoveFromEventList
 523              	.LVL60:
 524 0058 0028     		cmp	r0, #0
 525 005a F5D0     		beq	.L49
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 526              		.loc 1 281 0
 527 005c 084B     		ldr	r3, .L52
ARM GAS  /tmp/cc0w4XYV.s 			page 56


 528 005e 4FF08052 		mov	r2, #268435456
 529 0062 1A60     		str	r2, [r3]
 530              		.syntax unified
 531              	@ 281 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 532 0064 BFF34F8F 		dsb
 533              	@ 0 "" 2
 534              	@ 281 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 535 0068 BFF36F8F 		isb
 536              	@ 0 "" 2
 537              		.thumb
 538              		.syntax unified
 539 006c ECE7     		b	.L49
 540              	.L48:
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 541              		.loc 1 296 0
 542 006e 04F11000 		add	r0, r4, #16
 543 0072 FFF7FEFF 		bl	vListInitialise
 544              	.LVL61:
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 545              		.loc 1 297 0
 546 0076 04F12400 		add	r0, r4, #36
 547 007a FFF7FEFF 		bl	vListInitialise
 548              	.LVL62:
 549 007e E3E7     		b	.L49
 550              	.L53:
 551              		.align	2
 552              	.L52:
 553 0080 04ED00E0 		.word	-536810236
 554              		.cfi_endproc
 555              	.LFE4:
 557              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 558              		.align	1
 559              		.syntax unified
 560              		.thumb
 561              		.thumb_func
 562              		.fpu fpv5-d16
 564              	prvInitialiseNewQueue:
 565              	.LFB7:
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 566              		.loc 1 423 0
 567              		.cfi_startproc
 568              		@ args = 4, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              	.LVL63:
 571 0000 38B5     		push	{r3, r4, r5, lr}
 572              	.LCFI7:
 573              		.cfi_def_cfa_offset 16
 574              		.cfi_offset 3, -16
 575              		.cfi_offset 4, -12
 576              		.cfi_offset 5, -8
 577              		.cfi_offset 14, -4
 578 0002 1D46     		mov	r5, r3
 579 0004 049C     		ldr	r4, [sp, #16]
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 580              		.loc 1 428 0
 581 0006 0B46     		mov	r3, r1
 582              	.LVL64:
ARM GAS  /tmp/cc0w4XYV.s 			page 57


 583 0008 49B9     		cbnz	r1, .L55
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 584              		.loc 1 434 0
 585 000a 2460     		str	r4, [r4]
 586              	.L56:
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 587              		.loc 1 444 0
 588 000c E063     		str	r0, [r4, #60]
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 589              		.loc 1 445 0
 590 000e 2364     		str	r3, [r4, #64]
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 591              		.loc 1 446 0
 592 0010 0121     		movs	r1, #1
 593              	.LVL65:
 594 0012 2046     		mov	r0, r4
 595              	.LVL66:
 596 0014 FFF7FEFF 		bl	xQueueGenericReset
 597              	.LVL67:
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 598              		.loc 1 450 0
 599 0018 84F84C50 		strb	r5, [r4, #76]
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 600              		.loc 1 461 0
 601 001c 38BD     		pop	{r3, r4, r5, pc}
 602              	.LVL68:
 603              	.L55:
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 604              		.loc 1 439 0
 605 001e 2260     		str	r2, [r4]
 606 0020 F4E7     		b	.L56
 607              		.cfi_endproc
 608              	.LFE7:
 610              		.section	.text.xQueueGenericCreateStatic,"ax",%progbits
 611              		.align	1
 612              		.global	xQueueGenericCreateStatic
 613              		.syntax unified
 614              		.thumb
 615              		.thumb_func
 616              		.fpu fpv5-d16
 618              	xQueueGenericCreateStatic:
 619              	.LFB5:
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 620              		.loc 1 311 0
 621              		.cfi_startproc
 622              		@ args = 4, pretend = 0, frame = 8
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              	.LVL69:
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 625              		.loc 1 314 0
 626 0000 40B9     		cbnz	r0, .L59
 627              	.LBB122:
 628              	.LBB123:
 629              		.loc 2 195 0
 630              		.syntax unified
 631              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 632 0002 4FF05003 			mov r3, #80												
ARM GAS  /tmp/cc0w4XYV.s 			page 58


 633 0006 83F31188 		msr basepri, r3											
 634 000a BFF36F8F 		isb														
 635 000e BFF34F8F 		dsb														
 636              	
 637              	@ 0 "" 2
 638              	.LVL70:
 639              		.thumb
 640              		.syntax unified
 641              	.L60:
 642 0012 FEE7     		b	.L60
 643              	.LVL71:
 644              	.L59:
 645              	.LBE123:
 646              	.LBE122:
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 647              		.loc 1 311 0
 648 0014 10B5     		push	{r4, lr}
 649              	.LCFI8:
 650              		.cfi_def_cfa_offset 8
 651              		.cfi_offset 4, -8
 652              		.cfi_offset 14, -4
 653 0016 84B0     		sub	sp, sp, #16
 654              	.LCFI9:
 655              		.cfi_def_cfa_offset 24
 656 0018 0446     		mov	r4, r0
 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 657              		.loc 1 318 0
 658 001a 7BB1     		cbz	r3, .L71
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 659              		.loc 1 322 0
 660 001c 081C     		adds	r0, r1, #0
 661              	.LVL72:
 662 001e 18BF     		it	ne
 663 0020 0120     		movne	r0, #1
 664 0022 002A     		cmp	r2, #0
 665 0024 08BF     		it	eq
 666 0026 0120     		moveq	r0, #1
 667 0028 88B9     		cbnz	r0, .L63
 668              	.LBB124:
 669              	.LBB125:
 670              		.loc 2 195 0
 671              		.syntax unified
 672              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 673 002a 4FF05003 			mov r3, #80												
 674 002e 83F31188 		msr basepri, r3											
 675 0032 BFF36F8F 		isb														
 676 0036 BFF34F8F 		dsb														
 677              	
 678              	@ 0 "" 2
 679              	.LVL73:
 680              		.thumb
 681              		.syntax unified
 682              	.L64:
 683 003a FEE7     		b	.L64
 684              	.LVL74:
 685              	.L71:
 686              	.LBE125:
ARM GAS  /tmp/cc0w4XYV.s 			page 59


 687              	.LBE124:
 688              	.LBB126:
 689              	.LBB127:
 690              		.syntax unified
 691              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 692 003c 4FF05003 			mov r3, #80												
 693 0040 83F31188 		msr basepri, r3											
 694 0044 BFF36F8F 		isb														
 695 0048 BFF34F8F 		dsb														
 696              	
 697              	@ 0 "" 2
 698              	.LVL75:
 699              		.thumb
 700              		.syntax unified
 701              	.L62:
 702 004c FEE7     		b	.L62
 703              	.LVL76:
 704              	.L63:
 705              	.LBE127:
 706              	.LBE126:
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 707              		.loc 1 323 0
 708 004e B1FA81F0 		clz	r0, r1
 709 0052 4009     		lsrs	r0, r0, #5
 710 0054 002A     		cmp	r2, #0
 711 0056 18BF     		it	ne
 712 0058 0120     		movne	r0, #1
 713 005a 40B9     		cbnz	r0, .L65
 714              	.LBB128:
 715              	.LBB129:
 716              		.loc 2 195 0
 717              		.syntax unified
 718              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 719 005c 4FF05003 			mov r3, #80												
 720 0060 83F31188 		msr basepri, r3											
 721 0064 BFF36F8F 		isb														
 722 0068 BFF34F8F 		dsb														
 723              	
 724              	@ 0 "" 2
 725              	.LVL77:
 726              		.thumb
 727              		.syntax unified
 728              	.L66:
 729 006c FEE7     		b	.L66
 730              	.LVL78:
 731              	.L65:
 732              	.LBE129:
 733              	.LBE128:
 734              	.LBB130:
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 735              		.loc 1 330 0
 736 006e 5020     		movs	r0, #80
 737 0070 0390     		str	r0, [sp, #12]
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 738              		.loc 1 331 0
 739 0072 0398     		ldr	r0, [sp, #12]
 740 0074 5028     		cmp	r0, #80
ARM GAS  /tmp/cc0w4XYV.s 			page 60


 741 0076 08D0     		beq	.L67
 742              	.LBB131:
 743              	.LBB132:
 744              		.loc 2 195 0
 745              		.syntax unified
 746              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 747 0078 4FF05003 			mov r3, #80												
 748 007c 83F31188 		msr basepri, r3											
 749 0080 BFF36F8F 		isb														
 750 0084 BFF34F8F 		dsb														
 751              	
 752              	@ 0 "" 2
 753              	.LVL79:
 754              		.thumb
 755              		.syntax unified
 756              	.L68:
 757 0088 FEE7     		b	.L68
 758              	.LVL80:
 759              	.L67:
 760 008a 2046     		mov	r0, r4
 761 008c 1C46     		mov	r4, r3
 762              	.LVL81:
 763              	.LBE132:
 764              	.LBE131:
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 765              		.loc 1 332 0
 766 008e 039B     		ldr	r3, [sp, #12]
 767              	.LVL82:
 768              	.LBE130:
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 769              		.loc 1 348 0
 770 0090 0123     		movs	r3, #1
 771 0092 84F84630 		strb	r3, [r4, #70]
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 772              		.loc 1 352 0
 773 0096 0094     		str	r4, [sp]
 774 0098 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 775 009c FFF7FEFF 		bl	prvInitialiseNewQueue
 776              	.LVL83:
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 777              		.loc 1 361 0
 778 00a0 2046     		mov	r0, r4
 779 00a2 04B0     		add	sp, sp, #16
 780              	.LCFI10:
 781              		.cfi_def_cfa_offset 8
 782              		@ sp needed
 783 00a4 10BD     		pop	{r4, pc}
 784              		.cfi_endproc
 785              	.LFE5:
 787              		.section	.text.xQueueGenericCreate,"ax",%progbits
 788              		.align	1
 789              		.global	xQueueGenericCreate
 790              		.syntax unified
 791              		.thumb
 792              		.thumb_func
 793              		.fpu fpv5-d16
 795              	xQueueGenericCreate:
ARM GAS  /tmp/cc0w4XYV.s 			page 61


 796              	.LFB6:
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 797              		.loc 1 369 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              	.LVL84:
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 802              		.loc 1 374 0
 803 0000 40B9     		cbnz	r0, .L73
 804              	.LBB133:
 805              	.LBB134:
 806              		.loc 2 195 0
 807              		.syntax unified
 808              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 809 0002 4FF05003 			mov r3, #80												
 810 0006 83F31188 		msr basepri, r3											
 811 000a BFF36F8F 		isb														
 812 000e BFF34F8F 		dsb														
 813              	
 814              	@ 0 "" 2
 815              	.LVL85:
 816              		.thumb
 817              		.syntax unified
 818              	.L74:
 819 0012 FEE7     		b	.L74
 820              	.L73:
 821              	.LBE134:
 822              	.LBE133:
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 823              		.loc 1 369 0
 824 0014 F0B5     		push	{r4, r5, r6, r7, lr}
 825              	.LCFI11:
 826              		.cfi_def_cfa_offset 20
 827              		.cfi_offset 4, -20
 828              		.cfi_offset 5, -16
 829              		.cfi_offset 6, -12
 830              		.cfi_offset 7, -8
 831              		.cfi_offset 14, -4
 832 0016 83B0     		sub	sp, sp, #12
 833              	.LCFI12:
 834              		.cfi_def_cfa_offset 32
 835 0018 0546     		mov	r5, r0
 836 001a 1746     		mov	r7, r2
 837 001c 0E46     		mov	r6, r1
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 838              		.loc 1 379 0
 839 001e 01FB00F0 		mul	r0, r1, r0
 840              	.LVL86:
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 841              		.loc 1 390 0
 842 0022 5030     		adds	r0, r0, #80
 843              	.LVL87:
 844 0024 FFF7FEFF 		bl	pvPortMalloc
 845              	.LVL88:
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 846              		.loc 1 392 0
ARM GAS  /tmp/cc0w4XYV.s 			page 62


 847 0028 0446     		mov	r4, r0
 848 002a 50B1     		cbz	r0, .L72
 849              	.LVL89:
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 850              		.loc 1 404 0
 851 002c 0023     		movs	r3, #0
 852 002e 80F84630 		strb	r3, [r0, #70]
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 853              		.loc 1 408 0
 854 0032 0090     		str	r0, [sp]
 855 0034 3B46     		mov	r3, r7
 856 0036 00F15002 		add	r2, r0, #80
 857              	.LVL90:
 858 003a 3146     		mov	r1, r6
 859 003c 2846     		mov	r0, r5
 860              	.LVL91:
 861 003e FFF7FEFF 		bl	prvInitialiseNewQueue
 862              	.LVL92:
 863              	.L72:
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 864              		.loc 1 417 0
 865 0042 2046     		mov	r0, r4
 866 0044 03B0     		add	sp, sp, #12
 867              	.LCFI13:
 868              		.cfi_def_cfa_offset 20
 869              		@ sp needed
 870 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 871              		.cfi_endproc
 872              	.LFE6:
 874              		.section	.text.xQueueGetMutexHolder,"ax",%progbits
 875              		.align	1
 876              		.global	xQueueGetMutexHolder
 877              		.syntax unified
 878              		.thumb
 879              		.thumb_func
 880              		.fpu fpv5-d16
 882              	xQueueGetMutexHolder:
 883              	.LFB11:
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 884              		.loc 1 533 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888              	.LVL93:
 889 0000 10B5     		push	{r4, lr}
 890              	.LCFI14:
 891              		.cfi_def_cfa_offset 8
 892              		.cfi_offset 4, -8
 893              		.cfi_offset 14, -4
 894 0002 0446     		mov	r4, r0
 895              	.LVL94:
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 896              		.loc 1 542 0
 897 0004 FFF7FEFF 		bl	vPortEnterCritical
 898              	.LVL95:
 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 899              		.loc 1 544 0
ARM GAS  /tmp/cc0w4XYV.s 			page 63


 900 0008 2368     		ldr	r3, [r4]
 901 000a 23B9     		cbnz	r3, .L80
 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 902              		.loc 1 546 0
 903 000c A468     		ldr	r4, [r4, #8]
 904              	.LVL96:
 905              	.L79:
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 906              		.loc 1 553 0
 907 000e FFF7FEFF 		bl	vPortExitCritical
 908              	.LVL97:
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 909              		.loc 1 556 0
 910 0012 2046     		mov	r0, r4
 911 0014 10BD     		pop	{r4, pc}
 912              	.LVL98:
 913              	.L80:
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 914              		.loc 1 550 0
 915 0016 0024     		movs	r4, #0
 916              	.LVL99:
 917 0018 F9E7     		b	.L79
 918              		.cfi_endproc
 919              	.LFE11:
 921              		.section	.text.xQueueGetMutexHolderFromISR,"ax",%progbits
 922              		.align	1
 923              		.global	xQueueGetMutexHolderFromISR
 924              		.syntax unified
 925              		.thumb
 926              		.thumb_func
 927              		.fpu fpv5-d16
 929              	xQueueGetMutexHolderFromISR:
 930              	.LFB12:
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 931              		.loc 1 564 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935              		@ link register save eliminated.
 936              	.LVL100:
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 937              		.loc 1 567 0
 938 0000 18B1     		cbz	r0, .L87
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 939              		.loc 1 572 0
 940 0002 0268     		ldr	r2, [r0]
 941 0004 52B9     		cbnz	r2, .L86
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 942              		.loc 1 574 0
 943 0006 8068     		ldr	r0, [r0, #8]
 944              	.LVL101:
 945 0008 7047     		bx	lr
 946              	.LVL102:
 947              	.L87:
 948              	.LBB135:
 949              	.LBB136:
 950              		.loc 2 195 0
ARM GAS  /tmp/cc0w4XYV.s 			page 64


 951              		.syntax unified
 952              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 953 000a 4FF05003 			mov r3, #80												
 954 000e 83F31188 		msr basepri, r3											
 955 0012 BFF36F8F 		isb														
 956 0016 BFF34F8F 		dsb														
 957              	
 958              	@ 0 "" 2
 959              	.LVL103:
 960              		.thumb
 961              		.syntax unified
 962              	.L84:
 963 001a FEE7     		b	.L84
 964              	.L86:
 965              	.LBE136:
 966              	.LBE135:
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 967              		.loc 1 578 0
 968 001c 0020     		movs	r0, #0
 969              	.LVL104:
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 970              		.loc 1 582 0
 971 001e 7047     		bx	lr
 972              		.cfi_endproc
 973              	.LFE12:
 975              		.section	.text.xQueueCreateCountingSemaphoreStatic,"ax",%progbits
 976              		.align	1
 977              		.global	xQueueCreateCountingSemaphoreStatic
 978              		.syntax unified
 979              		.thumb
 980              		.thumb_func
 981              		.fpu fpv5-d16
 983              	xQueueCreateCountingSemaphoreStatic:
 984              	.LFB15:
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 985              		.loc 1 687 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              	.LVL105:
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 990              		.loc 1 690 0
 991 0000 40B9     		cbnz	r0, .L89
 992              	.LBB137:
 993              	.LBB138:
 994              		.loc 2 195 0
 995              		.syntax unified
 996              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 997 0002 4FF05003 			mov r3, #80												
 998 0006 83F31188 		msr basepri, r3											
 999 000a BFF36F8F 		isb														
 1000 000e BFF34F8F 		dsb														
 1001              	
 1002              	@ 0 "" 2
 1003              	.LVL106:
 1004              		.thumb
 1005              		.syntax unified
ARM GAS  /tmp/cc0w4XYV.s 			page 65


 1006              	.L90:
 1007 0012 FEE7     		b	.L90
 1008              	.L89:
 1009              	.LBE138:
 1010              	.LBE137:
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1011              		.loc 1 691 0
 1012 0014 8842     		cmp	r0, r1
 1013 0016 08D2     		bcs	.L91
 1014              	.LBB139:
 1015              	.LBB140:
 1016              		.loc 2 195 0
 1017              		.syntax unified
 1018              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1019 0018 4FF05003 			mov r3, #80												
 1020 001c 83F31188 		msr basepri, r3											
 1021 0020 BFF36F8F 		isb														
 1022 0024 BFF34F8F 		dsb														
 1023              	
 1024              	@ 0 "" 2
 1025              	.LVL107:
 1026              		.thumb
 1027              		.syntax unified
 1028              	.L92:
 1029 0028 FEE7     		b	.L92
 1030              	.L91:
 1031              	.LBE140:
 1032              	.LBE139:
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1033              		.loc 1 687 0
 1034 002a 10B5     		push	{r4, lr}
 1035              	.LCFI15:
 1036              		.cfi_def_cfa_offset 8
 1037              		.cfi_offset 4, -8
 1038              		.cfi_offset 14, -4
 1039 002c 82B0     		sub	sp, sp, #8
 1040              	.LCFI16:
 1041              		.cfi_def_cfa_offset 16
 1042 002e 1346     		mov	r3, r2
 1043 0030 0C46     		mov	r4, r1
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1044              		.loc 1 693 0
 1045 0032 0222     		movs	r2, #2
 1046              	.LVL108:
 1047 0034 0092     		str	r2, [sp]
 1048 0036 0022     		movs	r2, #0
 1049 0038 1146     		mov	r1, r2
 1050              	.LVL109:
 1051 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 1052              	.LVL110:
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1053              		.loc 1 695 0
 1054 003e 0346     		mov	r3, r0
 1055 0040 00B1     		cbz	r0, .L88
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1056              		.loc 1 697 0
 1057 0042 8463     		str	r4, [r0, #56]
ARM GAS  /tmp/cc0w4XYV.s 			page 66


 1058              	.L88:
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1059              		.loc 1 707 0
 1060 0044 1846     		mov	r0, r3
 1061              	.LVL111:
 1062 0046 02B0     		add	sp, sp, #8
 1063              	.LCFI17:
 1064              		.cfi_def_cfa_offset 8
 1065              		@ sp needed
 1066 0048 10BD     		pop	{r4, pc}
 1067              		.cfi_endproc
 1068              	.LFE15:
 1070              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 1071              		.align	1
 1072              		.global	xQueueCreateCountingSemaphore
 1073              		.syntax unified
 1074              		.thumb
 1075              		.thumb_func
 1076              		.fpu fpv5-d16
 1078              	xQueueCreateCountingSemaphore:
 1079              	.LFB16:
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1080              		.loc 1 715 0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 0
 1083              		@ frame_needed = 0, uses_anonymous_args = 0
 1084              	.LVL112:
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1085              		.loc 1 718 0
 1086 0000 40B9     		cbnz	r0, .L97
 1087              	.LBB141:
 1088              	.LBB142:
 1089              		.loc 2 195 0
 1090              		.syntax unified
 1091              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1092 0002 4FF05003 			mov r3, #80												
 1093 0006 83F31188 		msr basepri, r3											
 1094 000a BFF36F8F 		isb														
 1095 000e BFF34F8F 		dsb														
 1096              	
 1097              	@ 0 "" 2
 1098              	.LVL113:
 1099              		.thumb
 1100              		.syntax unified
 1101              	.L98:
 1102 0012 FEE7     		b	.L98
 1103              	.L97:
 1104              	.LBE142:
 1105              	.LBE141:
 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1106              		.loc 1 719 0
 1107 0014 8842     		cmp	r0, r1
 1108 0016 08D2     		bcs	.L99
 1109              	.LBB143:
 1110              	.LBB144:
 1111              		.loc 2 195 0
 1112              		.syntax unified
ARM GAS  /tmp/cc0w4XYV.s 			page 67


 1113              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1114 0018 4FF05003 			mov r3, #80												
 1115 001c 83F31188 		msr basepri, r3											
 1116 0020 BFF36F8F 		isb														
 1117 0024 BFF34F8F 		dsb														
 1118              	
 1119              	@ 0 "" 2
 1120              	.LVL114:
 1121              		.thumb
 1122              		.syntax unified
 1123              	.L100:
 1124 0028 FEE7     		b	.L100
 1125              	.L99:
 1126              	.LBE144:
 1127              	.LBE143:
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1128              		.loc 1 715 0
 1129 002a 10B5     		push	{r4, lr}
 1130              	.LCFI18:
 1131              		.cfi_def_cfa_offset 8
 1132              		.cfi_offset 4, -8
 1133              		.cfi_offset 14, -4
 1134 002c 0C46     		mov	r4, r1
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1135              		.loc 1 721 0
 1136 002e 0222     		movs	r2, #2
 1137 0030 0021     		movs	r1, #0
 1138              	.LVL115:
 1139 0032 FFF7FEFF 		bl	xQueueGenericCreate
 1140              	.LVL116:
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1141              		.loc 1 723 0
 1142 0036 0346     		mov	r3, r0
 1143 0038 00B1     		cbz	r0, .L96
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1144              		.loc 1 725 0
 1145 003a 8463     		str	r4, [r0, #56]
 1146              	.L96:
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1147              		.loc 1 735 0
 1148 003c 1846     		mov	r0, r3
 1149              	.LVL117:
 1150 003e 10BD     		pop	{r4, pc}
 1151              		.cfi_endproc
 1152              	.LFE16:
 1154              		.section	.text.xQueueGenericSend,"ax",%progbits
 1155              		.align	1
 1156              		.global	xQueueGenericSend
 1157              		.syntax unified
 1158              		.thumb
 1159              		.thumb_func
 1160              		.fpu fpv5-d16
 1162              	xQueueGenericSend:
 1163              	.LFB17:
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 1164              		.loc 1 741 0
 1165              		.cfi_startproc
ARM GAS  /tmp/cc0w4XYV.s 			page 68


 1166              		@ args = 0, pretend = 0, frame = 16
 1167              		@ frame_needed = 0, uses_anonymous_args = 0
 1168              	.LVL118:
 1169 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1170              	.LCFI19:
 1171              		.cfi_def_cfa_offset 20
 1172              		.cfi_offset 4, -20
 1173              		.cfi_offset 5, -16
 1174              		.cfi_offset 6, -12
 1175              		.cfi_offset 7, -8
 1176              		.cfi_offset 14, -4
 1177 0002 85B0     		sub	sp, sp, #20
 1178              	.LCFI20:
 1179              		.cfi_def_cfa_offset 40
 1180 0004 0192     		str	r2, [sp, #4]
 1181              	.LVL119:
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1182              		.loc 1 746 0
 1183 0006 60B1     		cbz	r0, .L129
 1184 0008 0446     		mov	r4, r0
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1185              		.loc 1 747 0
 1186 000a 99B9     		cbnz	r1, .L107
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1187              		.loc 1 747 0 is_stmt 0 discriminator 2
 1188 000c 026C     		ldr	r2, [r0, #64]
 1189              	.LVL120:
 1190 000e 8AB1     		cbz	r2, .L107
 1191              	.LBB145:
 1192              	.LBB146:
 1193              		.loc 2 195 0 is_stmt 1
 1194              		.syntax unified
 1195              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1196 0010 4FF05003 			mov r3, #80												
 1197 0014 83F31188 		msr basepri, r3											
 1198 0018 BFF36F8F 		isb														
 1199 001c BFF34F8F 		dsb														
 1200              	
 1201              	@ 0 "" 2
 1202              	.LVL121:
 1203              		.thumb
 1204              		.syntax unified
 1205              	.L108:
 1206 0020 FEE7     		b	.L108
 1207              	.LVL122:
 1208              	.L129:
 1209              	.LBE146:
 1210              	.LBE145:
 1211              	.LBB147:
 1212              	.LBB148:
 1213              		.syntax unified
 1214              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1215 0022 4FF05003 			mov r3, #80												
 1216 0026 83F31188 		msr basepri, r3											
 1217 002a BFF36F8F 		isb														
 1218 002e BFF34F8F 		dsb														
 1219              	
ARM GAS  /tmp/cc0w4XYV.s 			page 69


 1220              	@ 0 "" 2
 1221              	.LVL123:
 1222              		.thumb
 1223              		.syntax unified
 1224              	.L106:
 1225 0032 FEE7     		b	.L106
 1226              	.LVL124:
 1227              	.L107:
 1228              	.LBE148:
 1229              	.LBE147:
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1230              		.loc 1 748 0
 1231 0034 022B     		cmp	r3, #2
 1232 0036 0BD1     		bne	.L109
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1233              		.loc 1 748 0 is_stmt 0 discriminator 2
 1234 0038 E26B     		ldr	r2, [r4, #60]
 1235 003a 012A     		cmp	r2, #1
 1236 003c 08D0     		beq	.L109
 1237              	.LBB149:
 1238              	.LBB150:
 1239              		.loc 2 195 0 is_stmt 1
 1240              		.syntax unified
 1241              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1242 003e 4FF05003 			mov r3, #80												
 1243 0042 83F31188 		msr basepri, r3											
 1244 0046 BFF36F8F 		isb														
 1245 004a BFF34F8F 		dsb														
 1246              	
 1247              	@ 0 "" 2
 1248              	.LVL125:
 1249              		.thumb
 1250              		.syntax unified
 1251              	.L110:
 1252 004e FEE7     		b	.L110
 1253              	.LVL126:
 1254              	.L109:
 1255 0050 1E46     		mov	r6, r3
 1256 0052 0F46     		mov	r7, r1
 1257              	.LBE150:
 1258              	.LBE149:
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1259              		.loc 1 751 0
 1260 0054 FFF7FEFF 		bl	xTaskGetSchedulerState
 1261              	.LVL127:
 1262 0058 50B9     		cbnz	r0, .L126
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1263              		.loc 1 751 0 is_stmt 0 discriminator 2
 1264 005a 019B     		ldr	r3, [sp, #4]
 1265 005c 53B1     		cbz	r3, .L127
 1266              	.LBB151:
 1267              	.LBB152:
 1268              		.loc 2 195 0 is_stmt 1
 1269              		.syntax unified
 1270              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1271 005e 4FF05003 			mov r3, #80												
 1272 0062 83F31188 		msr basepri, r3											
ARM GAS  /tmp/cc0w4XYV.s 			page 70


 1273 0066 BFF36F8F 		isb														
 1274 006a BFF34F8F 		dsb														
 1275              	
 1276              	@ 0 "" 2
 1277              	.LVL128:
 1278              		.thumb
 1279              		.syntax unified
 1280              	.L112:
 1281 006e FEE7     		b	.L112
 1282              	.L126:
 1283              	.LBE152:
 1284              	.LBE151:
 1285 0070 0025     		movs	r5, #0
 1286 0072 3AE0     		b	.L113
 1287              	.L127:
 1288 0074 0025     		movs	r5, #0
 1289 0076 38E0     		b	.L113
 1290              	.LVL129:
 1291              	.L114:
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1292              		.loc 1 833 0
 1293 0078 3246     		mov	r2, r6
 1294 007a 3946     		mov	r1, r7
 1295 007c 2046     		mov	r0, r4
 1296 007e FFF7FEFF 		bl	prvCopyDataToQueue
 1297              	.LVL130:
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1298              		.loc 1 837 0
 1299 0082 636A     		ldr	r3, [r4, #36]
 1300 0084 4BB9     		cbnz	r3, .L130
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1301              		.loc 1 852 0
 1302 0086 A8B1     		cbz	r0, .L117
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1303              		.loc 1 858 0
 1304 0088 3B4B     		ldr	r3, .L135
 1305 008a 4FF08052 		mov	r2, #268435456
 1306 008e 1A60     		str	r2, [r3]
 1307              		.syntax unified
 1308              	@ 858 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1309 0090 BFF34F8F 		dsb
 1310              	@ 0 "" 2
 1311              	@ 858 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1312 0094 BFF36F8F 		isb
 1313              	@ 0 "" 2
 1314              		.thumb
 1315              		.syntax unified
 1316 0098 0CE0     		b	.L117
 1317              	.L130:
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1318              		.loc 1 839 0
 1319 009a 04F12400 		add	r0, r4, #36
 1320              	.LVL131:
 1321 009e FFF7FEFF 		bl	xTaskRemoveFromEventList
 1322              	.LVL132:
 1323 00a2 38B1     		cbz	r0, .L117
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
ARM GAS  /tmp/cc0w4XYV.s 			page 71


 1324              		.loc 1 845 0
 1325 00a4 344B     		ldr	r3, .L135
 1326 00a6 4FF08052 		mov	r2, #268435456
 1327 00aa 1A60     		str	r2, [r3]
 1328              		.syntax unified
 1329              	@ 845 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1330 00ac BFF34F8F 		dsb
 1331              	@ 0 "" 2
 1332              	@ 845 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1333 00b0 BFF36F8F 		isb
 1334              	@ 0 "" 2
 1335              		.thumb
 1336              		.syntax unified
 1337              	.L117:
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1338              		.loc 1 867 0
 1339 00b4 FFF7FEFF 		bl	vPortExitCritical
 1340              	.LVL133:
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1341              		.loc 1 868 0
 1342 00b8 0120     		movs	r0, #1
 1343              	.L104:
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1344              		.loc 1 947 0
 1345 00ba 05B0     		add	sp, sp, #20
 1346              	.LCFI21:
 1347              		.cfi_remember_state
 1348              		.cfi_def_cfa_offset 20
 1349              		@ sp needed
 1350 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 1351              	.LVL134:
 1352              	.L131:
 1353              	.LCFI22:
 1354              		.cfi_restore_state
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1355              		.loc 1 876 0
 1356 00be FFF7FEFF 		bl	vPortExitCritical
 1357              	.LVL135:
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1358              		.loc 1 881 0
 1359 00c2 0020     		movs	r0, #0
 1360 00c4 F9E7     		b	.L104
 1361              	.L132:
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1362              		.loc 1 887 0
 1363 00c6 02A8     		add	r0, sp, #8
 1364 00c8 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1365              	.LVL136:
 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1366              		.loc 1 888 0
 1367 00cc 0125     		movs	r5, #1
 1368 00ce 19E0     		b	.L120
 1369              	.LVL137:
 1370              	.L133:
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1371              		.loc 1 903 0 discriminator 1
 1372 00d0 0023     		movs	r3, #0
ARM GAS  /tmp/cc0w4XYV.s 			page 72


 1373 00d2 84F84430 		strb	r3, [r4, #68]
 1374 00d6 21E0     		b	.L121
 1375              	.L134:
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1376              		.loc 1 903 0 is_stmt 0 discriminator 4
 1377 00d8 0023     		movs	r3, #0
 1378 00da 84F84530 		strb	r3, [r4, #69]
 1379 00de 23E0     		b	.L122
 1380              	.L124:
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1381              		.loc 1 933 0 is_stmt 1
 1382 00e0 2046     		mov	r0, r4
 1383 00e2 FFF7FEFF 		bl	prvUnlockQueue
 1384              	.LVL138:
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1385              		.loc 1 934 0
 1386 00e6 FFF7FEFF 		bl	xTaskResumeAll
 1387              	.LVL139:
 1388              	.L113:
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1389              		.loc 1 761 0
 1390 00ea FFF7FEFF 		bl	vPortEnterCritical
 1391              	.LVL140:
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1392              		.loc 1 767 0
 1393 00ee A26B     		ldr	r2, [r4, #56]
 1394 00f0 E36B     		ldr	r3, [r4, #60]
 1395 00f2 9A42     		cmp	r2, r3
 1396 00f4 C0D3     		bcc	.L114
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1397              		.loc 1 767 0 is_stmt 0 discriminator 1
 1398 00f6 022E     		cmp	r6, #2
 1399 00f8 BED0     		beq	.L114
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1400              		.loc 1 872 0 is_stmt 1
 1401 00fa 019B     		ldr	r3, [sp, #4]
 1402 00fc 002B     		cmp	r3, #0
 1403 00fe DED0     		beq	.L131
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1404              		.loc 1 883 0
 1405 0100 002D     		cmp	r5, #0
 1406 0102 E0D0     		beq	.L132
 1407              	.LVL141:
 1408              	.L120:
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1409              		.loc 1 897 0
 1410 0104 FFF7FEFF 		bl	vPortExitCritical
 1411              	.LVL142:
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1412              		.loc 1 902 0
 1413 0108 FFF7FEFF 		bl	vTaskSuspendAll
 1414              	.LVL143:
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1415              		.loc 1 903 0
 1416 010c FFF7FEFF 		bl	vPortEnterCritical
 1417              	.LVL144:
 1418 0110 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
ARM GAS  /tmp/cc0w4XYV.s 			page 73


 1419 0114 5BB2     		sxtb	r3, r3
 1420 0116 B3F1FF3F 		cmp	r3, #-1
 1421 011a D9D0     		beq	.L133
 1422              	.L121:
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1423              		.loc 1 903 0 is_stmt 0 discriminator 3
 1424 011c 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1425 0120 5BB2     		sxtb	r3, r3
 1426 0122 B3F1FF3F 		cmp	r3, #-1
 1427 0126 D7D0     		beq	.L134
 1428              	.L122:
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1429              		.loc 1 903 0 discriminator 6
 1430 0128 FFF7FEFF 		bl	vPortExitCritical
 1431              	.LVL145:
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1432              		.loc 1 906 0 is_stmt 1 discriminator 6
 1433 012c 01A9     		add	r1, sp, #4
 1434 012e 02A8     		add	r0, sp, #8
 1435 0130 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1436              	.LVL146:
 1437 0134 C8B9     		cbnz	r0, .L123
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1438              		.loc 1 908 0
 1439 0136 2046     		mov	r0, r4
 1440 0138 FFF7FEFF 		bl	prvIsQueueFull
 1441              	.LVL147:
 1442 013c 0028     		cmp	r0, #0
 1443 013e CFD0     		beq	.L124
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1444              		.loc 1 911 0
 1445 0140 0199     		ldr	r1, [sp, #4]
 1446 0142 04F11000 		add	r0, r4, #16
 1447 0146 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1448              	.LVL148:
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1449              		.loc 1 918 0
 1450 014a 2046     		mov	r0, r4
 1451 014c FFF7FEFF 		bl	prvUnlockQueue
 1452              	.LVL149:
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1453              		.loc 1 925 0
 1454 0150 FFF7FEFF 		bl	xTaskResumeAll
 1455              	.LVL150:
 1456 0154 0028     		cmp	r0, #0
 1457 0156 C8D1     		bne	.L113
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1458              		.loc 1 927 0
 1459 0158 074B     		ldr	r3, .L135
 1460 015a 4FF08052 		mov	r2, #268435456
 1461 015e 1A60     		str	r2, [r3]
 1462              		.syntax unified
 1463              	@ 927 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1464 0160 BFF34F8F 		dsb
 1465              	@ 0 "" 2
 1466              	@ 927 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1467 0164 BFF36F8F 		isb
ARM GAS  /tmp/cc0w4XYV.s 			page 74


 1468              	@ 0 "" 2
 1469              		.thumb
 1470              		.syntax unified
 1471 0168 BFE7     		b	.L113
 1472              	.L123:
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1473              		.loc 1 940 0
 1474 016a 2046     		mov	r0, r4
 1475 016c FFF7FEFF 		bl	prvUnlockQueue
 1476              	.LVL151:
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1477              		.loc 1 941 0
 1478 0170 FFF7FEFF 		bl	xTaskResumeAll
 1479              	.LVL152:
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1480              		.loc 1 944 0
 1481 0174 0020     		movs	r0, #0
 1482 0176 A0E7     		b	.L104
 1483              	.L136:
 1484              		.align	2
 1485              	.L135:
 1486 0178 04ED00E0 		.word	-536810236
 1487              		.cfi_endproc
 1488              	.LFE17:
 1490              		.section	.text.prvInitialiseMutex,"ax",%progbits
 1491              		.align	1
 1492              		.syntax unified
 1493              		.thumb
 1494              		.thumb_func
 1495              		.fpu fpv5-d16
 1497              	prvInitialiseMutex:
 1498              	.LFB8:
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1499              		.loc 1 467 0
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 0
 1502              		@ frame_needed = 0, uses_anonymous_args = 0
 1503              	.LVL153:
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1504              		.loc 1 468 0
 1505 0000 48B1     		cbz	r0, .L140
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1506              		.loc 1 467 0
 1507 0002 08B5     		push	{r3, lr}
 1508              	.LCFI23:
 1509              		.cfi_def_cfa_offset 8
 1510              		.cfi_offset 3, -8
 1511              		.cfi_offset 14, -4
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1512              		.loc 1 474 0
 1513 0004 0021     		movs	r1, #0
 1514 0006 8160     		str	r1, [r0, #8]
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1515              		.loc 1 475 0
 1516 0008 0160     		str	r1, [r0]
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1517              		.loc 1 478 0
ARM GAS  /tmp/cc0w4XYV.s 			page 75


 1518 000a C160     		str	r1, [r0, #12]
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1519              		.loc 1 483 0
 1520 000c 0B46     		mov	r3, r1
 1521 000e 0A46     		mov	r2, r1
 1522 0010 FFF7FEFF 		bl	xQueueGenericSend
 1523              	.LVL154:
 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1524              		.loc 1 489 0
 1525 0014 08BD     		pop	{r3, pc}
 1526              	.LVL155:
 1527              	.L140:
 1528              	.LCFI24:
 1529              		.cfi_def_cfa_offset 0
 1530              		.cfi_restore 3
 1531              		.cfi_restore 14
 1532 0016 7047     		bx	lr
 1533              		.cfi_endproc
 1534              	.LFE8:
 1536              		.section	.text.xQueueCreateMutex,"ax",%progbits
 1537              		.align	1
 1538              		.global	xQueueCreateMutex
 1539              		.syntax unified
 1540              		.thumb
 1541              		.thumb_func
 1542              		.fpu fpv5-d16
 1544              	xQueueCreateMutex:
 1545              	.LFB9:
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 1546              		.loc 1 497 0
 1547              		.cfi_startproc
 1548              		@ args = 0, pretend = 0, frame = 0
 1549              		@ frame_needed = 0, uses_anonymous_args = 0
 1550              	.LVL156:
 1551 0000 10B5     		push	{r4, lr}
 1552              	.LCFI25:
 1553              		.cfi_def_cfa_offset 8
 1554              		.cfi_offset 4, -8
 1555              		.cfi_offset 14, -4
 1556              	.LVL157:
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1557              		.loc 1 501 0
 1558 0002 0246     		mov	r2, r0
 1559 0004 0021     		movs	r1, #0
 1560 0006 0120     		movs	r0, #1
 1561              	.LVL158:
 1562 0008 FFF7FEFF 		bl	xQueueGenericCreate
 1563              	.LVL159:
 1564 000c 0446     		mov	r4, r0
 1565              	.LVL160:
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1566              		.loc 1 502 0
 1567 000e FFF7FEFF 		bl	prvInitialiseMutex
 1568              	.LVL161:
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1569              		.loc 1 505 0
 1570 0012 2046     		mov	r0, r4
ARM GAS  /tmp/cc0w4XYV.s 			page 76


 1571 0014 10BD     		pop	{r4, pc}
 1572              		.cfi_endproc
 1573              	.LFE9:
 1575              		.section	.text.xQueueCreateMutexStatic,"ax",%progbits
 1576              		.align	1
 1577              		.global	xQueueCreateMutexStatic
 1578              		.syntax unified
 1579              		.thumb
 1580              		.thumb_func
 1581              		.fpu fpv5-d16
 1583              	xQueueCreateMutexStatic:
 1584              	.LFB10:
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 1585              		.loc 1 513 0
 1586              		.cfi_startproc
 1587              		@ args = 0, pretend = 0, frame = 0
 1588              		@ frame_needed = 0, uses_anonymous_args = 0
 1589              	.LVL162:
 1590 0000 10B5     		push	{r4, lr}
 1591              	.LCFI26:
 1592              		.cfi_def_cfa_offset 8
 1593              		.cfi_offset 4, -8
 1594              		.cfi_offset 14, -4
 1595 0002 82B0     		sub	sp, sp, #8
 1596              	.LCFI27:
 1597              		.cfi_def_cfa_offset 16
 1598              	.LVL163:
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1599              		.loc 1 521 0
 1600 0004 0090     		str	r0, [sp]
 1601 0006 0B46     		mov	r3, r1
 1602 0008 0022     		movs	r2, #0
 1603 000a 1146     		mov	r1, r2
 1604              	.LVL164:
 1605 000c 0120     		movs	r0, #1
 1606              	.LVL165:
 1607 000e FFF7FEFF 		bl	xQueueGenericCreateStatic
 1608              	.LVL166:
 1609 0012 0446     		mov	r4, r0
 1610              	.LVL167:
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1611              		.loc 1 522 0
 1612 0014 FFF7FEFF 		bl	prvInitialiseMutex
 1613              	.LVL168:
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1614              		.loc 1 525 0
 1615 0018 2046     		mov	r0, r4
 1616 001a 02B0     		add	sp, sp, #8
 1617              	.LCFI28:
 1618              		.cfi_def_cfa_offset 8
 1619              		@ sp needed
 1620 001c 10BD     		pop	{r4, pc}
 1621              		.cfi_endproc
 1622              	.LFE10:
 1624              		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 1625              		.align	1
 1626              		.global	xQueueGiveMutexRecursive
ARM GAS  /tmp/cc0w4XYV.s 			page 77


 1627              		.syntax unified
 1628              		.thumb
 1629              		.thumb_func
 1630              		.fpu fpv5-d16
 1632              	xQueueGiveMutexRecursive:
 1633              	.LFB13:
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 1634              		.loc 1 590 0
 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 0
 1637              		@ frame_needed = 0, uses_anonymous_args = 0
 1638              	.LVL169:
 1639 0000 38B5     		push	{r3, r4, r5, lr}
 1640              	.LCFI29:
 1641              		.cfi_def_cfa_offset 16
 1642              		.cfi_offset 3, -16
 1643              		.cfi_offset 4, -12
 1644              		.cfi_offset 5, -8
 1645              		.cfi_offset 14, -4
 1646              	.LVL170:
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1647              		.loc 1 594 0
 1648 0002 40B9     		cbnz	r0, .L148
 1649              	.LBB153:
 1650              	.LBB154:
 1651              		.loc 2 195 0
 1652              		.syntax unified
 1653              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1654 0004 4FF05003 			mov r3, #80												
 1655 0008 83F31188 		msr basepri, r3											
 1656 000c BFF36F8F 		isb														
 1657 0010 BFF34F8F 		dsb														
 1658              	
 1659              	@ 0 "" 2
 1660              	.LVL171:
 1661              		.thumb
 1662              		.syntax unified
 1663              	.L149:
 1664 0014 FEE7     		b	.L149
 1665              	.L148:
 1666 0016 0446     		mov	r4, r0
 1667              	.LBE154:
 1668              	.LBE153:
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1669              		.loc 1 602 0
 1670 0018 8568     		ldr	r5, [r0, #8]
 1671 001a FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1672              	.LVL172:
 1673 001e 8542     		cmp	r5, r0
 1674 0020 01D0     		beq	.L154
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1675              		.loc 1 631 0
 1676 0022 0020     		movs	r0, #0
 1677              	.L147:
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1678              		.loc 1 637 0
 1679 0024 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/cc0w4XYV.s 			page 78


 1680              	.LVL173:
 1681              	.L154:
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1682              		.loc 1 611 0
 1683 0026 E368     		ldr	r3, [r4, #12]
 1684 0028 013B     		subs	r3, r3, #1
 1685 002a E360     		str	r3, [r4, #12]
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1686              		.loc 1 614 0
 1687 002c 33B9     		cbnz	r3, .L152
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1688              		.loc 1 618 0
 1689 002e 1A46     		mov	r2, r3
 1690 0030 1946     		mov	r1, r3
 1691 0032 2046     		mov	r0, r4
 1692 0034 FFF7FEFF 		bl	xQueueGenericSend
 1693              	.LVL174:
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1694              		.loc 1 625 0
 1695 0038 0120     		movs	r0, #1
 1696 003a F3E7     		b	.L147
 1697              	.L152:
 1698 003c 0120     		movs	r0, #1
 1699              	.LVL175:
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1700              		.loc 1 636 0
 1701 003e F1E7     		b	.L147
 1702              		.cfi_endproc
 1703              	.LFE13:
 1705              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1706              		.align	1
 1707              		.global	xQueueGenericSendFromISR
 1708              		.syntax unified
 1709              		.thumb
 1710              		.thumb_func
 1711              		.fpu fpv5-d16
 1713              	xQueueGenericSendFromISR:
 1714              	.LFB18:
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1715              		.loc 1 951 0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 1719              	.LVL176:
 1720 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1721              	.LCFI30:
 1722              		.cfi_def_cfa_offset 32
 1723              		.cfi_offset 3, -32
 1724              		.cfi_offset 4, -28
 1725              		.cfi_offset 5, -24
 1726              		.cfi_offset 6, -20
 1727              		.cfi_offset 7, -16
 1728              		.cfi_offset 8, -12
 1729              		.cfi_offset 9, -8
 1730              		.cfi_offset 14, -4
 1731              	.LVL177:
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
ARM GAS  /tmp/cc0w4XYV.s 			page 79


 1732              		.loc 1 956 0
 1733 0004 60B1     		cbz	r0, .L170
 1734 0006 0446     		mov	r4, r0
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1735              		.loc 1 957 0
 1736 0008 99B9     		cbnz	r1, .L158
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1737              		.loc 1 957 0 is_stmt 0 discriminator 2
 1738 000a 006C     		ldr	r0, [r0, #64]
 1739              	.LVL178:
 1740 000c 88B1     		cbz	r0, .L158
 1741              	.LBB155:
 1742              	.LBB156:
 1743              		.loc 2 195 0 is_stmt 1
 1744              		.syntax unified
 1745              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1746 000e 4FF05003 			mov r3, #80												
 1747 0012 83F31188 		msr basepri, r3											
 1748 0016 BFF36F8F 		isb														
 1749 001a BFF34F8F 		dsb														
 1750              	
 1751              	@ 0 "" 2
 1752              	.LVL179:
 1753              		.thumb
 1754              		.syntax unified
 1755              	.L159:
 1756 001e FEE7     		b	.L159
 1757              	.LVL180:
 1758              	.L170:
 1759              	.LBE156:
 1760              	.LBE155:
 1761              	.LBB157:
 1762              	.LBB158:
 1763              		.syntax unified
 1764              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1765 0020 4FF05003 			mov r3, #80												
 1766 0024 83F31188 		msr basepri, r3											
 1767 0028 BFF36F8F 		isb														
 1768 002c BFF34F8F 		dsb														
 1769              	
 1770              	@ 0 "" 2
 1771              	.LVL181:
 1772              		.thumb
 1773              		.syntax unified
 1774              	.L157:
 1775 0030 FEE7     		b	.L157
 1776              	.LVL182:
 1777              	.L158:
 1778              	.LBE158:
 1779              	.LBE157:
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1780              		.loc 1 958 0
 1781 0032 022B     		cmp	r3, #2
 1782 0034 0BD1     		bne	.L160
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1783              		.loc 1 958 0 is_stmt 0 discriminator 2
 1784 0036 E06B     		ldr	r0, [r4, #60]
ARM GAS  /tmp/cc0w4XYV.s 			page 80


 1785 0038 0128     		cmp	r0, #1
 1786 003a 08D0     		beq	.L160
 1787              	.LBB159:
 1788              	.LBB160:
 1789              		.loc 2 195 0 is_stmt 1
 1790              		.syntax unified
 1791              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1792 003c 4FF05003 			mov r3, #80												
 1793 0040 83F31188 		msr basepri, r3											
 1794 0044 BFF36F8F 		isb														
 1795 0048 BFF34F8F 		dsb														
 1796              	
 1797              	@ 0 "" 2
 1798              	.LVL183:
 1799              		.thumb
 1800              		.syntax unified
 1801              	.L161:
 1802 004c FEE7     		b	.L161
 1803              	.LVL184:
 1804              	.L160:
 1805 004e 1F46     		mov	r7, r3
 1806 0050 9046     		mov	r8, r2
 1807 0052 8946     		mov	r9, r1
 1808              	.LBE160:
 1809              	.LBE159:
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1810              		.loc 1 974 0
 1811 0054 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1812              	.LVL185:
 1813              	.LBB161:
 1814              	.LBB162:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1815              		.loc 2 211 0
 1816              		.syntax unified
 1817              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1818 0058 EFF31186 			mrs r6, basepri											
 1819 005c 4FF05003 		mov r3, #80												
 1820 0060 83F31188 		msr basepri, r3											
 1821 0064 BFF36F8F 		isb														
 1822 0068 BFF34F8F 		dsb														
 1823              	
 1824              	@ 0 "" 2
ARM GAS  /tmp/cc0w4XYV.s 			page 81


 1825              		.thumb
 1826              		.syntax unified
 1827              	.LBE162:
 1828              	.LBE161:
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1829              		.loc 1 983 0
 1830 006c A26B     		ldr	r2, [r4, #56]
 1831 006e E36B     		ldr	r3, [r4, #60]
 1832 0070 9A42     		cmp	r2, r3
 1833 0072 03D3     		bcc	.L162
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1834              		.loc 1 983 0 is_stmt 0 discriminator 1
 1835 0074 022F     		cmp	r7, #2
 1836 0076 01D0     		beq	.L162
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1837              		.loc 1 1103 0 is_stmt 1
 1838 0078 0020     		movs	r0, #0
 1839 007a 10E0     		b	.L163
 1840              	.L162:
 1841              	.LBB163:
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 1842              		.loc 1 985 0
 1843 007c 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 1844 0080 6DB2     		sxtb	r5, r5
 1845              	.LVL186:
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1846              		.loc 1 986 0
 1847 0082 A36B     		ldr	r3, [r4, #56]
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1848              		.loc 1 995 0
 1849 0084 3A46     		mov	r2, r7
 1850 0086 4946     		mov	r1, r9
 1851 0088 2046     		mov	r0, r4
 1852 008a FFF7FEFF 		bl	prvCopyDataToQueue
 1853              	.LVL187:
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1854              		.loc 1 999 0
 1855 008e B5F1FF3F 		cmp	r5, #-1
 1856 0092 08D0     		beq	.L171
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1857              		.loc 1 1095 0
 1858 0094 6B1C     		adds	r3, r5, #1
 1859 0096 5BB2     		sxtb	r3, r3
 1860 0098 84F84530 		strb	r3, [r4, #69]
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1861              		.loc 1 1098 0
 1862 009c 0120     		movs	r0, #1
 1863              	.LVL188:
 1864              	.L163:
 1865              	.LBE163:
 1866              	.LBB164:
 1867              	.LBB165:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
ARM GAS  /tmp/cc0w4XYV.s 			page 82


 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1868              		.loc 2 229 0
 1869              		.syntax unified
 1870              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1871 009e 86F31188 			msr basepri, r6	
 1872              	@ 0 "" 2
 1873              	.LVL189:
 1874              		.thumb
 1875              		.syntax unified
 1876              	.LBE165:
 1877              	.LBE164:
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1878              		.loc 1 1109 0
 1879 00a2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1880              	.LVL190:
 1881              	.L171:
 1882              	.LBB166:
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1883              		.loc 1 1061 0
 1884 00a6 636A     		ldr	r3, [r4, #36]
 1885 00a8 5BB1     		cbz	r3, .L166
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1886              		.loc 1 1063 0
 1887 00aa 04F12400 		add	r0, r4, #36
 1888 00ae FFF7FEFF 		bl	xTaskRemoveFromEventList
 1889              	.LVL191:
 1890 00b2 40B1     		cbz	r0, .L167
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1891              		.loc 1 1067 0
 1892 00b4 B8F1000F 		cmp	r8, #0
 1893 00b8 07D0     		beq	.L168
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1894              		.loc 1 1069 0
 1895 00ba 0120     		movs	r0, #1
 1896 00bc C8F80000 		str	r0, [r8]
 1897 00c0 EDE7     		b	.L163
 1898              	.L166:
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1899              		.loc 1 1098 0
 1900 00c2 0120     		movs	r0, #1
 1901 00c4 EBE7     		b	.L163
 1902              	.L167:
 1903 00c6 0120     		movs	r0, #1
 1904 00c8 E9E7     		b	.L163
 1905              	.L168:
ARM GAS  /tmp/cc0w4XYV.s 			page 83


 1906 00ca 0120     		movs	r0, #1
 1907 00cc E7E7     		b	.L163
 1908              	.LBE166:
 1909              		.cfi_endproc
 1910              	.LFE18:
 1912              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1913              		.align	1
 1914              		.global	xQueueGiveFromISR
 1915              		.syntax unified
 1916              		.thumb
 1917              		.thumb_func
 1918              		.fpu fpv5-d16
 1920              	xQueueGiveFromISR:
 1921              	.LFB19:
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1922              		.loc 1 1113 0
 1923              		.cfi_startproc
 1924              		@ args = 0, pretend = 0, frame = 0
 1925              		@ frame_needed = 0, uses_anonymous_args = 0
 1926              	.LVL192:
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1927              		.loc 1 1124 0
 1928 0000 60B1     		cbz	r0, .L187
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1929              		.loc 1 1113 0
 1930 0002 70B5     		push	{r4, r5, r6, lr}
 1931              	.LCFI31:
 1932              		.cfi_def_cfa_offset 16
 1933              		.cfi_offset 4, -16
 1934              		.cfi_offset 5, -12
 1935              		.cfi_offset 6, -8
 1936              		.cfi_offset 14, -4
 1937 0004 0446     		mov	r4, r0
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1938              		.loc 1 1128 0
 1939 0006 036C     		ldr	r3, [r0, #64]
 1940 0008 8BB1     		cbz	r3, .L175
 1941              	.LBB167:
 1942              	.LBB168:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1943              		.loc 2 195 0
 1944              		.syntax unified
 1945              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1946 000a 4FF05003 			mov r3, #80												
 1947 000e 83F31188 		msr basepri, r3											
 1948 0012 BFF36F8F 		isb														
 1949 0016 BFF34F8F 		dsb														
 1950              	
 1951              	@ 0 "" 2
 1952              	.LVL193:
 1953              		.thumb
 1954              		.syntax unified
 1955              	.L176:
 1956 001a FEE7     		b	.L176
 1957              	.L187:
 1958              	.LCFI32:
 1959              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cc0w4XYV.s 			page 84


 1960              		.cfi_restore 4
 1961              		.cfi_restore 5
 1962              		.cfi_restore 6
 1963              		.cfi_restore 14
 1964              	.LBE168:
 1965              	.LBE167:
 1966              	.LBB169:
 1967              	.LBB170:
 1968              		.syntax unified
 1969              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1970 001c 4FF05003 			mov r3, #80												
 1971 0020 83F31188 		msr basepri, r3											
 1972 0024 BFF36F8F 		isb														
 1973 0028 BFF34F8F 		dsb														
 1974              	
 1975              	@ 0 "" 2
 1976              	.LVL194:
 1977              		.thumb
 1978              		.syntax unified
 1979              	.L174:
 1980 002c FEE7     		b	.L174
 1981              	.L175:
 1982              	.LCFI33:
 1983              		.cfi_def_cfa_offset 16
 1984              		.cfi_offset 4, -16
 1985              		.cfi_offset 5, -12
 1986              		.cfi_offset 6, -8
 1987              		.cfi_offset 14, -4
 1988              	.LBE170:
 1989              	.LBE169:
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1990              		.loc 1 1133 0
 1991 002e 0368     		ldr	r3, [r0]
 1992 0030 2BB3     		cbz	r3, .L188
 1993              	.L177:
 1994 0032 0E46     		mov	r6, r1
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1995              		.loc 1 1149 0
 1996 0034 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1997              	.LVL195:
 1998              	.LBB171:
 1999              	.LBB172:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2000              		.loc 2 211 0
 2001              		.syntax unified
 2002              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2003 0038 EFF31185 			mrs r5, basepri											
 2004 003c 4FF05003 		mov r3, #80												
 2005 0040 83F31188 		msr basepri, r3											
 2006 0044 BFF36F8F 		isb														
 2007 0048 BFF34F8F 		dsb														
 2008              	
 2009              	@ 0 "" 2
 2010              		.thumb
 2011              		.syntax unified
 2012              	.LBE172:
 2013              	.LBE171:
ARM GAS  /tmp/cc0w4XYV.s 			page 85


 2014              	.LBB173:
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2015              		.loc 1 1153 0
 2016 004c A26B     		ldr	r2, [r4, #56]
 2017              	.LVL196:
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2018              		.loc 1 1158 0
 2019 004e E36B     		ldr	r3, [r4, #60]
 2020 0050 9342     		cmp	r3, r2
 2021 0052 26D9     		bls	.L181
 2022              	.LBB174:
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2023              		.loc 1 1160 0
 2024 0054 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2025 0058 5BB2     		sxtb	r3, r3
 2026              	.LVL197:
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2027              		.loc 1 1170 0
 2028 005a 0132     		adds	r2, r2, #1
 2029              	.LVL198:
 2030 005c A263     		str	r2, [r4, #56]
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2031              		.loc 1 1174 0
 2032 005e B3F1FF3F 		cmp	r3, #-1
 2033 0062 18D1     		bne	.L180
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2034              		.loc 1 1229 0
 2035 0064 636A     		ldr	r3, [r4, #36]
 2036              	.LVL199:
 2037 0066 F3B1     		cbz	r3, .L182
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2038              		.loc 1 1231 0
 2039 0068 04F12400 		add	r0, r4, #36
 2040 006c FFF7FEFF 		bl	xTaskRemoveFromEventList
 2041              	.LVL200:
 2042 0070 D8B1     		cbz	r0, .L183
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 2043              		.loc 1 1235 0
 2044 0072 E6B1     		cbz	r6, .L184
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 2045              		.loc 1 1237 0
 2046 0074 0120     		movs	r0, #1
 2047 0076 3060     		str	r0, [r6]
 2048              	.L179:
 2049              	.LVL201:
 2050              	.LBE174:
 2051              	.LBE173:
 2052              	.LBB177:
 2053              	.LBB178:
 2054              		.loc 2 229 0
 2055              		.syntax unified
 2056              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2057 0078 85F31188 			msr basepri, r5	
 2058              	@ 0 "" 2
 2059              	.LVL202:
 2060              		.thumb
 2061              		.syntax unified
ARM GAS  /tmp/cc0w4XYV.s 			page 86


 2062              	.LBE178:
 2063              	.LBE177:
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2064              		.loc 1 1274 0
 2065 007c 70BD     		pop	{r4, r5, r6, pc}
 2066              	.LVL203:
 2067              	.L188:
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2068              		.loc 1 1133 0 discriminator 2
 2069 007e 8368     		ldr	r3, [r0, #8]
 2070 0080 002B     		cmp	r3, #0
 2071 0082 D6D0     		beq	.L177
 2072              	.LBB179:
 2073              	.LBB180:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2074              		.loc 2 195 0
 2075              		.syntax unified
 2076              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2077 0084 4FF05003 			mov r3, #80												
 2078 0088 83F31188 		msr basepri, r3											
 2079 008c BFF36F8F 		isb														
 2080 0090 BFF34F8F 		dsb														
 2081              	
 2082              	@ 0 "" 2
 2083              	.LVL204:
 2084              		.thumb
 2085              		.syntax unified
 2086              	.L178:
 2087 0094 FEE7     		b	.L178
 2088              	.LVL205:
 2089              	.L180:
 2090              	.LBE180:
 2091              	.LBE179:
 2092              	.LBB181:
 2093              	.LBB175:
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2094              		.loc 1 1260 0
 2095 0096 0133     		adds	r3, r3, #1
 2096              	.LVL206:
 2097 0098 5BB2     		sxtb	r3, r3
 2098              	.LVL207:
 2099 009a 84F84530 		strb	r3, [r4, #69]
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2100              		.loc 1 1263 0
 2101 009e 0120     		movs	r0, #1
 2102 00a0 EAE7     		b	.L179
 2103              	.LVL208:
 2104              	.L181:
 2105              	.LBE175:
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2106              		.loc 1 1268 0
 2107 00a2 0020     		movs	r0, #0
 2108 00a4 E8E7     		b	.L179
 2109              	.LVL209:
 2110              	.L182:
 2111              	.LBB176:
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/cc0w4XYV.s 			page 87


 2112              		.loc 1 1263 0
 2113 00a6 0120     		movs	r0, #1
 2114 00a8 E6E7     		b	.L179
 2115              	.LVL210:
 2116              	.L183:
 2117 00aa 0120     		movs	r0, #1
 2118 00ac E4E7     		b	.L179
 2119              	.L184:
 2120 00ae 0120     		movs	r0, #1
 2121 00b0 E2E7     		b	.L179
 2122              	.LBE176:
 2123              	.LBE181:
 2124              		.cfi_endproc
 2125              	.LFE19:
 2127              		.section	.text.xQueueReceive,"ax",%progbits
 2128              		.align	1
 2129              		.global	xQueueReceive
 2130              		.syntax unified
 2131              		.thumb
 2132              		.thumb_func
 2133              		.fpu fpv5-d16
 2135              	xQueueReceive:
 2136              	.LFB20:
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2137              		.loc 1 1278 0
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 16
 2140              		@ frame_needed = 0, uses_anonymous_args = 0
 2141              	.LVL211:
 2142 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2143              	.LCFI34:
 2144              		.cfi_def_cfa_offset 20
 2145              		.cfi_offset 4, -20
 2146              		.cfi_offset 5, -16
 2147              		.cfi_offset 6, -12
 2148              		.cfi_offset 7, -8
 2149              		.cfi_offset 14, -4
 2150 0002 85B0     		sub	sp, sp, #20
 2151              	.LCFI35:
 2152              		.cfi_def_cfa_offset 40
 2153 0004 0192     		str	r2, [sp, #4]
 2154              	.LVL212:
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2155              		.loc 1 1284 0
 2156 0006 60B1     		cbz	r0, .L210
 2157 0008 0446     		mov	r4, r0
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2158              		.loc 1 1288 0
 2159 000a 99B9     		cbnz	r1, .L192
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2160              		.loc 1 1288 0 is_stmt 0 discriminator 2
 2161 000c 036C     		ldr	r3, [r0, #64]
 2162 000e 8BB1     		cbz	r3, .L192
 2163              	.LBB182:
 2164              	.LBB183:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2165              		.loc 2 195 0 is_stmt 1
ARM GAS  /tmp/cc0w4XYV.s 			page 88


 2166              		.syntax unified
 2167              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2168 0010 4FF05003 			mov r3, #80												
 2169 0014 83F31188 		msr basepri, r3											
 2170 0018 BFF36F8F 		isb														
 2171 001c BFF34F8F 		dsb														
 2172              	
 2173              	@ 0 "" 2
 2174              	.LVL213:
 2175              		.thumb
 2176              		.syntax unified
 2177              	.L193:
 2178 0020 FEE7     		b	.L193
 2179              	.L210:
 2180              	.LBE183:
 2181              	.LBE182:
 2182              	.LBB184:
 2183              	.LBB185:
 2184              		.syntax unified
 2185              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2186 0022 4FF05003 			mov r3, #80												
 2187 0026 83F31188 		msr basepri, r3											
 2188 002a BFF36F8F 		isb														
 2189 002e BFF34F8F 		dsb														
 2190              	
 2191              	@ 0 "" 2
 2192              	.LVL214:
 2193              		.thumb
 2194              		.syntax unified
 2195              	.L191:
 2196 0032 FEE7     		b	.L191
 2197              	.L192:
 2198 0034 0F46     		mov	r7, r1
 2199              	.LBE185:
 2200              	.LBE184:
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2201              		.loc 1 1293 0
 2202 0036 FFF7FEFF 		bl	xTaskGetSchedulerState
 2203              	.LVL215:
 2204 003a 50B9     		cbnz	r0, .L207
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2205              		.loc 1 1293 0 is_stmt 0 discriminator 2
 2206 003c 019B     		ldr	r3, [sp, #4]
 2207 003e 53B1     		cbz	r3, .L208
 2208              	.LBB186:
 2209              	.LBB187:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2210              		.loc 2 195 0 is_stmt 1
 2211              		.syntax unified
 2212              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2213 0040 4FF05003 			mov r3, #80												
 2214 0044 83F31188 		msr basepri, r3											
 2215 0048 BFF36F8F 		isb														
 2216 004c BFF34F8F 		dsb														
 2217              	
 2218              	@ 0 "" 2
 2219              	.LVL216:
ARM GAS  /tmp/cc0w4XYV.s 			page 89


 2220              		.thumb
 2221              		.syntax unified
 2222              	.L195:
 2223 0050 FEE7     		b	.L195
 2224              	.L207:
 2225              	.LBE187:
 2226              	.LBE186:
 2227 0052 0026     		movs	r6, #0
 2228 0054 3EE0     		b	.L196
 2229              	.L208:
 2230 0056 0026     		movs	r6, #0
 2231 0058 3CE0     		b	.L196
 2232              	.LVL217:
 2233              	.L213:
 2234              	.LBB188:
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 2235              		.loc 1 1312 0
 2236 005a 3946     		mov	r1, r7
 2237 005c 2046     		mov	r0, r4
 2238 005e FFF7FEFF 		bl	prvCopyDataFromQueue
 2239              	.LVL218:
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2240              		.loc 1 1314 0
 2241 0062 013D     		subs	r5, r5, #1
 2242              	.LVL219:
 2243 0064 A563     		str	r5, [r4, #56]
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2244              		.loc 1 1319 0
 2245 0066 2369     		ldr	r3, [r4, #16]
 2246 0068 23B9     		cbnz	r3, .L211
 2247              	.L198:
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2248              		.loc 1 1335 0
 2249 006a FFF7FEFF 		bl	vPortExitCritical
 2250              	.LVL220:
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2251              		.loc 1 1336 0
 2252 006e 0120     		movs	r0, #1
 2253              	.LVL221:
 2254              	.L189:
 2255              	.LBE188:
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2256              		.loc 1 1415 0
 2257 0070 05B0     		add	sp, sp, #20
 2258              	.LCFI36:
 2259              		.cfi_remember_state
 2260              		.cfi_def_cfa_offset 20
 2261              		@ sp needed
 2262 0072 F0BD     		pop	{r4, r5, r6, r7, pc}
 2263              	.LVL222:
 2264              	.L211:
 2265              	.LCFI37:
 2266              		.cfi_restore_state
 2267              	.LBB189:
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2268              		.loc 1 1321 0
 2269 0074 04F11000 		add	r0, r4, #16
ARM GAS  /tmp/cc0w4XYV.s 			page 90


 2270 0078 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2271              	.LVL223:
 2272 007c 0028     		cmp	r0, #0
 2273 007e F4D0     		beq	.L198
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2274              		.loc 1 1323 0
 2275 0080 344B     		ldr	r3, .L218
 2276 0082 4FF08052 		mov	r2, #268435456
 2277 0086 1A60     		str	r2, [r3]
 2278              		.syntax unified
 2279              	@ 1323 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2280 0088 BFF34F8F 		dsb
 2281              	@ 0 "" 2
 2282              	@ 1323 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2283 008c BFF36F8F 		isb
 2284              	@ 0 "" 2
 2285              		.thumb
 2286              		.syntax unified
 2287 0090 EBE7     		b	.L198
 2288              	.LVL224:
 2289              	.L214:
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2290              		.loc 1 1344 0
 2291 0092 FFF7FEFF 		bl	vPortExitCritical
 2292              	.LVL225:
1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2293              		.loc 1 1346 0
 2294 0096 0020     		movs	r0, #0
 2295 0098 EAE7     		b	.L189
 2296              	.L215:
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2297              		.loc 1 1352 0
 2298 009a 02A8     		add	r0, sp, #8
 2299 009c FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2300              	.LVL226:
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2301              		.loc 1 1353 0
 2302 00a0 0126     		movs	r6, #1
 2303 00a2 21E0     		b	.L201
 2304              	.LVL227:
 2305              	.L216:
 2306              	.LBE189:
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2307              		.loc 1 1368 0 discriminator 1
 2308 00a4 0023     		movs	r3, #0
 2309 00a6 84F84430 		strb	r3, [r4, #68]
 2310 00aa 29E0     		b	.L202
 2311              	.L217:
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2312              		.loc 1 1368 0 is_stmt 0 discriminator 4
 2313 00ac 0023     		movs	r3, #0
 2314 00ae 84F84530 		strb	r3, [r4, #69]
 2315 00b2 2BE0     		b	.L203
 2316              	.L205:
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2317              		.loc 1 1393 0 is_stmt 1
 2318 00b4 2046     		mov	r0, r4
ARM GAS  /tmp/cc0w4XYV.s 			page 91


 2319 00b6 FFF7FEFF 		bl	prvUnlockQueue
 2320              	.LVL228:
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2321              		.loc 1 1394 0
 2322 00ba FFF7FEFF 		bl	xTaskResumeAll
 2323              	.LVL229:
 2324 00be 09E0     		b	.L196
 2325              	.L204:
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2326              		.loc 1 1401 0
 2327 00c0 2046     		mov	r0, r4
 2328 00c2 FFF7FEFF 		bl	prvUnlockQueue
 2329              	.LVL230:
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2330              		.loc 1 1402 0
 2331 00c6 FFF7FEFF 		bl	xTaskResumeAll
 2332              	.LVL231:
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2333              		.loc 1 1404 0
 2334 00ca 2046     		mov	r0, r4
 2335 00cc FFF7FEFF 		bl	prvIsQueueEmpty
 2336              	.LVL232:
 2337 00d0 0028     		cmp	r0, #0
 2338 00d2 3DD1     		bne	.L212
 2339              	.LVL233:
 2340              	.L196:
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2341              		.loc 1 1303 0
 2342 00d4 FFF7FEFF 		bl	vPortEnterCritical
 2343              	.LVL234:
 2344              	.LBB190:
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2345              		.loc 1 1305 0
 2346 00d8 A56B     		ldr	r5, [r4, #56]
 2347              	.LVL235:
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2348              		.loc 1 1309 0
 2349 00da 002D     		cmp	r5, #0
 2350 00dc BDD1     		bne	.L213
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2351              		.loc 1 1340 0
 2352 00de 019B     		ldr	r3, [sp, #4]
 2353 00e0 002B     		cmp	r3, #0
 2354 00e2 D6D0     		beq	.L214
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2355              		.loc 1 1348 0
 2356 00e4 002E     		cmp	r6, #0
 2357 00e6 D8D0     		beq	.L215
 2358              	.LVL236:
 2359              	.L201:
 2360              	.LBE190:
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2361              		.loc 1 1362 0
 2362 00e8 FFF7FEFF 		bl	vPortExitCritical
 2363              	.LVL237:
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2364              		.loc 1 1367 0
ARM GAS  /tmp/cc0w4XYV.s 			page 92


 2365 00ec FFF7FEFF 		bl	vTaskSuspendAll
 2366              	.LVL238:
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2367              		.loc 1 1368 0
 2368 00f0 FFF7FEFF 		bl	vPortEnterCritical
 2369              	.LVL239:
 2370 00f4 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2371 00f8 5BB2     		sxtb	r3, r3
 2372 00fa B3F1FF3F 		cmp	r3, #-1
 2373 00fe D1D0     		beq	.L216
 2374              	.L202:
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2375              		.loc 1 1368 0 is_stmt 0 discriminator 3
 2376 0100 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2377 0104 5BB2     		sxtb	r3, r3
 2378 0106 B3F1FF3F 		cmp	r3, #-1
 2379 010a CFD0     		beq	.L217
 2380              	.L203:
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2381              		.loc 1 1368 0 discriminator 6
 2382 010c FFF7FEFF 		bl	vPortExitCritical
 2383              	.LVL240:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2384              		.loc 1 1371 0 is_stmt 1 discriminator 6
 2385 0110 01A9     		add	r1, sp, #4
 2386 0112 02A8     		add	r0, sp, #8
 2387 0114 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2388              	.LVL241:
 2389 0118 0028     		cmp	r0, #0
 2390 011a D1D1     		bne	.L204
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2391              		.loc 1 1375 0
 2392 011c 2046     		mov	r0, r4
 2393 011e FFF7FEFF 		bl	prvIsQueueEmpty
 2394              	.LVL242:
 2395 0122 0028     		cmp	r0, #0
 2396 0124 C6D0     		beq	.L205
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2397              		.loc 1 1378 0
 2398 0126 0199     		ldr	r1, [sp, #4]
 2399 0128 04F12400 		add	r0, r4, #36
 2400 012c FFF7FEFF 		bl	vTaskPlaceOnEventList
 2401              	.LVL243:
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2402              		.loc 1 1379 0
 2403 0130 2046     		mov	r0, r4
 2404 0132 FFF7FEFF 		bl	prvUnlockQueue
 2405              	.LVL244:
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2406              		.loc 1 1380 0
 2407 0136 FFF7FEFF 		bl	xTaskResumeAll
 2408              	.LVL245:
 2409 013a 0028     		cmp	r0, #0
 2410 013c CAD1     		bne	.L196
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2411              		.loc 1 1382 0
 2412 013e 054B     		ldr	r3, .L218
ARM GAS  /tmp/cc0w4XYV.s 			page 93


 2413 0140 4FF08052 		mov	r2, #268435456
 2414 0144 1A60     		str	r2, [r3]
 2415              		.syntax unified
 2416              	@ 1382 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2417 0146 BFF34F8F 		dsb
 2418              	@ 0 "" 2
 2419              	@ 1382 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2420 014a BFF36F8F 		isb
 2421              	@ 0 "" 2
 2422              		.thumb
 2423              		.syntax unified
 2424 014e C1E7     		b	.L196
 2425              	.L212:
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2426              		.loc 1 1407 0
 2427 0150 0020     		movs	r0, #0
 2428 0152 8DE7     		b	.L189
 2429              	.L219:
 2430              		.align	2
 2431              	.L218:
 2432 0154 04ED00E0 		.word	-536810236
 2433              		.cfi_endproc
 2434              	.LFE20:
 2436              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 2437              		.align	1
 2438              		.global	xQueueSemaphoreTake
 2439              		.syntax unified
 2440              		.thumb
 2441              		.thumb_func
 2442              		.fpu fpv5-d16
 2444              	xQueueSemaphoreTake:
 2445              	.LFB21:
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2446              		.loc 1 1419 0
 2447              		.cfi_startproc
 2448              		@ args = 0, pretend = 0, frame = 16
 2449              		@ frame_needed = 0, uses_anonymous_args = 0
 2450              	.LVL246:
 2451 0000 70B5     		push	{r4, r5, r6, lr}
 2452              	.LCFI38:
 2453              		.cfi_def_cfa_offset 16
 2454              		.cfi_offset 4, -16
 2455              		.cfi_offset 5, -12
 2456              		.cfi_offset 6, -8
 2457              		.cfi_offset 14, -4
 2458 0002 84B0     		sub	sp, sp, #16
 2459              	.LCFI39:
 2460              		.cfi_def_cfa_offset 32
 2461 0004 0191     		str	r1, [sp, #4]
 2462              	.LVL247:
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2463              		.loc 1 1429 0
 2464 0006 40B9     		cbnz	r0, .L221
 2465              	.LBB191:
 2466              	.LBB192:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2467              		.loc 2 195 0
ARM GAS  /tmp/cc0w4XYV.s 			page 94


 2468              		.syntax unified
 2469              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2470 0008 4FF05003 			mov r3, #80												
 2471 000c 83F31188 		msr basepri, r3											
 2472 0010 BFF36F8F 		isb														
 2473 0014 BFF34F8F 		dsb														
 2474              	
 2475              	@ 0 "" 2
 2476              	.LVL248:
 2477              		.thumb
 2478              		.syntax unified
 2479              	.L222:
 2480 0018 FEE7     		b	.L222
 2481              	.L221:
 2482 001a 0446     		mov	r4, r0
 2483              	.LBE192:
 2484              	.LBE191:
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2485              		.loc 1 1433 0
 2486 001c 036C     		ldr	r3, [r0, #64]
 2487 001e 43B1     		cbz	r3, .L223
 2488              	.LBB193:
 2489              	.LBB194:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2490              		.loc 2 195 0
 2491              		.syntax unified
 2492              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2493 0020 4FF05003 			mov r3, #80												
 2494 0024 83F31188 		msr basepri, r3											
 2495 0028 BFF36F8F 		isb														
 2496 002c BFF34F8F 		dsb														
 2497              	
 2498              	@ 0 "" 2
 2499              	.LVL249:
 2500              		.thumb
 2501              		.syntax unified
 2502              	.L224:
 2503 0030 FEE7     		b	.L224
 2504              	.L223:
 2505              	.LBE194:
 2506              	.LBE193:
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2507              		.loc 1 1438 0
 2508 0032 FFF7FEFF 		bl	xTaskGetSchedulerState
 2509              	.LVL250:
 2510 0036 50B9     		cbnz	r0, .L242
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2511              		.loc 1 1438 0 is_stmt 0 discriminator 2
 2512 0038 019B     		ldr	r3, [sp, #4]
 2513 003a 5BB1     		cbz	r3, .L243
 2514              	.LBB195:
 2515              	.LBB196:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2516              		.loc 2 195 0 is_stmt 1
 2517              		.syntax unified
 2518              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2519 003c 4FF05003 			mov r3, #80												
ARM GAS  /tmp/cc0w4XYV.s 			page 95


 2520 0040 83F31188 		msr basepri, r3											
 2521 0044 BFF36F8F 		isb														
 2522 0048 BFF34F8F 		dsb														
 2523              	
 2524              	@ 0 "" 2
 2525              	.LVL251:
 2526              		.thumb
 2527              		.syntax unified
 2528              	.L226:
 2529 004c FEE7     		b	.L226
 2530              	.L242:
 2531              	.LBE196:
 2532              	.LBE195:
 2533 004e 0025     		movs	r5, #0
 2534 0050 2E46     		mov	r6, r5
 2535 0052 51E0     		b	.L227
 2536              	.L243:
 2537 0054 0025     		movs	r5, #0
 2538 0056 2E46     		mov	r6, r5
 2539 0058 4EE0     		b	.L227
 2540              	.LVL252:
 2541              	.L246:
 2542              	.LBB197:
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2543              		.loc 1 1462 0
 2544 005a 013B     		subs	r3, r3, #1
 2545              	.LVL253:
 2546 005c A363     		str	r3, [r4, #56]
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2547              		.loc 1 1466 0
 2548 005e 2368     		ldr	r3, [r4]
 2549              	.LVL254:
 2550 0060 13B9     		cbnz	r3, .L229
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2551              		.loc 1 1470 0
 2552 0062 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 2553              	.LVL255:
 2554 0066 A060     		str	r0, [r4, #8]
 2555              	.L229:
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2556              		.loc 1 1481 0
 2557 0068 2369     		ldr	r3, [r4, #16]
 2558 006a 63B1     		cbz	r3, .L230
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2559              		.loc 1 1483 0
 2560 006c 04F11000 		add	r0, r4, #16
 2561 0070 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2562              	.LVL256:
 2563 0074 38B1     		cbz	r0, .L230
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2564              		.loc 1 1485 0
 2565 0076 484B     		ldr	r3, .L252
 2566 0078 4FF08052 		mov	r2, #268435456
 2567 007c 1A60     		str	r2, [r3]
 2568              		.syntax unified
 2569              	@ 1485 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2570 007e BFF34F8F 		dsb
ARM GAS  /tmp/cc0w4XYV.s 			page 96


 2571              	@ 0 "" 2
 2572              	@ 1485 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2573 0082 BFF36F8F 		isb
 2574              	@ 0 "" 2
 2575              		.thumb
 2576              		.syntax unified
 2577              	.L230:
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2578              		.loc 1 1497 0
 2579 0086 FFF7FEFF 		bl	vPortExitCritical
 2580              	.LVL257:
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2581              		.loc 1 1498 0
 2582 008a 0125     		movs	r5, #1
 2583              	.LVL258:
 2584              	.L220:
 2585              	.LBE197:
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2586              		.loc 1 1633 0
 2587 008c 2846     		mov	r0, r5
 2588 008e 04B0     		add	sp, sp, #16
 2589              	.LCFI40:
 2590              		.cfi_remember_state
 2591              		.cfi_def_cfa_offset 16
 2592              		@ sp needed
 2593 0090 70BD     		pop	{r4, r5, r6, pc}
 2594              	.LVL259:
 2595              	.L247:
 2596              	.LCFI41:
 2597              		.cfi_restore_state
 2598              	.LBB200:
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2599              		.loc 1 1509 0
 2600 0092 45B1     		cbz	r5, .L233
 2601              	.LBB198:
 2602              	.LBB199:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2603              		.loc 2 195 0
 2604              		.syntax unified
 2605              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2606 0094 4FF05003 			mov r3, #80												
 2607 0098 83F31188 		msr basepri, r3											
 2608 009c BFF36F8F 		isb														
 2609 00a0 BFF34F8F 		dsb														
 2610              	
 2611              	@ 0 "" 2
 2612              	.LVL260:
 2613              		.thumb
 2614              		.syntax unified
 2615              	.L234:
 2616 00a4 FEE7     		b	.L234
 2617              	.L233:
 2618              	.LBE199:
 2619              	.LBE198:
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2620              		.loc 1 1515 0
 2621 00a6 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  /tmp/cc0w4XYV.s 			page 97


 2622              	.LVL261:
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2623              		.loc 1 1517 0
 2624 00aa EFE7     		b	.L220
 2625              	.L248:
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2626              		.loc 1 1523 0
 2627 00ac 02A8     		add	r0, sp, #8
 2628 00ae FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2629              	.LVL262:
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2630              		.loc 1 1524 0
 2631 00b2 0126     		movs	r6, #1
 2632 00b4 2AE0     		b	.L235
 2633              	.LVL263:
 2634              	.L249:
 2635              	.LBE200:
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2636              		.loc 1 1539 0 discriminator 1
 2637 00b6 0023     		movs	r3, #0
 2638 00b8 84F84430 		strb	r3, [r4, #68]
 2639 00bc 32E0     		b	.L236
 2640              	.L250:
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2641              		.loc 1 1539 0 is_stmt 0 discriminator 4
 2642 00be 0023     		movs	r3, #0
 2643 00c0 84F84530 		strb	r3, [r4, #69]
 2644 00c4 34E0     		b	.L237
 2645              	.L251:
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2646              		.loc 1 1556 0 is_stmt 1
 2647 00c6 FFF7FEFF 		bl	vPortEnterCritical
 2648              	.LVL264:
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2649              		.loc 1 1558 0
 2650 00ca A068     		ldr	r0, [r4, #8]
 2651 00cc FFF7FEFF 		bl	xTaskPriorityInherit
 2652              	.LVL265:
 2653 00d0 0546     		mov	r5, r0
 2654              	.LVL266:
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2655              		.loc 1 1560 0
 2656 00d2 FFF7FEFF 		bl	vPortExitCritical
 2657              	.LVL267:
 2658 00d6 3BE0     		b	.L240
 2659              	.L239:
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2660              		.loc 1 1584 0
 2661 00d8 2046     		mov	r0, r4
 2662 00da FFF7FEFF 		bl	prvUnlockQueue
 2663              	.LVL268:
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2664              		.loc 1 1585 0
 2665 00de FFF7FEFF 		bl	xTaskResumeAll
 2666              	.LVL269:
 2667 00e2 09E0     		b	.L227
 2668              	.L238:
ARM GAS  /tmp/cc0w4XYV.s 			page 98


1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2669              		.loc 1 1591 0
 2670 00e4 2046     		mov	r0, r4
 2671 00e6 FFF7FEFF 		bl	prvUnlockQueue
 2672              	.LVL270:
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2673              		.loc 1 1592 0
 2674 00ea FFF7FEFF 		bl	xTaskResumeAll
 2675              	.LVL271:
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2676              		.loc 1 1598 0
 2677 00ee 2046     		mov	r0, r4
 2678 00f0 FFF7FEFF 		bl	prvIsQueueEmpty
 2679              	.LVL272:
 2680 00f4 0028     		cmp	r0, #0
 2681 00f6 40D1     		bne	.L245
 2682              	.LVL273:
 2683              	.L227:
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2684              		.loc 1 1448 0
 2685 00f8 FFF7FEFF 		bl	vPortEnterCritical
 2686              	.LVL274:
 2687              	.LBB201:
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2688              		.loc 1 1452 0
 2689 00fc A36B     		ldr	r3, [r4, #56]
 2690              	.LVL275:
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2691              		.loc 1 1456 0
 2692 00fe 002B     		cmp	r3, #0
 2693 0100 ABD1     		bne	.L246
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2694              		.loc 1 1502 0
 2695 0102 019B     		ldr	r3, [sp, #4]
 2696              	.LVL276:
 2697 0104 002B     		cmp	r3, #0
 2698 0106 C4D0     		beq	.L247
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2699              		.loc 1 1519 0
 2700 0108 002E     		cmp	r6, #0
 2701 010a CFD0     		beq	.L248
 2702              	.LVL277:
 2703              	.L235:
 2704              	.LBE201:
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2705              		.loc 1 1533 0
 2706 010c FFF7FEFF 		bl	vPortExitCritical
 2707              	.LVL278:
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2708              		.loc 1 1538 0
 2709 0110 FFF7FEFF 		bl	vTaskSuspendAll
 2710              	.LVL279:
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2711              		.loc 1 1539 0
 2712 0114 FFF7FEFF 		bl	vPortEnterCritical
 2713              	.LVL280:
 2714 0118 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
ARM GAS  /tmp/cc0w4XYV.s 			page 99


 2715 011c 5BB2     		sxtb	r3, r3
 2716 011e B3F1FF3F 		cmp	r3, #-1
 2717 0122 C8D0     		beq	.L249
 2718              	.L236:
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2719              		.loc 1 1539 0 is_stmt 0 discriminator 3
 2720 0124 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2721 0128 5BB2     		sxtb	r3, r3
 2722 012a B3F1FF3F 		cmp	r3, #-1
 2723 012e C6D0     		beq	.L250
 2724              	.L237:
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2725              		.loc 1 1539 0 discriminator 6
 2726 0130 FFF7FEFF 		bl	vPortExitCritical
 2727              	.LVL281:
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2728              		.loc 1 1542 0 is_stmt 1 discriminator 6
 2729 0134 01A9     		add	r1, sp, #4
 2730 0136 02A8     		add	r0, sp, #8
 2731 0138 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2732              	.LVL282:
 2733 013c 0028     		cmp	r0, #0
 2734 013e D1D1     		bne	.L238
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2735              		.loc 1 1548 0
 2736 0140 2046     		mov	r0, r4
 2737 0142 FFF7FEFF 		bl	prvIsQueueEmpty
 2738              	.LVL283:
 2739 0146 0028     		cmp	r0, #0
 2740 0148 C6D0     		beq	.L239
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2741              		.loc 1 1554 0
 2742 014a 2368     		ldr	r3, [r4]
 2743 014c 002B     		cmp	r3, #0
 2744 014e BAD0     		beq	.L251
 2745              	.L240:
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2746              		.loc 1 1569 0
 2747 0150 0199     		ldr	r1, [sp, #4]
 2748 0152 04F12400 		add	r0, r4, #36
 2749 0156 FFF7FEFF 		bl	vTaskPlaceOnEventList
 2750              	.LVL284:
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2751              		.loc 1 1570 0
 2752 015a 2046     		mov	r0, r4
 2753 015c FFF7FEFF 		bl	prvUnlockQueue
 2754              	.LVL285:
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2755              		.loc 1 1571 0
 2756 0160 FFF7FEFF 		bl	xTaskResumeAll
 2757              	.LVL286:
 2758 0164 0028     		cmp	r0, #0
 2759 0166 C7D1     		bne	.L227
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2760              		.loc 1 1573 0
 2761 0168 0B4B     		ldr	r3, .L252
 2762 016a 4FF08052 		mov	r2, #268435456
ARM GAS  /tmp/cc0w4XYV.s 			page 100


 2763 016e 1A60     		str	r2, [r3]
 2764              		.syntax unified
 2765              	@ 1573 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2766 0170 BFF34F8F 		dsb
 2767              	@ 0 "" 2
 2768              	@ 1573 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2769 0174 BFF36F8F 		isb
 2770              	@ 0 "" 2
 2771              		.thumb
 2772              		.syntax unified
 2773 0178 BEE7     		b	.L227
 2774              	.L245:
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2775              		.loc 1 1605 0
 2776 017a 002D     		cmp	r5, #0
 2777 017c 86D0     		beq	.L220
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2778              		.loc 1 1607 0
 2779 017e FFF7FEFF 		bl	vPortEnterCritical
 2780              	.LVL287:
 2781              	.LBB202:
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
 2782              		.loc 1 1616 0
 2783 0182 2046     		mov	r0, r4
 2784 0184 FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 2785              	.LVL288:
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2786              		.loc 1 1617 0
 2787 0188 0146     		mov	r1, r0
 2788 018a A068     		ldr	r0, [r4, #8]
 2789              	.LVL289:
 2790 018c FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 2791              	.LVL290:
 2792              	.LBE202:
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2793              		.loc 1 1619 0
 2794 0190 FFF7FEFF 		bl	vPortExitCritical
 2795              	.LVL291:
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2796              		.loc 1 1625 0
 2797 0194 0025     		movs	r5, #0
 2798              	.LVL292:
 2799 0196 79E7     		b	.L220
 2800              	.L253:
 2801              		.align	2
 2802              	.L252:
 2803 0198 04ED00E0 		.word	-536810236
 2804              		.cfi_endproc
 2805              	.LFE21:
 2807              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 2808              		.align	1
 2809              		.global	xQueueTakeMutexRecursive
 2810              		.syntax unified
 2811              		.thumb
 2812              		.thumb_func
 2813              		.fpu fpv5-d16
 2815              	xQueueTakeMutexRecursive:
ARM GAS  /tmp/cc0w4XYV.s 			page 101


 2816              	.LFB14:
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2817              		.loc 1 645 0
 2818              		.cfi_startproc
 2819              		@ args = 0, pretend = 0, frame = 0
 2820              		@ frame_needed = 0, uses_anonymous_args = 0
 2821              	.LVL293:
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2822              		.loc 1 649 0
 2823 0000 40B9     		cbnz	r0, .L255
 2824              	.LBB203:
 2825              	.LBB204:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2826              		.loc 2 195 0
 2827              		.syntax unified
 2828              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2829 0002 4FF05003 			mov r3, #80												
 2830 0006 83F31188 		msr basepri, r3											
 2831 000a BFF36F8F 		isb														
 2832 000e BFF34F8F 		dsb														
 2833              	
 2834              	@ 0 "" 2
 2835              	.LVL294:
 2836              		.thumb
 2837              		.syntax unified
 2838              	.L256:
 2839 0012 FEE7     		b	.L256
 2840              	.L255:
 2841              	.LBE204:
 2842              	.LBE203:
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2843              		.loc 1 645 0
 2844 0014 70B5     		push	{r4, r5, r6, lr}
 2845              	.LCFI42:
 2846              		.cfi_def_cfa_offset 16
 2847              		.cfi_offset 4, -16
 2848              		.cfi_offset 5, -12
 2849              		.cfi_offset 6, -8
 2850              		.cfi_offset 14, -4
 2851 0016 0446     		mov	r4, r0
 2852 0018 0D46     		mov	r5, r1
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2853              		.loc 1 656 0
 2854 001a 8668     		ldr	r6, [r0, #8]
 2855 001c FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 2856              	.LVL295:
 2857 0020 8642     		cmp	r6, r0
 2858 0022 09D0     		beq	.L261
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2859              		.loc 1 663 0
 2860 0024 2946     		mov	r1, r5
 2861 0026 2046     		mov	r0, r4
 2862 0028 FFF7FEFF 		bl	xQueueSemaphoreTake
 2863              	.LVL296:
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2864              		.loc 1 668 0
 2865 002c 0246     		mov	r2, r0
ARM GAS  /tmp/cc0w4XYV.s 			page 102


 2866 002e 38B1     		cbz	r0, .L254
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2867              		.loc 1 670 0
 2868 0030 E368     		ldr	r3, [r4, #12]
 2869 0032 0133     		adds	r3, r3, #1
 2870 0034 E360     		str	r3, [r4, #12]
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2871              		.loc 1 678 0
 2872 0036 03E0     		b	.L254
 2873              	.LVL297:
 2874              	.L261:
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 2875              		.loc 1 658 0
 2876 0038 E368     		ldr	r3, [r4, #12]
 2877 003a 0133     		adds	r3, r3, #1
 2878 003c E360     		str	r3, [r4, #12]
 2879              	.LVL298:
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2880              		.loc 1 659 0
 2881 003e 0122     		movs	r2, #1
 2882              	.LVL299:
 2883              	.L254:
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2884              		.loc 1 679 0
 2885 0040 1046     		mov	r0, r2
 2886 0042 70BD     		pop	{r4, r5, r6, pc}
 2887              		.cfi_endproc
 2888              	.LFE14:
 2890              		.section	.text.xQueuePeek,"ax",%progbits
 2891              		.align	1
 2892              		.global	xQueuePeek
 2893              		.syntax unified
 2894              		.thumb
 2895              		.thumb_func
 2896              		.fpu fpv5-d16
 2898              	xQueuePeek:
 2899              	.LFB22:
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2900              		.loc 1 1637 0
 2901              		.cfi_startproc
 2902              		@ args = 0, pretend = 0, frame = 16
 2903              		@ frame_needed = 0, uses_anonymous_args = 0
 2904              	.LVL300:
 2905 0000 70B5     		push	{r4, r5, r6, lr}
 2906              	.LCFI43:
 2907              		.cfi_def_cfa_offset 16
 2908              		.cfi_offset 4, -16
 2909              		.cfi_offset 5, -12
 2910              		.cfi_offset 6, -8
 2911              		.cfi_offset 14, -4
 2912 0002 84B0     		sub	sp, sp, #16
 2913              	.LCFI44:
 2914              		.cfi_def_cfa_offset 32
 2915 0004 0192     		str	r2, [sp, #4]
 2916              	.LVL301:
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2917              		.loc 1 1644 0
ARM GAS  /tmp/cc0w4XYV.s 			page 103


 2918 0006 60B1     		cbz	r0, .L283
 2919 0008 0446     		mov	r4, r0
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2920              		.loc 1 1648 0
 2921 000a 99B9     		cbnz	r1, .L265
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2922              		.loc 1 1648 0 is_stmt 0 discriminator 2
 2923 000c 036C     		ldr	r3, [r0, #64]
 2924 000e 8BB1     		cbz	r3, .L265
 2925              	.LBB205:
 2926              	.LBB206:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2927              		.loc 2 195 0 is_stmt 1
 2928              		.syntax unified
 2929              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2930 0010 4FF05003 			mov r3, #80												
 2931 0014 83F31188 		msr basepri, r3											
 2932 0018 BFF36F8F 		isb														
 2933 001c BFF34F8F 		dsb														
 2934              	
 2935              	@ 0 "" 2
 2936              	.LVL302:
 2937              		.thumb
 2938              		.syntax unified
 2939              	.L266:
 2940 0020 FEE7     		b	.L266
 2941              	.L283:
 2942              	.LBE206:
 2943              	.LBE205:
 2944              	.LBB207:
 2945              	.LBB208:
 2946              		.syntax unified
 2947              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2948 0022 4FF05003 			mov r3, #80												
 2949 0026 83F31188 		msr basepri, r3											
 2950 002a BFF36F8F 		isb														
 2951 002e BFF34F8F 		dsb														
 2952              	
 2953              	@ 0 "" 2
 2954              	.LVL303:
 2955              		.thumb
 2956              		.syntax unified
 2957              	.L264:
 2958 0032 FEE7     		b	.L264
 2959              	.L265:
 2960 0034 0E46     		mov	r6, r1
 2961              	.LBE208:
 2962              	.LBE207:
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2963              		.loc 1 1653 0
 2964 0036 FFF7FEFF 		bl	xTaskGetSchedulerState
 2965              	.LVL304:
 2966 003a 50B9     		cbnz	r0, .L280
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2967              		.loc 1 1653 0 is_stmt 0 discriminator 2
 2968 003c 019B     		ldr	r3, [sp, #4]
 2969 003e 53B1     		cbz	r3, .L281
ARM GAS  /tmp/cc0w4XYV.s 			page 104


 2970              	.LBB209:
 2971              	.LBB210:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2972              		.loc 2 195 0 is_stmt 1
 2973              		.syntax unified
 2974              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2975 0040 4FF05003 			mov r3, #80												
 2976 0044 83F31188 		msr basepri, r3											
 2977 0048 BFF36F8F 		isb														
 2978 004c BFF34F8F 		dsb														
 2979              	
 2980              	@ 0 "" 2
 2981              	.LVL305:
 2982              		.thumb
 2983              		.syntax unified
 2984              	.L268:
 2985 0050 FEE7     		b	.L268
 2986              	.L280:
 2987              	.LBE210:
 2988              	.LBE209:
 2989 0052 0025     		movs	r5, #0
 2990 0054 3EE0     		b	.L269
 2991              	.L281:
 2992 0056 0025     		movs	r5, #0
 2993 0058 3CE0     		b	.L269
 2994              	.LVL306:
 2995              	.L286:
 2996              	.LBB211:
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2997              		.loc 1 1674 0
 2998 005a E568     		ldr	r5, [r4, #12]
 2999              	.LVL307:
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 3000              		.loc 1 1676 0
 3001 005c 3146     		mov	r1, r6
 3002 005e 2046     		mov	r0, r4
 3003 0060 FFF7FEFF 		bl	prvCopyDataFromQueue
 3004              	.LVL308:
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3005              		.loc 1 1680 0
 3006 0064 E560     		str	r5, [r4, #12]
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3007              		.loc 1 1684 0
 3008 0066 636A     		ldr	r3, [r4, #36]
 3009 0068 23B9     		cbnz	r3, .L284
 3010              	.L271:
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 3011              		.loc 1 1701 0
 3012 006a FFF7FEFF 		bl	vPortExitCritical
 3013              	.LVL309:
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3014              		.loc 1 1702 0
 3015 006e 0120     		movs	r0, #1
 3016              	.LVL310:
 3017              	.L262:
 3018              	.LBE211:
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc0w4XYV.s 			page 105


 3019              		.loc 1 1782 0
 3020 0070 04B0     		add	sp, sp, #16
 3021              	.LCFI45:
 3022              		.cfi_remember_state
 3023              		.cfi_def_cfa_offset 16
 3024              		@ sp needed
 3025 0072 70BD     		pop	{r4, r5, r6, pc}
 3026              	.LVL311:
 3027              	.L284:
 3028              	.LCFI46:
 3029              		.cfi_restore_state
 3030              	.LBB212:
1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 3031              		.loc 1 1686 0
 3032 0074 04F12400 		add	r0, r4, #36
 3033 0078 FFF7FEFF 		bl	xTaskRemoveFromEventList
 3034              	.LVL312:
 3035 007c 0028     		cmp	r0, #0
 3036 007e F4D0     		beq	.L271
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 3037              		.loc 1 1689 0
 3038 0080 344B     		ldr	r3, .L291
 3039 0082 4FF08052 		mov	r2, #268435456
 3040 0086 1A60     		str	r2, [r3]
 3041              		.syntax unified
 3042              	@ 1689 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3043 0088 BFF34F8F 		dsb
 3044              	@ 0 "" 2
 3045              	@ 1689 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3046 008c BFF36F8F 		isb
 3047              	@ 0 "" 2
 3048              		.thumb
 3049              		.syntax unified
 3050 0090 EBE7     		b	.L271
 3051              	.LVL313:
 3052              	.L287:
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 3053              		.loc 1 1710 0
 3054 0092 FFF7FEFF 		bl	vPortExitCritical
 3055              	.LVL314:
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3056              		.loc 1 1712 0
 3057 0096 0020     		movs	r0, #0
 3058 0098 EAE7     		b	.L262
 3059              	.L288:
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 3060              		.loc 1 1719 0
 3061 009a 02A8     		add	r0, sp, #8
 3062 009c FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3063              	.LVL315:
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3064              		.loc 1 1720 0
 3065 00a0 0125     		movs	r5, #1
 3066 00a2 21E0     		b	.L274
 3067              	.LVL316:
 3068              	.L289:
 3069              	.LBE212:
ARM GAS  /tmp/cc0w4XYV.s 			page 106


1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3070              		.loc 1 1735 0 discriminator 1
 3071 00a4 0023     		movs	r3, #0
 3072 00a6 84F84430 		strb	r3, [r4, #68]
 3073 00aa 29E0     		b	.L275
 3074              	.L290:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3075              		.loc 1 1735 0 is_stmt 0 discriminator 4
 3076 00ac 0023     		movs	r3, #0
 3077 00ae 84F84530 		strb	r3, [r4, #69]
 3078 00b2 2BE0     		b	.L276
 3079              	.L278:
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 3080              		.loc 1 1760 0 is_stmt 1
 3081 00b4 2046     		mov	r0, r4
 3082 00b6 FFF7FEFF 		bl	prvUnlockQueue
 3083              	.LVL317:
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3084              		.loc 1 1761 0
 3085 00ba FFF7FEFF 		bl	xTaskResumeAll
 3086              	.LVL318:
 3087 00be 09E0     		b	.L269
 3088              	.L277:
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 3089              		.loc 1 1768 0
 3090 00c0 2046     		mov	r0, r4
 3091 00c2 FFF7FEFF 		bl	prvUnlockQueue
 3092              	.LVL319:
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3093              		.loc 1 1769 0
 3094 00c6 FFF7FEFF 		bl	xTaskResumeAll
 3095              	.LVL320:
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3096              		.loc 1 1771 0
 3097 00ca 2046     		mov	r0, r4
 3098 00cc FFF7FEFF 		bl	prvIsQueueEmpty
 3099              	.LVL321:
 3100 00d0 0028     		cmp	r0, #0
 3101 00d2 3DD1     		bne	.L285
 3102              	.LVL322:
 3103              	.L269:
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3104              		.loc 1 1663 0
 3105 00d4 FFF7FEFF 		bl	vPortEnterCritical
 3106              	.LVL323:
 3107              	.LBB213:
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3108              		.loc 1 1665 0
 3109 00d8 A36B     		ldr	r3, [r4, #56]
 3110              	.LVL324:
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3111              		.loc 1 1669 0
 3112 00da 002B     		cmp	r3, #0
 3113 00dc BDD1     		bne	.L286
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3114              		.loc 1 1706 0
 3115 00de 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/cc0w4XYV.s 			page 107


 3116              	.LVL325:
 3117 00e0 002B     		cmp	r3, #0
 3118 00e2 D6D0     		beq	.L287
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3119              		.loc 1 1714 0
 3120 00e4 002D     		cmp	r5, #0
 3121 00e6 D8D0     		beq	.L288
 3122              	.LVL326:
 3123              	.L274:
 3124              	.LBE213:
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3125              		.loc 1 1729 0
 3126 00e8 FFF7FEFF 		bl	vPortExitCritical
 3127              	.LVL327:
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 3128              		.loc 1 1734 0
 3129 00ec FFF7FEFF 		bl	vTaskSuspendAll
 3130              	.LVL328:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3131              		.loc 1 1735 0
 3132 00f0 FFF7FEFF 		bl	vPortEnterCritical
 3133              	.LVL329:
 3134 00f4 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 3135 00f8 5BB2     		sxtb	r3, r3
 3136 00fa B3F1FF3F 		cmp	r3, #-1
 3137 00fe D1D0     		beq	.L289
 3138              	.L275:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3139              		.loc 1 1735 0 is_stmt 0 discriminator 3
 3140 0100 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 3141 0104 5BB2     		sxtb	r3, r3
 3142 0106 B3F1FF3F 		cmp	r3, #-1
 3143 010a CFD0     		beq	.L290
 3144              	.L276:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3145              		.loc 1 1735 0 discriminator 6
 3146 010c FFF7FEFF 		bl	vPortExitCritical
 3147              	.LVL330:
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3148              		.loc 1 1738 0 is_stmt 1 discriminator 6
 3149 0110 01A9     		add	r1, sp, #4
 3150 0112 02A8     		add	r0, sp, #8
 3151 0114 FFF7FEFF 		bl	xTaskCheckForTimeOut
 3152              	.LVL331:
 3153 0118 0028     		cmp	r0, #0
 3154 011a D1D1     		bne	.L277
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3155              		.loc 1 1742 0
 3156 011c 2046     		mov	r0, r4
 3157 011e FFF7FEFF 		bl	prvIsQueueEmpty
 3158              	.LVL332:
 3159 0122 0028     		cmp	r0, #0
 3160 0124 C6D0     		beq	.L278
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 3161              		.loc 1 1745 0
 3162 0126 0199     		ldr	r1, [sp, #4]
 3163 0128 04F12400 		add	r0, r4, #36
ARM GAS  /tmp/cc0w4XYV.s 			page 108


 3164 012c FFF7FEFF 		bl	vTaskPlaceOnEventList
 3165              	.LVL333:
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 3166              		.loc 1 1746 0
 3167 0130 2046     		mov	r0, r4
 3168 0132 FFF7FEFF 		bl	prvUnlockQueue
 3169              	.LVL334:
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3170              		.loc 1 1747 0
 3171 0136 FFF7FEFF 		bl	xTaskResumeAll
 3172              	.LVL335:
 3173 013a 0028     		cmp	r0, #0
 3174 013c CAD1     		bne	.L269
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3175              		.loc 1 1749 0
 3176 013e 054B     		ldr	r3, .L291
 3177 0140 4FF08052 		mov	r2, #268435456
 3178 0144 1A60     		str	r2, [r3]
 3179              		.syntax unified
 3180              	@ 1749 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3181 0146 BFF34F8F 		dsb
 3182              	@ 0 "" 2
 3183              	@ 1749 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3184 014a BFF36F8F 		isb
 3185              	@ 0 "" 2
 3186              		.thumb
 3187              		.syntax unified
 3188 014e C1E7     		b	.L269
 3189              	.L285:
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3190              		.loc 1 1774 0
 3191 0150 0020     		movs	r0, #0
 3192 0152 8DE7     		b	.L262
 3193              	.L292:
 3194              		.align	2
 3195              	.L291:
 3196 0154 04ED00E0 		.word	-536810236
 3197              		.cfi_endproc
 3198              	.LFE22:
 3200              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 3201              		.align	1
 3202              		.global	xQueueReceiveFromISR
 3203              		.syntax unified
 3204              		.thumb
 3205              		.thumb_func
 3206              		.fpu fpv5-d16
 3208              	xQueueReceiveFromISR:
 3209              	.LFB23:
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3210              		.loc 1 1786 0
 3211              		.cfi_startproc
 3212              		@ args = 0, pretend = 0, frame = 0
 3213              		@ frame_needed = 0, uses_anonymous_args = 0
 3214              	.LVL336:
 3215 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3216              	.LCFI47:
 3217              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/cc0w4XYV.s 			page 109


 3218              		.cfi_offset 3, -32
 3219              		.cfi_offset 4, -28
 3220              		.cfi_offset 5, -24
 3221              		.cfi_offset 6, -20
 3222              		.cfi_offset 7, -16
 3223              		.cfi_offset 8, -12
 3224              		.cfi_offset 9, -8
 3225              		.cfi_offset 14, -4
 3226              	.LVL337:
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3227              		.loc 1 1791 0
 3228 0004 60B1     		cbz	r0, .L305
 3229 0006 0446     		mov	r4, r0
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3230              		.loc 1 1792 0
 3231 0008 99B9     		cbnz	r1, .L296
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3232              		.loc 1 1792 0 is_stmt 0 discriminator 2
 3233 000a 036C     		ldr	r3, [r0, #64]
 3234 000c 8BB1     		cbz	r3, .L296
 3235              	.LBB214:
 3236              	.LBB215:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3237              		.loc 2 195 0 is_stmt 1
 3238              		.syntax unified
 3239              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3240 000e 4FF05003 			mov r3, #80												
 3241 0012 83F31188 		msr basepri, r3											
 3242 0016 BFF36F8F 		isb														
 3243 001a BFF34F8F 		dsb														
 3244              	
 3245              	@ 0 "" 2
 3246              	.LVL338:
 3247              		.thumb
 3248              		.syntax unified
 3249              	.L297:
 3250 001e FEE7     		b	.L297
 3251              	.L305:
 3252              	.LBE215:
 3253              	.LBE214:
 3254              	.LBB216:
 3255              	.LBB217:
 3256              		.syntax unified
 3257              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3258 0020 4FF05003 			mov r3, #80												
 3259 0024 83F31188 		msr basepri, r3											
 3260 0028 BFF36F8F 		isb														
 3261 002c BFF34F8F 		dsb														
 3262              	
 3263              	@ 0 "" 2
 3264              	.LVL339:
 3265              		.thumb
 3266              		.syntax unified
 3267              	.L295:
 3268 0030 FEE7     		b	.L295
 3269              	.L296:
 3270 0032 1746     		mov	r7, r2
ARM GAS  /tmp/cc0w4XYV.s 			page 110


 3271 0034 8946     		mov	r9, r1
 3272              	.LBE217:
 3273              	.LBE216:
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3274              		.loc 1 1808 0
 3275 0036 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3276              	.LVL340:
 3277              	.LBB218:
 3278              	.LBB219:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3279              		.loc 2 211 0
 3280              		.syntax unified
 3281              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3282 003a EFF31186 			mrs r6, basepri											
 3283 003e 4FF05003 		mov r3, #80												
 3284 0042 83F31188 		msr basepri, r3											
 3285 0046 BFF36F8F 		isb														
 3286 004a BFF34F8F 		dsb														
 3287              	
 3288              	@ 0 "" 2
 3289              		.thumb
 3290              		.syntax unified
 3291              	.LBE219:
 3292              	.LBE218:
 3293              	.LBB220:
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3294              		.loc 1 1812 0
 3295 004e D4F83880 		ldr	r8, [r4, #56]
 3296              	.LVL341:
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3297              		.loc 1 1815 0
 3298 0052 B8F1000F 		cmp	r8, #0
 3299 0056 1DD0     		beq	.L300
 3300              	.LBB221:
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3301              		.loc 1 1817 0
 3302 0058 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 3303 005c 6DB2     		sxtb	r5, r5
 3304              	.LVL342:
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 3305              		.loc 1 1821 0
 3306 005e 4946     		mov	r1, r9
 3307 0060 2046     		mov	r0, r4
 3308 0062 FFF7FEFF 		bl	prvCopyDataFromQueue
 3309              	.LVL343:
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3310              		.loc 1 1822 0
 3311 0066 08F1FF33 		add	r3, r8, #-1
 3312 006a A363     		str	r3, [r4, #56]
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3313              		.loc 1 1828 0
 3314 006c B5F1FF3F 		cmp	r5, #-1
 3315 0070 05D0     		beq	.L306
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3316              		.loc 1 1859 0
 3317 0072 6B1C     		adds	r3, r5, #1
 3318 0074 5BB2     		sxtb	r3, r3
ARM GAS  /tmp/cc0w4XYV.s 			page 111


 3319 0076 84F84430 		strb	r3, [r4, #68]
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3320              		.loc 1 1862 0
 3321 007a 0120     		movs	r0, #1
 3322 007c 0BE0     		b	.L298
 3323              	.L306:
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3324              		.loc 1 1830 0
 3325 007e 2369     		ldr	r3, [r4, #16]
 3326 0080 6BB1     		cbz	r3, .L301
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 3327              		.loc 1 1832 0
 3328 0082 04F11000 		add	r0, r4, #16
 3329 0086 FFF7FEFF 		bl	xTaskRemoveFromEventList
 3330              	.LVL344:
 3331 008a 50B1     		cbz	r0, .L302
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 3332              		.loc 1 1836 0
 3333 008c 5FB1     		cbz	r7, .L303
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 3334              		.loc 1 1838 0
 3335 008e 0120     		movs	r0, #1
 3336 0090 3860     		str	r0, [r7]
 3337 0092 00E0     		b	.L298
 3338              	.LVL345:
 3339              	.L300:
 3340              	.LBE221:
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 3341              		.loc 1 1866 0
 3342 0094 0020     		movs	r0, #0
 3343              	.L298:
 3344              	.LVL346:
 3345              	.LBE220:
 3346              	.LBB223:
 3347              	.LBB224:
 3348              		.loc 2 229 0
 3349              		.syntax unified
 3350              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3351 0096 86F31188 			msr basepri, r6	
 3352              	@ 0 "" 2
 3353              	.LVL347:
 3354              		.thumb
 3355              		.syntax unified
 3356              	.LBE224:
 3357              	.LBE223:
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3358              		.loc 1 1873 0
 3359 009a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3360              	.LVL348:
 3361              	.L301:
 3362              	.LBB225:
 3363              	.LBB222:
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3364              		.loc 1 1862 0
 3365 009e 0120     		movs	r0, #1
 3366 00a0 F9E7     		b	.L298
 3367              	.L302:
ARM GAS  /tmp/cc0w4XYV.s 			page 112


 3368 00a2 0120     		movs	r0, #1
 3369 00a4 F7E7     		b	.L298
 3370              	.L303:
 3371 00a6 0120     		movs	r0, #1
 3372 00a8 F5E7     		b	.L298
 3373              	.LBE222:
 3374              	.LBE225:
 3375              		.cfi_endproc
 3376              	.LFE23:
 3378              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 3379              		.align	1
 3380              		.global	xQueuePeekFromISR
 3381              		.syntax unified
 3382              		.thumb
 3383              		.thumb_func
 3384              		.fpu fpv5-d16
 3386              	xQueuePeekFromISR:
 3387              	.LFB24:
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3388              		.loc 1 1877 0
 3389              		.cfi_startproc
 3390              		@ args = 0, pretend = 0, frame = 0
 3391              		@ frame_needed = 0, uses_anonymous_args = 0
 3392              	.LVL349:
 3393 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3394              	.LCFI48:
 3395              		.cfi_def_cfa_offset 24
 3396              		.cfi_offset 3, -24
 3397              		.cfi_offset 4, -20
 3398              		.cfi_offset 5, -16
 3399              		.cfi_offset 6, -12
 3400              		.cfi_offset 7, -8
 3401              		.cfi_offset 14, -4
 3402              	.LVL350:
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3403              		.loc 1 1883 0
 3404 0002 60B1     		cbz	r0, .L317
 3405 0004 0446     		mov	r4, r0
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3406              		.loc 1 1884 0
 3407 0006 99B9     		cbnz	r1, .L310
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3408              		.loc 1 1884 0 is_stmt 0 discriminator 2
 3409 0008 036C     		ldr	r3, [r0, #64]
 3410 000a 8BB1     		cbz	r3, .L310
 3411              	.LBB226:
 3412              	.LBB227:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3413              		.loc 2 195 0 is_stmt 1
 3414              		.syntax unified
 3415              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3416 000c 4FF05003 			mov r3, #80												
 3417 0010 83F31188 		msr basepri, r3											
 3418 0014 BFF36F8F 		isb														
 3419 0018 BFF34F8F 		dsb														
 3420              	
 3421              	@ 0 "" 2
ARM GAS  /tmp/cc0w4XYV.s 			page 113


 3422              	.LVL351:
 3423              		.thumb
 3424              		.syntax unified
 3425              	.L311:
 3426 001c FEE7     		b	.L311
 3427              	.L317:
 3428              	.LBE227:
 3429              	.LBE226:
 3430              	.LBB228:
 3431              	.LBB229:
 3432              		.syntax unified
 3433              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3434 001e 4FF05003 			mov r3, #80												
 3435 0022 83F31188 		msr basepri, r3											
 3436 0026 BFF36F8F 		isb														
 3437 002a BFF34F8F 		dsb														
 3438              	
 3439              	@ 0 "" 2
 3440              	.LVL352:
 3441              		.thumb
 3442              		.syntax unified
 3443              	.L309:
 3444 002e FEE7     		b	.L309
 3445              	.L310:
 3446              	.LBE229:
 3447              	.LBE228:
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3448              		.loc 1 1885 0
 3449 0030 236C     		ldr	r3, [r4, #64]
 3450 0032 43B9     		cbnz	r3, .L312
 3451              	.LBB230:
 3452              	.LBB231:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3453              		.loc 2 195 0
 3454              		.syntax unified
 3455              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3456 0034 4FF05003 			mov r3, #80												
 3457 0038 83F31188 		msr basepri, r3											
 3458 003c BFF36F8F 		isb														
 3459 0040 BFF34F8F 		dsb														
 3460              	
 3461              	@ 0 "" 2
 3462              	.LVL353:
 3463              		.thumb
 3464              		.syntax unified
 3465              	.L313:
 3466 0044 FEE7     		b	.L313
 3467              	.L312:
 3468 0046 0D46     		mov	r5, r1
 3469              	.LBE231:
 3470              	.LBE230:
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3471              		.loc 1 1901 0
 3472 0048 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3473              	.LVL354:
 3474              	.LBB232:
 3475              	.LBB233:
ARM GAS  /tmp/cc0w4XYV.s 			page 114


 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3476              		.loc 2 211 0
 3477              		.syntax unified
 3478              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3479 004c EFF31186 			mrs r6, basepri											
 3480 0050 4FF05003 		mov r3, #80												
 3481 0054 83F31188 		msr basepri, r3											
 3482 0058 BFF36F8F 		isb														
 3483 005c BFF34F8F 		dsb														
 3484              	
 3485              	@ 0 "" 2
 3486              		.thumb
 3487              		.syntax unified
 3488              	.LBE233:
 3489              	.LBE232:
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3490              		.loc 1 1906 0
 3491 0060 A36B     		ldr	r3, [r4, #56]
 3492 0062 4BB1     		cbz	r3, .L315
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 3493              		.loc 1 1912 0
 3494 0064 E768     		ldr	r7, [r4, #12]
 3495              	.LVL355:
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
 3496              		.loc 1 1913 0
 3497 0066 2946     		mov	r1, r5
 3498 0068 2046     		mov	r0, r4
 3499 006a FFF7FEFF 		bl	prvCopyDataFromQueue
 3500              	.LVL356:
1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3501              		.loc 1 1914 0
 3502 006e E760     		str	r7, [r4, #12]
 3503              	.LVL357:
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3504              		.loc 1 1916 0
 3505 0070 0120     		movs	r0, #1
 3506              	.LVL358:
 3507              	.L314:
 3508              	.LBB234:
 3509              	.LBB235:
 3510              		.loc 2 229 0
 3511              		.syntax unified
 3512              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3513 0072 86F31188 			msr basepri, r6	
 3514              	@ 0 "" 2
 3515              	.LVL359:
 3516              		.thumb
 3517              		.syntax unified
 3518              	.LBE235:
 3519              	.LBE234:
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3520              		.loc 1 1927 0
 3521 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3522              	.LVL360:
 3523              	.L315:
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 3524              		.loc 1 1920 0
ARM GAS  /tmp/cc0w4XYV.s 			page 115


 3525 0078 0020     		movs	r0, #0
 3526 007a FAE7     		b	.L314
 3527              		.cfi_endproc
 3528              	.LFE24:
 3530              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 3531              		.align	1
 3532              		.global	uxQueueMessagesWaiting
 3533              		.syntax unified
 3534              		.thumb
 3535              		.thumb_func
 3536              		.fpu fpv5-d16
 3538              	uxQueueMessagesWaiting:
 3539              	.LFB25:
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3540              		.loc 1 1931 0
 3541              		.cfi_startproc
 3542              		@ args = 0, pretend = 0, frame = 0
 3543              		@ frame_needed = 0, uses_anonymous_args = 0
 3544              	.LVL361:
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3545              		.loc 1 1934 0
 3546 0000 40B9     		cbnz	r0, .L319
 3547              	.LBB236:
 3548              	.LBB237:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3549              		.loc 2 195 0
 3550              		.syntax unified
 3551              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3552 0002 4FF05003 			mov r3, #80												
 3553 0006 83F31188 		msr basepri, r3											
 3554 000a BFF36F8F 		isb														
 3555 000e BFF34F8F 		dsb														
 3556              	
 3557              	@ 0 "" 2
 3558              	.LVL362:
 3559              		.thumb
 3560              		.syntax unified
 3561              	.L320:
 3562 0012 FEE7     		b	.L320
 3563              	.L319:
 3564              	.LBE237:
 3565              	.LBE236:
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3566              		.loc 1 1931 0
 3567 0014 10B5     		push	{r4, lr}
 3568              	.LCFI49:
 3569              		.cfi_def_cfa_offset 8
 3570              		.cfi_offset 4, -8
 3571              		.cfi_offset 14, -4
 3572 0016 0446     		mov	r4, r0
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3573              		.loc 1 1936 0
 3574 0018 FFF7FEFF 		bl	vPortEnterCritical
 3575              	.LVL363:
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3576              		.loc 1 1938 0
 3577 001c A46B     		ldr	r4, [r4, #56]
ARM GAS  /tmp/cc0w4XYV.s 			page 116


 3578              	.LVL364:
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3579              		.loc 1 1940 0
 3580 001e FFF7FEFF 		bl	vPortExitCritical
 3581              	.LVL365:
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3582              		.loc 1 1943 0
 3583 0022 2046     		mov	r0, r4
 3584 0024 10BD     		pop	{r4, pc}
 3585              		.cfi_endproc
 3586              	.LFE25:
 3588              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 3589              		.align	1
 3590              		.global	uxQueueSpacesAvailable
 3591              		.syntax unified
 3592              		.thumb
 3593              		.thumb_func
 3594              		.fpu fpv5-d16
 3596              	uxQueueSpacesAvailable:
 3597              	.LFB26:
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3598              		.loc 1 1947 0
 3599              		.cfi_startproc
 3600              		@ args = 0, pretend = 0, frame = 0
 3601              		@ frame_needed = 0, uses_anonymous_args = 0
 3602              	.LVL366:
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3603              		.loc 1 1951 0
 3604 0000 40B9     		cbnz	r0, .L324
 3605              	.LBB238:
 3606              	.LBB239:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3607              		.loc 2 195 0
 3608              		.syntax unified
 3609              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3610 0002 4FF05003 			mov r3, #80												
 3611 0006 83F31188 		msr basepri, r3											
 3612 000a BFF36F8F 		isb														
 3613 000e BFF34F8F 		dsb														
 3614              	
 3615              	@ 0 "" 2
 3616              	.LVL367:
 3617              		.thumb
 3618              		.syntax unified
 3619              	.L325:
 3620 0012 FEE7     		b	.L325
 3621              	.L324:
 3622              	.LBE239:
 3623              	.LBE238:
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3624              		.loc 1 1947 0
 3625 0014 10B5     		push	{r4, lr}
 3626              	.LCFI50:
 3627              		.cfi_def_cfa_offset 8
 3628              		.cfi_offset 4, -8
 3629              		.cfi_offset 14, -4
 3630 0016 0446     		mov	r4, r0
ARM GAS  /tmp/cc0w4XYV.s 			page 117


1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3631              		.loc 1 1953 0
 3632 0018 FFF7FEFF 		bl	vPortEnterCritical
 3633              	.LVL368:
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3634              		.loc 1 1955 0
 3635 001c E36B     		ldr	r3, [r4, #60]
 3636 001e A46B     		ldr	r4, [r4, #56]
 3637              	.LVL369:
 3638 0020 1C1B     		subs	r4, r3, r4
 3639              	.LVL370:
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3640              		.loc 1 1957 0
 3641 0022 FFF7FEFF 		bl	vPortExitCritical
 3642              	.LVL371:
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3643              		.loc 1 1960 0
 3644 0026 2046     		mov	r0, r4
 3645 0028 10BD     		pop	{r4, pc}
 3646              		.cfi_endproc
 3647              	.LFE26:
 3649              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 3650              		.align	1
 3651              		.global	uxQueueMessagesWaitingFromISR
 3652              		.syntax unified
 3653              		.thumb
 3654              		.thumb_func
 3655              		.fpu fpv5-d16
 3657              	uxQueueMessagesWaitingFromISR:
 3658              	.LFB27:
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3659              		.loc 1 1964 0
 3660              		.cfi_startproc
 3661              		@ args = 0, pretend = 0, frame = 0
 3662              		@ frame_needed = 0, uses_anonymous_args = 0
 3663              		@ link register save eliminated.
 3664              	.LVL372:
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 3665              		.loc 1 1968 0
 3666 0000 08B1     		cbz	r0, .L331
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3667              		.loc 1 1969 0
 3668 0002 806B     		ldr	r0, [r0, #56]
 3669              	.LVL373:
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3670              		.loc 1 1972 0
 3671 0004 7047     		bx	lr
 3672              	.LVL374:
 3673              	.L331:
 3674              	.LBB240:
 3675              	.LBB241:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3676              		.loc 2 195 0
 3677              		.syntax unified
 3678              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3679 0006 4FF05003 			mov r3, #80												
 3680 000a 83F31188 		msr basepri, r3											
ARM GAS  /tmp/cc0w4XYV.s 			page 118


 3681 000e BFF36F8F 		isb														
 3682 0012 BFF34F8F 		dsb														
 3683              	
 3684              	@ 0 "" 2
 3685              	.LVL375:
 3686              		.thumb
 3687              		.syntax unified
 3688              	.L330:
 3689 0016 FEE7     		b	.L330
 3690              	.LBE241:
 3691              	.LBE240:
 3692              		.cfi_endproc
 3693              	.LFE27:
 3695              		.section	.text.uxQueueGetQueueNumber,"ax",%progbits
 3696              		.align	1
 3697              		.global	uxQueueGetQueueNumber
 3698              		.syntax unified
 3699              		.thumb
 3700              		.thumb_func
 3701              		.fpu fpv5-d16
 3703              	uxQueueGetQueueNumber:
 3704              	.LFB29:
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
 3705              		.loc 1 2020 0
 3706              		.cfi_startproc
 3707              		@ args = 0, pretend = 0, frame = 0
 3708              		@ frame_needed = 0, uses_anonymous_args = 0
 3709              		@ link register save eliminated.
 3710              	.LVL376:
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3711              		.loc 1 2022 0
 3712 0000 806C     		ldr	r0, [r0, #72]
 3713              	.LVL377:
 3714 0002 7047     		bx	lr
 3715              		.cfi_endproc
 3716              	.LFE29:
 3718              		.section	.text.vQueueSetQueueNumber,"ax",%progbits
 3719              		.align	1
 3720              		.global	vQueueSetQueueNumber
 3721              		.syntax unified
 3722              		.thumb
 3723              		.thumb_func
 3724              		.fpu fpv5-d16
 3726              	vQueueSetQueueNumber:
 3727              	.LFB30:
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
 3728              		.loc 1 2030 0
 3729              		.cfi_startproc
 3730              		@ args = 0, pretend = 0, frame = 0
 3731              		@ frame_needed = 0, uses_anonymous_args = 0
 3732              		@ link register save eliminated.
 3733              	.LVL378:
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3734              		.loc 1 2031 0
 3735 0000 8164     		str	r1, [r0, #72]
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3736              		.loc 1 2032 0
ARM GAS  /tmp/cc0w4XYV.s 			page 119


 3737 0002 7047     		bx	lr
 3738              		.cfi_endproc
 3739              	.LFE30:
 3741              		.section	.text.ucQueueGetQueueType,"ax",%progbits
 3742              		.align	1
 3743              		.global	ucQueueGetQueueType
 3744              		.syntax unified
 3745              		.thumb
 3746              		.thumb_func
 3747              		.fpu fpv5-d16
 3749              	ucQueueGetQueueType:
 3750              	.LFB31:
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
 3751              		.loc 1 2040 0
 3752              		.cfi_startproc
 3753              		@ args = 0, pretend = 0, frame = 0
 3754              		@ frame_needed = 0, uses_anonymous_args = 0
 3755              		@ link register save eliminated.
 3756              	.LVL379:
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3757              		.loc 1 2042 0
 3758 0000 90F84C00 		ldrb	r0, [r0, #76]	@ zero_extendqisi2
 3759              	.LVL380:
 3760 0004 7047     		bx	lr
 3761              		.cfi_endproc
 3762              	.LFE31:
 3764              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 3765              		.align	1
 3766              		.global	xQueueIsQueueEmptyFromISR
 3767              		.syntax unified
 3768              		.thumb
 3769              		.thumb_func
 3770              		.fpu fpv5-d16
 3772              	xQueueIsQueueEmptyFromISR:
 3773              	.LFB37:
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3774              		.loc 1 2313 0
 3775              		.cfi_startproc
 3776              		@ args = 0, pretend = 0, frame = 0
 3777              		@ frame_needed = 0, uses_anonymous_args = 0
 3778              		@ link register save eliminated.
 3779              	.LVL381:
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3780              		.loc 1 2317 0
 3781 0000 18B1     		cbz	r0, .L340
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3782              		.loc 1 2318 0
 3783 0002 836B     		ldr	r3, [r0, #56]
 3784 0004 53B9     		cbnz	r3, .L339
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3785              		.loc 1 2320 0
 3786 0006 0120     		movs	r0, #1
 3787              	.LVL382:
 3788 0008 7047     		bx	lr
 3789              	.LVL383:
 3790              	.L340:
 3791              	.LBB242:
ARM GAS  /tmp/cc0w4XYV.s 			page 120


 3792              	.LBB243:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3793              		.loc 2 195 0
 3794              		.syntax unified
 3795              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3796 000a 4FF05003 			mov r3, #80												
 3797 000e 83F31188 		msr basepri, r3											
 3798 0012 BFF36F8F 		isb														
 3799 0016 BFF34F8F 		dsb														
 3800              	
 3801              	@ 0 "" 2
 3802              	.LVL384:
 3803              		.thumb
 3804              		.syntax unified
 3805              	.L337:
 3806 001a FEE7     		b	.L337
 3807              	.L339:
 3808              	.LBE243:
 3809              	.LBE242:
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3810              		.loc 1 2324 0
 3811 001c 0020     		movs	r0, #0
 3812              	.LVL385:
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3813              		.loc 1 2328 0
 3814 001e 7047     		bx	lr
 3815              		.cfi_endproc
 3816              	.LFE37:
 3818              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 3819              		.align	1
 3820              		.global	xQueueIsQueueFullFromISR
 3821              		.syntax unified
 3822              		.thumb
 3823              		.thumb_func
 3824              		.fpu fpv5-d16
 3826              	xQueueIsQueueFullFromISR:
 3827              	.LFB39:
2350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3828              		.loc 1 2353 0
 3829              		.cfi_startproc
 3830              		@ args = 0, pretend = 0, frame = 0
 3831              		@ frame_needed = 0, uses_anonymous_args = 0
 3832              		@ link register save eliminated.
 3833              	.LVL386:
2354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
2356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 3834              		.loc 1 2357 0
 3835 0000 28B1     		cbz	r0, .L346
2358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 3836              		.loc 1 2358 0
 3837 0002 826B     		ldr	r2, [r0, #56]
 3838 0004 C36B     		ldr	r3, [r0, #60]
ARM GAS  /tmp/cc0w4XYV.s 			page 121


 3839 0006 9A42     		cmp	r2, r3
 3840 0008 0AD1     		bne	.L345
2359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
 3841              		.loc 1 2360 0
 3842 000a 0120     		movs	r0, #1
 3843              	.LVL387:
 3844 000c 7047     		bx	lr
 3845              	.LVL388:
 3846              	.L346:
 3847              	.LBB244:
 3848              	.LBB245:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3849              		.loc 2 195 0
 3850              		.syntax unified
 3851              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3852 000e 4FF05003 			mov r3, #80												
 3853 0012 83F31188 		msr basepri, r3											
 3854 0016 BFF36F8F 		isb														
 3855 001a BFF34F8F 		dsb														
 3856              	
 3857              	@ 0 "" 2
 3858              	.LVL389:
 3859              		.thumb
 3860              		.syntax unified
 3861              	.L343:
 3862 001e FEE7     		b	.L343
 3863              	.L345:
 3864              	.LBE245:
 3865              	.LBE244:
2361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 3866              		.loc 1 2364 0
 3867 0020 0020     		movs	r0, #0
 3868              	.LVL390:
2365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3869              		.loc 1 2368 0
 3870 0022 7047     		bx	lr
 3871              		.cfi_endproc
 3872              	.LFE39:
 3874              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 3875              		.align	1
 3876              		.global	vQueueAddToRegistry
 3877              		.syntax unified
 3878              		.thumb
 3879              		.thumb_func
 3880              		.fpu fpv5-d16
 3882              	vQueueAddToRegistry:
 3883              	.LFB40:
2369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
ARM GAS  /tmp/cc0w4XYV.s 			page 122


2372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
ARM GAS  /tmp/cc0w4XYV.s 			page 123


2429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
ARM GAS  /tmp/cc0w4XYV.s 			page 124


2486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQ
2501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
ARM GAS  /tmp/cc0w4XYV.s 			page 125


2543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
ARM GAS  /tmp/cc0w4XYV.s 			page 126


2600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQu
2609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3884              		.loc 1 2649 0
 3885              		.cfi_startproc
 3886              		@ args = 0, pretend = 0, frame = 0
 3887              		@ frame_needed = 0, uses_anonymous_args = 0
 3888              		@ link register save eliminated.
 3889              	.LVL391:
2650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
ARM GAS  /tmp/cc0w4XYV.s 			page 127


2651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3890              		.loc 1 2654 0
 3891 0000 0023     		movs	r3, #0
 3892              	.LVL392:
 3893              	.L348:
 3894              		.loc 1 2654 0 is_stmt 0 discriminator 1
 3895 0002 072B     		cmp	r3, #7
 3896 0004 0CD8     		bhi	.L352
2655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 3897              		.loc 1 2656 0 is_stmt 1
 3898 0006 074A     		ldr	r2, .L354
 3899 0008 52F83320 		ldr	r2, [r2, r3, lsl #3]
 3900 000c 0AB1     		cbz	r2, .L353
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3901              		.loc 1 2654 0 discriminator 2
 3902 000e 0133     		adds	r3, r3, #1
 3903              	.LVL393:
 3904 0010 F7E7     		b	.L348
 3905              	.L353:
2657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 3906              		.loc 1 2659 0
 3907 0012 044A     		ldr	r2, .L354
 3908 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 3909              		.loc 1 2660 0
 3910 0018 02EBC303 		add	r3, r2, r3, lsl #3
 3911              	.LVL394:
 3912 001c 5860     		str	r0, [r3, #4]
2661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3913              		.loc 1 2663 0
 3914 001e 7047     		bx	lr
 3915              	.LVL395:
 3916              	.L352:
2664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3917              		.loc 1 2670 0
 3918 0020 7047     		bx	lr
 3919              	.L355:
 3920 0022 00BF     		.align	2
 3921              	.L354:
 3922 0024 00000000 		.word	xQueueRegistry
 3923              		.cfi_endproc
 3924              	.LFE40:
 3926              		.section	.text.pcQueueGetName,"ax",%progbits
ARM GAS  /tmp/cc0w4XYV.s 			page 128


 3927              		.align	1
 3928              		.global	pcQueueGetName
 3929              		.syntax unified
 3930              		.thumb
 3931              		.thumb_func
 3932              		.fpu fpv5-d16
 3934              	pcQueueGetName:
 3935              	.LFB41:
2671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3936              		.loc 1 2678 0
 3937              		.cfi_startproc
 3938              		@ args = 0, pretend = 0, frame = 0
 3939              		@ frame_needed = 0, uses_anonymous_args = 0
 3940              		@ link register save eliminated.
 3941              	.LVL396:
2679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3942              		.loc 1 2684 0
 3943 0000 0023     		movs	r3, #0
 3944              	.LVL397:
 3945              	.L357:
 3946              		.loc 1 2684 0 is_stmt 0 discriminator 1
 3947 0002 072B     		cmp	r3, #7
 3948 0004 0BD8     		bhi	.L361
2685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3949              		.loc 1 2686 0 is_stmt 1
 3950 0006 074A     		ldr	r2, .L363
 3951 0008 02EBC302 		add	r2, r2, r3, lsl #3
 3952 000c 5268     		ldr	r2, [r2, #4]
 3953 000e 8242     		cmp	r2, r0
 3954 0010 01D0     		beq	.L362
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3955              		.loc 1 2684 0 discriminator 2
 3956 0012 0133     		adds	r3, r3, #1
 3957              	.LVL398:
 3958 0014 F5E7     		b	.L357
 3959              	.L362:
2687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 3960              		.loc 1 2688 0
 3961 0016 034A     		ldr	r2, .L363
 3962 0018 52F83300 		ldr	r0, [r2, r3, lsl #3]
 3963              	.LVL399:
2689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3964              		.loc 1 2689 0
ARM GAS  /tmp/cc0w4XYV.s 			page 129


 3965 001c 7047     		bx	lr
 3966              	.LVL400:
 3967              	.L361:
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3968              		.loc 1 2680 0
 3969 001e 0020     		movs	r0, #0
 3970              	.LVL401:
2690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
2698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 3971              		.loc 1 2698 0
 3972 0020 7047     		bx	lr
 3973              	.L364:
 3974 0022 00BF     		.align	2
 3975              	.L363:
 3976 0024 00000000 		.word	xQueueRegistry
 3977              		.cfi_endproc
 3978              	.LFE41:
 3980              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 3981              		.align	1
 3982              		.global	vQueueUnregisterQueue
 3983              		.syntax unified
 3984              		.thumb
 3985              		.thumb_func
 3986              		.fpu fpv5-d16
 3988              	vQueueUnregisterQueue:
 3989              	.LFB42:
2699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3990              		.loc 1 2706 0
 3991              		.cfi_startproc
 3992              		@ args = 0, pretend = 0, frame = 0
 3993              		@ frame_needed = 0, uses_anonymous_args = 0
 3994              		@ link register save eliminated.
 3995              	.LVL402:
2707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3996              		.loc 1 2711 0
 3997 0000 0023     		movs	r3, #0
 3998              	.LVL403:
 3999              	.L366:
 4000              		.loc 1 2711 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc0w4XYV.s 			page 130


 4001 0002 072B     		cmp	r3, #7
 4002 0004 0FD8     		bhi	.L370
2712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 4003              		.loc 1 2713 0 is_stmt 1
 4004 0006 084A     		ldr	r2, .L372
 4005 0008 02EBC302 		add	r2, r2, r3, lsl #3
 4006 000c 5268     		ldr	r2, [r2, #4]
 4007 000e 8242     		cmp	r2, r0
 4008 0010 01D0     		beq	.L371
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4009              		.loc 1 2711 0 discriminator 2
 4010 0012 0133     		adds	r3, r3, #1
 4011              	.LVL404:
 4012 0014 F5E7     		b	.L366
 4013              	.L371:
2714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 4014              		.loc 1 2716 0
 4015 0016 044A     		ldr	r2, .L372
 4016 0018 0021     		movs	r1, #0
 4017 001a 42F83310 		str	r1, [r2, r3, lsl #3]
2717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 4018              		.loc 1 2721 0
 4019 001e 02EBC303 		add	r3, r2, r3, lsl #3
 4020              	.LVL405:
 4021 0022 5960     		str	r1, [r3, #4]
2722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 4022              		.loc 1 2722 0
 4023 0024 7047     		bx	lr
 4024              	.LVL406:
 4025              	.L370:
2723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 4026              		.loc 1 2730 0
 4027 0026 7047     		bx	lr
 4028              	.L373:
 4029              		.align	2
 4030              	.L372:
 4031 0028 00000000 		.word	xQueueRegistry
 4032              		.cfi_endproc
 4033              	.LFE42:
 4035              		.section	.text.vQueueDelete,"ax",%progbits
 4036              		.align	1
 4037              		.global	vQueueDelete
 4038              		.syntax unified
ARM GAS  /tmp/cc0w4XYV.s 			page 131


 4039              		.thumb
 4040              		.thumb_func
 4041              		.fpu fpv5-d16
 4043              	vQueueDelete:
 4044              	.LFB28:
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 4045              		.loc 1 1976 0
 4046              		.cfi_startproc
 4047              		@ args = 0, pretend = 0, frame = 0
 4048              		@ frame_needed = 0, uses_anonymous_args = 0
 4049              	.LVL407:
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 4050              		.loc 1 1979 0
 4051 0000 40B9     		cbnz	r0, .L375
 4052              	.LBB246:
 4053              	.LBB247:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4054              		.loc 2 195 0
 4055              		.syntax unified
 4056              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4057 0002 4FF05003 			mov r3, #80												
 4058 0006 83F31188 		msr basepri, r3											
 4059 000a BFF36F8F 		isb														
 4060 000e BFF34F8F 		dsb														
 4061              	
 4062              	@ 0 "" 2
 4063              	.LVL408:
 4064              		.thumb
 4065              		.syntax unified
 4066              	.L376:
 4067 0012 FEE7     		b	.L376
 4068              	.L375:
 4069              	.LBE247:
 4070              	.LBE246:
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 4071              		.loc 1 1976 0
 4072 0014 10B5     		push	{r4, lr}
 4073              	.LCFI51:
 4074              		.cfi_def_cfa_offset 8
 4075              		.cfi_offset 4, -8
 4076              		.cfi_offset 14, -4
 4077 0016 0446     		mov	r4, r0
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 4078              		.loc 1 1984 0
 4079 0018 FFF7FEFF 		bl	vQueueUnregisterQueue
 4080              	.LVL409:
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4081              		.loc 1 1998 0
 4082 001c 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
 4083 0020 03B1     		cbz	r3, .L380
 4084              	.L374:
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4085              		.loc 1 2014 0
 4086 0022 10BD     		pop	{r4, pc}
 4087              	.LVL410:
 4088              	.L380:
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/cc0w4XYV.s 			page 132


 4089              		.loc 1 2000 0
 4090 0024 2046     		mov	r0, r4
 4091 0026 FFF7FEFF 		bl	vPortFree
 4092              	.LVL411:
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4093              		.loc 1 2014 0
 4094 002a FAE7     		b	.L374
 4095              		.cfi_endproc
 4096              	.LFE28:
 4098              		.section	.text.vQueueWaitForMessageRestricted,"ax",%progbits
 4099              		.align	1
 4100              		.global	vQueueWaitForMessageRestricted
 4101              		.syntax unified
 4102              		.thumb
 4103              		.thumb_func
 4104              		.fpu fpv5-d16
 4106              	vQueueWaitForMessageRestricted:
 4107              	.LFB43:
2731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TIMERS == 1 )
2736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType
2738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 4108              		.loc 1 2738 0
 4109              		.cfi_startproc
 4110              		@ args = 0, pretend = 0, frame = 0
 4111              		@ frame_needed = 0, uses_anonymous_args = 0
 4112              	.LVL412:
 4113 0000 70B5     		push	{r4, r5, r6, lr}
 4114              	.LCFI52:
 4115              		.cfi_def_cfa_offset 16
 4116              		.cfi_offset 4, -16
 4117              		.cfi_offset 5, -12
 4118              		.cfi_offset 6, -8
 4119              		.cfi_offset 14, -4
 4120 0002 0446     		mov	r4, r0
 4121 0004 0D46     		mov	r5, r1
 4122 0006 1646     		mov	r6, r2
 4123              	.LVL413:
2739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function should not be called by application code hence the
2742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		designed for use by kernel code, and has special calling requirements.
2744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		It can result in vListInsert() being called on a list that can only
2745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		possibly ever have one item in it, so the list will be fast, but even
2746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		so it should be called with the scheduler locked and not from a critical
2747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		section. */
2748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Only do anything if there are no messages in the queue.  This function
2750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		will not actually cause the task to block, just place it on a blocked
2751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		list.  It will not block until the scheduler is unlocked - at which
2752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		time a yield will be performed.  If an item is added to the queue while
2753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		the queue is locked, and the calling task blocks on the queue, then the
ARM GAS  /tmp/cc0w4XYV.s 			page 133


2754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task will be immediately unblocked when the queue is unlocked. */
2755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 4124              		.loc 1 2755 0
 4125 0008 FFF7FEFF 		bl	vPortEnterCritical
 4126              	.LVL414:
 4127 000c 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 4128 0010 5BB2     		sxtb	r3, r3
 4129 0012 B3F1FF3F 		cmp	r3, #-1
 4130 0016 0DD0     		beq	.L386
 4131              	.L382:
 4132              		.loc 1 2755 0 is_stmt 0 discriminator 3
 4133 0018 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 4134 001c 5BB2     		sxtb	r3, r3
 4135 001e B3F1FF3F 		cmp	r3, #-1
 4136 0022 0BD0     		beq	.L387
 4137              	.L383:
 4138              		.loc 1 2755 0 discriminator 6
 4139 0024 FFF7FEFF 		bl	vPortExitCritical
 4140              	.LVL415:
2756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 4141              		.loc 1 2756 0 is_stmt 1 discriminator 6
 4142 0028 A36B     		ldr	r3, [r4, #56]
 4143 002a 5BB1     		cbz	r3, .L388
 4144              	.L384:
2757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is nothing in the queue, block for the specified period. */
2759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefi
2760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvUnlockQueue( pxQueue );
 4145              		.loc 1 2765 0
 4146 002c 2046     		mov	r0, r4
 4147 002e FFF7FEFF 		bl	prvUnlockQueue
 4148              	.LVL416:
2766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 4149              		.loc 1 2766 0
 4150 0032 70BD     		pop	{r4, r5, r6, pc}
 4151              	.LVL417:
 4152              	.L386:
2755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 4153              		.loc 1 2755 0 discriminator 1
 4154 0034 0023     		movs	r3, #0
 4155 0036 84F84430 		strb	r3, [r4, #68]
 4156 003a EDE7     		b	.L382
 4157              	.L387:
2755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 4158              		.loc 1 2755 0 is_stmt 0 discriminator 4
 4159 003c 0023     		movs	r3, #0
 4160 003e 84F84530 		strb	r3, [r4, #69]
 4161 0042 EFE7     		b	.L383
 4162              	.L388:
2759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 4163              		.loc 1 2759 0 is_stmt 1
 4164 0044 3246     		mov	r2, r6
ARM GAS  /tmp/cc0w4XYV.s 			page 134


 4165 0046 2946     		mov	r1, r5
 4166 0048 04F12400 		add	r0, r4, #36
 4167 004c FFF7FEFF 		bl	vTaskPlaceOnEventListRestricted
 4168              	.LVL418:
 4169 0050 ECE7     		b	.L384
 4170              		.cfi_endproc
 4171              	.LFE43:
 4173              		.comm	xQueueRegistry,64,4
 4174              		.text
 4175              	.Letext0:
 4176              		.file 3 "/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
 4177              		.file 4 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 4178              		.file 5 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 4179              		.file 6 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 4180              		.file 7 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 4181              		.file 8 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdlib.h"
 4182              		.file 9 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 4183              		.file 10 "Core/Inc/FreeRTOSConfig.h"
 4184              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 4185              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 4186              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 4187              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 4188              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
 4189              		.file 16 "<built-in>"
ARM GAS  /tmp/cc0w4XYV.s 			page 135


DEFINED SYMBOLS
                            *ABS*:0000000000000000 queue.c
     /tmp/cc0w4XYV.s:17     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 $t
     /tmp/cc0w4XYV.s:23     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 prvGetDisinheritPriorityAfterTimeout
     /tmp/cc0w4XYV.s:53     .text.prvIsQueueFull:0000000000000000 $t
     /tmp/cc0w4XYV.s:59     .text.prvIsQueueFull:0000000000000000 prvIsQueueFull
     /tmp/cc0w4XYV.s:100    .text.prvIsQueueEmpty:0000000000000000 $t
     /tmp/cc0w4XYV.s:106    .text.prvIsQueueEmpty:0000000000000000 prvIsQueueEmpty
     /tmp/cc0w4XYV.s:145    .text.prvCopyDataToQueue:0000000000000000 $t
     /tmp/cc0w4XYV.s:151    .text.prvCopyDataToQueue:0000000000000000 prvCopyDataToQueue
     /tmp/cc0w4XYV.s:270    .text.prvCopyDataFromQueue:0000000000000000 $t
     /tmp/cc0w4XYV.s:276    .text.prvCopyDataFromQueue:0000000000000000 prvCopyDataFromQueue
     /tmp/cc0w4XYV.s:325    .text.prvUnlockQueue:0000000000000000 $t
     /tmp/cc0w4XYV.s:331    .text.prvUnlockQueue:0000000000000000 prvUnlockQueue
     /tmp/cc0w4XYV.s:437    .text.xQueueGenericReset:0000000000000000 $t
     /tmp/cc0w4XYV.s:444    .text.xQueueGenericReset:0000000000000000 xQueueGenericReset
     /tmp/cc0w4XYV.s:553    .text.xQueueGenericReset:0000000000000080 $d
     /tmp/cc0w4XYV.s:558    .text.prvInitialiseNewQueue:0000000000000000 $t
     /tmp/cc0w4XYV.s:564    .text.prvInitialiseNewQueue:0000000000000000 prvInitialiseNewQueue
     /tmp/cc0w4XYV.s:611    .text.xQueueGenericCreateStatic:0000000000000000 $t
     /tmp/cc0w4XYV.s:618    .text.xQueueGenericCreateStatic:0000000000000000 xQueueGenericCreateStatic
     /tmp/cc0w4XYV.s:788    .text.xQueueGenericCreate:0000000000000000 $t
     /tmp/cc0w4XYV.s:795    .text.xQueueGenericCreate:0000000000000000 xQueueGenericCreate
     /tmp/cc0w4XYV.s:875    .text.xQueueGetMutexHolder:0000000000000000 $t
     /tmp/cc0w4XYV.s:882    .text.xQueueGetMutexHolder:0000000000000000 xQueueGetMutexHolder
     /tmp/cc0w4XYV.s:922    .text.xQueueGetMutexHolderFromISR:0000000000000000 $t
     /tmp/cc0w4XYV.s:929    .text.xQueueGetMutexHolderFromISR:0000000000000000 xQueueGetMutexHolderFromISR
     /tmp/cc0w4XYV.s:976    .text.xQueueCreateCountingSemaphoreStatic:0000000000000000 $t
     /tmp/cc0w4XYV.s:983    .text.xQueueCreateCountingSemaphoreStatic:0000000000000000 xQueueCreateCountingSemaphoreStatic
     /tmp/cc0w4XYV.s:1071   .text.xQueueCreateCountingSemaphore:0000000000000000 $t
     /tmp/cc0w4XYV.s:1078   .text.xQueueCreateCountingSemaphore:0000000000000000 xQueueCreateCountingSemaphore
     /tmp/cc0w4XYV.s:1155   .text.xQueueGenericSend:0000000000000000 $t
     /tmp/cc0w4XYV.s:1162   .text.xQueueGenericSend:0000000000000000 xQueueGenericSend
     /tmp/cc0w4XYV.s:1486   .text.xQueueGenericSend:0000000000000178 $d
     /tmp/cc0w4XYV.s:1491   .text.prvInitialiseMutex:0000000000000000 $t
     /tmp/cc0w4XYV.s:1497   .text.prvInitialiseMutex:0000000000000000 prvInitialiseMutex
     /tmp/cc0w4XYV.s:1537   .text.xQueueCreateMutex:0000000000000000 $t
     /tmp/cc0w4XYV.s:1544   .text.xQueueCreateMutex:0000000000000000 xQueueCreateMutex
     /tmp/cc0w4XYV.s:1576   .text.xQueueCreateMutexStatic:0000000000000000 $t
     /tmp/cc0w4XYV.s:1583   .text.xQueueCreateMutexStatic:0000000000000000 xQueueCreateMutexStatic
     /tmp/cc0w4XYV.s:1625   .text.xQueueGiveMutexRecursive:0000000000000000 $t
     /tmp/cc0w4XYV.s:1632   .text.xQueueGiveMutexRecursive:0000000000000000 xQueueGiveMutexRecursive
     /tmp/cc0w4XYV.s:1706   .text.xQueueGenericSendFromISR:0000000000000000 $t
     /tmp/cc0w4XYV.s:1713   .text.xQueueGenericSendFromISR:0000000000000000 xQueueGenericSendFromISR
     /tmp/cc0w4XYV.s:1913   .text.xQueueGiveFromISR:0000000000000000 $t
     /tmp/cc0w4XYV.s:1920   .text.xQueueGiveFromISR:0000000000000000 xQueueGiveFromISR
     /tmp/cc0w4XYV.s:2128   .text.xQueueReceive:0000000000000000 $t
     /tmp/cc0w4XYV.s:2135   .text.xQueueReceive:0000000000000000 xQueueReceive
     /tmp/cc0w4XYV.s:2432   .text.xQueueReceive:0000000000000154 $d
     /tmp/cc0w4XYV.s:2437   .text.xQueueSemaphoreTake:0000000000000000 $t
     /tmp/cc0w4XYV.s:2444   .text.xQueueSemaphoreTake:0000000000000000 xQueueSemaphoreTake
     /tmp/cc0w4XYV.s:2803   .text.xQueueSemaphoreTake:0000000000000198 $d
     /tmp/cc0w4XYV.s:2808   .text.xQueueTakeMutexRecursive:0000000000000000 $t
     /tmp/cc0w4XYV.s:2815   .text.xQueueTakeMutexRecursive:0000000000000000 xQueueTakeMutexRecursive
     /tmp/cc0w4XYV.s:2891   .text.xQueuePeek:0000000000000000 $t
     /tmp/cc0w4XYV.s:2898   .text.xQueuePeek:0000000000000000 xQueuePeek
     /tmp/cc0w4XYV.s:3196   .text.xQueuePeek:0000000000000154 $d
ARM GAS  /tmp/cc0w4XYV.s 			page 136


     /tmp/cc0w4XYV.s:3201   .text.xQueueReceiveFromISR:0000000000000000 $t
     /tmp/cc0w4XYV.s:3208   .text.xQueueReceiveFromISR:0000000000000000 xQueueReceiveFromISR
     /tmp/cc0w4XYV.s:3379   .text.xQueuePeekFromISR:0000000000000000 $t
     /tmp/cc0w4XYV.s:3386   .text.xQueuePeekFromISR:0000000000000000 xQueuePeekFromISR
     /tmp/cc0w4XYV.s:3531   .text.uxQueueMessagesWaiting:0000000000000000 $t
     /tmp/cc0w4XYV.s:3538   .text.uxQueueMessagesWaiting:0000000000000000 uxQueueMessagesWaiting
     /tmp/cc0w4XYV.s:3589   .text.uxQueueSpacesAvailable:0000000000000000 $t
     /tmp/cc0w4XYV.s:3596   .text.uxQueueSpacesAvailable:0000000000000000 uxQueueSpacesAvailable
     /tmp/cc0w4XYV.s:3650   .text.uxQueueMessagesWaitingFromISR:0000000000000000 $t
     /tmp/cc0w4XYV.s:3657   .text.uxQueueMessagesWaitingFromISR:0000000000000000 uxQueueMessagesWaitingFromISR
     /tmp/cc0w4XYV.s:3696   .text.uxQueueGetQueueNumber:0000000000000000 $t
     /tmp/cc0w4XYV.s:3703   .text.uxQueueGetQueueNumber:0000000000000000 uxQueueGetQueueNumber
     /tmp/cc0w4XYV.s:3719   .text.vQueueSetQueueNumber:0000000000000000 $t
     /tmp/cc0w4XYV.s:3726   .text.vQueueSetQueueNumber:0000000000000000 vQueueSetQueueNumber
     /tmp/cc0w4XYV.s:3742   .text.ucQueueGetQueueType:0000000000000000 $t
     /tmp/cc0w4XYV.s:3749   .text.ucQueueGetQueueType:0000000000000000 ucQueueGetQueueType
     /tmp/cc0w4XYV.s:3765   .text.xQueueIsQueueEmptyFromISR:0000000000000000 $t
     /tmp/cc0w4XYV.s:3772   .text.xQueueIsQueueEmptyFromISR:0000000000000000 xQueueIsQueueEmptyFromISR
     /tmp/cc0w4XYV.s:3819   .text.xQueueIsQueueFullFromISR:0000000000000000 $t
     /tmp/cc0w4XYV.s:3826   .text.xQueueIsQueueFullFromISR:0000000000000000 xQueueIsQueueFullFromISR
     /tmp/cc0w4XYV.s:3875   .text.vQueueAddToRegistry:0000000000000000 $t
     /tmp/cc0w4XYV.s:3882   .text.vQueueAddToRegistry:0000000000000000 vQueueAddToRegistry
     /tmp/cc0w4XYV.s:3922   .text.vQueueAddToRegistry:0000000000000024 $d
                            *COM*:0000000000000040 xQueueRegistry
     /tmp/cc0w4XYV.s:3927   .text.pcQueueGetName:0000000000000000 $t
     /tmp/cc0w4XYV.s:3934   .text.pcQueueGetName:0000000000000000 pcQueueGetName
     /tmp/cc0w4XYV.s:3976   .text.pcQueueGetName:0000000000000024 $d
     /tmp/cc0w4XYV.s:3981   .text.vQueueUnregisterQueue:0000000000000000 $t
     /tmp/cc0w4XYV.s:3988   .text.vQueueUnregisterQueue:0000000000000000 vQueueUnregisterQueue
     /tmp/cc0w4XYV.s:4031   .text.vQueueUnregisterQueue:0000000000000028 $d
     /tmp/cc0w4XYV.s:4036   .text.vQueueDelete:0000000000000000 $t
     /tmp/cc0w4XYV.s:4043   .text.vQueueDelete:0000000000000000 vQueueDelete
     /tmp/cc0w4XYV.s:4099   .text.vQueueWaitForMessageRestricted:0000000000000000 $t
     /tmp/cc0w4XYV.s:4106   .text.vQueueWaitForMessageRestricted:0000000000000000 vQueueWaitForMessageRestricted

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
vTaskMissedYield
xTaskRemoveFromEventList
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskInternalSetTimeOutState
xTaskResumeAll
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskGetCurrentTaskHandle
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
vPortFree
vTaskPlaceOnEventListRestricted
ARM GAS  /tmp/cc0w4XYV.s 			page 137


