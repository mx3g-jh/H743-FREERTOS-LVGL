ARM GAS  /tmp/cciYrqg7.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_timebase_tim.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_InitTick,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_InitTick
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	HAL_InitTick:
  25              	.LFB144:
  26              		.file 1 "Core/Src/stm32h7xx_hal_timebase_tim.c"
   1:Core/Src/stm32h7xx_hal_timebase_tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32h7xx_hal_timebase_tim.c **** /**
   3:Core/Src/stm32h7xx_hal_timebase_tim.c ****   ******************************************************************************
   4:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * @file    stm32h7xx_hal_timebase_TIM.c
   5:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM.
   6:Core/Src/stm32h7xx_hal_timebase_tim.c ****   ******************************************************************************
   7:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * @attention
   8:Core/Src/stm32h7xx_hal_timebase_tim.c ****   *
   9:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * All rights reserved.
  11:Core/Src/stm32h7xx_hal_timebase_tim.c ****   *
  12:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * in the root directory of this software component.
  14:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32h7xx_hal_timebase_tim.c ****   *
  16:Core/Src/stm32h7xx_hal_timebase_tim.c ****   ******************************************************************************
  17:Core/Src/stm32h7xx_hal_timebase_tim.c ****   */
  18:Core/Src/stm32h7xx_hal_timebase_tim.c **** /* USER CODE END Header */
  19:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  20:Core/Src/stm32h7xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32h7xx_hal_timebase_tim.c **** #include "stm32h7xx_hal.h"
  22:Core/Src/stm32h7xx_hal_timebase_tim.c **** #include "stm32h7xx_hal_tim.h"
  23:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  24:Core/Src/stm32h7xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  25:Core/Src/stm32h7xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  26:Core/Src/stm32h7xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  27:Core/Src/stm32h7xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  28:Core/Src/stm32h7xx_hal_timebase_tim.c **** TIM_HandleTypeDef        htim1;
  29:Core/Src/stm32h7xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
  30:Core/Src/stm32h7xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
  31:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  32:Core/Src/stm32h7xx_hal_timebase_tim.c **** /**
ARM GAS  /tmp/cciYrqg7.s 			page 2


  33:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM1 as a time base source.
  34:Core/Src/stm32h7xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated
  35:Core/Src/stm32h7xx_hal_timebase_tim.c ****   *         Tick interrupt priority.
  36:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  37:Core/Src/stm32h7xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  38:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  39:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * @retval HAL status
  40:Core/Src/stm32h7xx_hal_timebase_tim.c ****   */
  41:Core/Src/stm32h7xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  42:Core/Src/stm32h7xx_hal_timebase_tim.c **** {
  27              		.loc 1 42 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  43:Core/Src/stm32h7xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  44:Core/Src/stm32h7xx_hal_timebase_tim.c ****   uint32_t              uwTimclock;
  45:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  46:Core/Src/stm32h7xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue;
  47:Core/Src/stm32h7xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  48:Core/Src/stm32h7xx_hal_timebase_tim.c **** /*Configure the TIM1 IRQ priority */
  49:Core/Src/stm32h7xx_hal_timebase_tim.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
  32              		.loc 1 49 0
  33 0000 0F28     		cmp	r0, #15
  34 0002 01D9     		bls	.L9
  50:Core/Src/stm32h7xx_hal_timebase_tim.c ****   {
  51:Core/Src/stm32h7xx_hal_timebase_tim.c ****   HAL_NVIC_SetPriority(TIM1_UP_IRQn, TickPriority ,0U);
  52:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  53:Core/Src/stm32h7xx_hal_timebase_tim.c ****   /* Enable the TIM1 global Interrupt */
  54:Core/Src/stm32h7xx_hal_timebase_tim.c ****   HAL_NVIC_EnableIRQ(TIM1_UP_IRQn);
  55:Core/Src/stm32h7xx_hal_timebase_tim.c ****     uwTickPrio = TickPriority;
  56:Core/Src/stm32h7xx_hal_timebase_tim.c ****     }
  57:Core/Src/stm32h7xx_hal_timebase_tim.c ****   else
  58:Core/Src/stm32h7xx_hal_timebase_tim.c ****   {
  59:Core/Src/stm32h7xx_hal_timebase_tim.c ****     return HAL_ERROR;
  35              		.loc 1 59 0
  36 0004 0120     		movs	r0, #1
  37              	.LVL1:
  60:Core/Src/stm32h7xx_hal_timebase_tim.c ****   }
  61:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  62:Core/Src/stm32h7xx_hal_timebase_tim.c ****   /* Enable TIM1 clock */
  63:Core/Src/stm32h7xx_hal_timebase_tim.c ****   __HAL_RCC_TIM1_CLK_ENABLE();
  64:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  65:Core/Src/stm32h7xx_hal_timebase_tim.c ****   /* Get clock configuration */
  66:Core/Src/stm32h7xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  67:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  68:Core/Src/stm32h7xx_hal_timebase_tim.c ****   /* Compute TIM1 clock */
  69:Core/Src/stm32h7xx_hal_timebase_tim.c ****       uwTimclock = HAL_RCC_GetPCLK2Freq();
  70:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  71:Core/Src/stm32h7xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM1 counter clock equal to 1MHz */
  72:Core/Src/stm32h7xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
  73:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  74:Core/Src/stm32h7xx_hal_timebase_tim.c ****   /* Initialize TIM1 */
  75:Core/Src/stm32h7xx_hal_timebase_tim.c ****   htim1.Instance = TIM1;
  76:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  77:Core/Src/stm32h7xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  78:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
ARM GAS  /tmp/cciYrqg7.s 			page 3


  79:Core/Src/stm32h7xx_hal_timebase_tim.c ****   + Period = [(TIM1CLK/1000) - 1]. to have a (1/1000) s time base.
  80:Core/Src/stm32h7xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  81:Core/Src/stm32h7xx_hal_timebase_tim.c ****   + ClockDivision = 0
  82:Core/Src/stm32h7xx_hal_timebase_tim.c ****   + Counter direction = Up
  83:Core/Src/stm32h7xx_hal_timebase_tim.c ****   */
  84:Core/Src/stm32h7xx_hal_timebase_tim.c ****   htim1.Init.Period = (1000000U / 1000U) - 1U;
  85:Core/Src/stm32h7xx_hal_timebase_tim.c ****   htim1.Init.Prescaler = uwPrescalerValue;
  86:Core/Src/stm32h7xx_hal_timebase_tim.c ****   htim1.Init.ClockDivision = 0;
  87:Core/Src/stm32h7xx_hal_timebase_tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  88:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  89:Core/Src/stm32h7xx_hal_timebase_tim.c ****   if(HAL_TIM_Base_Init(&htim1) == HAL_OK)
  90:Core/Src/stm32h7xx_hal_timebase_tim.c ****   {
  91:Core/Src/stm32h7xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
  92:Core/Src/stm32h7xx_hal_timebase_tim.c ****     return HAL_TIM_Base_Start_IT(&htim1);
  93:Core/Src/stm32h7xx_hal_timebase_tim.c ****   }
  94:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  95:Core/Src/stm32h7xx_hal_timebase_tim.c ****   /* Return function status */
  96:Core/Src/stm32h7xx_hal_timebase_tim.c ****   return HAL_ERROR;
  97:Core/Src/stm32h7xx_hal_timebase_tim.c **** }
  38              		.loc 1 97 0
  39 0006 7047     		bx	lr
  40              	.LVL2:
  41              	.L9:
  42:Core/Src/stm32h7xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  42              		.loc 1 42 0
  43 0008 10B5     		push	{r4, lr}
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 4, -8
  47              		.cfi_offset 14, -4
  48 000a 8AB0     		sub	sp, sp, #40
  49              	.LCFI1:
  50              		.cfi_def_cfa_offset 48
  51 000c 0446     		mov	r4, r0
  51:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  52              		.loc 1 51 0
  53 000e 0022     		movs	r2, #0
  54 0010 0146     		mov	r1, r0
  55 0012 1920     		movs	r0, #25
  56              	.LVL3:
  57 0014 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  58              	.LVL4:
  54:Core/Src/stm32h7xx_hal_timebase_tim.c ****     uwTickPrio = TickPriority;
  59              		.loc 1 54 0
  60 0018 1920     		movs	r0, #25
  61 001a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  62              	.LVL5:
  55:Core/Src/stm32h7xx_hal_timebase_tim.c ****     }
  63              		.loc 1 55 0
  64 001e 174B     		ldr	r3, .L11
  65 0020 1C60     		str	r4, [r3]
  66              	.LBB2:
  63:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  67              		.loc 1 63 0
  68 0022 174B     		ldr	r3, .L11+4
  69 0024 D3F8F020 		ldr	r2, [r3, #240]
  70 0028 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/cciYrqg7.s 			page 4


  71 002c C3F8F020 		str	r2, [r3, #240]
  72 0030 D3F8F030 		ldr	r3, [r3, #240]
  73 0034 03F00103 		and	r3, r3, #1
  74 0038 0093     		str	r3, [sp]
  75 003a 009B     		ldr	r3, [sp]
  76              	.LBE2:
  66:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  77              		.loc 1 66 0
  78 003c 01A9     		add	r1, sp, #4
  79 003e 02A8     		add	r0, sp, #8
  80 0040 FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  81              	.LVL6:
  69:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  82              		.loc 1 69 0
  83 0044 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
  84              	.LVL7:
  72:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  85              		.loc 1 72 0
  86 0048 0E4B     		ldr	r3, .L11+8
  87 004a A3FB0023 		umull	r2, r3, r3, r0
  88 004e 9B0C     		lsrs	r3, r3, #18
  89 0050 013B     		subs	r3, r3, #1
  90              	.LVL8:
  75:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  91              		.loc 1 75 0
  92 0052 0D48     		ldr	r0, .L11+12
  93              	.LVL9:
  94 0054 0D4A     		ldr	r2, .L11+16
  95 0056 0260     		str	r2, [r0]
  84:Core/Src/stm32h7xx_hal_timebase_tim.c ****   htim1.Init.Prescaler = uwPrescalerValue;
  96              		.loc 1 84 0
  97 0058 40F2E732 		movw	r2, #999
  98 005c C260     		str	r2, [r0, #12]
  85:Core/Src/stm32h7xx_hal_timebase_tim.c ****   htim1.Init.ClockDivision = 0;
  99              		.loc 1 85 0
 100 005e 4360     		str	r3, [r0, #4]
  86:Core/Src/stm32h7xx_hal_timebase_tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 101              		.loc 1 86 0
 102 0060 0023     		movs	r3, #0
 103              	.LVL10:
 104 0062 0361     		str	r3, [r0, #16]
  87:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
 105              		.loc 1 87 0
 106 0064 8360     		str	r3, [r0, #8]
  89:Core/Src/stm32h7xx_hal_timebase_tim.c ****   {
 107              		.loc 1 89 0
 108 0066 FFF7FEFF 		bl	HAL_TIM_Base_Init
 109              	.LVL11:
 110 006a 10B1     		cbz	r0, .L10
  96:Core/Src/stm32h7xx_hal_timebase_tim.c **** }
 111              		.loc 1 96 0
 112 006c 0120     		movs	r0, #1
 113              	.L2:
 114              		.loc 1 97 0
 115 006e 0AB0     		add	sp, sp, #40
 116              	.LCFI2:
 117              		.cfi_remember_state
ARM GAS  /tmp/cciYrqg7.s 			page 5


 118              		.cfi_def_cfa_offset 8
 119              		@ sp needed
 120 0070 10BD     		pop	{r4, pc}
 121              	.LVL12:
 122              	.L10:
 123              	.LCFI3:
 124              		.cfi_restore_state
  92:Core/Src/stm32h7xx_hal_timebase_tim.c ****   }
 125              		.loc 1 92 0
 126 0072 0548     		ldr	r0, .L11+12
 127 0074 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 128              	.LVL13:
 129 0078 F9E7     		b	.L2
 130              	.L12:
 131 007a 00BF     		.align	2
 132              	.L11:
 133 007c 00000000 		.word	uwTickPrio
 134 0080 00440258 		.word	1476543488
 135 0084 83DE1B43 		.word	1125899907
 136 0088 00000000 		.word	htim1
 137 008c 00000140 		.word	1073807360
 138              		.cfi_endproc
 139              	.LFE144:
 141              		.section	.text.HAL_SuspendTick,"ax",%progbits
 142              		.align	1
 143              		.global	HAL_SuspendTick
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu fpv5-d16
 149              	HAL_SuspendTick:
 150              	.LFB145:
  98:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
  99:Core/Src/stm32h7xx_hal_timebase_tim.c **** /**
 100:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
 101:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM1 update interrupt.
 102:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * @param  None
 103:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * @retval None
 104:Core/Src/stm32h7xx_hal_timebase_tim.c ****   */
 105:Core/Src/stm32h7xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
 106:Core/Src/stm32h7xx_hal_timebase_tim.c **** {
 151              		.loc 1 106 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 107:Core/Src/stm32h7xx_hal_timebase_tim.c ****   /* Disable TIM1 update Interrupt */
 108:Core/Src/stm32h7xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim1, TIM_IT_UPDATE);
 156              		.loc 1 108 0
 157 0000 034B     		ldr	r3, .L14
 158 0002 1A68     		ldr	r2, [r3]
 159 0004 D368     		ldr	r3, [r2, #12]
 160 0006 23F00103 		bic	r3, r3, #1
 161 000a D360     		str	r3, [r2, #12]
 109:Core/Src/stm32h7xx_hal_timebase_tim.c **** }
 162              		.loc 1 109 0
 163 000c 7047     		bx	lr
ARM GAS  /tmp/cciYrqg7.s 			page 6


 164              	.L15:
 165 000e 00BF     		.align	2
 166              	.L14:
 167 0010 00000000 		.word	htim1
 168              		.cfi_endproc
 169              	.LFE145:
 171              		.section	.text.HAL_ResumeTick,"ax",%progbits
 172              		.align	1
 173              		.global	HAL_ResumeTick
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 177              		.fpu fpv5-d16
 179              	HAL_ResumeTick:
 180              	.LFB146:
 110:Core/Src/stm32h7xx_hal_timebase_tim.c **** 
 111:Core/Src/stm32h7xx_hal_timebase_tim.c **** /**
 112:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
 113:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM1 update interrupt.
 114:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * @param  None
 115:Core/Src/stm32h7xx_hal_timebase_tim.c ****   * @retval None
 116:Core/Src/stm32h7xx_hal_timebase_tim.c ****   */
 117:Core/Src/stm32h7xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 118:Core/Src/stm32h7xx_hal_timebase_tim.c **** {
 181              		.loc 1 118 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 119:Core/Src/stm32h7xx_hal_timebase_tim.c ****   /* Enable TIM1 Update interrupt */
 120:Core/Src/stm32h7xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim1, TIM_IT_UPDATE);
 186              		.loc 1 120 0
 187 0000 034B     		ldr	r3, .L17
 188 0002 1A68     		ldr	r2, [r3]
 189 0004 D368     		ldr	r3, [r2, #12]
 190 0006 43F00103 		orr	r3, r3, #1
 191 000a D360     		str	r3, [r2, #12]
 121:Core/Src/stm32h7xx_hal_timebase_tim.c **** }
 192              		.loc 1 121 0
 193 000c 7047     		bx	lr
 194              	.L18:
 195 000e 00BF     		.align	2
 196              	.L17:
 197 0010 00000000 		.word	htim1
 198              		.cfi_endproc
 199              	.LFE146:
 201              		.comm	htim1,76,4
 202              		.text
 203              	.Letext0:
 204              		.file 2 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 205              		.file 3 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 206              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 207              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 208              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 209              		.file 7 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 210              		.file 8 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 211              		.file 9 "/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
ARM GAS  /tmp/cciYrqg7.s 			page 7


 212              		.file 10 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 213              		.file 11 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/math.h"
 214              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 215              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 216              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 217              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 218              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 219              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 220              		.file 18 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
ARM GAS  /tmp/cciYrqg7.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_timebase_tim.c
     /tmp/cciYrqg7.s:17     .text.HAL_InitTick:0000000000000000 $t
     /tmp/cciYrqg7.s:24     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cciYrqg7.s:133    .text.HAL_InitTick:000000000000007c $d
                            *COM*:000000000000004c htim1
     /tmp/cciYrqg7.s:142    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cciYrqg7.s:149    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cciYrqg7.s:167    .text.HAL_SuspendTick:0000000000000010 $d
     /tmp/cciYrqg7.s:172    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cciYrqg7.s:179    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cciYrqg7.s:197    .text.HAL_ResumeTick:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK2Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
uwTickPrio
